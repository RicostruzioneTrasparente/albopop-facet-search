!function(t){function e(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var n={};e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=76)}([function(t,e,n){(function(e,r){function a(t,e,n){return function(r){for(var a,s,i,o,l=0,p=[],u="";l<r.length;l++)a=r.charCodeAt(l),s=r.charAt(l),o=a>=97&&a<=122||a>=48&&a<=57,i=a>=65&&a<=90,!i&&o||(u.length&&p.push(u),u=""),(i||o)&&(o&&u.length?u+=s:u=!p.length&&t||p.length&&e?s.toUpperCase():s.toLowerCase());return u.length&&p.push(u),p.length&&"_"===r.charAt(0)&&(p[0]="_"+p[0]),p.join(n)}}var s=n(!function(){var t=new Error('Cannot find module "path"');throw t.code="MODULE_NOT_FOUND",t}()),i=n(74),o=n(34),l=o.assign({},o,i);l.joinPath=s.join,l.get=n(54),l.trimEnd=n(56),l.deepMerge=function(t,e){return l.each(e,function(n,r){switch(typeof t[r]){case"undefined":t[r]=e[r];break;case"object":l.isArray(t[r])&&l.isArray(e[r])?t[r]=t[r].concat(e[r]):l.isPlainObject(t[r])&&l.isPlainObject(e[r])&&l.deepMerge(t[r],e[r])}}),t},l.each(["String","Object","PlainObject","Array","Finite","Function","RegExp"],function(t){var e=l["is"+t];l["isArrayOf"+t+"s"]=function(t){return l.isArray(t)&&l.every(t.slice(0,10),e)}}),l.ucfirst=function(t){return t[0].toUpperCase()+t.substring(1).toLowerCase()},l.studlyCase=a(!0,!0,""),l.camelCase=a(!1,!0,""),l.snakeCase=a(!1,!1,"_"),l.toLowerString=function(t){return t?"string"!=typeof t&&(t=t.toString()):t="",t.toLowerCase()},l.toUpperString=function(t){return t?"string"!=typeof t&&(t=t.toString()):t="",t.toUpperCase()},l.isNumeric=function(t){return"object"!=typeof t&&t-parseFloat(t)>=0};var p=/^(\d+(?:\.\d+)?)(M|w|d|h|m|s|y|ms)$/;l.isInterval=function(t){return!(!t.match||!t.match(p))},l.repeat=function(t,e){return new Array(e+1).join(t)},l.applyArgs=function(t,e,n,r){switch(r=r||0,n.length-r){case 0:return t.call(e);case 1:return t.call(e,n[0+r]);case 2:return t.call(e,n[0+r],n[1+r]);case 3:return t.call(e,n[0+r],n[1+r],n[2+r]);case 4:return t.call(e,n[0+r],n[1+r],n[2+r],n[3+r]);case 5:return t.call(e,n[0+r],n[1+r],n[2+r],n[3+r],n[4+r]);default:return t.apply(e,Array.prototype.slice.call(n,r))}},l.nextTick=function(t){e.nextTick(l.bindKey(l,"applyArgs",t,null,arguments,1))},l.handler=function(t){return t._provideBound=!0,t},l.scheduled=l.handler,l.makeBoundMethods=function(t){t.bound={};for(var e in t)"function"==typeof t[e]&&!0===t[e]._provideBound&&(t.bound[e]=l.bind(t[e],t))},l.noop=function(){},l.funcEnum=function(t,e,n,r){var a=t[e];switch(typeof a){case"undefined":return n[r];case"function":return a;case"string":if(n.hasOwnProperty(a))return n[a];default:var s="Invalid "+e+' "'+a+'", expected a function';switch(l.size(n)){case 0:break;case 1:s+=" or "+l.keys(n)[0];break;default:s+=" or one of "+l.keys(n).join(", ")}throw new TypeError(s)}},l.createArray=function(t,e){e="function"==typeof e?e:l.identity;var n,r,a=[];for(l.isArray(t)||(t=[t]),r=0;r<t.length;r++){if(void 0===(n=e(t[r])))return!1;a.push(n)}return a},l.getUnwrittenFromStream=function(t){var e=l.getStreamWriteBuffer(t);if(e){var n="";return e.length?(l.each(e,function(t){if(t.chunk)n+=""+t.chunk;else{if(!l.isArray(t)||"string"!=typeof t[0]&&!r.isBuffer(t[0]))return!1;n+=""+t[0]}}),n):n}},l.getStreamWriteBuffer=function(t){if(t&&t._writableState){var e=t._writableState;return e.getBuffer?e.getBuffer():e.buffer?e.buffer:void 0}},l.clearWriteStreamBuffer=function(t){var e=l.getStreamWriteBuffer(t);return e&&e.splice(0)},l.now=function(){return"function"==typeof Date.now?Date.now():(new Date).getTime()},t.exports=l}).call(e,n(5),n(13).Buffer)},function(t,e,n){function r(t){t=t||o.identity;var e=function(e){function n(t,n){"function"==typeof t?(n=t,t={}):(t=t||{},n="function"==typeof n?n:null);try{return s(this.transport,e,o.clone(t),n)}catch(t){if("function"!=typeof n){var r=this.transport.defer();return r.reject(t),r.promise}o.nextTick(n,t)}}return e=t(e),o.isPlainObject(e.params)||(e.params={}),e.method||(e.method="GET"),n.spec=e,n};return e.proxy=function(t,e){return function(n,r){return"function"==typeof n?(r=n,n={}):(n=n||{},r="function"==typeof r?r:null),e.transform&&e.transform(n),t.call(this,n,r)}},e}function a(t,e){var n,r,a={};if(t.req)for(t.reqParamKeys||(t.reqParamKeys=o.keys(t.req)),n=0;n<t.reqParamKeys.length;n++){if(r=t.reqParamKeys[n],!e.hasOwnProperty(r)||null==e[r])return!1;l[t.req[r].type]?a[r]=l[t.req[r].type](t.req[r],e[r],r):a[r]=e[r]}if(t.opt)for(t.optParamKeys||(t.optParamKeys=o.keys(t.opt)),n=0;n<t.optParamKeys.length;n++)r=t.optParamKeys[n],e[r]?l[t.opt[r].type]||null==e[r]?a[r]=l[t.opt[r].type](t.opt[r],e[r],r):a[r]=e[r]:a[r]=t.opt[r].default;return t.template||(t.template=o.template(t.fmt)),t.template(o.transform(a,function(t,n,r){t[r]=encodeURIComponent(n),delete e[r]},{}))}function s(t,e,n,r){var s,i={method:e.method},p={};if(e.requestTimeout&&(i.requestTimeout=e.requestTimeout),!n.body&&e.paramAsBody&&("object"==typeof e.paramAsBody?(n.body={},e.paramAsBody.castToArray?n.body[e.paramAsBody.body]=[].concat(n[e.paramAsBody.param]):n.body[e.paramAsBody.body]=n[e.paramAsBody.param],delete n[e.paramAsBody.param]):(n.body=n[e.paramAsBody],delete n[e.paramAsBody])),e.needsBody&&!n.body)throw new TypeError("A request body is required.");if(e.bulkBody&&(i.bulkBody=!0),"HEAD"===e.method&&(i.castExists=!0),e.url)i.path=a(e.url,n);else for(s=0;s<e.urls.length&&!(i.path=a(e.urls[s],n));s++);if(!i.path){var u=e.url||e.urls[e.urls.length-1];throw new TypeError("Unable to build a path with those params. Supply at least "+o.keys(u.req).join(", "))}e.paramKeys||(e.paramKeys=o.keys(e.params),e.requireParamKeys=o.transform(e.params,function(t,e,n){e.required&&t.push(n)},[]));for(var d in n)if(n.hasOwnProperty(d)&&null!=n[d])switch(d){case"body":case"headers":case"requestTimeout":case"maxRetries":i[d]=n[d];break;case"ignore":i.ignore=o.isArray(n[d])?n[d]:[n[d]];break;case"method":i.method=o.toUpperString(n[d]);break;default:var c=e.params[d];c?(c.name=c.name||d,null!=n[d]&&(l[c.type]?p[c.name]=l[c.type](c,n[d],d):p[c.name]=n[d],c.default&&p[c.name]===c.default&&delete p[c.name])):p[d]=n[d]}for(s=0;s<e.requireParamKeys.length;s++)if(!p.hasOwnProperty(e.requireParamKeys[s]))throw new TypeError("Missing required parameter "+e.requireParamKeys[s]);return i.query=p,t.request(i,r)}function i(t){return t.split(",").map(function(t){return t.trim()})}var o=n(0);e.makeFactoryWithModifier=r,e.factory=r(),e.proxyFactory=e.factory.proxy,e._resolveUrl=a,e.ApiNamespace=function(){},e.namespaceFactory=function(){function t(t,e){this.transport=t,this.client=e}return t.prototype=new e.ApiNamespace,t};var l={enum:function t(e,n,r){if(o.isString(n)&&n.indexOf(",")>-1&&(n=i(n)),o.isArray(n))return n.map(function(n){return t(e,n,r)}).join(",");for(var a=0;a<e.options.length;a++)if(e.options[a]===String(n))return e.options[a];throw new TypeError("Invalid "+r+": expected "+(e.options.length>1?"one of "+e.options.join(","):e.options[0]))},duration:function(t,e,n){if(o.isNumeric(e)||o.isInterval(e))return e;throw new TypeError("Invalid "+n+": expected a number or interval (an integer followed by one of M, w, d, h, m, s, y or ms).")},list:function(t,e,n){switch(typeof e){case"number":case"boolean":return""+e;case"string":e=i(e);case"object":if(o.isArray(e))return e.join(",");default:throw new TypeError("Invalid "+n+": expected be a comma separated list, array, number or string.")}},boolean:function(t,e){return"no"!==(e=o.isString(e)?e.toLowerCase():e)&&"off"!==e&&!!e},number:function(t,e,n){if(o.isNumeric(e))return 1*e;throw new TypeError("Invalid "+n+": expected a number.")},string:function(t,e,n){switch(typeof e){case"number":case"string":return""+e;default:throw new TypeError("Invalid "+n+": expected a string.")}},time:function(t,e,n){if("string"==typeof e)return e;if(o.isNumeric(e))return""+e;if(e instanceof Date)return""+e.getTime();throw new TypeError("Invalid "+n+": expected some sort of time.")}}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){function r(t,e,n){this.message=t,Error.call(this,this.message),o?Error.captureStackTrace(this,e):this.stack=l?(new Error).stack:"",n&&(s.assign(this,n),this.toString=function(){return t+" :: "+JSON.stringify(n)},this.toJSON=function(){return s.assign({msg:t},n)})}function a(t){const e=[];return function t(n){if("object"!=typeof n)return JSON.stringify(n);if(e.indexOf(n)>-1)return"[circular]";e.push(n);try{return"{ "+s.map(n,function(e,n){return n+"="+t(e)}).join(" & ")+" }"}finally{e.pop()}}(t)}var s=n(0),i=t.exports,o="function"==typeof Error.captureStackTrace,l=!!(new Error).stack;i._Abstract=r,s.inherits(r,Error),i.ConnectionFault=function(t){r.call(this,t||"Connection Failure",i.ConnectionFault)},s.inherits(i.ConnectionFault,r),i.NoConnections=function(t){r.call(this,t||"No Living connections",i.NoConnections)},s.inherits(i.NoConnections,r),i.Generic=function(t,e){r.call(this,t||"Generic Error",i.Generic,e)},s.inherits(i.Generic,r),i.RequestTimeout=function(t){r.call(this,t||"Request Timeout",i.RequestTimeout)},s.inherits(i.RequestTimeout,r),i.Serialization=function(t){r.call(this,t||"Unable to parse/serialize body",i.Serialization)},s.inherits(i.Serialization,r),i.RequestTypeError=function(t){r.call(this,"Cross-domain AJAX requests "+t+" are not supported",i.RequestTypeError)},s.inherits(i.RequestTypeError,r);var p=[[300,"Multiple Choices"],[301,"Moved Permanently"],[302,"Found"],[303,"See Other"],[304,"Not Modified"],[305,"Use Proxy"],[307,"Temporary Redirect"],[308,"Permanent Redirect"],[400,"Bad Request"],[401,"Authentication Exception"],[402,"Payment Required"],[403,["Authorization Exception","Forbidden"]],[404,"Not Found"],[405,"Method Not Allowed"],[406,"Not Acceptable"],[407,"Proxy Authentication Required"],[408,"Request Timeout"],[409,"Conflict"],[410,"Gone"],[411,"Length Required"],[412,"Precondition Failed"],[413,"Request Entity Too Large"],[414,"Request URIToo Long"],[415,"Unsupported Media Type"],[416,"Requested Range Not Satisfiable"],[417,"Expectation Failed"],[418,"Im ATeapot"],[421,"Too Many Connections From This IP"],[426,"Upgrade Required"],[429,"Too Many Requests"],[450,"Blocked By Windows Parental Controls"],[494,"Request Header Too Large"],[497,"HTTPTo HTTPS"],[499,"Client Closed Request"],[500,"Internal Server Error"],[501,"Not Implemented"],[502,"Bad Gateway"],[503,"Service Unavailable"],[504,"Gateway Timeout"],[505,"HTTPVersion Not Supported"],[506,"Variant Also Negotiates"],[510,"Not Extended"]];s.each(p,function(t){function e(t,i){this.status=n,this.displayName=u;var o=null;return s.isPlainObject(t)&&(o=t,t=null),o?(t=[].concat(o.root_cause||[]).reduce(function(t,e){t&&(t+=" (and) "),t+="["+e.type+"] "+e.reason;var n=s.omit(e,["type","reason"]);return s.size(n)&&(t+=", with "+a(n)),t},""),t||(o.type&&(t+="["+o.type+"] "),o.reason&&(t+=o.reason)),r.call(this,t||p,e,i),this):(r.call(this,t||p,e,i),this)}var n=t[0],o=t[1],l=[].concat(o,n),p=l[0],u=s.studlyCase(p);l=s.uniq(l.concat(u)),s.inherits(e,r),l.forEach(function(t){i[t]=e})})},function(t,e,n){/* Riot v3.6.0, @license MIT */
!function(t,n){n(e)}(0,function(t){"use strict";function e(t){return Ht.test(t)}function n(t){return typeof t===Dt}function r(t){return t&&typeof t===Rt}function a(t){return typeof t===Lt}function s(t){return typeof t===Ct}function i(t){return a(t)||null===t||""===t}function o(t){return Array.isArray(t)||t instanceof Array}function l(t,e){var n=Object.getOwnPropertyDescriptor(t,e);return a(t[e])||n&&n.writable}function p(t){return zt.test(t)}function u(t,e){return Array.prototype.slice.call((e||document).querySelectorAll(t))}function d(t,e){return(e||document).querySelector(t)}function c(){return document.createDocumentFragment()}function m(){return document.createTextNode("")}function f(t){return!!t.ownerSVGElement}function $(t){return"svg"===t?document.createElementNS(jt,t):document.createElement(t)}function y(t,e){if(a(t.innerHTML)){var n=(new DOMParser).parseFromString(e,"application/xml"),r=t.ownerDocument.importNode(n.documentElement,!0);t.appendChild(r)}else t.innerHTML=e}function V(t,e){t.style.display=e?"":"none",t.hidden=!e}function h(t,e){t.removeAttribute(e)}function b(t){return Object.keys(t).reduce(function(e,n){return e+" "+n+": "+t[n]+";"},"")}function g(t,e){return t.getAttribute(e)}function _(t,e,n){var r=Ut.exec(e);r&&r[1]?t.setAttributeNS(Pt,r[1],n):t.setAttribute(e,n)}function v(t,e,n){t.insertBefore(e,n.parentNode&&n)}function x(t,e){if(t)for(var n;n=Gt.exec(t);)e(n[1].toLowerCase(),n[2]||n[3]||n[4])}function q(t,e,n){if(t){var r,a=e(t,n);if(!1===a)return;for(t=t.firstChild;t;)r=t.nextSibling,q(t,e,a),t=r}}function w(t,e){for(var n=t?t.length:0,r=0;r<n;++r)e(t[r],r);return t}function T(t,e){return-1!==t.indexOf(e)}function E(t){return t.replace(/-(\w)/g,function(t,e){return e.toUpperCase()})}function S(t,e){return t.slice(0,e.length)===e}function k(t,e,n,r){return Object.defineProperty(t,e,A({value:n,enumerable:!1,writable:!1,configurable:!0},r)),t}function A(t){for(var e,n=arguments,r=1;r<n.length;++r)if(e=n[r])for(var a in e)l(t,a)&&(t[a]=e[a]);return t}function O(t,e,n){var r=this.__.parent,a=this.__.item;if(!a)for(;r&&!a;)a=r.__.item,r=r.__.parent;if(l(n,"currentTarget")&&(n.currentTarget=t),l(n,"target")&&(n.target=n.srcElement),l(n,"which")&&(n.which=n.charCode||n.keyCode),n.item=a,e.call(this,n),oe.autoUpdate&&!n.preventUpdate){var s=pt(this);s.isMounted&&s.update()}}function I(t,e,n,r){var a,s=O.bind(r,n,e);n[t]=null,a=t.replace(Wt,""),T(r.__.listeners,n)||r.__.listeners.push(n),n[Nt]||(n[Nt]={}),n[Nt][t]&&n.removeEventListener(a,n[Nt][t]),n[Nt][t]=s,n.addEventListener(a,s,!1)}function N(t,e,n){var r,a,i,o;if(t.tag&&t.tagName===n)return void t.tag.update();a="VIRTUAL"===t.dom.tagName,t.tag&&(a&&(i=t.tag.__.head,o=m(),i.parentNode.insertBefore(o,i)),t.tag.unmount(!0)),s(n)&&(t.impl=xt[n],r={root:t.dom,parent:e,hasImpl:!0,tagName:n},t.tag=lt(t.impl,r,t.dom.innerHTML,e),w(t.attrs,function(e){return _(t.tag.root,e.name,e.value)}),t.tagName=n,t.tag.mount(),a&&yt(t.tag,o||t.tag.root),e.__.onUnmount=function(){var e=t.tag.opts.dataIs,n=t.tag.parent.tags,r=t.tag.__.parent.tags;ft(n,e,t.tag),ft(r,e,t.tag),t.tag.unmount()})}function C(t){return t?(t=t.replace(wt,""),Yt[t]&&(t=Yt[t]),t):null}function R(t){if(!this.root||!g(this.root,"virtualized")){var e,a,s,o=t.dom,l=C(t.attr),p=T([Ot,It],l),u=t.root&&"VIRTUAL"===t.root.tagName,d=o&&(t.parent||o.parentNode),c="style"===l,m="class"===l;if(t._riot_id)return void(t.isMounted?t.update():(t.mount(),u&&yt(t,t.root)));if(t.update)return t.update();if(s=ae(t.expr,p?A({},Object.create(this.parent),this):this),e=!i(s),a=r(s),a&&(a=!m&&!c,m?s=ae(JSON.stringify(s),this):c&&(s=b(s))),!t.attr||t.isAttrRemoved&&e&&!1!==s||(h(o,t.attr),t.isAttrRemoved=!0),t.bool&&(s=!!s&&l),t.isRtag)return N(t,this,s);if((!t.wasParsedOnce||t.value!==s)&&(t.value=s,t.wasParsedOnce=!0,!a||p)){if(i(s)&&(s=""),!l)return s+="",void(d&&(t.parent=d,"TEXTAREA"===d.tagName?(d.value=s,Jt||(o.nodeValue=s)):o.nodeValue=s));n(s)?I(l,s,o,this):p?V(o,l===It?!s:s):(t.bool&&(o[l]=s),"value"===l&&o.value!==s&&(o.value=s),e&&!1!==s&&_(o,l,s),c&&o.hidden&&V(o,!1))}}}function L(t){w(t,R.bind(this))}function D(t,e,n,r){var a=r?Object.create(r):{};return a[t.key]=e,t.pos&&(a[t.pos]=n),a}function P(t,e){for(var n=e.length,r=t.length;n>r;)n--,j.apply(e[n],[e,n])}function j(t,e){t.splice(e,1),this.unmount(),ft(this.parent,this,this.__.tagName,!0)}function U(t){var e=this;w(Object.keys(this.tags),function(n){ot.apply(e.tags[n],[n,t])})}function M(t,e,n){n?ht.apply(this,[t,e]):v(t,this.root,e.root)}function F(t,e,n){n?Vt.apply(this,[t,e]):v(t,this.root,e.root)}function B(t,e){e?Vt.call(this,t):t.appendChild(this.root)}function W(t,e,n){h(t,kt);var r,a=typeof g(t,At)!==Ct||h(t,At),i=dt(t),l=xt[i],p=t.parentNode,u=m(),d=st(t),f=g(t,St),$=[],y=[],V=!xt[i],b="VIRTUAL"===t.tagName;return n=ae.loopKeys(n),n.isLoop=!0,f&&h(t,St),p.insertBefore(u,t),p.removeChild(t),n.update=function(){n.value=ae(n.val,e);var p=c(),m=n.value,h=!o(m)&&!s(m),g=u.parentNode;g&&(h?(r=m||!1,m=r?Object.keys(m).map(function(t){return D(n,m[t],t)}):[]):r=!1,f&&(m=m.filter(function(t,r){return n.key&&!h?!!ae(f,D(n,t,r,e)):!!ae(f,A(Object.create(e),t))})),w(m,function(s,o){var u=a&&typeof s===Rt&&!r,c=y.indexOf(s),f=-1===c,h=!f&&u?c:o,_=$[h],v=o>=y.length,x=u&&f||!u&&!_;s=!r&&n.key?D(n,s,o):s,x?(_=new at(l,{parent:e,isLoop:!0,isAnonymous:V,tagName:i,root:t.cloneNode(V),item:s,index:o},t.innerHTML),_.mount(),v?B.apply(_,[p||g,b]):F.apply(_,[g,$[o],b]),v||y.splice(o,0,s),$.splice(o,0,_),d&&mt(e.tags,i,_,!0)):h!==o&&u&&(T(m,y[h])&&(M.apply(_,[g,$[o],b]),$.splice(o,0,$.splice(h,1)[0]),y.splice(o,0,y.splice(h,1)[0])),n.pos&&(_[n.pos]=o),!d&&_.tags&&U.call(_,o)),_.__.item=s,_.__.index=o,_.__.parent=e,x||_.update(s)}),P(m,$),y=m.slice(),g.insertBefore(p,u))},n.unmount=function(){w($,function(t){t.unmount()})},n}function z(t,e,n){var r=this,a={parent:{children:e}};q(t,function(e,a){var s,i,o,l=e.nodeType,p=a.parent;if(!n&&e===t)return{parent:p};if(3===l&&"STYLE"!==e.parentNode.tagName&&ae.hasExpr(e.nodeValue)&&p.children.push({dom:e,expr:e.nodeValue}),1!==l)return a;var u="VIRTUAL"===e.tagName;if(s=g(e,kt))return u&&_(e,"loopVirtual",!0),p.children.push(W(e,r,s)),!1;if(s=g(e,St))return p.children.push(Object.create(le).init(e,r,s)),!1;if((i=g(e,Et))&&ae.hasExpr(i))return p.children.push({isRtag:!0,expr:i,dom:e,attrs:[].slice.call(e.attributes)}),!1;if(o=st(e),u&&(g(e,"virtualized")&&e.parentElement.removeChild(e),o||g(e,"virtualized")||g(e,"loopVirtual")||(o={tmpl:e.outerHTML})),o&&(e!==t||n)){if(!u||g(e,Et)){var d={root:e,parent:r,hasImpl:!0};return p.children.push(lt(o,d,e.innerHTML,r)),!1}_(e,"virtualized",!0);var c=new at({tmpl:e.outerHTML},{root:e,parent:r},e.innerHTML);p.children.push(c)}return G.apply(r,[e,e.attributes,function(t,e){e&&p.children.push(e)}]),{parent:p}},a)}function G(t,n,r){var a=this;w(n,function(n){if(!n)return!1;var s,i=n.name,o=e(i);T(Tt,i)?s=Object.create(pe).init(t,a,i,n.value):ae.hasExpr(n.value)&&(s={dom:t,expr:n.value,attr:i,bool:o}),r(n,s)})}function Y(t,e,n){var r="o"===n[0],a=r?"select>":"table>";if(t.innerHTML="<"+a+e.trim()+"</"+a,a=t.firstChild,r)a.selectedIndex=-1;else{var s=fe[n];s&&1===a.childElementCount&&(a=d(s,a))}return a}function H(t,e){if(!ue.test(t))return t;var n={};return e=e&&e.replace(ce,function(t,e,r){return n[e]=n[e]||r,""}).trim(),t.replace(me,function(t,e,r){return n[e]||r||""}).replace(de,function(t,n){return e||n||""})}function J(t,e,n){var r=t&&t.match(/^\s*<([-\w]+)/),a=r&&r[1].toLowerCase(),s=$(n?Ve:ye);return t=H(t,e),$e.test(a)?s=Y(s,t,a):y(s,t),s}function X(t,e){var n=this,r=n.name,a=n.tmpl,s=n.css,i=n.attrs,o=n.onCreate;return xt[r]||(K(r,a,s,i,o),xt[r].class=this.constructor),$t(t,r,e,this),s&&ee.inject(),this}function K(t,e,r,a,s){return n(a)&&(s=a,/^[\w\-]+\s?=/.test(r)?(a=r,r=""):a=""),r&&(n(r)?s=r:ee.add(r)),t=t.toLowerCase(),xt[t]={name:t,tmpl:e,attrs:a,fn:s},t}function Z(t,e,n,r,a){return n&&ee.add(n,t),xt[t]={name:t,tmpl:e,attrs:r,fn:a},t}function Q(t,e,n){function a(t){if(t.tagName){var r,s=g(t,Et);e&&s!==e&&(s=e,_(t,Et,e)),r=$t(t,s||t.tagName.toLowerCase(),n),r&&l.push(r)}else t.length&&w(t,a)}var i,o,l=[];if(ee.inject(),r(e)&&(n=e,e=0),s(t)?(t="*"===t?o=bt():t+bt(t.split(/, */)),i=t?u(t):[]):i=t,"*"===e){if(e=o||bt(),i.tagName)i=u(e,i);else{var p=[];w(i,function(t){return p.push(u(e,t))}),i=p}e=0}return a(i),l}function tt(t,e,s){if(r(t))return void tt("__"+ge+++"__",t,!0);var i=s?be:he;if(!e){if(a(i[t]))throw new Error("Unregistered mixin: "+t);return i[t]}i[t]=n(e)?A(e.prototype,i[t]||{})&&e:A(i[t]||{},e)}function et(){return w(vt,function(t){return t.update()})}function nt(t){xt[t]=null}function rt(t,e,n,r,a){if(!t||!n){var s=!n&&t?this:e||this;w(a,function(t){t.expr&&L.call(s,[t.expr]),r[E(t.name).replace(wt,"")]=t.expr?t.expr.value:t.value})}}function at(t,e,r){void 0===t&&(t={}),void 0===e&&(e={});var a,i=A({},e.opts),o=e.parent,l=e.isLoop,p=!!e.isAnonymous,u=oe.skipAnonymousTags&&p,d=ct(e.item),c=e.index,m=[],$=[],V=[],b=e.root,g=e.tagName||dt(b),v="virtual"===g,q=!v&&!t.tmpl,E=[];u||se(this),t.name&&b._tag&&b._tag.unmount(!0),this.isMounted=!1,k(this,"__",{isAnonymous:p,instAttrs:m,innerHTML:r,tagName:g,index:c,isLoop:l,isInline:q,listeners:[],virts:[],tail:null,head:null,parent:null,item:null}),k(this,"_riot_id",++ve),k(this,"root",b),A(this,{opts:i},d),k(this,"parent",o||null),k(this,"tags",{}),k(this,"refs",{}),q||l&&p?a=b:(v||(b.innerHTML=""),a=J(t.tmpl,r,f(b))),k(this,"update",function(t){var e={},r=this.isMounted&&!u;return t=ct(t),A(this,t),rt.apply(this,[l,o,p,e,m]),r&&this.isMounted&&n(this.shouldUpdate)&&!this.shouldUpdate(t,e)?this:(l&&p&&it.apply(this,[this.parent,E]),A(i,e),r&&this.trigger("update",t),L.call(this,V),r&&this.trigger("updated"),this)}.bind(this)),k(this,"mixin",function(){var t=this;return w(arguments,function(e){var r,a,i=[],o=["init","__proto__"];e=s(e)?tt(e):e,r=n(e)?new e:e;var l=Object.getPrototypeOf(r);do{i=i.concat(Object.getOwnPropertyNames(a||r))}while(a=Object.getPrototypeOf(a||r));w(i,function(e){if(!T(o,e)){var a=Object.getOwnPropertyDescriptor(r,e)||Object.getOwnPropertyDescriptor(l,e),s=a&&(a.get||a.set);!t.hasOwnProperty(e)&&s?Object.defineProperty(t,e,a):t[e]=n(r[e])?r[e].bind(t):r[e]}}),r.init&&r.init.bind(t)()}),this}.bind(this)),k(this,"mount",function(){var e=this;b._tag=this,G.apply(o,[b,b.attributes,function(t,n){!p&&pe.isPrototypeOf(n)&&(n.tag=e),t.expr=n,m.push(t)}]),$=[],x(t.attrs,function(t,e){$.push({name:t,value:e})}),G.apply(this,[b,$,function(t,e){e?V.push(e):_(b,t.name,t.value)}]),rt.apply(this,[l,o,p,i,m]);var n=tt(qt);if(n&&!u)for(var r in n)n.hasOwnProperty(r)&&e.mixin(n[r]);if(t.fn&&t.fn.call(this,i),u||this.trigger("before-mount"),z.apply(this,[a,V,p]),this.update(d),!p&&!q)for(;a.firstChild;)b.appendChild(a.firstChild);if(k(this,"root",b),k(this,"isMounted",!0),!u){if(this.parent){var s=pt(this.parent);s.one(s.isMounted?"updated":"mount",function(){e.trigger("mount")})}else this.trigger("mount");return this}}.bind(this)),k(this,"unmount",function(e){var n,r=this,a=this.root,s=a.parentNode,i=vt.indexOf(this);return u||this.trigger("before-unmount"),x(t.attrs,function(t){S(t,wt)&&(t=t.slice(wt.length)),h(b,t)}),this.__.listeners.forEach(function(t){Object.keys(t[Nt]).forEach(function(e){t.removeEventListener(e,t[Nt][e])})}),-1!==i&&vt.splice(i,1),(s||v)&&(o?(n=pt(o),v?Object.keys(this.tags).forEach(function(t){ft(n.tags,t,r.tags[t])}):(ft(n.tags,g,this),o!==n&&ft(o.tags,g,this))):y(a,""),s&&!e&&s.removeChild(a)),this.__.virts&&w(this.__.virts,function(t){t.parentNode&&t.parentNode.removeChild(t)}),ut(V),w(m,function(t){return t.expr&&t.expr.unmount&&t.expr.unmount()}),this.__.onUnmount&&this.__.onUnmount(),u||(this.trigger("unmount"),this.off("*")),k(this,"isMounted",!1),delete this.root._tag,this}.bind(this))}function st(t){return t.tagName&&xt[g(t,Et)||g(t,Et)||t.tagName.toLowerCase()]}function it(t,e){var n=this;w(Object.keys(t),function(r){var s=!p(r)&&T(e,r);(a(n[r])||s)&&(s||e.push(r),n[r]=t[r])})}function ot(t,e){var n,r=this.parent;r&&(n=r.tags[t],o(n)?n.splice(e,0,n.splice(n.indexOf(this),1)[0]):mt(r.tags,t,this))}function lt(t,e,n,r){var a=new at(t,e,n),s=e.tagName||dt(e.root,!0),i=pt(r);return k(a,"parent",i),a.__.parent=r,mt(i.tags,s,a),i!==r&&mt(r.tags,s,a),a}function pt(t){for(var e=t;e.__.isAnonymous&&e.parent;)e=e.parent;return e}function ut(t){w(t,function(t){t instanceof at?t.unmount(!0):t.tagName?t.tag.unmount(!0):t.unmount&&t.unmount()})}function dt(t,e){var n=st(t),r=!e&&g(t,Et);return r&&!ae.hasExpr(r)?r:n?n.name:t.tagName.toLowerCase()}function ct(t){if(!(t instanceof at||t&&n(t.trigger)))return t;var e={};for(var r in t)zt.test(r)||(e[r]=t[r]);return e}function mt(t,e,n,r,s){var i=t[e],l=o(i),p=!a(s);if(!i||i!==n)if(!i&&r)t[e]=[n];else if(i)if(l){var u=i.indexOf(n);if(u===s)return;-1!==u&&i.splice(u,1),p?i.splice(s,0,n):i.push(n)}else t[e]=[i,n];else t[e]=n}function ft(t,e,n,r){if(o(t[e])){var a=t[e].indexOf(n);-1!==a&&t[e].splice(a,1),t[e].length?1!==t[e].length||r||(t[e]=t[e][0]):delete t[e]}else delete t[e]}function $t(t,e,n,r){var a=xt[e],s=xt[e].class,i=r||(s?Object.create(s.prototype):{}),o=t._innerHTML=t._innerHTML||t.innerHTML,l=A({root:t,opts:n},{parent:n?n.parent:null});return a&&t&&at.apply(i,[a,l,o]),i&&i.mount&&(i.mount(!0),T(vt,i)||vt.push(i)),i}function yt(t,e){var n=c();Vt.call(t,n),e.parentNode.replaceChild(n,e)}function Vt(t,e){var n,r,a=this,s=m(),i=m(),o=c();for(this.root.insertBefore(s,this.root.firstChild),this.root.appendChild(i),this.__.head=r=s,this.__.tail=i;r;)n=r.nextSibling,o.appendChild(r),a.__.virts.push(r),r=n;e?t.insertBefore(o,e.__.head):t.appendChild(o)}function ht(t,e){for(var n,r=this,a=this.__.head,s=c();a;)if(n=a.nextSibling,s.appendChild(a),(a=n)===r.__.tail){s.appendChild(a),t.insertBefore(s,e.__.head);break}}function bt(t){if(!t){var e=Object.keys(xt);return e+bt(e)}return t.filter(function(t){return!/[^-\w]/.test(t)}).reduce(function(t,e){var n=e.trim().toLowerCase();return t+",["+Et+'="'+n+'"]'},"")}var gt,_t,vt=[],xt={},qt="__global_mixin",wt="riot-",Tt=["ref","data-ref"],Et="data-is",St="if",kt="each",At="no-reorder",Ot="show",It="hide",Nt="__riot-events__",Ct="string",Rt="object",Lt="undefined",Dt="function",Pt="http://www.w3.org/1999/xlink",jt="http://www.w3.org/2000/svg",Ut=/^xlink:(\w+)/,Mt=typeof window===Lt?void 0:window,Ft=/^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/,Bt=/^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/,Wt=/^on/,zt=/^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|refs|parent|opts|trigger|o(?:n|ff|ne))$/,Gt=/([-\w]+) ?= ?(?:"([^"]*)|'([^']*)|({[^}]*}))/g,Yt={viewbox:"viewBox"},Ht=/^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|selected|sortable|truespeed|typemustmatch)$/,Jt=0|(Mt&&Mt.document||{}).documentMode,Xt=Object.freeze({isBoolAttr:e,isFunction:n,isObject:r,isUndefined:a,isString:s,isBlank:i,isArray:o,isWritable:l,isReservedName:p}),Kt=Object.freeze({$$:u,$:d,createFrag:c,createDOMPlaceholder:m,isSvg:f,mkEl:$,setInnerHTML:y,toggleVisibility:V,remAttr:h,styleObjectToString:b,getAttr:g,setAttr:_,safeInsert:v,walkAttrs:x,walkNodes:q}),Zt={},Qt=[],te=!1;Mt&&(gt=function(){var t=$("style");_(t,"type","text/css");var e=d("style[type=riot]");return e?(e.id&&(t.id=e.id),e.parentNode.replaceChild(t,e)):document.getElementsByTagName("head")[0].appendChild(t),t}(),_t=gt.styleSheet);var ee={styleNode:gt,add:function(t,e){e?Zt[e]=t:Qt.push(t),te=!0},inject:function(){if(Mt&&te){te=!1;var t=Object.keys(Zt).map(function(t){return Zt[t]}).concat(Qt).join("\n");_t?_t.cssText=t:gt.innerHTML=t}}},ne=function(){function t(t,e){for(;--e>=0&&/\s/.test(t[e]););return e}function e(e,o){var l=/.*/g,p=l.lastIndex=o++,u=l.exec(e)[0].match(s);if(u){var d=p+u[0].length;p=t(e,p);var c=e[p];if(p<0||~n.indexOf(c))return d;if("."===c)"."===e[p-1]&&(o=d);else if("+"===c||"-"===c)(e[--p]!==c||(p=t(e,p))<0||!i.test(e[p]))&&(o=d);else if(~a.indexOf(c)){for(var m=p+1;--p>=0&&i.test(e[p]););~r.indexOf(e.slice(p+1,m))&&(o=d)}}return o}var n="[{(,;:?=|&!^~>%*/",r=["case","default","do","else","in","instanceof","prefix","return","typeof","void","yield"],a=r.reduce(function(t,e){return t+e.slice(-1)},""),s=/^\/(?=[^*>\/])[^[\/\\]*(?:(?:\\.|\[(?:\\.|[^\]\\]*)*\])[^[\\/]*)*?\/[gimuy]*/,i=/[$\w]/;return e}(),re=function(t){function e(t){return t}function n(t,e){return e||(e=g),new RegExp(t.source.replace(/{/g,e[2]).replace(/}/g,e[3]),t.global?p:"")}function r(t){if(t===V)return h;var e=t.split(" ");if(2!==e.length||m.test(t))throw new Error('Unsupported brackets "'+t+'"');return e=e.concat(t.replace(f,"\\").split(" ")),e[4]=n(e[1].length>1?/{[\S\s]*?}/:h[4],e),e[5]=n(t.length>3?/\\({|})/g:h[5],e),e[6]=n(h[6],e),e[7]=RegExp("\\\\("+e[3]+")|([[({])|("+e[3]+")|"+$,p),e[8]=t,e}function a(t){return t instanceof RegExp?o(t):g[t]}function s(t){(t||(t=V))!==g[8]&&(g=r(t),o=t===V?e:n,g[9]=o(h[9])),b=t}function i(t){var e;t=t||{},e=t.brackets,Object.defineProperty(t,"brackets",{set:s,get:function(){return b},enumerable:!0}),l=t,s(e)}var o,l,p="g",u=/\/\*[^*]*\*+(?:[^*\/][^*]*\*+)*\//g,d=/"[^"\\]*(?:\\[\S\s][^"\\]*)*"|'[^'\\]*(?:\\[\S\s][^'\\]*)*'|`[^`\\]*(?:\\[\S\s][^`\\]*)*`/g,c=d.source+"|"+/(?:\breturn\s+|(?:[$\w\)\]]|\+\+|--)\s*(\/)(?![*\/]))/.source+"|"+/\/(?=[^*\/])[^[\/\\]*(?:(?:\[(?:\\.|[^\]\\]*)*\]|\\.)[^[\/\\]*)*?([^<]\/)[gim]*/.source,m=RegExp("[\\x00-\\x1F<>a-zA-Z0-9'\",;\\\\]"),f=/(?=[[\]()*+?.^$|])/g,$=d.source+"|"+/(\/)(?![*\/])/.source,y={"(":RegExp("([()])|"+$,p),"[":RegExp("([[\\]])|"+$,p),"{":RegExp("([{}])|"+$,p)},V="{ }",h=["{","}","{","}",/{[^}]*}/,/\\([{}])/g,/\\({)|{/g,RegExp("\\\\(})|([[({])|(})|"+$,p),V,/^\s*{\^?\s*([$\w]+)(?:\s*,\s*(\S+))?\s+in\s+(\S.*)\s*}/,/(^|[^\\]){=[\S\s]*?}/],b=void 0,g=[];return a.split=function(t,e,n){function r(t){f&&(t=f+t,f=""),e||i?d.push(t&&t.replace(n[5],"$1")):d.push(t)}function a(n,r,a){return a&&(r=ne(t,n)),e&&r>n+2&&(p="⁗"+m.length+"~",m.push(t.slice(n,r)),f+=t.slice(o,n)+p,o=r),r}n||(n=g);var s,i,o,l,p,u,d=[],c=n[6],m=[],f="";for(i=o=c.lastIndex=0;s=c.exec(t);){if(u=c.lastIndex,l=s.index,i){if(s[2]){var $=s[2],V=y[$],h=1;for(V.lastIndex=u;s=V.exec(t);)if(s[1]){if(s[1]===$)++h;else if(!--h)break}else V.lastIndex=a(s.index,V.lastIndex,s[2]);c.lastIndex=h?t.length:V.lastIndex;continue}if(!s[3]){c.lastIndex=a(l,u,s[4]);continue}}s[1]||(r(t.slice(o,l)),o=c.lastIndex,c=n[6+(i^=1)],c.lastIndex=o)}return t&&o<t.length&&r(t.slice(o)),d.qblocks=m,d},a.hasExpr=function(t){return g[4].test(t)},a.loopKeys=function(t){var e=t.match(g[9]);return e?{key:e[1],pos:e[2],val:g[0]+e[3].trim()+g[1]}:{val:t.trim()}},a.array=function(t){return t?r(t):g},Object.defineProperty(a,"settings",{set:i,get:function(){return l}}),a.settings="undefined"!=typeof riot&&riot.settings||{},a.set=s,a.skipRegex=ne,a.R_STRINGS=d,a.R_MLCOMMS=u,a.S_QBLOCKS=c,a.S_QBLOCK2=$,a}(),ae=function(){function t(t,r){return t?(i[t]||(i[t]=n(t))).call(r,e.bind({data:r,tmpl:t})):t}function e(e,n){e.riotData={tagName:n&&n.__&&n.__.tagName,_riot_id:n&&n._riot_id},t.errorHandler?t.errorHandler(e):"undefined"!=typeof console&&"function"==typeof console.error&&(console.error(e.message),console.log("<%s> %s",e.riotData.tagName||"Unknown tag",this.tmpl),console.log(this.data))}function n(t){var e=r(t);return"try{return "!==e.slice(0,11)&&(e="return "+e),new Function("E",e+";")}function r(t){var e,n=re.split(t.replace(o,'"'),1),r=n.qblocks;if(n.length>2||n[0]){var s,i,p=[];for(s=i=0;s<n.length;++s)(e=n[s])&&(e=1&s?a(e,1,r):'"'+e.replace(/\\/g,"\\\\").replace(/\r\n?|\n/g,"\\n").replace(/"/g,'\\"')+'"')&&(p[i++]=e);e=i<2?p[0]:"["+p.join(",")+'].join("")'}else e=a(n[1],0,r);return r.length&&(e=e.replace(l,function(t,e){return r[e].replace(/\r/g,"\\r").replace(/\n/g,"\\n")})),e}function a(t,e,n){if(t=t.replace(/\s+/g," ").trim().replace(/\ ?([[\({},?\.:])\ ?/g,"$1")){for(var r,a=[],i=0;t&&(r=t.match(p))&&!r.index;){var o,l,d=/,|([[{(])|$/g;for(t=RegExp.rightContext,o=r[2]?n[r[2]].slice(1,-1).trim().replace(/\s+/g," "):r[1];l=(r=d.exec(t))[1];)!function(e,n){var r,a=1,s=u[e];for(s.lastIndex=n.lastIndex;r=s.exec(t);)if(r[0]===e)++a;else if(!--a)break;n.lastIndex=a?t.length:s.lastIndex}(l,d);l=t.slice(0,r.index),t=RegExp.rightContext,a[i++]=s(l,1,o)}t=i?i>1?"["+a.join(",")+'].join(" ").trim()':a[0]:s(t,e)}return t}function s(t,e,n){var r;return t=t.replace(c,function(t,e,n,a,s){return n&&(a=r?0:a+t.length,"this"!==n&&"global"!==n&&"window"!==n?(t=e+'("'+n+d+n,a&&(r="."===(s=s[a])||"("===s||"["===s)):a&&(r=!m.test(s.slice(a)))),t}),r&&(t="try{return "+t+"}catch(e){E(e,this)}"),n?t=(r?"function(){"+t+"}.call(this)":"("+t+")")+'?"'+n+'":""':e&&(t="function(v){"+(r?t.replace("return ","v="):"v=("+t+")")+';return v||v===0?v:""}.call(this)'),t}var i={};t.hasExpr=re.hasExpr,t.loopKeys=re.loopKeys,t.clearCache=function(){i={}},t.errorHandler=null;var o=/\u2057/g,l=/\u2057(\d+)~/g,p=/^(?:(-?[_A-Za-z\xA0-\xFF][-\w\xA0-\xFF]*)|\u2057(\d+)~):/,u={"(":/[()]/g,"[":/[[\]]/g,"{":/[{}]/g},d='"in this?this:'+("object"!=typeof window?"global":"window")+").",c=/[,{][\$\w]+(?=:)|(^ *|[^$\w\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\w]))([$_A-Za-z][$\w]*)/g,m=/^(?=(\.[$\w]+))\1(?:[^.[(]|$)/;return t.version=re.version="v3.0.8",t}(),se=function(t){t=t||{};var e={},n=Array.prototype.slice;return Object.defineProperties(t,{on:{value:function(n,r){return"function"==typeof r&&(e[n]=e[n]||[]).push(r),t},enumerable:!1,writable:!1,configurable:!1},off:{value:function(n,r){if("*"!=n||r)if(r)for(var a,s=e[n],i=0;a=s&&s[i];++i)a==r&&s.splice(i--,1);else delete e[n];else e={};return t},enumerable:!1,writable:!1,configurable:!1},one:{value:function(e,n){function r(){t.off(e,r),n.apply(t,arguments)}return t.on(e,r)},enumerable:!1,writable:!1,configurable:!1},trigger:{value:function(r){var a,s,i,o=arguments,l=arguments.length-1,p=new Array(l);for(i=0;i<l;i++)p[i]=o[i+1];for(a=n.call(e[r]||[],0),i=0;s=a[i];++i)s.apply(t,p);return e["*"]&&"*"!=r&&t.trigger.apply(t,["*",r].concat(p)),t},enumerable:!1,writable:!1,configurable:!1}}),t},ie=Object.freeze({each:w,contains:T,toCamel:E,startsWith:S,defineProperty:k,extend:A}),oe=A(Object.create(re.settings),{skipAnonymousTags:!0,autoUpdate:!0}),le={init:function(t,e,n){h(t,St),this.tag=e,this.expr=n,this.stub=m(),this.pristine=t;var r=t.parentNode;return r.insertBefore(this.stub,t),r.removeChild(t),this},update:function(){this.value=ae(this.expr,this.tag),this.value&&!this.current?(this.current=this.pristine.cloneNode(!0),this.stub.parentNode.insertBefore(this.current,this.stub),this.expressions=[],z.apply(this.tag,[this.current,this.expressions,!0])):!this.value&&this.current&&(ut(this.expressions),this.current._tag?this.current._tag.unmount():this.current.parentNode&&this.current.parentNode.removeChild(this.current),this.current=null,this.expressions=[]),this.value&&L.call(this.tag,this.expressions)},unmount:function(){ut(this.expressions||[])}},pe={init:function(t,e,n,r){return this.dom=t,this.attr=n,this.rawValue=r,this.parent=e,this.hasExp=ae.hasExpr(r),this},update:function(){var t=this.value,e=this.parent&&pt(this.parent),n=this.dom.__ref||this.tag||this.dom;this.value=this.hasExp?ae(this.rawValue,this.parent):this.rawValue,!i(t)&&e&&ft(e.refs,t,n),!i(this.value)&&s(this.value)?(e&&mt(e.refs,this.value,n,null,this.parent.__.index),this.value!==t&&_(this.dom,this.attr,this.value)):h(this.dom,this.attr),this.dom.__ref||(this.dom.__ref=n)},unmount:function(){var t=this.tag||this.dom,e=this.parent&&pt(this.parent);!i(this.value)&&e&&ft(e.refs,this.value,t)}},ue=/<yield\b/i,de=/<yield\s*(?:\/>|>([\S\s]*?)<\/yield\s*>|>)/gi,ce=/<yield\s+to=['"]([^'">]*)['"]\s*>([\S\s]*?)<\/yield\s*>/gi,me=/<yield\s+from=['"]?([-\w]+)['"]?\s*(?:\/>|>([\S\s]*?)<\/yield\s*>)/gi,fe={tr:"tbody",th:"tr",td:"tr",col:"colgroup"},$e=Jt&&Jt<10?Ft:Bt,ye="div",Ve="svg",he={},be=he[qt]={},ge=0,_e=Object.freeze({Tag:X,tag:K,tag2:Z,mount:Q,mixin:tt,update:et,unregister:nt,version:"v3.6.0"}),ve=0,xe=Object.freeze({getTag:st,inheritFrom:it,moveChildTag:ot,initChildTag:lt,getImmediateCustomParentTag:pt,unmountAll:ut,getTagName:dt,cleanUpData:ct,arrayishAdd:mt,arrayishRemove:ft,mountTo:$t,makeReplaceVirtual:yt,makeVirtual:Vt,moveVirtual:ht,selectTags:bt}),qe=oe,we={tmpl:ae,brackets:re,styleManager:ee,vdom:vt,styleNode:ee.styleNode,dom:Kt,check:Xt,misc:ie,tags:xe},Te=X,Ee=K,Se=Z,ke=Q,Ae=tt,Oe=et,Ie=nt,Ne=se,Ce=A({},_e,{observable:se,settings:qe,util:we});t.settings=qe,t.util=we,t.Tag=Te,t.tag=Ee,t.tag2=Se,t.mount=ke,t.mixin=Ae,t.update=Oe,t.unregister=Ie,t.version="v3.6.0",t.observable=Ne,t.default=Ce,Object.defineProperty(t,"__esModule",{value:!0})})},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function a(t){if(u===setTimeout)return setTimeout(t,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(t,0);try{return u(t,0)}catch(e){try{return u.call(null,t,0)}catch(e){return u.call(this,t,0)}}}function s(t){if(d===clearTimeout)return clearTimeout(t);if((d===r||!d)&&clearTimeout)return d=clearTimeout,clearTimeout(t);try{return d(t)}catch(e){try{return d.call(null,t)}catch(e){return d.call(this,t)}}}function i(){$&&m&&($=!1,m.length?f=m.concat(f):y=-1,f.length&&o())}function o(){if(!$){var t=a(i);$=!0;for(var e=f.length;e;){for(m=f,f=[];++y<e;)m&&m[y].run();y=-1,e=f.length}m=null,$=!1,s(t)}}function l(t,e){this.fun=t,this.array=e}function p(){}var u,d,c=t.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(t){u=n}try{d="function"==typeof clearTimeout?clearTimeout:r}catch(t){d=r}}();var m,f=[],$=!1,y=-1;c.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];f.push(new l(t,e)),1!==f.length||$||a(o)},l.prototype.run=function(){this.fun.apply(null,this.array)},c.title="browser",c.browser=!0,c.env={},c.argv=[],c.version="",c.versions={},c.on=p,c.addListener=p,c.once=p,c.off=p,c.removeListener=p,c.removeAllListeners=p,c.emit=p,c.prependListener=p,c.prependOnceListener=p,c.listeners=function(t){return[]},c.binding=function(t){throw new Error("process.binding is not supported")},c.cwd=function(){return"/"},c.chdir=function(t){throw new Error("process.chdir is not supported")},c.umask=function(){return 0}},function(t,e,n){(function(t,r){var a;(function(){function s(t,e){return t.set(e[0],e[1]),t}function i(t,e){return t.add(e),t}function o(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}function l(t,e,n,r){for(var a=-1,s=null==t?0:t.length;++a<s;){var i=t[a];e(r,i,n(i),t)}return r}function p(t,e){for(var n=-1,r=null==t?0:t.length;++n<r&&!1!==e(t[n],n,t););return t}function u(t,e){for(var n=null==t?0:t.length;n--&&!1!==e(t[n],n,t););return t}function d(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(!e(t[n],n,t))return!1;return!0}function c(t,e){for(var n=-1,r=null==t?0:t.length,a=0,s=[];++n<r;){var i=t[n];e(i,n,t)&&(s[a++]=i)}return s}function m(t,e){return!!(null==t?0:t.length)&&q(t,e,0)>-1}function f(t,e,n){for(var r=-1,a=null==t?0:t.length;++r<a;)if(n(e,t[r]))return!0;return!1}function $(t,e){for(var n=-1,r=null==t?0:t.length,a=Array(r);++n<r;)a[n]=e(t[n],n,t);return a}function y(t,e){for(var n=-1,r=e.length,a=t.length;++n<r;)t[a+n]=e[n];return t}function V(t,e,n,r){var a=-1,s=null==t?0:t.length;for(r&&s&&(n=t[++a]);++a<s;)n=e(n,t[a],a,t);return n}function h(t,e,n,r){var a=null==t?0:t.length;for(r&&a&&(n=t[--a]);a--;)n=e(n,t[a],a,t);return n}function b(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(e(t[n],n,t))return!0;return!1}function g(t){return t.split("")}function _(t){return t.match(Ue)||[]}function v(t,e,n){var r;return n(t,function(t,n,a){if(e(t,n,a))return r=n,!1}),r}function x(t,e,n,r){for(var a=t.length,s=n+(r?1:-1);r?s--:++s<a;)if(e(t[s],s,t))return s;return-1}function q(t,e,n){return e===e?K(t,e,n):x(t,T,n)}function w(t,e,n,r){for(var a=n-1,s=t.length;++a<s;)if(r(t[a],e))return a;return-1}function T(t){return t!==t}function E(t,e){var n=null==t?0:t.length;return n?I(t,e)/n:Rt}function S(t){return function(e){return null==e?at:e[t]}}function k(t){return function(e){return null==t?at:t[e]}}function A(t,e,n,r,a){return a(t,function(t,a,s){n=r?(r=!1,t):e(n,t,a,s)}),n}function O(t,e){var n=t.length;for(t.sort(e);n--;)t[n]=t[n].value;return t}function I(t,e){for(var n,r=-1,a=t.length;++r<a;){var s=e(t[r]);s!==at&&(n=n===at?s:n+s)}return n}function N(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}function C(t,e){return $(e,function(e){return[e,t[e]]})}function R(t){return function(e){return t(e)}}function L(t,e){return $(e,function(e){return t[e]})}function D(t,e){return t.has(e)}function P(t,e){for(var n=-1,r=t.length;++n<r&&q(e,t[n],0)>-1;);return n}function j(t,e){for(var n=t.length;n--&&q(e,t[n],0)>-1;);return n}function U(t,e){for(var n=t.length,r=0;n--;)t[n]===e&&++r;return r}function M(t){return"\\"+Sn[t]}function F(t,e){return null==t?at:t[e]}function B(t){return bn.test(t)}function W(t){return gn.test(t)}function z(t){for(var e,n=[];!(e=t.next()).done;)n.push(e.value);return n}function G(t){var e=-1,n=Array(t.size);return t.forEach(function(t,r){n[++e]=[r,t]}),n}function Y(t,e){return function(n){return t(e(n))}}function H(t,e){for(var n=-1,r=t.length,a=0,s=[];++n<r;){var i=t[n];i!==e&&i!==ut||(t[n]=ut,s[a++]=n)}return s}function J(t){var e=-1,n=Array(t.size);return t.forEach(function(t){n[++e]=t}),n}function X(t){var e=-1,n=Array(t.size);return t.forEach(function(t){n[++e]=[t,t]}),n}function K(t,e,n){for(var r=n-1,a=t.length;++r<a;)if(t[r]===e)return r;return-1}function Z(t,e,n){for(var r=n+1;r--;)if(t[r]===e)return r;return r}function Q(t){return B(t)?et(t):zn(t)}function tt(t){return B(t)?nt(t):g(t)}function et(t){for(var e=Vn.lastIndex=0;Vn.test(t);)++e;return e}function nt(t){return t.match(Vn)||[]}function rt(t){return t.match(hn)||[]}var at,st=200,it="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",ot="Expected a function",lt="__lodash_hash_undefined__",pt=500,ut="__lodash_placeholder__",dt=1,ct=2,mt=4,ft=1,$t=2,yt=1,Vt=2,ht=4,bt=8,gt=16,_t=32,vt=64,xt=128,qt=256,wt=512,Tt=30,Et="...",St=800,kt=16,At=1,Ot=2,It=1/0,Nt=9007199254740991,Ct=1.7976931348623157e308,Rt=NaN,Lt=4294967295,Dt=Lt-1,Pt=Lt>>>1,jt=[["ary",xt],["bind",yt],["bindKey",Vt],["curry",bt],["curryRight",gt],["flip",wt],["partial",_t],["partialRight",vt],["rearg",qt]],Ut="[object Arguments]",Mt="[object Array]",Ft="[object AsyncFunction]",Bt="[object Boolean]",Wt="[object Date]",zt="[object DOMException]",Gt="[object Error]",Yt="[object Function]",Ht="[object GeneratorFunction]",Jt="[object Map]",Xt="[object Number]",Kt="[object Null]",Zt="[object Object]",Qt="[object Proxy]",te="[object RegExp]",ee="[object Set]",ne="[object String]",re="[object Symbol]",ae="[object Undefined]",se="[object WeakMap]",ie="[object WeakSet]",oe="[object ArrayBuffer]",le="[object DataView]",pe="[object Float32Array]",ue="[object Float64Array]",de="[object Int8Array]",ce="[object Int16Array]",me="[object Int32Array]",fe="[object Uint8Array]",$e="[object Uint8ClampedArray]",ye="[object Uint16Array]",Ve="[object Uint32Array]",he=/\b__p \+= '';/g,be=/\b(__p \+=) '' \+/g,ge=/(__e\(.*?\)|\b__t\)) \+\n'';/g,_e=/&(?:amp|lt|gt|quot|#39);/g,ve=/[&<>"']/g,xe=RegExp(_e.source),qe=RegExp(ve.source),we=/<%-([\s\S]+?)%>/g,Te=/<%([\s\S]+?)%>/g,Ee=/<%=([\s\S]+?)%>/g,Se=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,ke=/^\w*$/,Ae=/^\./,Oe=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Ie=/[\\^$.*+?()[\]{}|]/g,Ne=RegExp(Ie.source),Ce=/^\s+|\s+$/g,Re=/^\s+/,Le=/\s+$/,De=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Pe=/\{\n\/\* \[wrapped with (.+)\] \*/,je=/,? & /,Ue=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Me=/\\(\\)?/g,Fe=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Be=/\w*$/,We=/^[-+]0x[0-9a-f]+$/i,ze=/^0b[01]+$/i,Ge=/^\[object .+?Constructor\]$/,Ye=/^0o[0-7]+$/i,He=/^(?:0|[1-9]\d*)$/,Je=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Xe=/($^)/,Ke=/['\n\r\u2028\u2029\\]/g,Ze="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Qe="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",tn="["+Qe+"]",en="["+Ze+"]",nn="[a-z\\xdf-\\xf6\\xf8-\\xff]",rn="[^\\ud800-\\udfff"+Qe+"\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",an="\\ud83c[\\udffb-\\udfff]",sn="(?:\\ud83c[\\udde6-\\uddff]){2}",on="[\\ud800-\\udbff][\\udc00-\\udfff]",ln="[A-Z\\xc0-\\xd6\\xd8-\\xde]",pn="(?:"+nn+"|"+rn+")",un="(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",dn="(?:\\u200d(?:"+["[^\\ud800-\\udfff]",sn,on].join("|")+")[\\ufe0e\\ufe0f]?"+un+")*",cn="[\\ufe0e\\ufe0f]?"+un+dn,mn="(?:"+["[\\u2700-\\u27bf]",sn,on].join("|")+")"+cn,fn="(?:"+["[^\\ud800-\\udfff]"+en+"?",en,sn,on,"[\\ud800-\\udfff]"].join("|")+")",$n=RegExp("['’]","g"),yn=RegExp(en,"g"),Vn=RegExp(an+"(?="+an+")|"+fn+cn,"g"),hn=RegExp([ln+"?"+nn+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[tn,ln,"$"].join("|")+")","(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[tn,ln+pn,"$"].join("|")+")",ln+"?"+pn+"+(?:['’](?:d|ll|m|re|s|t|ve))?",ln+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)","\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)","\\d+",mn].join("|"),"g"),bn=RegExp("[\\u200d\\ud800-\\udfff"+Ze+"\\ufe0e\\ufe0f]"),gn=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,_n=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],vn=-1,xn={};xn[pe]=xn[ue]=xn[de]=xn[ce]=xn[me]=xn[fe]=xn[$e]=xn[ye]=xn[Ve]=!0,xn[Ut]=xn[Mt]=xn[oe]=xn[Bt]=xn[le]=xn[Wt]=xn[Gt]=xn[Yt]=xn[Jt]=xn[Xt]=xn[Zt]=xn[te]=xn[ee]=xn[ne]=xn[se]=!1;var qn={};qn[Ut]=qn[Mt]=qn[oe]=qn[le]=qn[Bt]=qn[Wt]=qn[pe]=qn[ue]=qn[de]=qn[ce]=qn[me]=qn[Jt]=qn[Xt]=qn[Zt]=qn[te]=qn[ee]=qn[ne]=qn[re]=qn[fe]=qn[$e]=qn[ye]=qn[Ve]=!0,qn[Gt]=qn[Yt]=qn[se]=!1;var wn={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"},Tn={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},En={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},Sn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},kn=parseFloat,An=parseInt,On="object"==typeof t&&t&&t.Object===Object&&t,In="object"==typeof self&&self&&self.Object===Object&&self,Nn=On||In||Function("return this")(),Cn="object"==typeof e&&e&&!e.nodeType&&e,Rn=Cn&&"object"==typeof r&&r&&!r.nodeType&&r,Ln=Rn&&Rn.exports===Cn,Dn=Ln&&On.process,Pn=function(){try{return Dn&&Dn.binding&&Dn.binding("util")}catch(t){}}(),jn=Pn&&Pn.isArrayBuffer,Un=Pn&&Pn.isDate,Mn=Pn&&Pn.isMap,Fn=Pn&&Pn.isRegExp,Bn=Pn&&Pn.isSet,Wn=Pn&&Pn.isTypedArray,zn=S("length"),Gn=k(wn),Yn=k(Tn),Hn=k(En),Jn=function t(e){function n(t){if(sl(t)&&!yc(t)&&!(t instanceof g)){if(t instanceof a)return t;if(yu.call(t,"__wrapped__"))return ei(t)}return new a(t)}function r(){}function a(t,e){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!e,this.__index__=0,this.__values__=at}function g(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Lt,this.__views__=[]}function k(){var t=new g(this.__wrapped__);return t.__actions__=Da(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=Da(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=Da(this.__views__),t}function K(){if(this.__filtered__){var t=new g(this);t.__dir__=-1,t.__filtered__=!0}else t=this.clone(),t.__dir__*=-1;return t}function et(){var t=this.__wrapped__.value(),e=this.__dir__,n=yc(t),r=e<0,a=n?t.length:0,s=Ts(0,a,this.__views__),i=s.start,o=s.end,l=o-i,p=r?o:i-1,u=this.__iteratees__,d=u.length,c=0,m=Gu(l,this.__takeCount__);if(!n||!r&&a==l&&m==l)return ha(t,this.__actions__);var f=[];t:for(;l--&&c<m;){p+=e;for(var $=-1,y=t[p];++$<d;){var V=u[$],h=V.iteratee,b=V.type,g=h(y);if(b==Ot)y=g;else if(!g){if(b==At)continue t;break t}}f[c++]=y}return f}function nt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Ue(){this.__data__=nd?nd(null):{},this.size=0}function Ze(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}function Qe(t){var e=this.__data__;if(nd){var n=e[t];return n===lt?at:n}return yu.call(e,t)?e[t]:at}function tn(t){var e=this.__data__;return nd?e[t]!==at:yu.call(e,t)}function en(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=nd&&e===at?lt:e,this}function nn(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function rn(){this.__data__=[],this.size=0}function an(t){var e=this.__data__,n=Xn(e,t);return!(n<0)&&(n==e.length-1?e.pop():Au.call(e,n,1),--this.size,!0)}function sn(t){var e=this.__data__,n=Xn(e,t);return n<0?at:e[n][1]}function on(t){return Xn(this.__data__,t)>-1}function ln(t,e){var n=this.__data__,r=Xn(n,t);return r<0?(++this.size,n.push([t,e])):n[r][1]=e,this}function pn(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function un(){this.size=0,this.__data__={hash:new nt,map:new(Zu||nn),string:new nt}}function dn(t){var e=vs(this,t).delete(t);return this.size-=e?1:0,e}function cn(t){return vs(this,t).get(t)}function mn(t){return vs(this,t).has(t)}function fn(t,e){var n=vs(this,t),r=n.size;return n.set(t,e),this.size+=n.size==r?0:1,this}function Vn(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new pn;++e<n;)this.add(t[e])}function hn(t){return this.__data__.set(t,lt),this}function bn(t){return this.__data__.has(t)}function gn(t){var e=this.__data__=new nn(t);this.size=e.size}function wn(){this.__data__=new nn,this.size=0}function Tn(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n}function En(t){return this.__data__.get(t)}function Sn(t){return this.__data__.has(t)}function On(t,e){var n=this.__data__;if(n instanceof nn){var r=n.__data__;if(!Zu||r.length<st-1)return r.push([t,e]),this.size=++n.size,this;n=this.__data__=new pn(r)}return n.set(t,e),this.size=n.size,this}function In(t,e){var n=yc(t),r=!n&&$c(t),a=!n&&!r&&hc(t),s=!n&&!r&&!a&&xc(t),i=n||r||a||s,o=i?N(t.length,pu):[],l=o.length;for(var p in t)!e&&!yu.call(t,p)||i&&("length"==p||a&&("offset"==p||"parent"==p)||s&&("buffer"==p||"byteLength"==p||"byteOffset"==p)||Cs(p,l))||o.push(p);return o}function Cn(t){var e=t.length;return e?t[Qr(0,e-1)]:at}function Rn(t,e){return Ks(Da(t),nr(e,0,t.length))}function Dn(t){return Ks(Da(t))}function Pn(t,e,n){(n===at||zo(t[e],n))&&(n!==at||e in t)||tr(t,e,n)}function zn(t,e,n){var r=t[e];yu.call(t,e)&&zo(r,n)&&(n!==at||e in t)||tr(t,e,n)}function Xn(t,e){for(var n=t.length;n--;)if(zo(t[n][0],e))return n;return-1}function Kn(t,e,n,r){return fd(t,function(t,a,s){e(r,t,n(t),s)}),r}function Zn(t,e){return t&&Pa(e,Ul(e),t)}function Qn(t,e){return t&&Pa(e,Ml(e),t)}function tr(t,e,n){"__proto__"==e&&Cu?Cu(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}function er(t,e){for(var n=-1,r=e.length,a=nu(r),s=null==t;++n<r;)a[n]=s?at:Dl(t,e[n]);return a}function nr(t,e,n){return t===t&&(n!==at&&(t=t<=n?t:n),e!==at&&(t=t>=e?t:e)),t}function rr(t,e,n,r,a,s){var i,o=e&dt,l=e&ct,u=e&mt;if(n&&(i=a?n(t,r,a,s):n(t)),i!==at)return i;if(!al(t))return t;var d=yc(t);if(d){if(i=ks(t),!o)return Da(t,i)}else{var c=Td(t),m=c==Yt||c==Ht;if(hc(t))return wa(t,o);if(c==Zt||c==Ut||m&&!a){if(i=l||m?{}:As(t),!o)return l?Ua(t,Qn(i,t)):ja(t,Zn(i,t))}else{if(!qn[c])return a?t:{};i=Os(t,c,rr,o)}}s||(s=new gn);var f=s.get(t);if(f)return f;s.set(t,i);var $=u?l?hs:Vs:l?Ml:Ul,y=d?at:$(t);return p(y||t,function(r,a){y&&(a=r,r=t[a]),zn(i,a,rr(r,e,n,a,t,s))}),i}function ar(t){var e=Ul(t);return function(n){return sr(n,t,e)}}function sr(t,e,n){var r=n.length;if(null==t)return!r;for(t=ou(t);r--;){var a=n[r],s=e[a],i=t[a];if(i===at&&!(a in t)||!s(i))return!1}return!0}function ir(t,e,n){if("function"!=typeof t)throw new uu(ot);return kd(function(){t.apply(at,n)},e)}function or(t,e,n,r){var a=-1,s=m,i=!0,o=t.length,l=[],p=e.length;if(!o)return l;n&&(e=$(e,R(n))),r?(s=f,i=!1):e.length>=st&&(s=D,i=!1,e=new Vn(e));t:for(;++a<o;){var u=t[a],d=null==n?u:n(u);if(u=r||0!==u?u:0,i&&d===d){for(var c=p;c--;)if(e[c]===d)continue t;l.push(u)}else s(e,d,r)||l.push(u)}return l}function lr(t,e){var n=!0;return fd(t,function(t,r,a){return n=!!e(t,r,a)}),n}function pr(t,e,n){for(var r=-1,a=t.length;++r<a;){var s=t[r],i=e(s);if(null!=i&&(o===at?i===i&&!yl(i):n(i,o)))var o=i,l=s}return l}function ur(t,e,n,r){var a=t.length;for(n=vl(n),n<0&&(n=-n>a?0:a+n),r=r===at||r>a?a:vl(r),r<0&&(r+=a),r=n>r?0:xl(r);n<r;)t[n++]=e;return t}function dr(t,e){var n=[];return fd(t,function(t,r,a){e(t,r,a)&&n.push(t)}),n}function cr(t,e,n,r,a){var s=-1,i=t.length;for(n||(n=Ns),a||(a=[]);++s<i;){var o=t[s];e>0&&n(o)?e>1?cr(o,e-1,n,r,a):y(a,o):r||(a[a.length]=o)}return a}function mr(t,e){return t&&yd(t,e,Ul)}function fr(t,e){return t&&Vd(t,e,Ul)}function $r(t,e){return c(e,function(e){return el(t[e])})}function yr(t,e){e=xa(e,t);for(var n=0,r=e.length;null!=t&&n<r;)t=t[Zs(e[n++])];return n&&n==r?t:at}function Vr(t,e,n){var r=e(t);return yc(t)?r:y(r,n(t))}function hr(t){return null==t?t===at?ae:Kt:Nu&&Nu in ou(t)?ws(t):zs(t)}function br(t,e){return t>e}function gr(t,e){return null!=t&&yu.call(t,e)}function _r(t,e){return null!=t&&e in ou(t)}function vr(t,e,n){return t>=Gu(e,n)&&t<zu(e,n)}function xr(t,e,n){for(var r=n?f:m,a=t[0].length,s=t.length,i=s,o=nu(s),l=1/0,p=[];i--;){var u=t[i];i&&e&&(u=$(u,R(e))),l=Gu(u.length,l),o[i]=!n&&(e||a>=120&&u.length>=120)?new Vn(i&&u):at}u=t[0];var d=-1,c=o[0];t:for(;++d<a&&p.length<l;){var y=u[d],V=e?e(y):y;if(y=n||0!==y?y:0,!(c?D(c,V):r(p,V,n))){for(i=s;--i;){var h=o[i];if(!(h?D(h,V):r(t[i],V,n)))continue t}c&&c.push(V),p.push(y)}}return p}function qr(t,e,n,r){return mr(t,function(t,a,s){e(r,n(t),a,s)}),r}function wr(t,e,n){e=xa(e,t),t=Ys(t,e);var r=null==t?t:t[Zs(gi(e))];return null==r?at:o(r,t,n)}function Tr(t){return sl(t)&&hr(t)==Ut}function Er(t){return sl(t)&&hr(t)==oe}function Sr(t){return sl(t)&&hr(t)==Wt}function kr(t,e,n,r,a){return t===e||(null==t||null==e||!sl(t)&&!sl(e)?t!==t&&e!==e:Ar(t,e,n,r,kr,a))}function Ar(t,e,n,r,a,s){var i=yc(t),o=yc(e),l=i?Mt:Td(t),p=o?Mt:Td(e);l=l==Ut?Zt:l,p=p==Ut?Zt:p;var u=l==Zt,d=p==Zt,c=l==p;if(c&&hc(t)){if(!hc(e))return!1;i=!0,u=!1}if(c&&!u)return s||(s=new gn),i||xc(t)?ms(t,e,n,r,a,s):fs(t,e,l,n,r,a,s);if(!(n&ft)){var m=u&&yu.call(t,"__wrapped__"),f=d&&yu.call(e,"__wrapped__");if(m||f){var $=m?t.value():t,y=f?e.value():e;return s||(s=new gn),a($,y,n,r,s)}}return!!c&&(s||(s=new gn),$s(t,e,n,r,a,s))}function Or(t){return sl(t)&&Td(t)==Jt}function Ir(t,e,n,r){var a=n.length,s=a,i=!r;if(null==t)return!s;for(t=ou(t);a--;){var o=n[a];if(i&&o[2]?o[1]!==t[o[0]]:!(o[0]in t))return!1}for(;++a<s;){o=n[a];var l=o[0],p=t[l],u=o[1];if(i&&o[2]){if(p===at&&!(l in t))return!1}else{var d=new gn;if(r)var c=r(p,u,l,t,e,d);if(!(c===at?kr(u,p,ft|$t,r,d):c))return!1}}return!0}function Nr(t){return!(!al(t)||js(t))&&(el(t)?vu:Ge).test(Qs(t))}function Cr(t){return sl(t)&&hr(t)==te}function Rr(t){return sl(t)&&Td(t)==ee}function Lr(t){return sl(t)&&rl(t.length)&&!!xn[hr(t)]}function Dr(t){return"function"==typeof t?t:null==t?Ap:"object"==typeof t?yc(t)?Br(t[0],t[1]):Fr(t):Pp(t)}function Pr(t){if(!Us(t))return Wu(t);var e=[];for(var n in ou(t))yu.call(t,n)&&"constructor"!=n&&e.push(n);return e}function jr(t){if(!al(t))return Ws(t);var e=Us(t),n=[];for(var r in t)("constructor"!=r||!e&&yu.call(t,r))&&n.push(r);return n}function Ur(t,e){return t<e}function Mr(t,e){var n=-1,r=Go(t)?nu(t.length):[];return fd(t,function(t,a,s){r[++n]=e(t,a,s)}),r}function Fr(t){var e=xs(t);return 1==e.length&&e[0][2]?Fs(e[0][0],e[0][1]):function(n){return n===t||Ir(n,t,e)}}function Br(t,e){return Ls(t)&&Ms(e)?Fs(Zs(t),e):function(n){var r=Dl(n,t);return r===at&&r===e?jl(n,t):kr(e,r,ft|$t)}}function Wr(t,e,n,r,a){t!==e&&yd(e,function(s,i){if(al(s))a||(a=new gn),zr(t,e,i,n,Wr,r,a);else{var o=r?r(t[i],s,i+"",t,e,a):at;o===at&&(o=s),Pn(t,i,o)}},Ml)}function zr(t,e,n,r,a,s,i){var o=t[n],l=e[n],p=i.get(l);if(p)return void Pn(t,n,p);var u=s?s(o,l,n+"",t,e,i):at,d=u===at;if(d){var c=yc(l),m=!c&&hc(l),f=!c&&!m&&xc(l);u=l,c||m||f?yc(o)?u=o:Yo(o)?u=Da(o):m?(d=!1,u=wa(l,!0)):f?(d=!1,u=Ia(l,!0)):u=[]:ml(l)||$c(l)?(u=o,$c(o)?u=wl(o):(!al(o)||r&&el(o))&&(u=As(l))):d=!1}d&&(i.set(l,u),a(u,l,r,s,i),i.delete(l)),Pn(t,n,u)}function Gr(t,e){var n=t.length;if(n)return e+=e<0?n:0,Cs(e,n)?t[e]:at}function Yr(t,e,n){var r=-1;return e=$(e.length?e:[Ap],R(_s())),O(Mr(t,function(t,n,a){return{criteria:$(e,function(e){return e(t)}),index:++r,value:t}}),function(t,e){return Ca(t,e,n)})}function Hr(t,e){return Jr(t,e,function(e,n){return jl(t,n)})}function Jr(t,e,n){for(var r=-1,a=e.length,s={};++r<a;){var i=e[r],o=yr(t,i);n(o,i)&&sa(s,xa(i,t),o)}return s}function Xr(t){return function(e){return yr(e,t)}}function Kr(t,e,n,r){var a=r?w:q,s=-1,i=e.length,o=t;for(t===e&&(e=Da(e)),n&&(o=$(t,R(n)));++s<i;)for(var l=0,p=e[s],u=n?n(p):p;(l=a(o,u,l,r))>-1;)o!==t&&Au.call(o,l,1),Au.call(t,l,1);return t}function Zr(t,e){for(var n=t?e.length:0,r=n-1;n--;){var a=e[n];if(n==r||a!==s){var s=a;Cs(a)?Au.call(t,a,1):$a(t,a)}}return t}function Qr(t,e){return t+ju(Ju()*(e-t+1))}function ta(t,e,n,r){for(var a=-1,s=zu(Pu((e-t)/(n||1)),0),i=nu(s);s--;)i[r?s:++a]=t,t+=n;return i}function ea(t,e){var n="";if(!t||e<1||e>Nt)return n;do{e%2&&(n+=t),(e=ju(e/2))&&(t+=t)}while(e);return n}function na(t,e){return Ad(Gs(t,e,Ap),t+"")}function ra(t){return Cn(Ql(t))}function aa(t,e){var n=Ql(t);return Ks(n,nr(e,0,n.length))}function sa(t,e,n,r){if(!al(t))return t;e=xa(e,t);for(var a=-1,s=e.length,i=s-1,o=t;null!=o&&++a<s;){var l=Zs(e[a]),p=n;if(a!=i){var u=o[l];p=r?r(u,l,o):at,p===at&&(p=al(u)?u:Cs(e[a+1])?[]:{})}zn(o,l,p),o=o[l]}return t}function ia(t){return Ks(Ql(t))}function oa(t,e,n){var r=-1,a=t.length;e<0&&(e=-e>a?0:a+e),n=n>a?a:n,n<0&&(n+=a),a=e>n?0:n-e>>>0,e>>>=0;for(var s=nu(a);++r<a;)s[r]=t[r+e];return s}function la(t,e){var n;return fd(t,function(t,r,a){return!(n=e(t,r,a))}),!!n}function pa(t,e,n){var r=0,a=null==t?r:t.length;if("number"==typeof e&&e===e&&a<=Pt){for(;r<a;){var s=r+a>>>1,i=t[s];null!==i&&!yl(i)&&(n?i<=e:i<e)?r=s+1:a=s}return a}return ua(t,e,Ap,n)}function ua(t,e,n,r){e=n(e);for(var a=0,s=null==t?0:t.length,i=e!==e,o=null===e,l=yl(e),p=e===at;a<s;){var u=ju((a+s)/2),d=n(t[u]),c=d!==at,m=null===d,f=d===d,$=yl(d);if(i)var y=r||f;else y=p?f&&(r||c):o?f&&c&&(r||!m):l?f&&c&&!m&&(r||!$):!m&&!$&&(r?d<=e:d<e);y?a=u+1:s=u}return Gu(s,Dt)}function da(t,e){for(var n=-1,r=t.length,a=0,s=[];++n<r;){var i=t[n],o=e?e(i):i;if(!n||!zo(o,l)){var l=o;s[a++]=0===i?0:i}}return s}function ca(t){return"number"==typeof t?t:yl(t)?Rt:+t}function ma(t){if("string"==typeof t)return t;if(yc(t))return $(t,ma)+"";if(yl(t))return cd?cd.call(t):"";var e=t+"";return"0"==e&&1/t==-It?"-0":e}function fa(t,e,n){var r=-1,a=m,s=t.length,i=!0,o=[],l=o;if(n)i=!1,a=f;else if(s>=st){var p=e?null:vd(t);if(p)return J(p);i=!1,a=D,l=new Vn}else l=e?[]:o;t:for(;++r<s;){var u=t[r],d=e?e(u):u;if(u=n||0!==u?u:0,i&&d===d){for(var c=l.length;c--;)if(l[c]===d)continue t;e&&l.push(d),o.push(u)}else a(l,d,n)||(l!==o&&l.push(d),o.push(u))}return o}function $a(t,e){return e=xa(e,t),null==(t=Ys(t,e))||delete t[Zs(gi(e))]}function ya(t,e,n,r){return sa(t,e,n(yr(t,e)),r)}function Va(t,e,n,r){for(var a=t.length,s=r?a:-1;(r?s--:++s<a)&&e(t[s],s,t););return n?oa(t,r?0:s,r?s+1:a):oa(t,r?s+1:0,r?a:s)}function ha(t,e){var n=t;return n instanceof g&&(n=n.value()),V(e,function(t,e){return e.func.apply(e.thisArg,y([t],e.args))},n)}function ba(t,e,n){var r=t.length;if(r<2)return r?fa(t[0]):[];for(var a=-1,s=nu(r);++a<r;)for(var i=t[a],o=-1;++o<r;)o!=a&&(s[a]=or(s[a]||i,t[o],e,n));return fa(cr(s,1),e,n)}function ga(t,e,n){for(var r=-1,a=t.length,s=e.length,i={};++r<a;){var o=r<s?e[r]:at;n(i,t[r],o)}return i}function _a(t){return Yo(t)?t:[]}function va(t){return"function"==typeof t?t:Ap}function xa(t,e){return yc(t)?t:Ls(t,e)?[t]:Od(El(t))}function qa(t,e,n){var r=t.length;return n=n===at?r:n,!e&&n>=r?t:oa(t,e,n)}function wa(t,e){if(e)return t.slice();var n=t.length,r=Tu?Tu(n):new t.constructor(n);return t.copy(r),r}function Ta(t){var e=new t.constructor(t.byteLength);return new wu(e).set(new wu(t)),e}function Ea(t,e){var n=e?Ta(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}function Sa(t,e,n){return V(e?n(G(t),dt):G(t),s,new t.constructor)}function ka(t){var e=new t.constructor(t.source,Be.exec(t));return e.lastIndex=t.lastIndex,e}function Aa(t,e,n){return V(e?n(J(t),dt):J(t),i,new t.constructor)}function Oa(t){return dd?ou(dd.call(t)):{}}function Ia(t,e){var n=e?Ta(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}function Na(t,e){if(t!==e){var n=t!==at,r=null===t,a=t===t,s=yl(t),i=e!==at,o=null===e,l=e===e,p=yl(e);if(!o&&!p&&!s&&t>e||s&&i&&l&&!o&&!p||r&&i&&l||!n&&l||!a)return 1;if(!r&&!s&&!p&&t<e||p&&n&&a&&!r&&!s||o&&n&&a||!i&&a||!l)return-1}return 0}function Ca(t,e,n){for(var r=-1,a=t.criteria,s=e.criteria,i=a.length,o=n.length;++r<i;){var l=Na(a[r],s[r]);if(l){if(r>=o)return l;return l*("desc"==n[r]?-1:1)}}return t.index-e.index}function Ra(t,e,n,r){for(var a=-1,s=t.length,i=n.length,o=-1,l=e.length,p=zu(s-i,0),u=nu(l+p),d=!r;++o<l;)u[o]=e[o];for(;++a<i;)(d||a<s)&&(u[n[a]]=t[a]);for(;p--;)u[o++]=t[a++];return u}function La(t,e,n,r){for(var a=-1,s=t.length,i=-1,o=n.length,l=-1,p=e.length,u=zu(s-o,0),d=nu(u+p),c=!r;++a<u;)d[a]=t[a];for(var m=a;++l<p;)d[m+l]=e[l];for(;++i<o;)(c||a<s)&&(d[m+n[i]]=t[a++]);return d}function Da(t,e){var n=-1,r=t.length;for(e||(e=nu(r));++n<r;)e[n]=t[n];return e}function Pa(t,e,n,r){var a=!n;n||(n={});for(var s=-1,i=e.length;++s<i;){var o=e[s],l=r?r(n[o],t[o],o,n,t):at;l===at&&(l=t[o]),a?tr(n,o,l):zn(n,o,l)}return n}function ja(t,e){return Pa(t,qd(t),e)}function Ua(t,e){return Pa(t,wd(t),e)}function Ma(t,e){return function(n,r){var a=yc(n)?l:Kn,s=e?e():{};return a(n,t,_s(r,2),s)}}function Fa(t){return na(function(e,n){var r=-1,a=n.length,s=a>1?n[a-1]:at,i=a>2?n[2]:at;for(s=t.length>3&&"function"==typeof s?(a--,s):at,i&&Rs(n[0],n[1],i)&&(s=a<3?at:s,a=1),e=ou(e);++r<a;){var o=n[r];o&&t(e,o,r,s)}return e})}function Ba(t,e){return function(n,r){if(null==n)return n;if(!Go(n))return t(n,r);for(var a=n.length,s=e?a:-1,i=ou(n);(e?s--:++s<a)&&!1!==r(i[s],s,i););return n}}function Wa(t){return function(e,n,r){for(var a=-1,s=ou(e),i=r(e),o=i.length;o--;){var l=i[t?o:++a];if(!1===n(s[l],l,s))break}return e}}function za(t,e,n){function r(){return(this&&this!==Nn&&this instanceof r?s:t).apply(a?n:this,arguments)}var a=e&yt,s=Ha(t);return r}function Ga(t){return function(e){e=El(e);var n=B(e)?tt(e):at,r=n?n[0]:e.charAt(0),a=n?qa(n,1).join(""):e.slice(1);return r[t]()+a}}function Ya(t){return function(e){return V(wp(sp(e).replace($n,"")),t,"")}}function Ha(t){return function(){var e=arguments;switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3]);case 5:return new t(e[0],e[1],e[2],e[3],e[4]);case 6:return new t(e[0],e[1],e[2],e[3],e[4],e[5]);case 7:return new t(e[0],e[1],e[2],e[3],e[4],e[5],e[6])}var n=md(t.prototype),r=t.apply(n,e);return al(r)?r:n}}function Ja(t,e,n){function r(){for(var s=arguments.length,i=nu(s),l=s,p=gs(r);l--;)i[l]=arguments[l];var u=s<3&&i[0]!==p&&i[s-1]!==p?[]:H(i,p);return(s-=u.length)<n?is(t,e,Za,r.placeholder,at,i,u,at,at,n-s):o(this&&this!==Nn&&this instanceof r?a:t,this,i)}var a=Ha(t);return r}function Xa(t){return function(e,n,r){var a=ou(e);if(!Go(e)){var s=_s(n,3);e=Ul(e),n=function(t){return s(a[t],t,a)}}var i=t(e,n,r);return i>-1?a[s?e[i]:i]:at}}function Ka(t){return ys(function(e){var n=e.length,r=n,s=a.prototype.thru;for(t&&e.reverse();r--;){var i=e[r];if("function"!=typeof i)throw new uu(ot);if(s&&!o&&"wrapper"==bs(i))var o=new a([],!0)}for(r=o?r:n;++r<n;){i=e[r];var l=bs(i),p="wrapper"==l?xd(i):at;o=p&&Ps(p[0])&&p[1]==(xt|bt|_t|qt)&&!p[4].length&&1==p[9]?o[bs(p[0])].apply(o,p[3]):1==i.length&&Ps(i)?o[l]():o.thru(i)}return function(){var t=arguments,r=t[0];if(o&&1==t.length&&yc(r))return o.plant(r).value();for(var a=0,s=n?e[a].apply(this,t):r;++a<n;)s=e[a].call(this,s);return s}})}function Za(t,e,n,r,a,s,i,o,l,p){function u(){for(var V=arguments.length,h=nu(V),b=V;b--;)h[b]=arguments[b];if(f)var g=gs(u),_=U(h,g);if(r&&(h=Ra(h,r,a,f)),s&&(h=La(h,s,i,f)),V-=_,f&&V<p){var v=H(h,g);return is(t,e,Za,u.placeholder,n,h,v,o,l,p-V)}var x=c?n:this,q=m?x[t]:t;return V=h.length,o?h=Hs(h,o):$&&V>1&&h.reverse(),d&&l<V&&(h.length=l),this&&this!==Nn&&this instanceof u&&(q=y||Ha(q)),q.apply(x,h)}var d=e&xt,c=e&yt,m=e&Vt,f=e&(bt|gt),$=e&wt,y=m?at:Ha(t);return u}function Qa(t,e){return function(n,r){return qr(n,t,e(r),{})}}function ts(t,e){return function(n,r){var a;if(n===at&&r===at)return e;if(n!==at&&(a=n),r!==at){if(a===at)return r;"string"==typeof n||"string"==typeof r?(n=ma(n),r=ma(r)):(n=ca(n),r=ca(r)),a=t(n,r)}return a}}function es(t){return ys(function(e){return e=$(e,R(_s())),na(function(n){var r=this;return t(e,function(t){return o(t,r,n)})})})}function ns(t,e){e=e===at?" ":ma(e);var n=e.length;if(n<2)return n?ea(e,t):e;var r=ea(e,Pu(t/Q(e)));return B(e)?qa(tt(r),0,t).join(""):r.slice(0,t)}function rs(t,e,n,r){function a(){for(var e=-1,l=arguments.length,p=-1,u=r.length,d=nu(u+l),c=this&&this!==Nn&&this instanceof a?i:t;++p<u;)d[p]=r[p];for(;l--;)d[p++]=arguments[++e];return o(c,s?n:this,d)}var s=e&yt,i=Ha(t);return a}function as(t){return function(e,n,r){return r&&"number"!=typeof r&&Rs(e,n,r)&&(n=r=at),e=_l(e),n===at?(n=e,e=0):n=_l(n),r=r===at?e<n?1:-1:_l(r),ta(e,n,r,t)}}function ss(t){return function(e,n){return"string"==typeof e&&"string"==typeof n||(e=ql(e),n=ql(n)),t(e,n)}}function is(t,e,n,r,a,s,i,o,l,p){var u=e&bt,d=u?i:at,c=u?at:i,m=u?s:at,f=u?at:s;e|=u?_t:vt,(e&=~(u?vt:_t))&ht||(e&=~(yt|Vt));var $=[t,e,a,m,d,f,c,o,l,p],y=n.apply(at,$);return Ps(t)&&Sd(y,$),y.placeholder=r,Js(y,t,e)}function os(t){var e=iu[t];return function(t,n){if(t=ql(t),n=null==n?0:Gu(vl(n),292)){var r=(El(t)+"e").split("e");return r=(El(e(r[0]+"e"+(+r[1]+n)))+"e").split("e"),+(r[0]+"e"+(+r[1]-n))}return e(t)}}function ls(t){return function(e){var n=Td(e);return n==Jt?G(e):n==ee?X(e):C(e,t(e))}}function ps(t,e,n,r,a,s,i,o){var l=e&Vt;if(!l&&"function"!=typeof t)throw new uu(ot);var p=r?r.length:0;if(p||(e&=~(_t|vt),r=a=at),i=i===at?i:zu(vl(i),0),o=o===at?o:vl(o),p-=a?a.length:0,e&vt){var u=r,d=a;r=a=at}var c=l?at:xd(t),m=[t,e,n,r,a,u,d,s,i,o];if(c&&Bs(m,c),t=m[0],e=m[1],n=m[2],r=m[3],a=m[4],o=m[9]=m[9]===at?l?0:t.length:zu(m[9]-p,0),!o&&e&(bt|gt)&&(e&=~(bt|gt)),e&&e!=yt)f=e==bt||e==gt?Ja(t,e,o):e!=_t&&e!=(yt|_t)||a.length?Za.apply(at,m):rs(t,e,n,r);else var f=za(t,e,n);return Js((c?hd:Sd)(f,m),t,e)}function us(t,e,n,r){return t===at||zo(t,mu[n])&&!yu.call(r,n)?e:t}function ds(t,e,n,r,a,s){return al(t)&&al(e)&&(s.set(e,t),Wr(t,e,at,ds,s),s.delete(e)),t}function cs(t){return ml(t)?at:t}function ms(t,e,n,r,a,s){var i=n&ft,o=t.length,l=e.length;if(o!=l&&!(i&&l>o))return!1;var p=s.get(t);if(p&&s.get(e))return p==e;var u=-1,d=!0,c=n&$t?new Vn:at;for(s.set(t,e),s.set(e,t);++u<o;){var m=t[u],f=e[u];if(r)var $=i?r(f,m,u,e,t,s):r(m,f,u,t,e,s);if($!==at){if($)continue;d=!1;break}if(c){if(!b(e,function(t,e){if(!D(c,e)&&(m===t||a(m,t,n,r,s)))return c.push(e)})){d=!1;break}}else if(m!==f&&!a(m,f,n,r,s)){d=!1;break}}return s.delete(t),s.delete(e),d}function fs(t,e,n,r,a,s,i){switch(n){case le:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case oe:return!(t.byteLength!=e.byteLength||!s(new wu(t),new wu(e)));case Bt:case Wt:case Xt:return zo(+t,+e);case Gt:return t.name==e.name&&t.message==e.message;case te:case ne:return t==e+"";case Jt:var o=G;case ee:var l=r&ft;if(o||(o=J),t.size!=e.size&&!l)return!1;var p=i.get(t);if(p)return p==e;r|=$t,i.set(t,e);var u=ms(o(t),o(e),r,a,s,i);return i.delete(t),u;case re:if(dd)return dd.call(t)==dd.call(e)}return!1}function $s(t,e,n,r,a,s){var i=n&ft,o=Vs(t),l=o.length;if(l!=Vs(e).length&&!i)return!1;for(var p=l;p--;){var u=o[p];if(!(i?u in e:yu.call(e,u)))return!1}var d=s.get(t);if(d&&s.get(e))return d==e;var c=!0;s.set(t,e),s.set(e,t);for(var m=i;++p<l;){u=o[p];var f=t[u],$=e[u];if(r)var y=i?r($,f,u,e,t,s):r(f,$,u,t,e,s);if(!(y===at?f===$||a(f,$,n,r,s):y)){c=!1;break}m||(m="constructor"==u)}if(c&&!m){var V=t.constructor,h=e.constructor;V!=h&&"constructor"in t&&"constructor"in e&&!("function"==typeof V&&V instanceof V&&"function"==typeof h&&h instanceof h)&&(c=!1)}return s.delete(t),s.delete(e),c}function ys(t){return Ad(Gs(t,at,ci),t+"")}function Vs(t){return Vr(t,Ul,qd)}function hs(t){return Vr(t,Ml,wd)}function bs(t){for(var e=t.name+"",n=ad[e],r=yu.call(ad,e)?n.length:0;r--;){var a=n[r],s=a.func;if(null==s||s==t)return a.name}return e}function gs(t){return(yu.call(n,"placeholder")?n:t).placeholder}function _s(){var t=n.iteratee||Op;return t=t===Op?Dr:t,arguments.length?t(arguments[0],arguments[1]):t}function vs(t,e){var n=t.__data__;return Ds(e)?n["string"==typeof e?"string":"hash"]:n.map}function xs(t){for(var e=Ul(t),n=e.length;n--;){var r=e[n],a=t[r];e[n]=[r,a,Ms(a)]}return e}function qs(t,e){var n=F(t,e);return Nr(n)?n:at}function ws(t){var e=yu.call(t,Nu),n=t[Nu];try{t[Nu]=at;var r=!0}catch(t){}var a=bu.call(t);return r&&(e?t[Nu]=n:delete t[Nu]),a}function Ts(t,e,n){for(var r=-1,a=n.length;++r<a;){var s=n[r],i=s.size;switch(s.type){case"drop":t+=i;break;case"dropRight":e-=i;break;case"take":e=Gu(e,t+i);break;case"takeRight":t=zu(t,e-i)}}return{start:t,end:e}}function Es(t){var e=t.match(Pe);return e?e[1].split(je):[]}function Ss(t,e,n){e=xa(e,t);for(var r=-1,a=e.length,s=!1;++r<a;){var i=Zs(e[r]);if(!(s=null!=t&&n(t,i)))break;t=t[i]}return s||++r!=a?s:!!(a=null==t?0:t.length)&&rl(a)&&Cs(i,a)&&(yc(t)||$c(t))}function ks(t){var e=t.length,n=t.constructor(e);return e&&"string"==typeof t[0]&&yu.call(t,"index")&&(n.index=t.index,n.input=t.input),n}function As(t){return"function"!=typeof t.constructor||Us(t)?{}:md(Eu(t))}function Os(t,e,n,r){var a=t.constructor;switch(e){case oe:return Ta(t);case Bt:case Wt:return new a(+t);case le:return Ea(t,r);case pe:case ue:case de:case ce:case me:case fe:case $e:case ye:case Ve:return Ia(t,r);case Jt:return Sa(t,r,n);case Xt:case ne:return new a(t);case te:return ka(t);case ee:return Aa(t,r,n);case re:return Oa(t)}}function Is(t,e){var n=e.length;if(!n)return t;var r=n-1;return e[r]=(n>1?"& ":"")+e[r],e=e.join(n>2?", ":" "),t.replace(De,"{\n/* [wrapped with "+e+"] */\n")}function Ns(t){return yc(t)||$c(t)||!!(Ou&&t&&t[Ou])}function Cs(t,e){return!!(e=null==e?Nt:e)&&("number"==typeof t||He.test(t))&&t>-1&&t%1==0&&t<e}function Rs(t,e,n){if(!al(n))return!1;var r=typeof e;return!!("number"==r?Go(n)&&Cs(e,n.length):"string"==r&&e in n)&&zo(n[e],t)}function Ls(t,e){if(yc(t))return!1;var n=typeof t;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=t&&!yl(t))||(ke.test(t)||!Se.test(t)||null!=e&&t in ou(e))}function Ds(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}function Ps(t){var e=bs(t),r=n[e];if("function"!=typeof r||!(e in g.prototype))return!1;if(t===r)return!0;var a=xd(r);return!!a&&t===a[0]}function js(t){return!!hu&&hu in t}function Us(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||mu)}function Ms(t){return t===t&&!al(t)}function Fs(t,e){return function(n){return null!=n&&(n[t]===e&&(e!==at||t in ou(n)))}}function Bs(t,e){var n=t[1],r=e[1],a=n|r,s=a<(yt|Vt|xt),i=r==xt&&n==bt||r==xt&&n==qt&&t[7].length<=e[8]||r==(xt|qt)&&e[7].length<=e[8]&&n==bt;if(!s&&!i)return t;r&yt&&(t[2]=e[2],a|=n&yt?0:ht);var o=e[3];if(o){var l=t[3];t[3]=l?Ra(l,o,e[4]):o,t[4]=l?H(t[3],ut):e[4]}return o=e[5],o&&(l=t[5],t[5]=l?La(l,o,e[6]):o,t[6]=l?H(t[5],ut):e[6]),o=e[7],o&&(t[7]=o),r&xt&&(t[8]=null==t[8]?e[8]:Gu(t[8],e[8])),null==t[9]&&(t[9]=e[9]),t[0]=e[0],t[1]=a,t}function Ws(t){var e=[];if(null!=t)for(var n in ou(t))e.push(n);return e}function zs(t){return bu.call(t)}function Gs(t,e,n){return e=zu(e===at?t.length-1:e,0),function(){for(var r=arguments,a=-1,s=zu(r.length-e,0),i=nu(s);++a<s;)i[a]=r[e+a];a=-1;for(var l=nu(e+1);++a<e;)l[a]=r[a];return l[e]=n(i),o(t,this,l)}}function Ys(t,e){return e.length<2?t:yr(t,oa(e,0,-1))}function Hs(t,e){for(var n=t.length,r=Gu(e.length,n),a=Da(t);r--;){var s=e[r];t[r]=Cs(s,n)?a[s]:at}return t}function Js(t,e,n){var r=e+"";return Ad(t,Is(r,ti(Es(r),n)))}function Xs(t){var e=0,n=0;return function(){var r=Yu(),a=kt-(r-n);if(n=r,a>0){if(++e>=St)return arguments[0]}else e=0;return t.apply(at,arguments)}}function Ks(t,e){var n=-1,r=t.length,a=r-1;for(e=e===at?r:e;++n<e;){var s=Qr(n,a),i=t[s];t[s]=t[n],t[n]=i}return t.length=e,t}function Zs(t){if("string"==typeof t||yl(t))return t;var e=t+"";return"0"==e&&1/t==-It?"-0":e}function Qs(t){if(null!=t){try{return $u.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function ti(t,e){return p(jt,function(n){var r="_."+n[0];e&n[1]&&!m(t,r)&&t.push(r)}),t.sort()}function ei(t){if(t instanceof g)return t.clone();var e=new a(t.__wrapped__,t.__chain__);return e.__actions__=Da(t.__actions__),e.__index__=t.__index__,e.__values__=t.__values__,e}function ni(t,e,n){e=(n?Rs(t,e,n):e===at)?1:zu(vl(e),0);var r=null==t?0:t.length;if(!r||e<1)return[];for(var a=0,s=0,i=nu(Pu(r/e));a<r;)i[s++]=oa(t,a,a+=e);return i}function ri(t){for(var e=-1,n=null==t?0:t.length,r=0,a=[];++e<n;){var s=t[e];s&&(a[r++]=s)}return a}function ai(){var t=arguments.length;if(!t)return[];for(var e=nu(t-1),n=arguments[0],r=t;r--;)e[r-1]=arguments[r];return y(yc(n)?Da(n):[n],cr(e,1))}function si(t,e,n){var r=null==t?0:t.length;return r?(e=n||e===at?1:vl(e),oa(t,e<0?0:e,r)):[]}function ii(t,e,n){var r=null==t?0:t.length;return r?(e=n||e===at?1:vl(e),e=r-e,oa(t,0,e<0?0:e)):[]}function oi(t,e){return t&&t.length?Va(t,_s(e,3),!0,!0):[]}function li(t,e){return t&&t.length?Va(t,_s(e,3),!0):[]}function pi(t,e,n,r){var a=null==t?0:t.length;return a?(n&&"number"!=typeof n&&Rs(t,e,n)&&(n=0,r=a),ur(t,e,n,r)):[]}function ui(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var a=null==n?0:vl(n);return a<0&&(a=zu(r+a,0)),x(t,_s(e,3),a)}function di(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var a=r-1;return n!==at&&(a=vl(n),a=n<0?zu(r+a,0):Gu(a,r-1)),x(t,_s(e,3),a,!0)}function ci(t){return(null==t?0:t.length)?cr(t,1):[]}function mi(t){return(null==t?0:t.length)?cr(t,It):[]}function fi(t,e){return(null==t?0:t.length)?(e=e===at?1:vl(e),cr(t,e)):[]}function $i(t){for(var e=-1,n=null==t?0:t.length,r={};++e<n;){var a=t[e];r[a[0]]=a[1]}return r}function yi(t){return t&&t.length?t[0]:at}function Vi(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var a=null==n?0:vl(n);return a<0&&(a=zu(r+a,0)),q(t,e,a)}function hi(t){return(null==t?0:t.length)?oa(t,0,-1):[]}function bi(t,e){return null==t?"":Bu.call(t,e)}function gi(t){var e=null==t?0:t.length;return e?t[e-1]:at}function _i(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var a=r;return n!==at&&(a=vl(n),a=a<0?zu(r+a,0):Gu(a,r-1)),e===e?Z(t,e,a):x(t,T,a,!0)}function vi(t,e){return t&&t.length?Gr(t,vl(e)):at}function xi(t,e){return t&&t.length&&e&&e.length?Kr(t,e):t}function qi(t,e,n){return t&&t.length&&e&&e.length?Kr(t,e,_s(n,2)):t}function wi(t,e,n){return t&&t.length&&e&&e.length?Kr(t,e,at,n):t}function Ti(t,e){var n=[];if(!t||!t.length)return n;var r=-1,a=[],s=t.length;for(e=_s(e,3);++r<s;){var i=t[r];e(i,r,t)&&(n.push(i),a.push(r))}return Zr(t,a),n}function Ei(t){return null==t?t:Xu.call(t)}function Si(t,e,n){var r=null==t?0:t.length;return r?(n&&"number"!=typeof n&&Rs(t,e,n)?(e=0,n=r):(e=null==e?0:vl(e),n=n===at?r:vl(n)),oa(t,e,n)):[]}function ki(t,e){return pa(t,e)}function Ai(t,e,n){return ua(t,e,_s(n,2))}function Oi(t,e){var n=null==t?0:t.length;if(n){var r=pa(t,e);if(r<n&&zo(t[r],e))return r}return-1}function Ii(t,e){return pa(t,e,!0)}function Ni(t,e,n){return ua(t,e,_s(n,2),!0)}function Ci(t,e){if(null==t?0:t.length){var n=pa(t,e,!0)-1;if(zo(t[n],e))return n}return-1}function Ri(t){return t&&t.length?da(t):[]}function Li(t,e){return t&&t.length?da(t,_s(e,2)):[]}function Di(t){var e=null==t?0:t.length;return e?oa(t,1,e):[]}function Pi(t,e,n){return t&&t.length?(e=n||e===at?1:vl(e),oa(t,0,e<0?0:e)):[]}function ji(t,e,n){var r=null==t?0:t.length;return r?(e=n||e===at?1:vl(e),e=r-e,oa(t,e<0?0:e,r)):[]}function Ui(t,e){return t&&t.length?Va(t,_s(e,3),!1,!0):[]}function Mi(t,e){return t&&t.length?Va(t,_s(e,3)):[]}function Fi(t){return t&&t.length?fa(t):[]}function Bi(t,e){return t&&t.length?fa(t,_s(e,2)):[]}function Wi(t,e){return e="function"==typeof e?e:at,t&&t.length?fa(t,at,e):[]}function zi(t){if(!t||!t.length)return[];var e=0;return t=c(t,function(t){if(Yo(t))return e=zu(t.length,e),!0}),N(e,function(e){return $(t,S(e))})}function Gi(t,e){if(!t||!t.length)return[];var n=zi(t);return null==e?n:$(n,function(t){return o(e,at,t)})}function Yi(t,e){return ga(t||[],e||[],zn)}function Hi(t,e){return ga(t||[],e||[],sa)}function Ji(t){var e=n(t);return e.__chain__=!0,e}function Xi(t,e){return e(t),t}function Ki(t,e){return e(t)}function Zi(){return Ji(this)}function Qi(){return new a(this.value(),this.__chain__)}function to(){this.__values__===at&&(this.__values__=gl(this.value()));var t=this.__index__>=this.__values__.length;return{done:t,value:t?at:this.__values__[this.__index__++]}}function eo(){return this}function no(t){for(var e,n=this;n instanceof r;){var a=ei(n);a.__index__=0,a.__values__=at,e?s.__wrapped__=a:e=a;var s=a;n=n.__wrapped__}return s.__wrapped__=t,e}function ro(){var t=this.__wrapped__;if(t instanceof g){var e=t;return this.__actions__.length&&(e=new g(this)),e=e.reverse(),e.__actions__.push({func:Ki,args:[Ei],thisArg:at}),new a(e,this.__chain__)}return this.thru(Ei)}function ao(){return ha(this.__wrapped__,this.__actions__)}function so(t,e,n){var r=yc(t)?d:lr;return n&&Rs(t,e,n)&&(e=at),r(t,_s(e,3))}function io(t,e){return(yc(t)?c:dr)(t,_s(e,3))}function oo(t,e){return cr(fo(t,e),1)}function lo(t,e){return cr(fo(t,e),It)}function po(t,e,n){return n=n===at?1:vl(n),cr(fo(t,e),n)}function uo(t,e){return(yc(t)?p:fd)(t,_s(e,3))}function co(t,e){return(yc(t)?u:$d)(t,_s(e,3))}function mo(t,e,n,r){t=Go(t)?t:Ql(t),n=n&&!r?vl(n):0;var a=t.length;return n<0&&(n=zu(a+n,0)),$l(t)?n<=a&&t.indexOf(e,n)>-1:!!a&&q(t,e,n)>-1}function fo(t,e){return(yc(t)?$:Mr)(t,_s(e,3))}function $o(t,e,n,r){return null==t?[]:(yc(e)||(e=null==e?[]:[e]),n=r?at:n,yc(n)||(n=null==n?[]:[n]),Yr(t,e,n))}function yo(t,e,n){var r=yc(t)?V:A,a=arguments.length<3;return r(t,_s(e,4),n,a,fd)}function Vo(t,e,n){var r=yc(t)?h:A,a=arguments.length<3;return r(t,_s(e,4),n,a,$d)}function ho(t,e){return(yc(t)?c:dr)(t,Io(_s(e,3)))}function bo(t){return(yc(t)?Cn:ra)(t)}function go(t,e,n){return e=(n?Rs(t,e,n):e===at)?1:vl(e),(yc(t)?Rn:aa)(t,e)}function _o(t){return(yc(t)?Dn:ia)(t)}function vo(t){if(null==t)return 0;if(Go(t))return $l(t)?Q(t):t.length;var e=Td(t);return e==Jt||e==ee?t.size:Pr(t).length}function xo(t,e,n){var r=yc(t)?b:la;return n&&Rs(t,e,n)&&(e=at),r(t,_s(e,3))}function qo(t,e){if("function"!=typeof e)throw new uu(ot);return t=vl(t),function(){if(--t<1)return e.apply(this,arguments)}}function wo(t,e,n){return e=n?at:e,e=t&&null==e?t.length:e,ps(t,xt,at,at,at,at,e)}function To(t,e){var n;if("function"!=typeof e)throw new uu(ot);return t=vl(t),function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=at),n}}function Eo(t,e,n){e=n?at:e;var r=ps(t,bt,at,at,at,at,at,e);return r.placeholder=Eo.placeholder,r}function So(t,e,n){e=n?at:e;var r=ps(t,gt,at,at,at,at,at,e);return r.placeholder=So.placeholder,r}function ko(t,e,n){function r(e){var n=c,r=m;return c=m=at,h=e,$=t.apply(r,n)}function a(t){return h=t,y=kd(o,e),b?r(t):$}function s(t){var n=t-V,r=t-h,a=e-n;return g?Gu(a,f-r):a}function i(t){var n=t-V,r=t-h;return V===at||n>=e||n<0||g&&r>=f}function o(){var t=ac();if(i(t))return l(t);y=kd(o,s(t))}function l(t){return y=at,_&&c?r(t):(c=m=at,$)}function p(){y!==at&&_d(y),h=0,c=V=m=y=at}function u(){return y===at?$:l(ac())}function d(){var t=ac(),n=i(t);if(c=arguments,m=this,V=t,n){if(y===at)return a(V);if(g)return y=kd(o,e),r(V)}return y===at&&(y=kd(o,e)),$}var c,m,f,$,y,V,h=0,b=!1,g=!1,_=!0;if("function"!=typeof t)throw new uu(ot);return e=ql(e)||0,al(n)&&(b=!!n.leading,g="maxWait"in n,f=g?zu(ql(n.maxWait)||0,e):f,_="trailing"in n?!!n.trailing:_),d.cancel=p,d.flush=u,d}function Ao(t){return ps(t,wt)}function Oo(t,e){if("function"!=typeof t||null!=e&&"function"!=typeof e)throw new uu(ot);var n=function(){var r=arguments,a=e?e.apply(this,r):r[0],s=n.cache;if(s.has(a))return s.get(a);var i=t.apply(this,r);return n.cache=s.set(a,i)||s,i};return n.cache=new(Oo.Cache||pn),n}function Io(t){if("function"!=typeof t)throw new uu(ot);return function(){var e=arguments;switch(e.length){case 0:return!t.call(this);case 1:return!t.call(this,e[0]);case 2:return!t.call(this,e[0],e[1]);case 3:return!t.call(this,e[0],e[1],e[2])}return!t.apply(this,e)}}function No(t){return To(2,t)}function Co(t,e){if("function"!=typeof t)throw new uu(ot);return e=e===at?e:vl(e),na(t,e)}function Ro(t,e){if("function"!=typeof t)throw new uu(ot);return e=null==e?0:zu(vl(e),0),na(function(n){var r=n[e],a=qa(n,0,e);return r&&y(a,r),o(t,this,a)})}function Lo(t,e,n){var r=!0,a=!0;if("function"!=typeof t)throw new uu(ot);return al(n)&&(r="leading"in n?!!n.leading:r,a="trailing"in n?!!n.trailing:a),ko(t,e,{leading:r,maxWait:e,trailing:a})}function Do(t){return wo(t,1)}function Po(t,e){return uc(va(e),t)}function jo(){if(!arguments.length)return[];var t=arguments[0];return yc(t)?t:[t]}function Uo(t){return rr(t,mt)}function Mo(t,e){return e="function"==typeof e?e:at,rr(t,mt,e)}function Fo(t){return rr(t,dt|mt)}function Bo(t,e){return e="function"==typeof e?e:at,rr(t,dt|mt,e)}function Wo(t,e){return null==e||sr(t,e,Ul(e))}function zo(t,e){return t===e||t!==t&&e!==e}function Go(t){return null!=t&&rl(t.length)&&!el(t)}function Yo(t){return sl(t)&&Go(t)}function Ho(t){return!0===t||!1===t||sl(t)&&hr(t)==Bt}function Jo(t){return sl(t)&&1===t.nodeType&&!ml(t)}function Xo(t){if(null==t)return!0;if(Go(t)&&(yc(t)||"string"==typeof t||"function"==typeof t.splice||hc(t)||xc(t)||$c(t)))return!t.length;var e=Td(t);if(e==Jt||e==ee)return!t.size;if(Us(t))return!Pr(t).length;for(var n in t)if(yu.call(t,n))return!1;return!0}function Ko(t,e){return kr(t,e)}function Zo(t,e,n){n="function"==typeof n?n:at;var r=n?n(t,e):at;return r===at?kr(t,e,at,n):!!r}function Qo(t){if(!sl(t))return!1;var e=hr(t);return e==Gt||e==zt||"string"==typeof t.message&&"string"==typeof t.name&&!ml(t)}function tl(t){return"number"==typeof t&&Fu(t)}function el(t){if(!al(t))return!1;var e=hr(t);return e==Yt||e==Ht||e==Ft||e==Qt}function nl(t){return"number"==typeof t&&t==vl(t)}function rl(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=Nt}function al(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}function sl(t){return null!=t&&"object"==typeof t}function il(t,e){return t===e||Ir(t,e,xs(e))}function ol(t,e,n){return n="function"==typeof n?n:at,Ir(t,e,xs(e),n)}function ll(t){return cl(t)&&t!=+t}function pl(t){if(Ed(t))throw new au(it);return Nr(t)}function ul(t){return null===t}function dl(t){return null==t}function cl(t){return"number"==typeof t||sl(t)&&hr(t)==Xt}function ml(t){if(!sl(t)||hr(t)!=Zt)return!1;var e=Eu(t);if(null===e)return!0;var n=yu.call(e,"constructor")&&e.constructor;return"function"==typeof n&&n instanceof n&&$u.call(n)==gu}function fl(t){return nl(t)&&t>=-Nt&&t<=Nt}function $l(t){return"string"==typeof t||!yc(t)&&sl(t)&&hr(t)==ne}function yl(t){return"symbol"==typeof t||sl(t)&&hr(t)==re}function Vl(t){return t===at}function hl(t){return sl(t)&&Td(t)==se}function bl(t){return sl(t)&&hr(t)==ie}function gl(t){if(!t)return[];if(Go(t))return $l(t)?tt(t):Da(t);if(Iu&&t[Iu])return z(t[Iu]());var e=Td(t);return(e==Jt?G:e==ee?J:Ql)(t)}function _l(t){if(!t)return 0===t?t:0;if((t=ql(t))===It||t===-It){return(t<0?-1:1)*Ct}return t===t?t:0}function vl(t){var e=_l(t),n=e%1;return e===e?n?e-n:e:0}function xl(t){return t?nr(vl(t),0,Lt):0}function ql(t){if("number"==typeof t)return t;if(yl(t))return Rt;if(al(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=al(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(Ce,"");var n=ze.test(t);return n||Ye.test(t)?An(t.slice(2),n?2:8):We.test(t)?Rt:+t}function wl(t){return Pa(t,Ml(t))}function Tl(t){return t?nr(vl(t),-Nt,Nt):0===t?t:0}function El(t){return null==t?"":ma(t)}function Sl(t,e){var n=md(t);return null==e?n:Zn(n,e)}function kl(t,e){return v(t,_s(e,3),mr)}function Al(t,e){return v(t,_s(e,3),fr)}function Ol(t,e){return null==t?t:yd(t,_s(e,3),Ml)}function Il(t,e){return null==t?t:Vd(t,_s(e,3),Ml)}function Nl(t,e){return t&&mr(t,_s(e,3))}function Cl(t,e){return t&&fr(t,_s(e,3))}function Rl(t){return null==t?[]:$r(t,Ul(t))}function Ll(t){return null==t?[]:$r(t,Ml(t))}function Dl(t,e,n){var r=null==t?at:yr(t,e);return r===at?n:r}function Pl(t,e){return null!=t&&Ss(t,e,gr)}function jl(t,e){return null!=t&&Ss(t,e,_r)}function Ul(t){return Go(t)?In(t):Pr(t)}function Ml(t){return Go(t)?In(t,!0):jr(t)}function Fl(t,e){var n={};return e=_s(e,3),mr(t,function(t,r,a){tr(n,e(t,r,a),t)}),n}function Bl(t,e){var n={};return e=_s(e,3),mr(t,function(t,r,a){tr(n,r,e(t,r,a))}),n}function Wl(t,e){return zl(t,Io(_s(e)))}function zl(t,e){if(null==t)return{};var n=$(hs(t),function(t){return[t]});return e=_s(e),Jr(t,n,function(t,n){return e(t,n[0])})}function Gl(t,e,n){e=xa(e,t);var r=-1,a=e.length;for(a||(a=1,t=at);++r<a;){var s=null==t?at:t[Zs(e[r])];s===at&&(r=a,s=n),t=el(s)?s.call(t):s}return t}function Yl(t,e,n){return null==t?t:sa(t,e,n)}function Hl(t,e,n,r){return r="function"==typeof r?r:at,null==t?t:sa(t,e,n,r)}function Jl(t,e,n){var r=yc(t),a=r||hc(t)||xc(t);if(e=_s(e,4),null==n){var s=t&&t.constructor;n=a?r?new s:[]:al(t)&&el(s)?md(Eu(t)):{}}return(a?p:mr)(t,function(t,r,a){return e(n,t,r,a)}),n}function Xl(t,e){return null==t||$a(t,e)}function Kl(t,e,n){return null==t?t:ya(t,e,va(n))}function Zl(t,e,n,r){return r="function"==typeof r?r:at,null==t?t:ya(t,e,va(n),r)}function Ql(t){return null==t?[]:L(t,Ul(t))}function tp(t){return null==t?[]:L(t,Ml(t))}function ep(t,e,n){return n===at&&(n=e,e=at),n!==at&&(n=ql(n),n=n===n?n:0),e!==at&&(e=ql(e),e=e===e?e:0),nr(ql(t),e,n)}function np(t,e,n){return e=_l(e),n===at?(n=e,e=0):n=_l(n),t=ql(t),vr(t,e,n)}function rp(t,e,n){if(n&&"boolean"!=typeof n&&Rs(t,e,n)&&(e=n=at),n===at&&("boolean"==typeof e?(n=e,e=at):"boolean"==typeof t&&(n=t,t=at)),t===at&&e===at?(t=0,e=1):(t=_l(t),e===at?(e=t,t=0):e=_l(e)),t>e){var r=t;t=e,e=r}if(n||t%1||e%1){var a=Ju();return Gu(t+a*(e-t+kn("1e-"+((a+"").length-1))),e)}return Qr(t,e)}function ap(t){return Jc(El(t).toLowerCase())}function sp(t){return(t=El(t))&&t.replace(Je,Gn).replace(yn,"")}function ip(t,e,n){t=El(t),e=ma(e);var r=t.length;n=n===at?r:nr(vl(n),0,r);var a=n;return(n-=e.length)>=0&&t.slice(n,a)==e}function op(t){return t=El(t),t&&qe.test(t)?t.replace(ve,Yn):t}function lp(t){return t=El(t),t&&Ne.test(t)?t.replace(Ie,"\\$&"):t}function pp(t,e,n){t=El(t),e=vl(e);var r=e?Q(t):0;if(!e||r>=e)return t;var a=(e-r)/2;return ns(ju(a),n)+t+ns(Pu(a),n)}function up(t,e,n){t=El(t),e=vl(e);var r=e?Q(t):0;return e&&r<e?t+ns(e-r,n):t}function dp(t,e,n){t=El(t),e=vl(e);var r=e?Q(t):0;return e&&r<e?ns(e-r,n)+t:t}function cp(t,e,n){return n||null==e?e=0:e&&(e=+e),Hu(El(t).replace(Re,""),e||0)}function mp(t,e,n){return e=(n?Rs(t,e,n):e===at)?1:vl(e),ea(El(t),e)}function fp(){var t=arguments,e=El(t[0]);return t.length<3?e:e.replace(t[1],t[2])}function $p(t,e,n){return n&&"number"!=typeof n&&Rs(t,e,n)&&(e=n=at),(n=n===at?Lt:n>>>0)?(t=El(t),t&&("string"==typeof e||null!=e&&!_c(e))&&!(e=ma(e))&&B(t)?qa(tt(t),0,n):t.split(e,n)):[]}function yp(t,e,n){return t=El(t),n=null==n?0:nr(vl(n),0,t.length),e=ma(e),t.slice(n,n+e.length)==e}function Vp(t,e,r){var a=n.templateSettings;r&&Rs(t,e,r)&&(e=at),t=El(t),e=Sc({},e,a,us);var s,i,o=Sc({},e.imports,a.imports,us),l=Ul(o),p=L(o,l),u=0,d=e.interpolate||Xe,c="__p += '",m=lu((e.escape||Xe).source+"|"+d.source+"|"+(d===Ee?Fe:Xe).source+"|"+(e.evaluate||Xe).source+"|$","g"),f="//# sourceURL="+("sourceURL"in e?e.sourceURL:"lodash.templateSources["+ ++vn+"]")+"\n";t.replace(m,function(e,n,r,a,o,l){return r||(r=a),c+=t.slice(u,l).replace(Ke,M),n&&(s=!0,c+="' +\n__e("+n+") +\n'"),o&&(i=!0,c+="';\n"+o+";\n__p += '"),r&&(c+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),u=l+e.length,e}),c+="';\n";var $=e.variable;$||(c="with (obj) {\n"+c+"\n}\n"),c=(i?c.replace(he,""):c).replace(be,"$1").replace(ge,"$1;"),c="function("+($||"obj")+") {\n"+($?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(s?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+c+"return __p\n}";var y=Xc(function(){return su(l,f+"return "+c).apply(at,p)});if(y.source=c,Qo(y))throw y;return y}function hp(t){return El(t).toLowerCase()}function bp(t){return El(t).toUpperCase()}function gp(t,e,n){if((t=El(t))&&(n||e===at))return t.replace(Ce,"");if(!t||!(e=ma(e)))return t;var r=tt(t),a=tt(e);return qa(r,P(r,a),j(r,a)+1).join("")}function _p(t,e,n){if((t=El(t))&&(n||e===at))return t.replace(Le,"");if(!t||!(e=ma(e)))return t;var r=tt(t);return qa(r,0,j(r,tt(e))+1).join("")}function vp(t,e,n){if((t=El(t))&&(n||e===at))return t.replace(Re,"");if(!t||!(e=ma(e)))return t;var r=tt(t);return qa(r,P(r,tt(e))).join("")}function xp(t,e){var n=Tt,r=Et;if(al(e)){var a="separator"in e?e.separator:a;n="length"in e?vl(e.length):n,r="omission"in e?ma(e.omission):r}t=El(t);var s=t.length;if(B(t)){var i=tt(t);s=i.length}if(n>=s)return t;var o=n-Q(r);if(o<1)return r;var l=i?qa(i,0,o).join(""):t.slice(0,o);if(a===at)return l+r;if(i&&(o+=l.length-o),_c(a)){if(t.slice(o).search(a)){var p,u=l;for(a.global||(a=lu(a.source,El(Be.exec(a))+"g")),a.lastIndex=0;p=a.exec(u);)var d=p.index;l=l.slice(0,d===at?o:d)}}else if(t.indexOf(ma(a),o)!=o){var c=l.lastIndexOf(a);c>-1&&(l=l.slice(0,c))}return l+r}function qp(t){return t=El(t),t&&xe.test(t)?t.replace(_e,Hn):t}function wp(t,e,n){return t=El(t),e=n?at:e,e===at?W(t)?rt(t):_(t):t.match(e)||[]}function Tp(t){var e=null==t?0:t.length,n=_s();return t=e?$(t,function(t){if("function"!=typeof t[1])throw new uu(ot);return[n(t[0]),t[1]]}):[],na(function(n){for(var r=-1;++r<e;){var a=t[r];if(o(a[0],this,n))return o(a[1],this,n)}})}function Ep(t){return ar(rr(t,dt))}function Sp(t){return function(){return t}}function kp(t,e){return null==t||t!==t?e:t}function Ap(t){return t}function Op(t){return Dr("function"==typeof t?t:rr(t,dt))}function Ip(t){return Fr(rr(t,dt))}function Np(t,e){return Br(t,rr(e,dt))}function Cp(t,e,n){var r=Ul(e),a=$r(e,r);null!=n||al(e)&&(a.length||!r.length)||(n=e,e=t,t=this,a=$r(e,Ul(e)));var s=!(al(n)&&"chain"in n&&!n.chain),i=el(t);return p(a,function(n){var r=e[n];t[n]=r,i&&(t.prototype[n]=function(){var e=this.__chain__;if(s||e){var n=t(this.__wrapped__);return(n.__actions__=Da(this.__actions__)).push({func:r,args:arguments,thisArg:t}),n.__chain__=e,n}return r.apply(t,y([this.value()],arguments))})}),t}function Rp(){return Nn._===this&&(Nn._=_u),this}function Lp(){}function Dp(t){return t=vl(t),na(function(e){return Gr(e,t)})}function Pp(t){return Ls(t)?S(Zs(t)):Xr(t)}function jp(t){return function(e){return null==t?at:yr(t,e)}}function Up(){return[]}function Mp(){return!1}function Fp(){return{}}function Bp(){return""}function Wp(){return!0}function zp(t,e){if((t=vl(t))<1||t>Nt)return[];var n=Lt,r=Gu(t,Lt);e=_s(e),t-=Lt;for(var a=N(r,e);++n<t;)e(n);return a}function Gp(t){return yc(t)?$(t,Zs):yl(t)?[t]:Da(Od(El(t)))}function Yp(t){var e=++Vu;return El(t)+e}function Hp(t){return t&&t.length?pr(t,Ap,br):at}function Jp(t,e){return t&&t.length?pr(t,_s(e,2),br):at}function Xp(t){return E(t,Ap)}function Kp(t,e){return E(t,_s(e,2))}function Zp(t){return t&&t.length?pr(t,Ap,Ur):at}function Qp(t,e){return t&&t.length?pr(t,_s(e,2),Ur):at}function tu(t){return t&&t.length?I(t,Ap):0}function eu(t,e){return t&&t.length?I(t,_s(e,2)):0}e=null==e?Nn:Jn.defaults(Nn.Object(),e,Jn.pick(Nn,_n));var nu=e.Array,ru=e.Date,au=e.Error,su=e.Function,iu=e.Math,ou=e.Object,lu=e.RegExp,pu=e.String,uu=e.TypeError,du=nu.prototype,cu=su.prototype,mu=ou.prototype,fu=e["__core-js_shared__"],$u=cu.toString,yu=mu.hasOwnProperty,Vu=0,hu=function(){var t=/[^.]+$/.exec(fu&&fu.keys&&fu.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),bu=mu.toString,gu=$u.call(ou),_u=Nn._,vu=lu("^"+$u.call(yu).replace(Ie,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),xu=Ln?e.Buffer:at,qu=e.Symbol,wu=e.Uint8Array,Tu=xu?xu.allocUnsafe:at,Eu=Y(ou.getPrototypeOf,ou),Su=ou.create,ku=mu.propertyIsEnumerable,Au=du.splice,Ou=qu?qu.isConcatSpreadable:at,Iu=qu?qu.iterator:at,Nu=qu?qu.toStringTag:at,Cu=function(){try{var t=qs(ou,"defineProperty");return t({},"",{}),t}catch(t){}}(),Ru=e.clearTimeout!==Nn.clearTimeout&&e.clearTimeout,Lu=ru&&ru.now!==Nn.Date.now&&ru.now,Du=e.setTimeout!==Nn.setTimeout&&e.setTimeout,Pu=iu.ceil,ju=iu.floor,Uu=ou.getOwnPropertySymbols,Mu=xu?xu.isBuffer:at,Fu=e.isFinite,Bu=du.join,Wu=Y(ou.keys,ou),zu=iu.max,Gu=iu.min,Yu=ru.now,Hu=e.parseInt,Ju=iu.random,Xu=du.reverse,Ku=qs(e,"DataView"),Zu=qs(e,"Map"),Qu=qs(e,"Promise"),td=qs(e,"Set"),ed=qs(e,"WeakMap"),nd=qs(ou,"create"),rd=ed&&new ed,ad={},sd=Qs(Ku),id=Qs(Zu),od=Qs(Qu),ld=Qs(td),pd=Qs(ed),ud=qu?qu.prototype:at,dd=ud?ud.valueOf:at,cd=ud?ud.toString:at,md=function(){function t(){}return function(e){if(!al(e))return{};if(Su)return Su(e);t.prototype=e;var n=new t;return t.prototype=at,n}}();n.templateSettings={escape:we,evaluate:Te,interpolate:Ee,variable:"",imports:{_:n}},n.prototype=r.prototype,n.prototype.constructor=n,a.prototype=md(r.prototype),a.prototype.constructor=a,g.prototype=md(r.prototype),g.prototype.constructor=g,nt.prototype.clear=Ue,nt.prototype.delete=Ze,nt.prototype.get=Qe,nt.prototype.has=tn,nt.prototype.set=en,nn.prototype.clear=rn,nn.prototype.delete=an,nn.prototype.get=sn,nn.prototype.has=on,nn.prototype.set=ln,pn.prototype.clear=un,pn.prototype.delete=dn,pn.prototype.get=cn,pn.prototype.has=mn,pn.prototype.set=fn,Vn.prototype.add=Vn.prototype.push=hn,Vn.prototype.has=bn,gn.prototype.clear=wn,gn.prototype.delete=Tn,gn.prototype.get=En,gn.prototype.has=Sn,gn.prototype.set=On;var fd=Ba(mr),$d=Ba(fr,!0),yd=Wa(),Vd=Wa(!0),hd=rd?function(t,e){return rd.set(t,e),t}:Ap,bd=Cu?function(t,e){return Cu(t,"toString",{configurable:!0,enumerable:!1,value:Sp(e),writable:!0})}:Ap,gd=na,_d=Ru||function(t){return Nn.clearTimeout(t)},vd=td&&1/J(new td([,-0]))[1]==It?function(t){return new td(t)}:Lp,xd=rd?function(t){return rd.get(t)}:Lp,qd=Uu?function(t){return null==t?[]:(t=ou(t),c(Uu(t),function(e){return ku.call(t,e)}))}:Up,wd=Uu?function(t){for(var e=[];t;)y(e,qd(t)),t=Eu(t);return e}:Up,Td=hr;(Ku&&Td(new Ku(new ArrayBuffer(1)))!=le||Zu&&Td(new Zu)!=Jt||Qu&&"[object Promise]"!=Td(Qu.resolve())||td&&Td(new td)!=ee||ed&&Td(new ed)!=se)&&(Td=function(t){var e=hr(t),n=e==Zt?t.constructor:at,r=n?Qs(n):"";if(r)switch(r){case sd:return le;case id:return Jt;case od:return"[object Promise]";case ld:return ee;case pd:return se}return e});var Ed=fu?el:Mp,Sd=Xs(hd),kd=Du||function(t,e){return Nn.setTimeout(t,e)},Ad=Xs(bd),Od=function(t){var e=Oo(t,function(t){return n.size===pt&&n.clear(),t}),n=e.cache;return e}(function(t){var e=[];return Ae.test(t)&&e.push(""),t.replace(Oe,function(t,n,r,a){e.push(r?a.replace(Me,"$1"):n||t)}),e}),Id=na(function(t,e){return Yo(t)?or(t,cr(e,1,Yo,!0)):[]}),Nd=na(function(t,e){var n=gi(e);return Yo(n)&&(n=at),Yo(t)?or(t,cr(e,1,Yo,!0),_s(n,2)):[]}),Cd=na(function(t,e){var n=gi(e);return Yo(n)&&(n=at),Yo(t)?or(t,cr(e,1,Yo,!0),at,n):[]}),Rd=na(function(t){var e=$(t,_a);return e.length&&e[0]===t[0]?xr(e):[]}),Ld=na(function(t){var e=gi(t),n=$(t,_a);return e===gi(n)?e=at:n.pop(),n.length&&n[0]===t[0]?xr(n,_s(e,2)):[]}),Dd=na(function(t){var e=gi(t),n=$(t,_a);return e="function"==typeof e?e:at,e&&n.pop(),n.length&&n[0]===t[0]?xr(n,at,e):[]}),Pd=na(xi),jd=ys(function(t,e){var n=null==t?0:t.length,r=er(t,e);return Zr(t,$(e,function(t){return Cs(t,n)?+t:t}).sort(Na)),r}),Ud=na(function(t){return fa(cr(t,1,Yo,!0))}),Md=na(function(t){var e=gi(t);return Yo(e)&&(e=at),fa(cr(t,1,Yo,!0),_s(e,2))}),Fd=na(function(t){var e=gi(t);return e="function"==typeof e?e:at,fa(cr(t,1,Yo,!0),at,e)}),Bd=na(function(t,e){return Yo(t)?or(t,e):[]}),Wd=na(function(t){return ba(c(t,Yo))}),zd=na(function(t){var e=gi(t);return Yo(e)&&(e=at),ba(c(t,Yo),_s(e,2))}),Gd=na(function(t){var e=gi(t);return e="function"==typeof e?e:at,ba(c(t,Yo),at,e)}),Yd=na(zi),Hd=na(function(t){var e=t.length,n=e>1?t[e-1]:at;return n="function"==typeof n?(t.pop(),n):at,Gi(t,n)}),Jd=ys(function(t){var e=t.length,n=e?t[0]:0,r=this.__wrapped__,s=function(e){return er(e,t)};return!(e>1||this.__actions__.length)&&r instanceof g&&Cs(n)?(r=r.slice(n,+n+(e?1:0)),r.__actions__.push({func:Ki,args:[s],thisArg:at}),new a(r,this.__chain__).thru(function(t){return e&&!t.length&&t.push(at),t})):this.thru(s)}),Xd=Ma(function(t,e,n){yu.call(t,n)?++t[n]:tr(t,n,1)}),Kd=Xa(ui),Zd=Xa(di),Qd=Ma(function(t,e,n){yu.call(t,n)?t[n].push(e):tr(t,n,[e])}),tc=na(function(t,e,n){var r=-1,a="function"==typeof e,s=Go(t)?nu(t.length):[];return fd(t,function(t){s[++r]=a?o(e,t,n):wr(t,e,n)}),s}),ec=Ma(function(t,e,n){tr(t,n,e)}),nc=Ma(function(t,e,n){t[n?0:1].push(e)},function(){return[[],[]]}),rc=na(function(t,e){if(null==t)return[];var n=e.length;return n>1&&Rs(t,e[0],e[1])?e=[]:n>2&&Rs(e[0],e[1],e[2])&&(e=[e[0]]),Yr(t,cr(e,1),[])}),ac=Lu||function(){return Nn.Date.now()},sc=na(function(t,e,n){var r=yt;if(n.length){var a=H(n,gs(sc));r|=_t}return ps(t,r,e,n,a)}),ic=na(function(t,e,n){var r=yt|Vt;if(n.length){var a=H(n,gs(ic));r|=_t}return ps(e,r,t,n,a)}),oc=na(function(t,e){return ir(t,1,e)}),lc=na(function(t,e,n){return ir(t,ql(e)||0,n)});Oo.Cache=pn;var pc=gd(function(t,e){e=1==e.length&&yc(e[0])?$(e[0],R(_s())):$(cr(e,1),R(_s()));var n=e.length;return na(function(r){for(var a=-1,s=Gu(r.length,n);++a<s;)r[a]=e[a].call(this,r[a]);return o(t,this,r)})}),uc=na(function(t,e){var n=H(e,gs(uc));return ps(t,_t,at,e,n)}),dc=na(function(t,e){var n=H(e,gs(dc));return ps(t,vt,at,e,n)}),cc=ys(function(t,e){return ps(t,qt,at,at,at,e)}),mc=ss(br),fc=ss(function(t,e){return t>=e}),$c=Tr(function(){return arguments}())?Tr:function(t){return sl(t)&&yu.call(t,"callee")&&!ku.call(t,"callee")},yc=nu.isArray,Vc=jn?R(jn):Er,hc=Mu||Mp,bc=Un?R(Un):Sr,gc=Mn?R(Mn):Or,_c=Fn?R(Fn):Cr,vc=Bn?R(Bn):Rr,xc=Wn?R(Wn):Lr,qc=ss(Ur),wc=ss(function(t,e){return t<=e}),Tc=Fa(function(t,e){if(Us(e)||Go(e))return void Pa(e,Ul(e),t);for(var n in e)yu.call(e,n)&&zn(t,n,e[n])}),Ec=Fa(function(t,e){Pa(e,Ml(e),t)}),Sc=Fa(function(t,e,n,r){Pa(e,Ml(e),t,r)}),kc=Fa(function(t,e,n,r){Pa(e,Ul(e),t,r)}),Ac=ys(er),Oc=na(function(t){return t.push(at,us),o(Sc,at,t)}),Ic=na(function(t){return t.push(at,ds),o(Dc,at,t)}),Nc=Qa(function(t,e,n){t[e]=n},Sp(Ap)),Cc=Qa(function(t,e,n){yu.call(t,e)?t[e].push(n):t[e]=[n]},_s),Rc=na(wr),Lc=Fa(function(t,e,n){Wr(t,e,n)}),Dc=Fa(function(t,e,n,r){Wr(t,e,n,r)}),Pc=ys(function(t,e){var n={};if(null==t)return n;var r=!1;e=$(e,function(e){return e=xa(e,t),r||(r=e.length>1),e}),Pa(t,hs(t),n),r&&(n=rr(n,dt|ct|mt,cs));for(var a=e.length;a--;)$a(n,e[a]);return n}),jc=ys(function(t,e){return null==t?{}:Hr(t,e)}),Uc=ls(Ul),Mc=ls(Ml),Fc=Ya(function(t,e,n){return e=e.toLowerCase(),t+(n?ap(e):e)}),Bc=Ya(function(t,e,n){return t+(n?"-":"")+e.toLowerCase()}),Wc=Ya(function(t,e,n){return t+(n?" ":"")+e.toLowerCase()}),zc=Ga("toLowerCase"),Gc=Ya(function(t,e,n){return t+(n?"_":"")+e.toLowerCase()}),Yc=Ya(function(t,e,n){return t+(n?" ":"")+Jc(e)}),Hc=Ya(function(t,e,n){return t+(n?" ":"")+e.toUpperCase()}),Jc=Ga("toUpperCase"),Xc=na(function(t,e){try{return o(t,at,e)}catch(t){return Qo(t)?t:new au(t)}}),Kc=ys(function(t,e){return p(e,function(e){e=Zs(e),tr(t,e,sc(t[e],t))}),t}),Zc=Ka(),Qc=Ka(!0),tm=na(function(t,e){return function(n){return wr(n,t,e)}}),em=na(function(t,e){return function(n){return wr(t,n,e)}}),nm=es($),rm=es(d),am=es(b),sm=as(),im=as(!0),om=ts(function(t,e){return t+e},0),lm=os("ceil"),pm=ts(function(t,e){return t/e},1),um=os("floor"),dm=ts(function(t,e){return t*e},1),cm=os("round"),mm=ts(function(t,e){return t-e},0);return n.after=qo,n.ary=wo,n.assign=Tc,n.assignIn=Ec,n.assignInWith=Sc,n.assignWith=kc,n.at=Ac,n.before=To,n.bind=sc,n.bindAll=Kc,n.bindKey=ic,n.castArray=jo,n.chain=Ji,n.chunk=ni,n.compact=ri,n.concat=ai,n.cond=Tp,n.conforms=Ep,n.constant=Sp,n.countBy=Xd,n.create=Sl,n.curry=Eo,n.curryRight=So,n.debounce=ko,n.defaults=Oc,n.defaultsDeep=Ic,n.defer=oc,n.delay=lc,n.difference=Id,n.differenceBy=Nd,n.differenceWith=Cd,n.drop=si,n.dropRight=ii,n.dropRightWhile=oi,n.dropWhile=li,n.fill=pi,n.filter=io,n.flatMap=oo,n.flatMapDeep=lo,n.flatMapDepth=po,n.flatten=ci,n.flattenDeep=mi,n.flattenDepth=fi,n.flip=Ao,n.flow=Zc,n.flowRight=Qc,n.fromPairs=$i,n.functions=Rl,n.functionsIn=Ll,n.groupBy=Qd,n.initial=hi,n.intersection=Rd,n.intersectionBy=Ld,n.intersectionWith=Dd,n.invert=Nc,n.invertBy=Cc,n.invokeMap=tc,n.iteratee=Op,n.keyBy=ec,n.keys=Ul,n.keysIn=Ml,n.map=fo,n.mapKeys=Fl,n.mapValues=Bl,n.matches=Ip,n.matchesProperty=Np,n.memoize=Oo,n.merge=Lc,n.mergeWith=Dc,n.method=tm,n.methodOf=em,n.mixin=Cp,n.negate=Io,n.nthArg=Dp,n.omit=Pc,n.omitBy=Wl,n.once=No,n.orderBy=$o,n.over=nm,n.overArgs=pc,n.overEvery=rm,n.overSome=am,n.partial=uc,n.partialRight=dc,n.partition=nc,n.pick=jc,n.pickBy=zl,n.property=Pp,n.propertyOf=jp,n.pull=Pd,n.pullAll=xi,n.pullAllBy=qi,n.pullAllWith=wi,n.pullAt=jd,n.range=sm,n.rangeRight=im,n.rearg=cc,n.reject=ho,n.remove=Ti,n.rest=Co,n.reverse=Ei,n.sampleSize=go,n.set=Yl,n.setWith=Hl,n.shuffle=_o,n.slice=Si,n.sortBy=rc,n.sortedUniq=Ri,n.sortedUniqBy=Li,n.split=$p,n.spread=Ro,n.tail=Di,n.take=Pi,n.takeRight=ji,n.takeRightWhile=Ui,n.takeWhile=Mi,n.tap=Xi,n.throttle=Lo,n.thru=Ki,n.toArray=gl,n.toPairs=Uc,n.toPairsIn=Mc,n.toPath=Gp,n.toPlainObject=wl,n.transform=Jl,n.unary=Do,n.union=Ud,n.unionBy=Md,n.unionWith=Fd,n.uniq=Fi,n.uniqBy=Bi,n.uniqWith=Wi,n.unset=Xl,n.unzip=zi,n.unzipWith=Gi,n.update=Kl,n.updateWith=Zl,n.values=Ql,n.valuesIn=tp,n.without=Bd,n.words=wp,n.wrap=Po,n.xor=Wd,n.xorBy=zd,n.xorWith=Gd,n.zip=Yd,n.zipObject=Yi,n.zipObjectDeep=Hi,n.zipWith=Hd,n.entries=Uc,n.entriesIn=Mc,n.extend=Ec,n.extendWith=Sc,Cp(n,n),n.add=om,n.attempt=Xc,n.camelCase=Fc,n.capitalize=ap,n.ceil=lm,n.clamp=ep,n.clone=Uo,n.cloneDeep=Fo,n.cloneDeepWith=Bo,n.cloneWith=Mo,n.conformsTo=Wo,n.deburr=sp,n.defaultTo=kp,n.divide=pm,n.endsWith=ip,n.eq=zo,n.escape=op,n.escapeRegExp=lp,n.every=so,n.find=Kd,n.findIndex=ui,n.findKey=kl,n.findLast=Zd,n.findLastIndex=di,n.findLastKey=Al,n.floor=um,n.forEach=uo,n.forEachRight=co,n.forIn=Ol,n.forInRight=Il,n.forOwn=Nl,n.forOwnRight=Cl,n.get=Dl,n.gt=mc,n.gte=fc,n.has=Pl,n.hasIn=jl,n.head=yi,n.identity=Ap,n.includes=mo,n.indexOf=Vi,n.inRange=np,n.invoke=Rc,n.isArguments=$c,n.isArray=yc,n.isArrayBuffer=Vc,n.isArrayLike=Go,n.isArrayLikeObject=Yo,n.isBoolean=Ho,n.isBuffer=hc,n.isDate=bc,n.isElement=Jo,n.isEmpty=Xo,n.isEqual=Ko,n.isEqualWith=Zo,n.isError=Qo,n.isFinite=tl,n.isFunction=el,n.isInteger=nl,n.isLength=rl,n.isMap=gc,n.isMatch=il,n.isMatchWith=ol,n.isNaN=ll,n.isNative=pl,n.isNil=dl,n.isNull=ul,n.isNumber=cl,n.isObject=al,n.isObjectLike=sl,n.isPlainObject=ml,n.isRegExp=_c,n.isSafeInteger=fl,n.isSet=vc,n.isString=$l,n.isSymbol=yl,n.isTypedArray=xc,n.isUndefined=Vl,n.isWeakMap=hl,n.isWeakSet=bl,n.join=bi,n.kebabCase=Bc,n.last=gi,n.lastIndexOf=_i,n.lowerCase=Wc,n.lowerFirst=zc,n.lt=qc,n.lte=wc,n.max=Hp,n.maxBy=Jp,n.mean=Xp,n.meanBy=Kp,n.min=Zp,n.minBy=Qp,n.stubArray=Up,n.stubFalse=Mp,n.stubObject=Fp,n.stubString=Bp,n.stubTrue=Wp,n.multiply=dm,n.nth=vi,n.noConflict=Rp,n.noop=Lp,n.now=ac,n.pad=pp,n.padEnd=up,n.padStart=dp,n.parseInt=cp,n.random=rp,n.reduce=yo,n.reduceRight=Vo,n.repeat=mp,n.replace=fp,n.result=Gl,n.round=cm,n.runInContext=t,n.sample=bo,n.size=vo,n.snakeCase=Gc,n.some=xo,n.sortedIndex=ki,n.sortedIndexBy=Ai,n.sortedIndexOf=Oi,n.sortedLastIndex=Ii,n.sortedLastIndexBy=Ni,n.sortedLastIndexOf=Ci,n.startCase=Yc,n.startsWith=yp,n.subtract=mm,n.sum=tu,n.sumBy=eu,n.template=Vp,n.times=zp,n.toFinite=_l,n.toInteger=vl,n.toLength=xl,n.toLower=hp,n.toNumber=ql,n.toSafeInteger=Tl,n.toString=El,n.toUpper=bp,n.trim=gp,n.trimEnd=_p,n.trimStart=vp,n.truncate=xp,n.unescape=qp,n.uniqueId=Yp,n.upperCase=Hc,n.upperFirst=Jc,n.each=uo,n.eachRight=co,n.first=yi,Cp(n,function(){var t={};return mr(n,function(e,r){yu.call(n.prototype,r)||(t[r]=e)}),t}(),{chain:!1}),n.VERSION="4.17.4",p(["bind","bindKey","curry","curryRight","partial","partialRight"],function(t){n[t].placeholder=n}),p(["drop","take"],function(t,e){g.prototype[t]=function(n){n=n===at?1:zu(vl(n),0);var r=this.__filtered__&&!e?new g(this):this.clone();return r.__filtered__?r.__takeCount__=Gu(n,r.__takeCount__):r.__views__.push({size:Gu(n,Lt),type:t+(r.__dir__<0?"Right":"")}),r},g.prototype[t+"Right"]=function(e){return this.reverse()[t](e).reverse()}}),p(["filter","map","takeWhile"],function(t,e){var n=e+1,r=n==At||3==n;g.prototype[t]=function(t){var e=this.clone();return e.__iteratees__.push({iteratee:_s(t,3),type:n}),e.__filtered__=e.__filtered__||r,e}}),p(["head","last"],function(t,e){var n="take"+(e?"Right":"");g.prototype[t]=function(){return this[n](1).value()[0]}}),p(["initial","tail"],function(t,e){var n="drop"+(e?"":"Right");g.prototype[t]=function(){return this.__filtered__?new g(this):this[n](1)}}),g.prototype.compact=function(){return this.filter(Ap)},g.prototype.find=function(t){return this.filter(t).head()},g.prototype.findLast=function(t){return this.reverse().find(t)},g.prototype.invokeMap=na(function(t,e){return"function"==typeof t?new g(this):this.map(function(n){return wr(n,t,e)})}),g.prototype.reject=function(t){return this.filter(Io(_s(t)))},g.prototype.slice=function(t,e){t=vl(t);var n=this;return n.__filtered__&&(t>0||e<0)?new g(n):(t<0?n=n.takeRight(-t):t&&(n=n.drop(t)),e!==at&&(e=vl(e),n=e<0?n.dropRight(-e):n.take(e-t)),n)},g.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},g.prototype.toArray=function(){return this.take(Lt)},mr(g.prototype,function(t,e){var r=/^(?:filter|find|map|reject)|While$/.test(e),s=/^(?:head|last)$/.test(e),i=n[s?"take"+("last"==e?"Right":""):e],o=s||/^find/.test(e);i&&(n.prototype[e]=function(){var e=this.__wrapped__,l=s?[1]:arguments,p=e instanceof g,u=l[0],d=p||yc(e),c=function(t){var e=i.apply(n,y([t],l));return s&&m?e[0]:e};d&&r&&"function"==typeof u&&1!=u.length&&(p=d=!1);var m=this.__chain__,f=!!this.__actions__.length,$=o&&!m,V=p&&!f;if(!o&&d){e=V?e:new g(this);var h=t.apply(e,l);return h.__actions__.push({func:Ki,args:[c],thisArg:at}),new a(h,m)}return $&&V?t.apply(this,l):(h=this.thru(c),$?s?h.value()[0]:h.value():h)})}),p(["pop","push","shift","sort","splice","unshift"],function(t){var e=du[t],r=/^(?:push|sort|unshift)$/.test(t)?"tap":"thru",a=/^(?:pop|shift)$/.test(t);n.prototype[t]=function(){var t=arguments;if(a&&!this.__chain__){var n=this.value();return e.apply(yc(n)?n:[],t)}return this[r](function(n){return e.apply(yc(n)?n:[],t)})}}),mr(g.prototype,function(t,e){var r=n[e];if(r){var a=r.name+"";(ad[a]||(ad[a]=[])).push({name:e,func:r})}}),ad[Za(at,Vt).name]=[{name:"wrapper",func:at}],g.prototype.clone=k,g.prototype.reverse=K,g.prototype.value=et,n.prototype.at=Jd,n.prototype.chain=Zi,n.prototype.commit=Qi,n.prototype.next=to,n.prototype.plant=no,n.prototype.reverse=ro,n.prototype.toJSON=n.prototype.valueOf=n.prototype.value=ao,n.prototype.first=n.prototype.head,Iu&&(n.prototype[Iu]=eo),n}();Nn._=Jn,(a=function(){return Jn}.call(e,n,e,r))!==at&&(r.exports=a)}).call(this)}).call(e,n(2),n(9)(t))},function(t,e,n){function r(t,e){if(e=e||{},s.call(this),this.log=e.log||new i,this.pingTimeout=e.pingTimeout||3e3,!t)throw new TypeError("Missing host");if(!(t instanceof o))throw new TypeError("Invalid host");this.host=t,a.makeBoundMethods(this)}t.exports=r;var a=n(0),s=n(24).EventEmitter,i=n(8),o=n(11),l=n(3);a.inherits(r,s),r.prototype.request=function(){throw new Error("Connection#request must be overwritten by the Connector")},r.prototype.ping=function(t,e){"function"==typeof t?(e=t,t=null):e="function"==typeof e?e:null;var n,r,s,i=this.pingTimeout;t&&t.hasOwnProperty("requestTimeout")&&(i=t.requestTimeout),s=this.request(a.defaults(t||{},{path:"/",method:"HEAD"}),function(t){r||(clearTimeout(n),e&&e(t))}),i&&(n=setTimeout(function(){s&&s(),r=!0,e&&e(new l.RequestTimeout("Ping Timeout after "+i+"ms"))},i))},r.prototype.setStatus=function(t){var e=this.status;this.status=t,this.emit("status set",t,e,this),"closed"===t&&this.removeAllListeners()}},function(t,e,n){(function(e){function r(t){if(t=t||{},t.log){var e,n;if(!(n=a.isArrayOfStrings(t.log)?[{levels:t.log}]:a.createArray(t.log,function(t){return a.isPlainObject(t)?t:"string"==typeof t?{level:t}:void 0})))throw new TypeError("Invalid logging output config. Expected either a log level, array of log levels, a logger config object, or an array of logger config objects.");for(e=0;e<n.length;e++)this.addOutput(n[e])}}var a=n(0),s=n(26),i=n(24).EventEmitter;a.inherits(r,i),r.loggers=n(19),r.prototype.close=function(){this.emit("closing"),this.listenerCount()&&(console.error("Something is still listening for log events, but the logger is closing."),this.clearAllListeners())},i.prototype.listenerCount?r.prototype.listenerCount=i.prototype.listenerCount:i.listenerCount?r.prototype.listenerCount=function(t){return i.listenerCount(this,t)}:r.prototype.listenerCount=function(t){return this.listeners(t).length},r.levels=["error","warning","info","debug","trace"],r.parseLevels=function(t){switch(typeof t){case"string":var e=a.indexOf(r.levels,t);if(e>=0)return r.levels.slice(0,e+1);case"object":if(a.isArray(t)){var n=a.intersection(t,r.levels);if(n.length===t.length)return n}default:throw new TypeError("invalid logging level "+t+". Expected zero or more of these options: "+r.levels.join(", "))}},r.join=function(t){return a.map(t,function(t){return a.isPlainObject(t)?JSON.stringify(t,null,2)+"\n":t.toString()}).join(" ")},r.prototype.addOutput=function(t){return t=t||{},t.levels=r.parseLevels(t.levels||t.level||"warning"),delete t.level,new(a.funcEnum(t,"type",r.loggers,e.browser?"console":"stdio"))(this,t)},r.prototype.error=function(t){if(this.listenerCount("error"))return this.emit("error",t instanceof Error?t:new Error(t))},r.prototype.warning=function(){if(this.listenerCount("warning"))return this.emit("warning",r.join(arguments))},r.prototype.info=function(){if(this.listenerCount("info"))return this.emit("info",r.join(arguments))},r.prototype.debug=function(){if(this.listenerCount("debug"))return this.emit("debug",r.join(arguments))},r.prototype.trace=function(t,e,n,a,s){if(this.listenerCount("trace"))return this.emit("trace",r.normalizeTraceArgs(t,e,n,a,s))},r.normalizeTraceArgs=function(t,e,n,r,i){return"string"==typeof e?e=s.parse(e,!0,!0):(e=a.clone(e),e.path&&(e.query=s.parse(e.path,!0,!1).query),!e.pathname&&e.path&&(e.pathname=e.path.split("?").shift())),delete e.auth,{method:t,url:s.format(e),body:n,status:i,response:r}},t.exports=r}).call(e,n(5))},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,n){(function(e){function r(t){t=t||{},a.makeBoundMethods(this),t.log?this.log=t.log:(this.log=new s,t.log=this.log),this._config=t,this.selector=a.funcEnum(t,"selector",r.selectors,r.defaultSelector),this.Connection=a.funcEnum(t,"connectionClass",r.connectionClasses,r.defaultConnectionClass),this.deadTimeout=t.hasOwnProperty("deadTimeout")?t.deadTimeout:6e4,this.maxDeadTimeout=t.hasOwnProperty("maxDeadTimeout")?t.maxDeadTimeout:18e5,this.calcDeadTimeout=a.funcEnum(t,"calcDeadTimeout",r.calcDeadTimeoutOptions,"exponential"),this.index={},this._conns={alive:[],dead:[]},this._timeouts=[]}t.exports=r;var a=n(0),s=n(8);r.selectors=n(21),r.defaultSelector="roundRobin",r.connectionClasses=n(17),r.defaultConnectionClass=r.connectionClasses._default,delete r.connectionClasses._default,r.calcDeadTimeoutOptions={flat:function(t,e){return e},exponential:function(t,e){return Math.min(2*e*Math.pow(2,.5*t-1),this.maxDeadTimeout)}},r.prototype.select=function(t){if(this._conns.alive.length)if(this.selector.length>1)this.selector(this._conns.alive,t);else try{a.nextTick(t,void 0,this.selector(this._conns.alive))}catch(e){t(e)}else this._timeouts.length?this._selectDeadConnection(t):a.nextTick(t,void 0)},r.prototype.onStatusSet=a.handler(function(t,e,n){var r,s="dead"===t,i=s&&"dead"===e,o=!s&&"dead"===e,l=e===t,p=this._conns[e],u=this._conns[t];if(l&&!s)return!0;p!==u&&(a.isArray(p)&&-1!==(r=p.indexOf(n))&&p.splice(r,1),a.isArray(u)&&-1===(r=u.indexOf(n))&&u.push(n)),s&&this._onConnectionDied(n,i),o&&this._onConnectionRevived(n)}),r.prototype._onConnectionRevived=function(t){for(var e,n=0;n<this._timeouts.length;n++)if(this._timeouts[n].conn===t){e=this._timeouts[n],e.id&&clearTimeout(e.id),this._timeouts.splice(n,1);break}},r.prototype._onConnectionDied=function(t,e){var n;if(e){for(var r=0;r<this._timeouts.length;r++)if(this._timeouts[r].conn===t){n=this._timeouts[r];break}}else n={conn:t,attempt:0,revive:function(e){n.attempt++,t.ping(function(n){t.setStatus(n?"dead":"alive"),e&&"function"==typeof e&&e(n)})}},this._timeouts.push(n);n.id&&clearTimeout(n.id);var s=this.calcDeadTimeout(n.attempt,this.deadTimeout);n.id=setTimeout(n.revive,s),n.runAt=a.now()+s},r.prototype._selectDeadConnection=function(t){var n=a.sortBy(this._timeouts,"runAt"),r=this.log;e.nextTick(function a(){var s=n.shift();return s?s.conn?void("dead"===s.conn.status?s.revive(function(n){n?(r.warning("Unable to revive connection: "+s.conn.id),e.nextTick(a)):t(void 0,s.conn)}):t(void 0,s.conn)):void a():void t(void 0)})},r.prototype.getConnections=function(t,e){var n;return n=t?this._conns[t]:this._conns[this._conns.alive.length?"alive":"dead"],null==e?n.slice(0):a.shuffle(n).slice(0,e)},r.prototype.addConnection=function(t){t.id||(t.id=t.host.toString()),this.index[t.id]||(this.log.info("Adding connection to",t.id),this.index[t.id]=t,t.on("status set",this.bound.onStatusSet),t.setStatus("alive"))},r.prototype.removeConnection=function(t){t.id||(t.id=t.host.toString()),this.index[t.id]&&(delete this.index[t.id],t.setStatus("closed"),t.removeListener("status set",this.bound.onStatusSet))},r.prototype.setHosts=function(t){var e,n,r,s,i=a.clone(this.index);for(n=0;n<t.length;n++)s=t[n],r=s.toString(),this.index[r]?delete i[r]:(e=new this.Connection(s,this._config),e.id=r,this.addConnection(e));var o=a.keys(i);for(n=0;n<o.length;n++)this.removeConnection(this.index[o[n]])},r.prototype.getAllHosts=function(){return a.values(this.index).map(function(t){return t.host})},r.prototype.close=function(){this.setHosts([])},r.prototype.empty=r.prototype.close}).call(e,n(5))},function(t,e,n){(function(e){function r(t,e){if(t=l.clone(t||{}),e=e||{},this.protocol="http",this.host="localhost",this.path="",this.port=9200,this.query=null,this.headers=null,this.suggestCompression=!!e.suggestCompression,this.ssl=l.defaults({},t.ssl||{},e.ssl||{},m),"string"==typeof t){var n=t.indexOf(":"),a=t.indexOf("/"),f=-1===a,$=n>-1&&f,y=!$&&n<a;if((f||$||y)&&!p.test(t)&&(t=u+"//"+t),t=l.pick(i.parse(t,!1,!0),d),!t.port){var V=t.protocol||"http";":"===V.charAt(V.length-1)&&(V=V.substring(0,V.length-1)),r.defaultPorts[V]&&(t.port=r.defaultPorts[V])}}l.isObject(t)?l.each(c,function(e){var n=e+"name";t[n]&&t[e]?0===t[e].indexOf(t[n])&&(t[e]=t[n]):t[n]&&(t[e]=t[n]),delete t[n]}):t={},!t.auth&&e.httpAuth&&(t.auth=e.httpAuth),t.auth&&(t.headers=t.headers||{},t.headers.Authorization="Basic "+s(t.auth),delete t.auth),l.forOwn(t,l.bind(function(t,e){null!=t&&(this[e]=l.clone(t))},this)),null===this.query?this.query={}:l.isPlainObject(this.query)||(this.query=o.parse(this.query)),l.isNumeric(this.port)?this.port=parseInt(this.port,10):this.port=9200,"/"===this.path?this.path="":this.path&&"/"!==this.path.charAt(0)&&(this.path="/"+(this.path||"")),":"===this.protocol.substr(-1)&&(this.protocol=this.protocol.substring(0,this.protocol.length-1))}function a(t,e){return function(n){e&&(n=e.call(this,n));var r=this[t];return r||n?(n&&(r=l.assign({},r,n)),l.size(r)?r:null):null}}t.exports=r;var s,i=n(26),o=n(25),l=n(0),p=/^([a-z]+:)?\/\//,u="http:";"undefined"!=typeof window&&void 0!==window.location&&(u=window.location.protocol,s=window.btoa),s=s||function(t){return new e(t,"utf8").toString("base64")};var d=["protocol","hostname","pathname","port","auth","query"],c=["host","path"],m={pfx:null,key:null,passphrase:null,cert:null,ca:null,ciphers:null,rejectUnauthorized:!1,secureProtocol:null};r.defaultPorts={http:80,https:443},r.prototype.makeUrl=function(t){t=t||{};var e="";this.port!==r.defaultPorts[this.protocol]&&(e=":"+this.port);var n=""+(this.path||"")+(t.path||"");"/"!==n.charAt(0)&&(n="/"+n);var a=o.stringify(this.getQuery(t.query));return this.host?this.protocol+"://"+this.host+e+n+(a?"?"+a:""):n+(a?"?"+a:"")},r.prototype.getHeaders=a("headers",function(t){return this.suggestCompression?l.defaults(t||{},{"Accept-Encoding":"gzip,deflate"}):t}),r.prototype.getQuery=a("query",function(t){return"string"==typeof t?o.parse(t):t}),r.prototype.toString=function(){return this.makeUrl()}}).call(e,n(13).Buffer)},function(t,e,n){(function(e){function r(t){var e=this;t=e._config=t||{};var s="function"==typeof t.log?t.log:n(8);t.log=e.log=new s(t);var p=a.funcEnum(t,"connectionPool",r.connectionPools,"main");e.connectionPool=new p(t);var u=a.funcEnum(t,"serializer",r.serializers,"json");e.serializer=new u(t),e.nodesToHostCallback=a.funcEnum(t,"nodesToHostCallback",r.nodesToHostCallbacks,"main"),e.maxRetries=t.hasOwnProperty("maxRetries")?t.maxRetries:3,e.sniffEndpoint=t.hasOwnProperty("sniffEndpoint")?t.sniffEndpoint:"/_nodes/_all/http",e.requestTimeout=t.hasOwnProperty("requestTimeout")?t.requestTimeout:3e4,t.hasOwnProperty("defer")&&(e.defer=t.defer);var d=!t.hasOwnProperty("randomizeHosts")||!!t.randomizeHosts;if(t.host&&(t.hosts=t.host),t.hosts){var c=a.createArray(t.hosts,function(t){if(a.isPlainObject(t)||a.isString(t)||t instanceof i)return t});if(!c)throw new TypeError("Invalid hosts config. Expected a URL, an array of urls, a host config object, or an array of host config objects.");d&&(c=a.shuffle(c)),e.setHosts(c)}t.hasOwnProperty("sniffedNodesProtocol")?e.sniffedNodesProtocol=t.sniffedNodesProtocol||null:e.sniffedNodesProtocol=l(e.connectionPool.getAllHosts())||null,t.sniffOnStart&&e.sniff(),t.sniffInterval&&e._timeout(function n(){e.sniff(),e._timeout(n,t.sniffInterval)},t.sniffInterval),t.sniffOnConnectionFault&&o(e)}t.exports=r;var a=n(0),s=n(3),i=n(11),o=n(51),l=n(50);r.connectionPools={main:n(10)},r.serializers=n(22),r.nodesToHostCallbacks={main:n(20)},r.prototype.defer=function(){if("undefined"==typeof Promise)throw new Error("No Promise implementation found. In order for elasticsearch-js to create promises either specify the `defer` configuration or include a global Promise shim");var t={};return t.promise=new Promise(function(e,n){t.resolve=e,t.reject=n}),t},r.prototype.request=function(t,n){function r(e,n){V||(e?o(e):n?(p=n,u=p.request(t.req,i)):(f.log.warning("No living connections"),o(new s.NoConnections)))}function i(e,n,a,i){if(!V){if(u=void 0,e instanceof s.RequestTypeError)return f.log.error("Connection refused to execute the request",e),void o(e,n,a,i);if(e){p.setStatus("dead");var l=e.message||"";l="\n"+t.req.method+" "+p.host.makeUrl(t.req)+(l.length?" => ":"")+l,$?($--,f.log.error("Request error, retrying"+l),f.connectionPool.select(r)):(f.log.error("Request complete with error"+l),o(new s.ConnectionFault(e)))}else f.log.debug("Request complete"),o(void 0,n,a,i)}}function o(e,r,i,o){if(!V){f._timeout(d);var l,p=!o||o["content-type"]&&~o["content-type"].indexOf("application/json");if(!e&&r&&(p?null==(l=f.serializer.deserialize(r))&&(e=new s.Serialization,l=r):l=r),(!e||e instanceof s.Serialization)&&(i<200||i>=300)&&(!t.ignore||!a.include(t.ignore,i))){var u=a.pick(t.req,["path","query","body"]);u.statusCode=i,u.response=r,401===i&&o&&o["www-authenticate"]&&(u.wwwAuthenticateDirective=o["www-authenticate"]),e=s[i]?new s[i](l&&l.error,u):new s.Generic("unknown error",u)}t.castExists&&(e&&e instanceof s.NotFound?(l=!1,e=void 0):l=!e),"function"==typeof n?e?n(e,l,i):n(void 0,l,i):e?(e.body=l,e.status=i,m.reject(e)):m.resolve(l)}}function l(){V||(V=!0,$=0,f._timeout(d),"function"==typeof u&&u())}var p,u,d,c,m,f=this,$=this.maxRetries,y=this.requestTimeout,V=!1,h=t.body,b=t.headers?a.transform(t.headers,function(t,e,n){t[String(n).toLowerCase()]=e}):{};if(f.log.debug("starting request",t),"function"==typeof n?(e.domain&&(n=e.domain.bind(n)),c={abort:l}):(m=this.defer(),c=m.promise,c.abort=l),h&&"GET"===t.method)return a.nextTick(o,new TypeError('Body can not be sent with method "GET"')),c;if(h){var g=f.serializer,_=g[t.bulkBody?"bulkBody":"serialize"];h=_.call(g,h),b["content-type"]||(b["content-type"]=_.contentType)}return t.hasOwnProperty("maxRetries")&&($=t.maxRetries),t.hasOwnProperty("requestTimeout")&&(y=t.requestTimeout),t.req={method:t.method,path:t.path||"/",query:t.query,body:h,headers:b},y&&y!==1/0&&(d=this._timeout(function(){o(new s.RequestTimeout("Request Timeout after "+y+"ms")),l()},y)),p?r(void 0,p):f.connectionPool.select(r),c},r.prototype._timeout=function(t,e){if(!this.closed){var n,r=this._timers||(this._timers=[]);if("function"!=typeof t&&(n=t,t=void 0),t)return n=setTimeout(function(){a.pull(r,n),t()},e),r.push(n),n;if(n){clearTimeout(n);var s=this._timers.indexOf(n);-1!==s&&this._timers.splice(s,1)}}},r.prototype.sniff=function(t){var e=this,n=this.nodesToHostCallback,r=this.log,s=this.sniffedNodesProtocol;t="function"==typeof t?t:a.noop,this.request({path:this.sniffEndpoint,query:{filter_path:["nodes.*.http.publish_address","nodes.*.name","nodes.*.hostname","nodes.*.host","nodes.*.version"].join(",")},method:"GET"},function(i,o,l){if(!i&&o&&o.nodes){var p;try{p=n(o.nodes)}catch(t){return void r.error(new Error("Unable to convert node list from "+this.sniffEndpoint+" to hosts durring sniff. Encountered error:\n"+(t.stack||t.message)))}a.forEach(p,function(t){s&&(t.protocol=s)}),e.setHosts(p)}t(i,o,l)})},r.prototype.setHosts=function(t){var e=this._config;this.connectionPool.setHosts(a.map(t,function(t){return t instanceof i?t:new i(t,e)}))},r.prototype.close=function(){this.log.close(),this.closed=!0,a.each(this._timers,clearTimeout),this._timers=null,this.connectionPool.close()}}).call(e,n(5))},function(t,e,n){"use strict";(function(t){function r(){return s.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(t,e){if(r()<e)throw new RangeError("Invalid typed array length");return s.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e),t.__proto__=s.prototype):(null===t&&(t=new s(e)),t.length=e),t}function s(t,e,n){if(!(s.TYPED_ARRAY_SUPPORT||this instanceof s))return new s(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return p(this,t)}return i(this,t,e,n)}function i(t,e,n,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?c(t,e,n,r):"string"==typeof e?u(t,e,n):m(t,e)}function o(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function l(t,e,n,r){return o(e),e<=0?a(t,e):void 0!==n?"string"==typeof r?a(t,e).fill(n,r):a(t,e).fill(n):a(t,e)}function p(t,e){if(o(e),t=a(t,e<0?0:0|f(e)),!s.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function u(t,e,n){if("string"==typeof n&&""!==n||(n="utf8"),!s.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|y(e,n);t=a(t,r);var i=t.write(e,n);return i!==r&&(t=t.slice(0,i)),t}function d(t,e){var n=e.length<0?0:0|f(e.length);t=a(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function c(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r),s.TYPED_ARRAY_SUPPORT?(t=e,t.__proto__=s.prototype):t=d(t,e),t}function m(t,e){if(s.isBuffer(e)){var n=0|f(e.length);return t=a(t,n),0===t.length?t:(e.copy(t,0,0,n),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||J(e.length)?a(t,0):d(t,e);if("Buffer"===e.type&&Z(e.data))return d(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function f(t){if(t>=r())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r().toString(16)+" bytes");return 0|t}function $(t){return+t!=t&&(t=0),s.alloc(+t)}function y(t,e){if(s.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return W(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Y(t).length;default:if(r)return W(t).length;e=(""+e).toLowerCase(),r=!0}}function V(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,e>>>=0,n<=e)return"";for(t||(t="utf8");;)switch(t){case"hex":return I(this,e,n);case"utf8":case"utf-8":return S(this,e,n);case"ascii":return A(this,e,n);case"latin1":case"binary":return O(this,e,n);case"base64":return E(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function h(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function b(t,e,n,r,a){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(a)return-1;n=t.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof e&&(e=s.from(e,r)),s.isBuffer(e))return 0===e.length?-1:g(t,e,n,r,a);if("number"==typeof e)return e&=255,s.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):g(t,[e],n,r,a);throw new TypeError("val must be string, number or Buffer")}function g(t,e,n,r,a){function s(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}var i=1,o=t.length,l=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,l/=2,n/=2}var p;if(a){var u=-1;for(p=n;p<o;p++)if(s(t,p)===s(e,-1===u?0:p-u)){if(-1===u&&(u=p),p-u+1===l)return u*i}else-1!==u&&(p-=p-u),u=-1}else for(n+l>o&&(n=o-l),p=n;p>=0;p--){for(var d=!0,c=0;c<l;c++)if(s(t,p+c)!==s(e,c)){d=!1;break}if(d)return p}return-1}function _(t,e,n,r){n=Number(n)||0;var a=t.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=e.length;if(s%2!=0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(isNaN(o))return i;t[n+i]=o}return i}function v(t,e,n,r){return H(W(e,t.length-n),t,n,r)}function x(t,e,n,r){return H(z(e),t,n,r)}function q(t,e,n,r){return x(t,e,n,r)}function w(t,e,n,r){return H(Y(e),t,n,r)}function T(t,e,n,r){return H(G(e,t.length-n),t,n,r)}function E(t,e,n){return 0===e&&n===t.length?X.fromByteArray(t):X.fromByteArray(t.slice(e,n))}function S(t,e,n){n=Math.min(t.length,n);for(var r=[],a=e;a<n;){var s=t[a],i=null,o=s>239?4:s>223?3:s>191?2:1;if(a+o<=n){var l,p,u,d;switch(o){case 1:s<128&&(i=s);break;case 2:l=t[a+1],128==(192&l)&&(d=(31&s)<<6|63&l)>127&&(i=d);break;case 3:l=t[a+1],p=t[a+2],128==(192&l)&&128==(192&p)&&(d=(15&s)<<12|(63&l)<<6|63&p)>2047&&(d<55296||d>57343)&&(i=d);break;case 4:l=t[a+1],p=t[a+2],u=t[a+3],128==(192&l)&&128==(192&p)&&128==(192&u)&&(d=(15&s)<<18|(63&l)<<12|(63&p)<<6|63&u)>65535&&d<1114112&&(i=d)}}null===i?(i=65533,o=1):i>65535&&(i-=65536,r.push(i>>>10&1023|55296),i=56320|1023&i),r.push(i),a+=o}return k(r)}function k(t){var e=t.length;if(e<=Q)return String.fromCharCode.apply(String,t);for(var n="",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=Q));return n}function A(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(127&t[a]);return r}function O(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(t[a]);return r}function I(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=e;s<n;++s)a+=B(t[s]);return a}function N(t,e,n){for(var r=t.slice(e,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function C(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function R(t,e,n,r,a,i){if(!s.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>a||e<i)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function L(t,e,n,r){e<0&&(e=65535+e+1);for(var a=0,s=Math.min(t.length-n,2);a<s;++a)t[n+a]=(e&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function D(t,e,n,r){e<0&&(e=4294967295+e+1);for(var a=0,s=Math.min(t.length-n,4);a<s;++a)t[n+a]=e>>>8*(r?a:3-a)&255}function P(t,e,n,r,a,s){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function j(t,e,n,r,a){return a||P(t,e,n,4,3.4028234663852886e38,-3.4028234663852886e38),K.write(t,e,n,r,23,4),n+4}function U(t,e,n,r,a){return a||P(t,e,n,8,1.7976931348623157e308,-1.7976931348623157e308),K.write(t,e,n,r,52,8),n+8}function M(t){if(t=F(t).replace(tt,""),t.length<2)return"";for(;t.length%4!=0;)t+="=";return t}function F(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function B(t){return t<16?"0"+t.toString(16):t.toString(16)}function W(t,e){e=e||1/0;for(var n,r=t.length,a=null,s=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(e-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(e-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((e-=1)<0)break;s.push(n)}else if(n<2048){if((e-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function z(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}function G(t,e){for(var n,r,a,s=[],i=0;i<t.length&&!((e-=2)<0);++i)n=t.charCodeAt(i),r=n>>8,a=n%256,s.push(a),s.push(r);return s}function Y(t){return X.toByteArray(M(t))}function H(t,e,n,r){for(var a=0;a<r&&!(a+n>=e.length||a>=t.length);++a)e[a+n]=t[a];return a}function J(t){return t!==t}/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var X=n(33),K=n(52),Z=n(53);e.Buffer=s,e.SlowBuffer=$,e.INSPECT_MAX_BYTES=50,s.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=r(),s.poolSize=8192,s._augment=function(t){return t.__proto__=s.prototype,t},s.from=function(t,e,n){return i(null,t,e,n)},s.TYPED_ARRAY_SUPPORT&&(s.prototype.__proto__=Uint8Array.prototype,s.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&s[Symbol.species]===s&&Object.defineProperty(s,Symbol.species,{value:null,configurable:!0})),s.alloc=function(t,e,n){return l(null,t,e,n)},s.allocUnsafe=function(t){return p(null,t)},s.allocUnsafeSlow=function(t){return p(null,t)},s.isBuffer=function(t){return!(null==t||!t._isBuffer)},s.compare=function(t,e){if(!s.isBuffer(t)||!s.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,a=0,i=Math.min(n,r);a<i;++a)if(t[a]!==e[a]){n=t[a],r=e[a];break}return n<r?-1:r<n?1:0},s.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(t,e){if(!Z(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return s.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=s.allocUnsafe(e),a=0;for(n=0;n<t.length;++n){var i=t[n];if(!s.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},s.byteLength=y,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)h(this,e,e+1);return this},s.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)h(this,e,e+3),h(this,e+1,e+2);return this},s.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)h(this,e,e+7),h(this,e+1,e+6),h(this,e+2,e+5),h(this,e+3,e+4);return this},s.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?S(this,0,t):V.apply(this,arguments)},s.prototype.equals=function(t){if(!s.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===s.compare(this,t)},s.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},s.prototype.compare=function(t,e,n,r,a){if(!s.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),e<0||n>t.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&e>=n)return 0;if(r>=a)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,r>>>=0,a>>>=0,this===t)return 0;for(var i=a-r,o=n-e,l=Math.min(i,o),p=this.slice(r,a),u=t.slice(e,n),d=0;d<l;++d)if(p[d]!==u[d]){i=p[d],o=u[d];break}return i<o?-1:o<i?1:0},s.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},s.prototype.indexOf=function(t,e,n){return b(this,t,e,n,!0)},s.prototype.lastIndexOf=function(t,e,n){return b(this,t,e,n,!1)},s.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-e;if((void 0===n||n>a)&&(n=a),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return _(this,t,e,n);case"utf8":case"utf-8":return v(this,t,e,n);case"ascii":return x(this,t,e,n);case"latin1":case"binary":return q(this,t,e,n);case"base64":return w(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,t,e,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Q=4096;s.prototype.slice=function(t,e){var n=this.length;t=~~t,e=void 0===e?n:~~e,t<0?(t+=n)<0&&(t=0):t>n&&(t=n),e<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r;if(s.TYPED_ARRAY_SUPPORT)r=this.subarray(t,e),r.__proto__=s.prototype;else{var a=e-t;r=new s(a,void 0);for(var i=0;i<a;++i)r[i]=this[i+t]}return r},s.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||C(t,e,this.length);for(var r=this[t],a=1,s=0;++s<e&&(a*=256);)r+=this[t+s]*a;return r},s.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||C(t,e,this.length);for(var r=this[t+--e],a=1;e>0&&(a*=256);)r+=this[t+--e]*a;return r},s.prototype.readUInt8=function(t,e){return e||C(t,1,this.length),this[t]},s.prototype.readUInt16LE=function(t,e){return e||C(t,2,this.length),this[t]|this[t+1]<<8},s.prototype.readUInt16BE=function(t,e){return e||C(t,2,this.length),this[t]<<8|this[t+1]},s.prototype.readUInt32LE=function(t,e){return e||C(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},s.prototype.readUInt32BE=function(t,e){return e||C(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},s.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||C(t,e,this.length);for(var r=this[t],a=1,s=0;++s<e&&(a*=256);)r+=this[t+s]*a;return a*=128,r>=a&&(r-=Math.pow(2,8*e)),r},s.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||C(t,e,this.length);for(var r=e,a=1,s=this[t+--r];r>0&&(a*=256);)s+=this[t+--r]*a;return a*=128,s>=a&&(s-=Math.pow(2,8*e)),s},s.prototype.readInt8=function(t,e){return e||C(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},s.prototype.readInt16LE=function(t,e){e||C(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt16BE=function(t,e){e||C(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt32LE=function(t,e){return e||C(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},s.prototype.readInt32BE=function(t,e){return e||C(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},s.prototype.readFloatLE=function(t,e){return e||C(t,4,this.length),K.read(this,t,!0,23,4)},s.prototype.readFloatBE=function(t,e){return e||C(t,4,this.length),K.read(this,t,!1,23,4)},s.prototype.readDoubleLE=function(t,e){return e||C(t,8,this.length),K.read(this,t,!0,52,8)},s.prototype.readDoubleBE=function(t,e){return e||C(t,8,this.length),K.read(this,t,!1,52,8)},s.prototype.writeUIntLE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){R(this,t,e,n,Math.pow(2,8*n)-1,0)}var a=1,s=0;for(this[e]=255&t;++s<n&&(a*=256);)this[e+s]=t/a&255;return e+n},s.prototype.writeUIntBE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){R(this,t,e,n,Math.pow(2,8*n)-1,0)}var a=n-1,s=1;for(this[e+a]=255&t;--a>=0&&(s*=256);)this[e+a]=t/s&255;return e+n},s.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,1,255,0),s.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},s.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):L(this,t,e,!0),e+2},s.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):L(this,t,e,!1),e+2},s.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):D(this,t,e,!0),e+4},s.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},s.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);R(this,t,e,n,a-1,-a)}var s=0,i=1,o=0;for(this[e]=255&t;++s<n&&(i*=256);)t<0&&0===o&&0!==this[e+s-1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},s.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);R(this,t,e,n,a-1,-a)}var s=n-1,i=1,o=0;for(this[e+s]=255&t;--s>=0&&(i*=256);)t<0&&0===o&&0!==this[e+s+1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},s.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,1,127,-128),s.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},s.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):L(this,t,e,!0),e+2},s.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):L(this,t,e,!1),e+2},s.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,2147483647,-2147483648),s.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):D(this,t,e,!0),e+4},s.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),s.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},s.prototype.writeFloatLE=function(t,e,n){return j(this,t,e,!0,n)},s.prototype.writeFloatBE=function(t,e,n){return j(this,t,e,!1,n)},s.prototype.writeDoubleLE=function(t,e,n){return U(this,t,e,!0,n)},s.prototype.writeDoubleBE=function(t,e,n){return U(this,t,e,!1,n)},s.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var a,i=r-n;if(this===t&&n<e&&e<r)for(a=i-1;a>=0;--a)t[a+e]=this[a+n];else if(i<1e3||!s.TYPED_ARRAY_SUPPORT)for(a=0;a<i;++a)t[a+e]=this[a+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+i),e);return i},s.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===t.length){var a=t.charCodeAt(0);a<256&&(t=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!s.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0);var i;if("number"==typeof t)for(i=e;i<n;++i)this[i]=t;else{var o=s.isBuffer(t)?t:W(new s(t,r).toString()),l=o.length;for(i=0;i<n-e;++i)this[i+e]=o[i%l]}return this};var tt=/[^+\/0-9A-Za-z-_]/g}).call(e,n(2))},function(t,e,n){var r=n(1).makeFactoryWithModifier(function(t){return n(0).merge(t,{params:{filterPath:{type:"list",name:"filter_path"}}})}),a=n(1).namespaceFactory,s=t.exports={};s._namespaces=["cat","cluster","indices","ingest","nodes","snapshot","tasks"],s.bulk=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},type:{type:"string"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/_bulk",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_bulk",req:{index:{type:"string"}}},{fmt:"/_bulk"}],needBody:!0,bulkBody:!0,method:"POST"}),s.cat=a(),s.cat.prototype.aliases=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_cat/aliases"}]}),s.cat.prototype.allocation=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/allocation/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cat/allocation"}]}),s.cat.prototype.count=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/count/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/count"}]}),s.cat.prototype.fielddata=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1},fields:{type:"list"}},urls:[{fmt:"/_cat/fielddata/<%=fields%>",req:{fields:{type:"list"}}},{fmt:"/_cat/fielddata"}]}),s.cat.prototype.health=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},ts:{type:"boolean",default:!0},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/health"}}),s.cat.prototype.help=r({params:{help:{type:"boolean",default:!1},s:{type:"list"}},url:{fmt:"/_cat"}}),s.cat.prototype.indices=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},health:{type:"enum",default:null,options:["green","yellow","red"]},help:{type:"boolean",default:!1},pri:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/indices/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/indices"}]}),s.cat.prototype.master=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/master"}}),s.cat.prototype.nodeattrs=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodeattrs"}}),s.cat.prototype.nodes=r({params:{format:{type:"string"},fullId:{type:"boolean",name:"full_id"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodes"}}),s.cat.prototype.pendingTasks=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/pending_tasks"}}),s.cat.prototype.plugins=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/plugins"}}),s.cat.prototype.recovery=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/recovery/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/recovery"}]}),s.cat.prototype.repositories=r({params:{format:{type:"string"},local:{type:"boolean",default:!1},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/repositories"}}),s.cat.prototype.segments=r({params:{format:{type:"string"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/segments/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/segments"}]}),s.cat.prototype.shards=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/shards/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/shards"}]}),s.cat.prototype.snapshots=r({params:{format:{type:"string"},ignoreUnavailable:{type:"boolean",default:!1,name:"ignore_unavailable"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/snapshots/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_cat/snapshots"}]}),s.cat.prototype.tasks=r({params:{format:{type:"string"},nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"number",name:"parent_task"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/tasks"}}),s.cat.prototype.templates=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/templates/<%=name%>",req:{name:{type:"string"}}},{fmt:"/_cat/templates"}]}),s.cat.prototype.threadPool=r({params:{format:{type:"string"},size:{type:"enum",options:["","k","m","g","t","p"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/thread_pool/<%=threadPoolPatterns%>",req:{threadPoolPatterns:{type:"list"}}},{fmt:"/_cat/thread_pool"}]}),s.clearScroll=r({urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"list"}}},{fmt:"/_search/scroll"}],paramAsBody:{param:"scrollId",body:"scroll_id"},method:"DELETE"}),s.cluster=a(),s.cluster.prototype.allocationExplain=r({params:{includeYesDecisions:{type:"boolean",name:"include_yes_decisions"},includeDiskInfo:{type:"boolean",name:"include_disk_info"}},url:{fmt:"/_cluster/allocation/explain"},method:"POST"}),s.cluster.prototype.getSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/_cluster/settings"}}),s.cluster.prototype.health=r({params:{level:{type:"enum",default:"cluster",options:["cluster","indices","shards"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForNodes:{type:"string",name:"wait_for_nodes"},waitForEvents:{type:"enum",options:["immediate","urgent","high","normal","low","languid"],name:"wait_for_events"},waitForNoRelocatingShards:{type:"boolean",name:"wait_for_no_relocating_shards"},waitForStatus:{type:"enum",default:null,options:["green","yellow","red"],name:"wait_for_status"}},urls:[{fmt:"/_cluster/health/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cluster/health"}]}),s.cluster.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_cluster/pending_tasks"}}),s.cluster.prototype.putSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"},method:"PUT"}),s.cluster.prototype.reroute=r({params:{dryRun:{type:"boolean",name:"dry_run"},explain:{type:"boolean"},retryFailed:{type:"boolean",name:"retry_failed"},metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","master_node","version"]},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/reroute"},method:"POST"}),s.cluster.prototype.state=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/_cluster/state/<%=metric%>/<%=index%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]},index:{type:"list"}}},{fmt:"/_cluster/state/<%=metric%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]}}},{fmt:"/_cluster/state"}]}),s.cluster.prototype.stats=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},timeout:{type:"time"}},urls:[{fmt:"/_cluster/stats/nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cluster/stats"}]}),s.count=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_count",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_count",req:{index:{type:"list"}}},{fmt:"/_count"}],method:"POST"}),s.countPercolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_create",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},needBody:!0,method:"POST"}),s.delete=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_delete_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_delete_by_query",req:{index:{type:"list"}}}],needBody:!0,method:"POST"}),s.deleteScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}],method:"DELETE"}),s.deleteTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.exists=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.explain=r({params:{analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},analyzer:{type:"string"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},storedFields:{type:"list",name:"stored_fields"},lenient:{type:"boolean"},parent:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_explain",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.fieldStats=r({params:{fields:{type:"list"},level:{type:"enum",default:"cluster",options:["indices","cluster"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_stats",req:{index:{type:"list"}}},{fmt:"/_field_stats"}],method:"POST"}),s.get=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}]}),s.getSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}}}),s.index=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"string"},type:{type:"string"}}}],needBody:!0,method:"POST"}),s.indices=a(),s.indices.prototype.analyze=r({params:{analyzer:{type:"string"},charFilter:{type:"list",name:"char_filter"},field:{type:"string"},filter:{type:"list"},index:{type:"string"},preferLocal:{type:"boolean",name:"prefer_local"},text:{type:"list"},tokenizer:{type:"string"},explain:{type:"boolean"},attributes:{type:"list"},format:{type:"enum",default:"detailed",options:["detailed","text"]}},urls:[{fmt:"/<%=index%>/_analyze",req:{index:{type:"string"}}},{fmt:"/_analyze"}],method:"POST"}),s.indices.prototype.clearCache=r({params:{fieldData:{type:"boolean",name:"field_data"},fielddata:{type:"boolean"},fields:{type:"list"},query:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},index:{type:"list"},recycler:{type:"boolean"},request:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_cache/clear",req:{index:{type:"list"}}},{fmt:"/_cache/clear"}],method:"POST"}),s.indices.prototype.close=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_close",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},updateAllTypes:{type:"boolean",name:"update_all_types"}},url:{fmt:"/<%=index%>",req:{index:{type:"string"}}},method:"PUT"}),s.indices.prototype.delete=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteTemplate=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"DELETE"}),s.indices.prototype.exists=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}}],method:"HEAD"}),s.indices.prototype.existsTemplate=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"HEAD"}),s.indices.prototype.existsType=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},method:"HEAD"}),s.indices.prototype.flush=r({params:{force:{type:"boolean"},waitIfOngoing:{type:"boolean",name:"wait_if_ongoing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush",req:{index:{type:"list"}}},{fmt:"/_flush"}],method:"POST"}),s.indices.prototype.flushSynced=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush/synced",req:{index:{type:"list"}}},{fmt:"/_flush/synced"}],method:"POST"}),s.indices.prototype.forcemerge=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_forcemerge",req:{index:{type:"list"}}},{fmt:"/_forcemerge"}],method:"POST"}),s.indices.prototype.get=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/<%=feature%>",req:{index:{type:"list"},feature:{type:"list",options:["_settings","_mappings","_aliases"]}}},{fmt:"/<%=index%>",req:{index:{type:"list"}}}]}),s.indices.prototype.getAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}},{fmt:"/_alias"}]}),s.indices.prototype.getFieldMapping=r({params:{includeDefaults:{type:"boolean",name:"include_defaults"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>/field/<%=fields%>",req:{index:{type:"list"},type:{type:"list"},fields:{type:"list"}}},{fmt:"/<%=index%>/_mapping/field/<%=fields%>",req:{index:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/<%=type%>/field/<%=fields%>",req:{type:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/field/<%=fields%>",req:{fields:{type:"list"}}}]}),s.indices.prototype.getMapping=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_mapping",req:{index:{type:"list"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"list"}}},{fmt:"/_mapping"}]}),s.indices.prototype.getSettings=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},local:{type:"boolean"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/_settings/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_settings"}]}),s.indices.prototype.getTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_template"}]}),s.indices.prototype.getUpgrade=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}]}),s.indices.prototype.open=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"closed",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_open",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.putAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},method:"PUT"}),s.indices.prototype.putMapping=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},updateAllTypes:{type:"boolean",name:"update_all_types"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"string"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.putSettings=r({params:{masterTimeout:{type:"time",name:"master_timeout"},preserveExisting:{type:"boolean",name:"preserve_existing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"}},urls:[{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings"}],needBody:!0,method:"PUT"}),s.indices.prototype.putTemplate=r({params:{order:{type:"number"},create:{type:"boolean",default:!1},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},needBody:!0,method:"PUT"}),s.indices.prototype.recovery=r({params:{detailed:{type:"boolean",default:!1},activeOnly:{type:"boolean",default:!1,name:"active_only"}},urls:[{fmt:"/<%=index%>/_recovery",req:{index:{type:"list"}}},{fmt:"/_recovery"}]}),s.indices.prototype.refresh=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},force:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_refresh",req:{index:{type:"list"}}},{fmt:"/_refresh"}],method:"POST"}),s.indices.prototype.rollover=r({params:{timeout:{type:"time"},dryRun:{type:"boolean",name:"dry_run"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},urls:[{fmt:"/<%=alias%>/_rollover/<%=newIndex%>",req:{alias:{type:"string"},newIndex:{type:"string"}}},{fmt:"/<%=alias%>/_rollover",req:{alias:{type:"string"}}}],method:"POST"}),s.indices.prototype.segments=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},verbose:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_segments",req:{index:{type:"list"}}},{fmt:"/_segments"}]}),s.indices.prototype.shardStores=r({params:{status:{type:"list",options:["green","yellow","red","all"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_shard_stores",req:{index:{type:"list"}}},{fmt:"/_shard_stores"}]}),s.indices.prototype.shrink=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},url:{fmt:"/<%=index%>/_shrink/<%=target%>",req:{index:{type:"string"},target:{type:"string"}}},method:"POST"}),s.indices.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"list"},level:{type:"enum",default:"indices",options:["cluster","indices","shards"]},types:{type:"list"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/<%=index%>/_stats/<%=metric%>",req:{index:{type:"list"},metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_stats/<%=metric%>",req:{metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/<%=index%>/_stats",req:{index:{type:"list"}}},{fmt:"/_stats"}]}),s.indices.prototype.updateAliases=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_aliases"},needBody:!0,method:"POST"}),s.indices.prototype.upgrade=r({params:{allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},onlyAncientSegments:{type:"boolean",name:"only_ancient_segments"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}],method:"POST"}),s.indices.prototype.validateQuery=r({params:{explain:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},rewrite:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_validate/query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_validate/query",req:{index:{type:"list"}}},{fmt:"/_validate/query"}],method:"POST"}),s.info=r({url:{fmt:"/"}}),s.ingest=a(),s.ingest.prototype.deletePipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.ingest.prototype.getPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},urls:[{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline"}]}),s.ingest.prototype.putPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.ingest.prototype.simulate=r({params:{verbose:{type:"boolean",default:!1}},urls:[{fmt:"/_ingest/pipeline/<%=id%>/_simulate",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline/_simulate"}],needBody:!0,method:"POST"}),s.mget=r({params:{storedFields:{type:"list",name:"stored_fields"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mget",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mget",req:{index:{type:"string"}}},{fmt:"/_mget"}],needBody:!0,method:"POST"}),s.mpercolate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mpercolate",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mpercolate",req:{index:{type:"string"}}},{fmt:"/_mpercolate"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearch=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},maxConcurrentSearches:{type:"number",name:"max_concurrent_searches"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch",req:{index:{type:"list"}}},{fmt:"/_msearch"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearchTemplate=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch/template",req:{index:{type:"list"}}},{fmt:"/_msearch/template"}],needBody:!0,bulkBody:!0,method:"POST"}),s.mtermvectors=r({params:{ids:{type:"list",required:!1},termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mtermvectors",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mtermvectors",req:{index:{type:"string"}}},{fmt:"/_mtermvectors"}],method:"POST"}),s.nodes=a(),s.nodes.prototype.hotThreads=r({params:{interval:{type:"time"},snapshots:{type:"number"},threads:{type:"number"},ignoreIdleThreads:{type:"boolean",name:"ignore_idle_threads"},type:{type:"enum",options:["cpu","wait","block"]},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/hotthreads",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/hotthreads"}]}),s.nodes.prototype.info=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/<%=metric%>",req:{metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes"}]}),s.nodes.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"boolean"},level:{type:"enum",default:"node",options:["indices","node","shards"]},types:{type:"list"},timeout:{type:"time"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats/<%=metric%>/<%=indexMetric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/stats/<%=metric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats"}]}),s.percolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},percolateRouting:{type:"string",name:"percolate_routing"},percolatePreference:{type:"string",name:"percolate_preference"},percolateFormat:{type:"enum",options:["ids"],name:"percolate_format"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.ping=r({url:{fmt:"/"},requestTimeout:3e3,method:"HEAD"}),s.putScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}],needBody:!0,method:"PUT"}),s.putTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.reindex=r({params:{refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},url:{fmt:"/_reindex"},needBody:!0,method:"POST"}),s.reindexRethrottle=r({params:{requestsPerSecond:{type:"number",required:!0,name:"requests_per_second"}},url:{fmt:"/_reindex/<%=taskId%>/_rethrottle",req:{taskId:{type:"string"}}},method:"POST"}),s.renderSearchTemplate=r({urls:[{fmt:"/_render/template/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_render/template"}],method:"POST"}),s.scroll=r({params:{scroll:{type:"time"},scrollId:{type:"string",name:"scroll_id"}},urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"string"}}},{fmt:"/_search/scroll"}],paramAsBody:{param:"scrollId",body:"scroll_id"},method:"POST"}),s.search=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},storedFields:{type:"list",name:"stored_fields"},docvalueFields:{type:"list",name:"docvalue_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time"},trackScores:{type:"boolean",name:"track_scores"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search",req:{index:{type:"list"}}},{fmt:"/_search"}],method:"POST"}),s.searchShards=r({params:{preference:{type:"string"},routing:{type:"string"},local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search_shards",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search_shards",req:{index:{type:"list"}}},{fmt:"/_search_shards"}],method:"POST"}),s.searchTemplate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},explain:{type:"boolean"},profile:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/template",req:{index:{type:"list"}}},{fmt:"/_search/template"}],method:"POST"}),s.snapshot=a(),s.snapshot.prototype.create=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.createRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},verify:{type:"boolean"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"string"}}},needBody:!0,method:"POST"}),s.snapshot.prototype.delete=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"DELETE"}),s.snapshot.prototype.deleteRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},method:"DELETE"}),s.snapshot.prototype.get=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"list"}}}}),s.snapshot.prototype.getRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_snapshot"}]}),s.snapshot.prototype.restore=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_restore",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.status=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},urls:[{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_status",req:{repository:{type:"string"},snapshot:{type:"list"}}},{fmt:"/_snapshot/<%=repository%>/_status",req:{repository:{type:"string"}}},{fmt:"/_snapshot/_status"}]}),s.snapshot.prototype.verifyRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>/_verify",req:{repository:{type:"string"}}},method:"POST"}),s.suggest=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"string"}},urls:[{fmt:"/<%=index%>/_suggest",req:{index:{type:"list"}}},{fmt:"/_suggest"}],needBody:!0,method:"POST"}),s.tasks=a(),s.tasks.prototype.cancel=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"}},urls:[{fmt:"/_tasks/<%=taskId%>/_cancel",req:{taskId:{type:"string"}}},{fmt:"/_tasks/_cancel"}],method:"POST"}),s.tasks.prototype.get=r({params:{waitForCompletion:{type:"boolean",name:"wait_for_completion"}},url:{fmt:"/_tasks/<%=taskId%>",req:{taskId:{type:"string"}}}}),s.tasks.prototype.list=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},groupBy:{type:"enum",default:"nodes",options:["nodes","parents"],name:"group_by"}},url:{fmt:"/_tasks"}}),s.termvectors=r({params:{termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_termvectors",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_termvectors",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.update=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},lang:{type:"string"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},retryOnConflict:{type:"number",name:"retry_on_conflict"},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_update",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.updateByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},pipeline:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},versionType:{type:"boolean",name:"version_type"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_update_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_update_by_query",req:{index:{type:"list"}}}],method:"POST"})},function(t,e,n){t.exports={_default:n(14),5.3:n(14),5.2:n(39),5.1:n(38),"5.0":n(37),2.4:n(36),"5.x":n(41),5.4:n(40),master:n(42)}},function(t,e,n){function r(t){function e(){t.hasOwnProperty("log")||(t.log="warning"),t.hosts||t.host||(t.host="http://localhost:9200"),this.close=function(){this.transport.close()},this.transport=new a(t),i.each(e.prototype,i.bind(function(t,e){t.prototype instanceof s.ApiNamespace&&(this[e]=new t(this.transport,this))},this)),delete this._namespaces}if(t=t||{},t.__reused)throw new Error("Do not reuse objects to configure the elasticsearch Client class: https://github.com/elasticsearch/elasticsearch-js/issues/33");t.__reused=!0,e.prototype=i.funcEnum(t,"apiVersion",r.apis,"_default"),t.sniffEndpoint||e.prototype!==r.apis["0.90"]||(t.sniffEndpoint="/_cluster/nodes");var o=e;return t.plugins&&(o.prototype=i.cloneDeep(o.prototype),i.each(t.plugins,function(e){o=e(o,t,{apis:n(15),connectors:n(17),loggers:n(19),selectors:n(21),serializers:n(22),Client:n(16),clientAction:s,Connection:n(7),ConnectionPool:n(10),Errors:n(3),Host:n(11),Log:n(8),Logger:n(18),NodesToHost:n(20),Transport:n(12),utils:n(0)})||o})),new o}t.exports=r;var a=n(12),s=n(1),i=n(0);r.apis=n(15)},function(t,e,n){var r={xhr:n(45),jquery:n(44),angular:n(43)};n(0).each(r,function(t,e){"function"!=typeof t&&delete r[e]}),r.xhr?r._default="xhr":r.angular?r._default="angular":r._default="jquery",t.exports=r},function(t,e,n){function r(t,e){this.log=t,this.listeningLevels=[],i.makeBoundMethods(this),this.log.once("closing",this.bound.cleanUpListeners),this.setupListeners(e.levels)}function a(t){return t<10?"0"+t.toString(10):t.toString(10)}function s(t,e){var n=i.repeat(" ",e||2);return(t||"").split(/\r?\n/).map(function(t){return n+t}).join("\n")}var i=n(0);r.prototype.timestamp=function(){var t=new Date;return t.getUTCFullYear()+"-"+a(t.getUTCMonth()+1)+"-"+a(t.getUTCDate())+"T"+a(t.getUTCHours())+":"+a(t.getUTCMinutes())+":"+a(t.getUTCSeconds())+"Z"},r.prototype.format=function(t,e){return t+": "+this.timestamp()+"\n"+s(e)+"\n\n"},r.prototype.write=function(){throw new Error("This should be overwritten by the logger")},r.prototype.setupListeners=function(t){this.cleanUpListeners(),this.listeningLevels=[],i.each(t,i.bind(function(t){var e="on"+i.ucfirst(t);if(!this.bound[e])throw new Error('Unable to listen for level "'+t+'"');this.listeningLevels.push(t),this.log.on(t,this.bound[e])},this))},r.prototype.cleanUpListeners=i.handler(function(){i.each(this.listeningLevels,i.bind(function(t){this.log.removeListener(t,this.bound["on"+i.ucfirst(t)])},this))}),r.prototype.onError=i.handler(function(t){this.write("Error"===t.name?"ERROR":t.name,t.stack)}),r.prototype.onWarning=i.handler(function(t){this.write("WARNING",t)}),r.prototype.onInfo=i.handler(function(t){this.write("INFO",t)}),r.prototype.onDebug=i.handler(function(t){this.write("DEBUG",t)}),r.prototype.onTrace=i.handler(function(t){this.write("TRACE",this._formatTraceMessage(t))}),r.prototype._formatTraceMessage=function(t){return"-> "+t.method+" "+t.url+"\n"+this._prettyJson(t.body)+"\n<- "+t.status+"\n"+this._prettyJson(t.response)},r.prototype._prettyJson=function(t){try{return"string"==typeof t&&(t=JSON.parse(t)),JSON.stringify(t,null,"  ").replace(/'/g,"\\u0027")}catch(e){return"string"==typeof t?t:""}},t.exports=r},function(t,e,n){t.exports={console:n(46)}},function(t,e,n){var r=n(0),a=/\[(?:(.*)\/)?(.+?):(\d+)\]/;t.exports=function(t){return function(e){return r.transform(e,function(e,n,s){var i=r.get(n,t);if(i){var o={host:void 0,port:void 0,_meta:{id:s,name:n.name,version:n.version}},l=new Error("Malformed "+t+". Got "+JSON.stringify(i)+' and expected it to match "{hostname?}/{ip}:{port}".'),p=a.exec(i);if(p)return o.host=p[1]||p[2],o.port=parseInt(p[3],10),void e.push(o);if(i.indexOf("/")>-1){var u=i.split("/");if(2!==u.length)throw l;o.host=u.shift(),i=u.shift()}if(i.indexOf(":")<0)throw l;var d=i.split(":");if(2!==d.length)throw l;o.host=o.host||d[0],o.port=parseInt(d[1],10),e.push(o)}},[])}}("http.publish_address")},function(t,e,n){t.exports={random:n(47),roundRobin:n(48)}},function(t,e,n){t.exports={angular:n(49),json:n(23)}},function(t,e,n){function r(){}t.exports=r;var a=n(0);r.prototype.serialize=function(t,e,n){switch(typeof t){case"string":return t;case"object":if(t)return JSON.stringify(t,e,n);default:return}},r.prototype.serialize.contentType="application/json",r.prototype.deserialize=function(t){if("string"==typeof t)try{return JSON.parse(t)}catch(t){}},r.prototype.bulkBody=function(t){var e,n="";if(a.isArray(t))for(e=0;e<t.length;e++)n+=this.serialize(t[e])+"\n";else{if("string"!=typeof t)throw new TypeError("Bulk body should either be an Array of commands/string, or a String");n=t+("\n"===t[t.length-1]?"":"\n")}return n},r.prototype.bulkBody.contentType="application/x-ndjson"},function(t,e){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(t){return"function"==typeof t}function a(t){return"number"==typeof t}function s(t){return"object"==typeof t&&null!==t}function i(t){return void 0===t}t.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(t){if(!a(t)||t<0||isNaN(t))throw TypeError("n must be a positive number");return this._maxListeners=t,this},n.prototype.emit=function(t){var e,n,a,o,l,p;if(this._events||(this._events={}),"error"===t&&(!this._events.error||s(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var u=new Error('Uncaught, unspecified "error" event. ('+e+")");throw u.context=e,u}if(n=this._events[t],i(n))return!1;if(r(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:o=Array.prototype.slice.call(arguments,1),n.apply(this,o)}else if(s(n))for(o=Array.prototype.slice.call(arguments,1),p=n.slice(),a=p.length,l=0;l<a;l++)p[l].apply(this,o);return!0},n.prototype.addListener=function(t,e){var a;if(!r(e))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",t,r(e.listener)?e.listener:e),this._events[t]?s(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,s(this._events[t])&&!this._events[t].warned&&(a=i(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&a>0&&this._events[t].length>a&&(this._events[t].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[t].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(t,e){function n(){this.removeListener(t,n),a||(a=!0,e.apply(this,arguments))}if(!r(e))throw TypeError("listener must be a function");var a=!1;return n.listener=e,this.on(t,n),this},n.prototype.removeListener=function(t,e){var n,a,i,o;if(!r(e))throw TypeError("listener must be a function");if(!this._events||!this._events[t])return this;if(n=this._events[t],i=n.length,a=-1,n===e||r(n.listener)&&n.listener===e)delete this._events[t],this._events.removeListener&&this.emit("removeListener",t,e);else if(s(n)){for(o=i;o-- >0;)if(n[o]===e||n[o].listener&&n[o].listener===e){a=o;break}if(a<0)return this;1===n.length?(n.length=0,delete this._events[t]):n.splice(a,1),this._events.removeListener&&this.emit("removeListener",t,e)}return this},n.prototype.removeAllListeners=function(t){var e,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)"removeListener"!==e&&this.removeAllListeners(e);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[t],r(n))this.removeListener(t,n);else if(n)for(;n.length;)this.removeListener(t,n[n.length-1]);return delete this._events[t],this},n.prototype.listeners=function(t){return this._events&&this._events[t]?r(this._events[t])?[this._events[t]]:this._events[t].slice():[]},n.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(r(e))return 1;if(e)return e.length}return 0},n.listenerCount=function(t,e){return t.listenerCount(e)}},function(t,e,n){"use strict";e.decode=e.parse=n(60),e.encode=e.stringify=n(61)},function(t,e,n){"use strict";function r(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}function a(t,e,n){if(t&&p.isObject(t)&&t instanceof r)return t;var a=new r;return a.parse(t,e,n),a}function s(t){return p.isString(t)&&(t=a(t)),t instanceof r?t.format():r.prototype.format.call(t)}function i(t,e){return a(t,!1,!0).resolve(e)}function o(t,e){return t?a(t,!1,!0).resolveObject(e):e}var l=n(59),p=n(71);e.parse=a,e.resolve=i,e.resolveObject=o,e.format=s,e.Url=r;var u=/^([a-z0-9.+-]+:)/i,d=/:[0-9]*$/,c=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,m=["<",">",'"',"`"," ","\r","\n","\t"],f=["{","}","|","\\","^","`"].concat(m),$=["'"].concat(f),y=["%","/","?",";","#"].concat($),V=["/","?","#"],h=/^[+a-z0-9A-Z_-]{0,63}$/,b=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,g={javascript:!0,"javascript:":!0},_={javascript:!0,"javascript:":!0},v={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},x=n(25);r.prototype.parse=function(t,e,n){if(!p.isString(t))throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var r=t.indexOf("?"),a=-1!==r&&r<t.indexOf("#")?"?":"#",s=t.split(a),i=/\\/g;s[0]=s[0].replace(i,"/"),t=s.join(a);var o=t;if(o=o.trim(),!n&&1===t.split("#").length){var d=c.exec(o);if(d)return this.path=o,this.href=o,this.pathname=d[1],d[2]?(this.search=d[2],this.query=e?x.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search="",this.query={}),this}var m=u.exec(o);if(m){m=m[0];var f=m.toLowerCase();this.protocol=f,o=o.substr(m.length)}if(n||m||o.match(/^\/\/[^@\/]+@[^@\/]+/)){var q="//"===o.substr(0,2);!q||m&&_[m]||(o=o.substr(2),this.slashes=!0)}if(!_[m]&&(q||m&&!v[m])){for(var w=-1,T=0;T<V.length;T++){var E=o.indexOf(V[T]);-1!==E&&(-1===w||E<w)&&(w=E)}var S,k;k=-1===w?o.lastIndexOf("@"):o.lastIndexOf("@",w),-1!==k&&(S=o.slice(0,k),o=o.slice(k+1),this.auth=decodeURIComponent(S)),w=-1;for(var T=0;T<y.length;T++){var E=o.indexOf(y[T]);-1!==E&&(-1===w||E<w)&&(w=E)}-1===w&&(w=o.length),this.host=o.slice(0,w),o=o.slice(w),this.parseHost(),this.hostname=this.hostname||"";var A="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!A)for(var O=this.hostname.split(/\./),T=0,I=O.length;T<I;T++){var N=O[T];if(N&&!N.match(h)){for(var C="",R=0,L=N.length;R<L;R++)N.charCodeAt(R)>127?C+="x":C+=N[R];if(!C.match(h)){var D=O.slice(0,T),P=O.slice(T+1),j=N.match(b);j&&(D.push(j[1]),P.unshift(j[2])),P.length&&(o="/"+P.join(".")+o),this.hostname=D.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),A||(this.hostname=l.toASCII(this.hostname));var U=this.port?":"+this.port:"",M=this.hostname||"";this.host=M+U,this.href+=this.host,A&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==o[0]&&(o="/"+o))}if(!g[f])for(var T=0,I=$.length;T<I;T++){var F=$[T];if(-1!==o.indexOf(F)){var B=encodeURIComponent(F);B===F&&(B=escape(F)),o=o.split(F).join(B)}}var W=o.indexOf("#");-1!==W&&(this.hash=o.substr(W),o=o.slice(0,W));var z=o.indexOf("?");if(-1!==z?(this.search=o.substr(z),this.query=o.substr(z+1),e&&(this.query=x.parse(this.query)),o=o.slice(0,z)):e&&(this.search="",this.query={}),o&&(this.pathname=o),v[f]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){var U=this.pathname||"",G=this.search||"";this.path=U+G}return this.href=this.format(),this},r.prototype.format=function(){var t=this.auth||"";t&&(t=encodeURIComponent(t),t=t.replace(/%3A/i,":"),t+="@");var e=this.protocol||"",n=this.pathname||"",r=this.hash||"",a=!1,s="";this.host?a=t+this.host:this.hostname&&(a=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(a+=":"+this.port)),this.query&&p.isObject(this.query)&&Object.keys(this.query).length&&(s=x.stringify(this.query));var i=this.search||s&&"?"+s||"";return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||v[e])&&!1!==a?(a="//"+(a||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):a||(a=""),r&&"#"!==r.charAt(0)&&(r="#"+r),i&&"?"!==i.charAt(0)&&(i="?"+i),n=n.replace(/[?#]/g,function(t){return encodeURIComponent(t)}),i=i.replace("#","%23"),e+a+n+i+r},r.prototype.resolve=function(t){return this.resolveObject(a(t,!1,!0)).format()},r.prototype.resolveObject=function(t){if(p.isString(t)){var e=new r;e.parse(t,!1,!0),t=e}for(var n=new r,a=Object.keys(this),s=0;s<a.length;s++){var i=a[s];n[i]=this[i]}if(n.hash=t.hash,""===t.href)return n.href=n.format(),n;if(t.slashes&&!t.protocol){for(var o=Object.keys(t),l=0;l<o.length;l++){var u=o[l];"protocol"!==u&&(n[u]=t[u])}return v[n.protocol]&&n.hostname&&!n.pathname&&(n.path=n.pathname="/"),n.href=n.format(),n}if(t.protocol&&t.protocol!==n.protocol){if(!v[t.protocol]){for(var d=Object.keys(t),c=0;c<d.length;c++){var m=d[c];n[m]=t[m]}return n.href=n.format(),n}if(n.protocol=t.protocol,t.host||_[t.protocol])n.pathname=t.pathname;else{for(var f=(t.pathname||"").split("/");f.length&&!(t.host=f.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==f[0]&&f.unshift(""),f.length<2&&f.unshift(""),n.pathname=f.join("/")}if(n.search=t.search,n.query=t.query,n.host=t.host||"",n.auth=t.auth,n.hostname=t.hostname||t.host,n.port=t.port,n.pathname||n.search){var $=n.pathname||"",y=n.search||"";n.path=$+y}return n.slashes=n.slashes||t.slashes,n.href=n.format(),n}var V=n.pathname&&"/"===n.pathname.charAt(0),h=t.host||t.pathname&&"/"===t.pathname.charAt(0),b=h||V||n.host&&t.pathname,g=b,x=n.pathname&&n.pathname.split("/")||[],f=t.pathname&&t.pathname.split("/")||[],q=n.protocol&&!v[n.protocol];if(q&&(n.hostname="",n.port=null,n.host&&(""===x[0]?x[0]=n.host:x.unshift(n.host)),n.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===f[0]?f[0]=t.host:f.unshift(t.host)),t.host=null),b=b&&(""===f[0]||""===x[0])),h)n.host=t.host||""===t.host?t.host:n.host,n.hostname=t.hostname||""===t.hostname?t.hostname:n.hostname,n.search=t.search,n.query=t.query,x=f;else if(f.length)x||(x=[]),x.pop(),x=x.concat(f),n.search=t.search,n.query=t.query;else if(!p.isNullOrUndefined(t.search)){if(q){n.hostname=n.host=x.shift();var w=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@");w&&(n.auth=w.shift(),n.host=n.hostname=w.shift())}return n.search=t.search,n.query=t.query,p.isNull(n.pathname)&&p.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n}if(!x.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var T=x.slice(-1)[0],E=(n.host||t.host||x.length>1)&&("."===T||".."===T)||""===T,S=0,k=x.length;k>=0;k--)T=x[k],"."===T?x.splice(k,1):".."===T?(x.splice(k,1),S++):S&&(x.splice(k,1),S--);if(!b&&!g)for(;S--;S)x.unshift("..");!b||""===x[0]||x[0]&&"/"===x[0].charAt(0)||x.unshift(""),E&&"/"!==x.join("/").substr(-1)&&x.push("");var A=""===x[0]||x[0]&&"/"===x[0].charAt(0);if(q){n.hostname=n.host=A?"":x.length?x.shift():"";var w=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@");w&&(n.auth=w.shift(),n.host=n.hostname=w.shift())}return b=b||n.host&&x.length,b&&!A&&x.unshift(""),x.length?n.pathname=x.join("/"):(n.pathname=null,n.path=null),p.isNull(n.pathname)&&p.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=t.auth||n.auth,n.slashes=n.slashes||t.slashes,n.href=n.format(),n},r.prototype.parseHost=function(){var t=this.host,e=d.exec(t);e&&(e=e[0],":"!==e&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)}},function(t,e,n){t.exports=n(57)},function(t,e,n){var r=n(6),a=n(35),s=new a.Client({host:window.ES_CONFIG?window.ES_CONFIG.options.es.host:"localhost:9200"});t.exports=function(t,e,a,i,o){var l=n(77),t=t||"",e=e||["_all"],a=a||{};return s.search({index:window.ES_CONFIG?window.ES_CONFIG.es.options.es.index:"my-index",type:window.ES_CONFIG?window.ES_CONFIG.options.es.type:"my-type",body:l(t,e,a,i,o)}).then(function(n){var s={};r.forOwn(a,function(t,e,r){s[t.field]=n.aggregations[t.field].buckets});var i={query:{match:t,fields:e,terms:a},response:{total:n.hits.total,items:r.map(n.hits.hits,function(t){return t._source}),aggs:s}};return console.log("result",i),i})}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){var e=n(69),r=(n.n(e),n(6));t.exports=function(t,e,n,a,s){var t=t||"",e=e||["_all"],n=n||{},i=window.ES_CONFIG.options.table;return alasql.promise([["SELECT * FROM ?(?, {separator:?}) WHERE ?",[i.type,i.file,i.separator,r.join(r.map(e,function(e){return e+" LIKE "+t})," OR ")]]]).then(function(a){var s={};r.forOwn(n,function(t,e,n){s[t.field]=a.aggregations[t.field].buckets});var i={query:{match:t,fields:e,terms:n},response:{total:a.length,items:a,aggs:s}};return console.log("result",i),i})}}.call(e,n(75)(t))},function(t,e,n){n(64),n(63),n(65)},function(t,e,n){n(66)},function(t,e,n){n(67)},function(t,e,n){"use strict";function r(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");return"="===t[e-2]?2:"="===t[e-1]?1:0}function a(t){return 3*t.length/4-r(t)}function s(t){var e,n,a,s,i,o,l=t.length;i=r(t),o=new d(3*l/4-i),a=i>0?l-4:l;var p=0;for(e=0,n=0;e<a;e+=4,n+=3)s=u[t.charCodeAt(e)]<<18|u[t.charCodeAt(e+1)]<<12|u[t.charCodeAt(e+2)]<<6|u[t.charCodeAt(e+3)],o[p++]=s>>16&255,o[p++]=s>>8&255,o[p++]=255&s;return 2===i?(s=u[t.charCodeAt(e)]<<2|u[t.charCodeAt(e+1)]>>4,o[p++]=255&s):1===i&&(s=u[t.charCodeAt(e)]<<10|u[t.charCodeAt(e+1)]<<4|u[t.charCodeAt(e+2)]>>2,o[p++]=s>>8&255,o[p++]=255&s),o}function i(t){return p[t>>18&63]+p[t>>12&63]+p[t>>6&63]+p[63&t]}function o(t,e,n){for(var r,a=[],s=e;s<n;s+=3)r=(t[s]<<16)+(t[s+1]<<8)+t[s+2],a.push(i(r));return a.join("")}function l(t){for(var e,n=t.length,r=n%3,a="",s=[],i=0,l=n-r;i<l;i+=16383)s.push(o(t,i,i+16383>l?l:i+16383));return 1===r?(e=t[n-1],a+=p[e>>2],a+=p[e<<4&63],a+="=="):2===r&&(e=(t[n-2]<<8)+t[n-1],a+=p[e>>10],a+=p[e>>4&63],a+=p[e<<2&63],a+="="),s.push(a),s.join("")}e.byteLength=a,e.toByteArray=s,e.fromByteArray=l;for(var p=[],u=[],d="undefined"!=typeof Uint8Array?Uint8Array:Array,c="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",m=0,f=c.length;m<f;++m)p[m]=c[m],u[c.charCodeAt(m)]=m;u["-".charCodeAt(0)]=62,u["_".charCodeAt(0)]=63},function(t,e,n){(function(t,r){var a;(function(){function s(t,e,n){for(var r=(n||0)-1,a=t?t.length:0;++r<a;)if(t[r]===e)return r;return-1}function i(t,e){var n=typeof e;if(t=t.cache,"boolean"==n||null==e)return t[e]?0:-1;"number"!=n&&"string"!=n&&(n="object");var r="number"==n?e:v+e;return t=(t=t[n])&&t[r],"object"==n?t&&s(t,e)>-1?0:-1:t?0:-1}function o(t){var e=this.cache,n=typeof t;if("boolean"==n||null==t)e[t]=!0;else{"number"!=n&&"string"!=n&&(n="object");var r="number"==n?t:v+t,a=e[n]||(e[n]={});"object"==n?(a[r]||(a[r]=[])).push(t):a[r]=!0}}function l(t){return t.charCodeAt(0)}function p(t,e){for(var n=t.criteria,r=e.criteria,a=-1,s=n.length;++a<s;){var i=n[a],o=r[a];if(i!==o){if(i>o||void 0===i)return 1;if(i<o||void 0===o)return-1}}return t.index-e.index}function u(t){var e=-1,n=t.length,r=t[0],a=t[n/2|0],s=t[n-1];if(r&&"object"==typeof r&&a&&"object"==typeof a&&s&&"object"==typeof s)return!1;var i=m();i.false=i.null=i.true=i.undefined=!1;var l=m();for(l.array=t,l.cache=i,l.push=o;++e<n;)l.push(t[e]);return l}function d(t){return"\\"+Z[t]}function c(){return b.pop()||[]}function m(){return g.pop()||{array:null,cache:null,criteria:null,false:!1,index:0,null:!1,number:null,object:null,push:null,string:null,true:!1,undefined:!1,value:null}}function f(t){t.length=0,b.length<q&&b.push(t)}function $(t){var e=t.cache;e&&$(e),t.array=t.cache=t.criteria=t.object=t.number=t.string=t.value=null,g.length<q&&g.push(t)}function y(t,e,n){e||(e=0),void 0===n&&(n=t?t.length:0);for(var r=-1,a=n-e||0,s=Array(a<0?0:a);++r<a;)s[r]=t[e+r];return s}function V(t){function e(t){return t&&"object"==typeof t&&!Zn(t)&&Cn.call(t,"__wrapped__")?t:new n(t)}function n(t,e){this.__chain__=!!e,this.__wrapped__=t}function r(t){function e(){if(r){var t=y(r);Rn.apply(t,arguments)}if(this instanceof e){var s=o(n.prototype),i=n.apply(s,t||arguments);return At(i)?i:s}return n.apply(a,t||arguments)}var n=t[0],r=t[2],a=t[4];return Kn(e,t),e}function a(t,e,n,r,s){if(n){var i=n(t);if(void 0!==i)return i}if(!At(t))return t;var o=En.call(t);if(!H[o])return t;var l=Jn[o];switch(o){case M:case F:return new l(+t);case W:case Y:return new l(t);case G:return i=l(t.source,A.exec(t)),i.lastIndex=t.lastIndex,i}var p=Zn(t);if(e){var u=!r;r||(r=c()),s||(s=c());for(var d=r.length;d--;)if(r[d]==t)return s[d];i=p?l(t.length):{}}else i=p?y(t):sr({},t);return p&&(Cn.call(t,"index")&&(i.index=t.index),Cn.call(t,"input")&&(i.input=t.input)),e?(r.push(t),s.push(i),(p?Xt:lr)(t,function(t,o){i[o]=a(t,e,n,r,s)}),u&&(f(r),f(s)),i):i}function o(t,e){return At(t)?Un(t):{}}function b(t,e,n){if("function"!=typeof t)return Ke;if(void 0===e||!("prototype"in t))return t;var r=t.__bindData__;if(void 0===r&&(Xn.funcNames&&(r=!t.name),!(r=r||!Xn.funcDecomp))){var a=In.call(t);Xn.funcNames||(r=!O.test(a)),r||(r=R.test(a),Kn(t,r))}if(!1===r||!0!==r&&1&r[1])return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,a){return t.call(e,n,r,a)};case 4:return function(n,r,a,s){return t.call(e,n,r,a,s)}}return Ce(t,e)}function g(t){function e(){var t=p?i:this;if(a){var f=y(a);Rn.apply(f,arguments)}if((s||d)&&(f||(f=y(arguments)),s&&Rn.apply(f,s),d&&f.length<l))return r|=16,g([n,c?r:-4&r,f,null,i,l]);if(f||(f=arguments),u&&(n=t[m]),this instanceof e){t=o(n.prototype);var $=n.apply(t,f);return At($)?$:t}return n.apply(t,f)}var n=t[0],r=t[1],a=t[2],s=t[3],i=t[4],l=t[5],p=1&r,u=2&r,d=4&r,c=8&r,m=n;return Kn(e,t),e}function q(t,e){var n=-1,r=lt(),a=t?t.length:0,o=a>=x&&r===s,l=[];if(o){var p=u(e);p?(r=i,e=p):o=!1}for(;++n<a;){var d=t[n];r(e,d)<0&&l.push(d)}return o&&$(e),l}function Z(t,e,n,r){for(var a=(r||0)-1,s=t?t.length:0,i=[];++a<s;){var o=t[a];if(o&&"object"==typeof o&&"number"==typeof o.length&&(Zn(o)||ct(o))){e||(o=Z(o,e,n));var l=-1,p=o.length,u=i.length;for(i.length+=p;++l<p;)i[u++]=o[l]}else n||i.push(o)}return i}function tt(t,e,n,r,a,s){if(n){var i=n(t,e);if(void 0!==i)return!!i}if(t===e)return 0!==t||1/t==1/e;var o=typeof t,l=typeof e;if(!(t!==t||t&&K[o]||e&&K[l]))return!1;if(null==t||null==e)return t===e;var p=En.call(t),u=En.call(e);if(p==j&&(p=z),u==j&&(u=z),p!=u)return!1;switch(p){case M:case F:return+t==+e;case W:return t!=+t?e!=+e:0==t?1/t==1/e:t==+e;case G:case Y:return t==vn(e)}var d=p==U;if(!d){var m=Cn.call(t,"__wrapped__"),$=Cn.call(e,"__wrapped__");if(m||$)return tt(m?t.__wrapped__:t,$?e.__wrapped__:e,n,r,a,s);if(p!=z)return!1;var y=t.constructor,V=e.constructor;if(y!=V&&!(kt(y)&&y instanceof y&&kt(V)&&V instanceof V)&&"constructor"in t&&"constructor"in e)return!1}var h=!a;a||(a=c()),s||(s=c());for(var b=a.length;b--;)if(a[b]==t)return s[b]==e;var g=0;if(i=!0,a.push(t),s.push(e),d){if(b=t.length,g=e.length,(i=g==b)||r)for(;g--;){var _=b,v=e[g];if(r)for(;_--&&!(i=tt(t[_],v,n,r,a,s)););else if(!(i=tt(t[g],v,n,r,a,s)))break}}else or(e,function(e,o,l){if(Cn.call(l,o))return g++,i=Cn.call(t,o)&&tt(t[o],e,n,r,a,s)}),i&&!r&&or(t,function(t,e,n){if(Cn.call(n,e))return i=--g>-1});return a.pop(),s.pop(),h&&(f(a),f(s)),i}function et(t,e,n,r,a){(Zn(e)?Xt:lr)(e,function(e,s){var i,o,l=e,p=t[s];if(e&&((o=Zn(e))||pr(e))){for(var u=r.length;u--;)if(i=r[u]==e){p=a[u];break}if(!i){var d;n&&(l=n(p,e),(d=void 0!==l)&&(p=l)),d||(p=o?Zn(p)?p:[]:pr(p)?p:{}),r.push(e),a.push(p),d||et(p,e,n,r,a)}}else n&&void 0===(l=n(p,e))&&(l=e),void 0!==l&&(p=l);t[s]=p})}function nt(t,e){return t+On(Hn()*(e-t+1))}function at(t,e,n){var r=-1,a=lt(),o=t?t.length:0,l=[],p=!e&&o>=x&&a===s,d=n||p?c():l;if(p){var m=u(d);a=i,d=m}for(;++r<o;){var y=t[r],V=n?n(y,r,t):y;(e?!r||d[d.length-1]!==V:a(d,V)<0)&&((n||p)&&d.push(V),l.push(y))}return p?(f(d.array),$(d)):n&&f(d),l}function st(t){return function(n,r,a){var s={};r=e.createCallback(r,a,3);var i=-1,o=n?n.length:0;if("number"==typeof o)for(;++i<o;){var l=n[i];t(s,l,r(l,i,n),n)}else lr(n,function(e,n,a){t(s,e,r(e,n,a),a)});return s}}function it(t,e,n,a,s,i){var o=1&e,l=2&e,p=4&e,u=16&e,d=32&e;if(!l&&!kt(t))throw new xn;u&&!n.length&&(e&=-17,u=n=!1),d&&!a.length&&(e&=-33,d=a=!1);var c=t&&t.__bindData__;return c&&!0!==c?(c=y(c),c[2]&&(c[2]=y(c[2])),c[3]&&(c[3]=y(c[3])),!o||1&c[1]||(c[4]=s),!o&&1&c[1]&&(e|=8),!p||4&c[1]||(c[5]=i),u&&Rn.apply(c[2]||(c[2]=[]),n),d&&Pn.apply(c[3]||(c[3]=[]),a),c[1]|=e,it.apply(null,c)):(1==e||17===e?r:g)([t,e,n,a,s,i])}function ot(t){return er[t]}function lt(){var t=(t=e.indexOf)===Ve?s:t;return t}function pt(t){return"function"==typeof t&&Sn.test(t)}function ut(t){var e,n;return!!(t&&En.call(t)==z&&(e=t.constructor,!kt(e)||e instanceof e))&&(or(t,function(t,e){n=e}),void 0===n||Cn.call(t,n))}function dt(t){return nr[t]}function ct(t){return t&&"object"==typeof t&&"number"==typeof t.length&&En.call(t)==j||!1}function mt(t,e,n,r){return"boolean"!=typeof e&&null!=e&&(r=n,n=e,e=!1),a(t,e,"function"==typeof n&&b(n,r,1))}function ft(t,e,n){return a(t,!0,"function"==typeof e&&b(e,n,1))}function $t(t,e){var n=o(t);return e?sr(n,e):n}function yt(t,n,r){var a;return n=e.createCallback(n,r,3),lr(t,function(t,e,r){if(n(t,e,r))return a=e,!1}),a}function Vt(t,n,r){var a;return n=e.createCallback(n,r,3),bt(t,function(t,e,r){if(n(t,e,r))return a=e,!1}),a}function ht(t,e,n){var r=[];or(t,function(t,e){r.push(e,t)});var a=r.length;for(e=b(e,n,3);a--&&!1!==e(r[a--],r[a],t););return t}function bt(t,e,n){var r=tr(t),a=r.length;for(e=b(e,n,3);a--;){var s=r[a];if(!1===e(t[s],s,t))break}return t}function gt(t){var e=[];return or(t,function(t,n){kt(t)&&e.push(n)}),e.sort()}function _t(t,e){return!!t&&Cn.call(t,e)}function vt(t){for(var e=-1,n=tr(t),r=n.length,a={};++e<r;){var s=n[e];a[t[s]]=s}return a}function xt(t){return!0===t||!1===t||t&&"object"==typeof t&&En.call(t)==M||!1}function qt(t){return t&&"object"==typeof t&&En.call(t)==F||!1}function wt(t){return t&&1===t.nodeType||!1}function Tt(t){var e=!0;if(!t)return e;var n=En.call(t),r=t.length;return n==U||n==Y||n==j||n==z&&"number"==typeof r&&kt(t.splice)?!r:(lr(t,function(){return e=!1}),e)}function Et(t,e,n,r){return tt(t,e,"function"==typeof n&&b(n,r,2))}function St(t){return Fn(t)&&!Bn(parseFloat(t))}function kt(t){return"function"==typeof t}function At(t){return!(!t||!K[typeof t])}function Ot(t){return Nt(t)&&t!=+t}function It(t){return null===t}function Nt(t){return"number"==typeof t||t&&"object"==typeof t&&En.call(t)==W||!1}function Ct(t){return t&&"object"==typeof t&&En.call(t)==G||!1}function Rt(t){return"string"==typeof t||t&&"object"==typeof t&&En.call(t)==Y||!1}function Lt(t){return void 0===t}function Dt(t,n,r){var a={};return n=e.createCallback(n,r,3),lr(t,function(t,e,r){a[e]=n(t,e,r)}),a}function Pt(t){var e=arguments,n=2;if(!At(t))return t;if("number"!=typeof e[2]&&(n=e.length),n>3&&"function"==typeof e[n-2])var r=b(e[--n-1],e[n--],2);else n>2&&"function"==typeof e[n-1]&&(r=e[--n]);for(var a=y(arguments,1,n),s=-1,i=c(),o=c();++s<n;)et(t,a[s],r,i,o);return f(i),f(o),t}function jt(t,n,r){var a={};if("function"!=typeof n){var s=[];or(t,function(t,e){s.push(e)}),s=q(s,Z(arguments,!0,!1,1));for(var i=-1,o=s.length;++i<o;){var l=s[i];a[l]=t[l]}}else n=e.createCallback(n,r,3),or(t,function(t,e,r){n(t,e,r)||(a[e]=t)});return a}function Ut(t){for(var e=-1,n=tr(t),r=n.length,a=fn(r);++e<r;){var s=n[e];a[e]=[s,t[s]]}return a}function Mt(t,n,r){var a={};if("function"!=typeof n)for(var s=-1,i=Z(arguments,!0,!1,1),o=At(t)?i.length:0;++s<o;){var l=i[s];l in t&&(a[l]=t[l])}else n=e.createCallback(n,r,3),or(t,function(t,e,r){n(t,e,r)&&(a[e]=t)});return a}function Ft(t,n,r,a){var s=Zn(t);if(null==r)if(s)r=[];else{var i=t&&t.constructor,l=i&&i.prototype;r=o(l)}return n&&(n=e.createCallback(n,a,4),(s?Xt:lr)(t,function(t,e,a){return n(r,t,e,a)})),r}function Bt(t){for(var e=-1,n=tr(t),r=n.length,a=fn(r);++e<r;)a[e]=t[n[e]];return a}function Wt(t){for(var e=arguments,n=-1,r=Z(e,!0,!1,1),a=e[2]&&e[2][e[1]]===t?1:r.length,s=fn(a);++n<a;)s[n]=t[r[n]];return s}function zt(t,e,n){var r=-1,a=lt(),s=t?t.length:0,i=!1;return n=(n<0?zn(0,s+n):n)||0,Zn(t)?i=a(t,e,n)>-1:"number"==typeof s?i=(Rt(t)?t.indexOf(e,n):a(t,e,n))>-1:lr(t,function(t){if(++r>=n)return!(i=t===e)}),i}function Gt(t,n,r){var a=!0;n=e.createCallback(n,r,3);var s=-1,i=t?t.length:0;if("number"==typeof i)for(;++s<i&&(a=!!n(t[s],s,t)););else lr(t,function(t,e,r){return a=!!n(t,e,r)});return a}function Yt(t,n,r){var a=[];n=e.createCallback(n,r,3);var s=-1,i=t?t.length:0;if("number"==typeof i)for(;++s<i;){var o=t[s];n(o,s,t)&&a.push(o)}else lr(t,function(t,e,r){n(t,e,r)&&a.push(t)});return a}function Ht(t,n,r){n=e.createCallback(n,r,3);var a=-1,s=t?t.length:0;if("number"!=typeof s){var i;return lr(t,function(t,e,r){if(n(t,e,r))return i=t,!1}),i}for(;++a<s;){var o=t[a];if(n(o,a,t))return o}}function Jt(t,n,r){var a;return n=e.createCallback(n,r,3),Kt(t,function(t,e,r){if(n(t,e,r))return a=t,!1}),a}function Xt(t,e,n){var r=-1,a=t?t.length:0;if(e=e&&void 0===n?e:b(e,n,3),"number"==typeof a)for(;++r<a&&!1!==e(t[r],r,t););else lr(t,e);return t}function Kt(t,e,n){var r=t?t.length:0;if(e=e&&void 0===n?e:b(e,n,3),"number"==typeof r)for(;r--&&!1!==e(t[r],r,t););else{var a=tr(t);r=a.length,lr(t,function(t,n,s){return n=a?a[--r]:--r,e(s[n],n,s)})}return t}function Zt(t,e){var n=y(arguments,2),r=-1,a="function"==typeof e,s=t?t.length:0,i=fn("number"==typeof s?s:0);return Xt(t,function(t){i[++r]=(a?e:t[e]).apply(t,n)}),i}function Qt(t,n,r){var a=-1,s=t?t.length:0;if(n=e.createCallback(n,r,3),"number"==typeof s)for(var i=fn(s);++a<s;)i[a]=n(t[a],a,t);else i=[],lr(t,function(t,e,r){i[++a]=n(t,e,r)});return i}function te(t,n,r){var a=-1/0,s=a;if("function"!=typeof n&&r&&r[n]===t&&(n=null),null==n&&Zn(t))for(var i=-1,o=t.length;++i<o;){var p=t[i];p>s&&(s=p)}else n=null==n&&Rt(t)?l:e.createCallback(n,r,3),Xt(t,function(t,e,r){var i=n(t,e,r);i>a&&(a=i,s=t)});return s}function ee(t,n,r){var a=1/0,s=a;if("function"!=typeof n&&r&&r[n]===t&&(n=null),null==n&&Zn(t))for(var i=-1,o=t.length;++i<o;){var p=t[i];p<s&&(s=p)}else n=null==n&&Rt(t)?l:e.createCallback(n,r,3),Xt(t,function(t,e,r){var i=n(t,e,r);i<a&&(a=i,s=t)});return s}function ne(t,n,r,a){if(!t)return r;var s=arguments.length<3;n=e.createCallback(n,a,4);var i=-1,o=t.length;if("number"==typeof o)for(s&&(r=t[++i]);++i<o;)r=n(r,t[i],i,t);else lr(t,function(t,e,a){r=s?(s=!1,t):n(r,t,e,a)});return r}function re(t,n,r,a){var s=arguments.length<3;return n=e.createCallback(n,a,4),Kt(t,function(t,e,a){r=s?(s=!1,t):n(r,t,e,a)}),r}function ae(t,n,r){return n=e.createCallback(n,r,3),Yt(t,function(t,e,r){return!n(t,e,r)})}function se(t,e,n){if(t&&"number"!=typeof t.length&&(t=Bt(t)),null==e||n)return t?t[nt(0,t.length-1)]:h;var r=ie(t);return r.length=Gn(zn(0,e),r.length),r}function ie(t){var e=-1,n=t?t.length:0,r=fn("number"==typeof n?n:0);return Xt(t,function(t){var n=nt(0,++e);r[e]=r[n],r[n]=t}),r}function oe(t){var e=t?t.length:0;return"number"==typeof e?e:tr(t).length}function le(t,n,r){var a;n=e.createCallback(n,r,3);var s=-1,i=t?t.length:0;if("number"==typeof i)for(;++s<i&&!(a=n(t[s],s,t)););else lr(t,function(t,e,r){return!(a=n(t,e,r))});return!!a}function pe(t,n,r){var a=-1,s=Zn(n),i=t?t.length:0,o=fn("number"==typeof i?i:0);for(s||(n=e.createCallback(n,r,3)),Xt(t,function(t,e,r){var i=o[++a]=m();s?i.criteria=Qt(n,function(e){return t[e]}):(i.criteria=c())[0]=n(t,e,r),i.index=a,i.value=t}),i=o.length,o.sort(p);i--;){var l=o[i];o[i]=l.value,s||f(l.criteria),$(l)}return o}function ue(t){return t&&"number"==typeof t.length?y(t):Bt(t)}function de(t){for(var e=-1,n=t?t.length:0,r=[];++e<n;){var a=t[e];a&&r.push(a)}return r}function ce(t){return q(t,Z(arguments,!0,!0,1))}function me(t,n,r){var a=-1,s=t?t.length:0;for(n=e.createCallback(n,r,3);++a<s;)if(n(t[a],a,t))return a;return-1}function fe(t,n,r){var a=t?t.length:0;for(n=e.createCallback(n,r,3);a--;)if(n(t[a],a,t))return a;return-1}function $e(t,n,r){var a=0,s=t?t.length:0;if("number"!=typeof n&&null!=n){var i=-1;for(n=e.createCallback(n,r,3);++i<s&&n(t[i],i,t);)a++}else if(null==(a=n)||r)return t?t[0]:h;return y(t,0,Gn(zn(0,a),s))}function ye(t,e,n,r){return"boolean"!=typeof e&&null!=e&&(r=n,n="function"!=typeof e&&r&&r[e]===t?null:e,e=!1),null!=n&&(t=Qt(t,n,r)),Z(t,e)}function Ve(t,e,n){if("number"==typeof n){var r=t?t.length:0;n=n<0?zn(0,r+n):n||0}else if(n){var a=Te(t,e);return t[a]===e?a:-1}return s(t,e,n)}function he(t,n,r){var a=0,s=t?t.length:0;if("number"!=typeof n&&null!=n){var i=s;for(n=e.createCallback(n,r,3);i--&&n(t[i],i,t);)a++}else a=null==n||r?1:n||a;return y(t,0,Gn(zn(0,s-a),s))}function be(){for(var t=[],e=-1,n=arguments.length,r=c(),a=lt(),o=a===s,l=c();++e<n;){var p=arguments[e];(Zn(p)||ct(p))&&(t.push(p),r.push(o&&p.length>=x&&u(e?t[e]:l)))}var d=t[0],m=-1,y=d?d.length:0,V=[];t:for(;++m<y;){var h=r[0];if(p=d[m],(h?i(h,p):a(l,p))<0){for(e=n,(h||l).push(p);--e;)if(h=r[e],(h?i(h,p):a(t[e],p))<0)continue t;V.push(p)}}for(;n--;)(h=r[n])&&$(h);return f(r),f(l),V}function ge(t,n,r){var a=0,s=t?t.length:0;if("number"!=typeof n&&null!=n){var i=s;for(n=e.createCallback(n,r,3);i--&&n(t[i],i,t);)a++}else if(null==(a=n)||r)return t?t[s-1]:h;return y(t,zn(0,s-a))}function _e(t,e,n){var r=t?t.length:0;for("number"==typeof n&&(r=(n<0?zn(0,r+n):Gn(n,r-1))+1);r--;)if(t[r]===e)return r;return-1}function ve(t){for(var e=arguments,n=0,r=e.length,a=t?t.length:0;++n<r;)for(var s=-1,i=e[n];++s<a;)t[s]===i&&(Dn.call(t,s--,1),a--);return t}function xe(t,e,n){t=+t||0,n="number"==typeof n?n:+n||1,null==e&&(e=t,t=0);for(var r=-1,a=zn(0,kn((e-t)/(n||1))),s=fn(a);++r<a;)s[r]=t,t+=n;return s}function qe(t,n,r){var a=-1,s=t?t.length:0,i=[];for(n=e.createCallback(n,r,3);++a<s;){var o=t[a];n(o,a,t)&&(i.push(o),Dn.call(t,a--,1),s--)}return i}function we(t,n,r){if("number"!=typeof n&&null!=n){var a=0,s=-1,i=t?t.length:0;for(n=e.createCallback(n,r,3);++s<i&&n(t[s],s,t);)a++}else a=null==n||r?1:zn(0,n);return y(t,a)}function Te(t,n,r,a){var s=0,i=t?t.length:s;for(r=r?e.createCallback(r,a,1):Ke,n=r(n);s<i;){var o=s+i>>>1;r(t[o])<n?s=o+1:i=o}return s}function Ee(){return at(Z(arguments,!0,!0))}function Se(t,n,r,a){return"boolean"!=typeof n&&null!=n&&(a=r,r="function"!=typeof n&&a&&a[n]===t?null:n,n=!1),null!=r&&(r=e.createCallback(r,a,3)),at(t,n,r)}function ke(t){return q(t,y(arguments,1))}function Ae(){for(var t=-1,e=arguments.length;++t<e;){var n=arguments[t];if(Zn(n)||ct(n))var r=r?at(q(r,n).concat(q(n,r))):n}return r||[]}function Oe(){for(var t=arguments.length>1?arguments:arguments[0],e=-1,n=t?te(mr(t,"length")):0,r=fn(n<0?0:n);++e<n;)r[e]=mr(t,e);return r}function Ie(t,e){var n=-1,r=t?t.length:0,a={};for(e||!r||Zn(t[0])||(e=[]);++n<r;){var s=t[n];e?a[s]=e[n]:s&&(a[s[0]]=s[1])}return a}function Ne(t,e){if(!kt(e))throw new xn;return function(){if(--t<1)return e.apply(this,arguments)}}function Ce(t,e){return arguments.length>2?it(t,17,y(arguments,2),null,e):it(t,1,null,null,e)}function Re(t){for(var e=arguments.length>1?Z(arguments,!0,!1,1):gt(t),n=-1,r=e.length;++n<r;){var a=e[n];t[a]=it(t[a],1,null,null,t)}return t}function Le(t,e){return arguments.length>2?it(e,19,y(arguments,2),null,t):it(e,3,null,null,t)}function De(){for(var t=arguments,e=t.length;e--;)if(!kt(t[e]))throw new xn;return function(){for(var e=arguments,n=t.length;n--;)e=[t[n].apply(this,e)];return e[0]}}function Pe(t,e){return e="number"==typeof e?e:+e||t.length,it(t,4,null,null,null,e)}function je(t,e,n){var r,a,s,i,o,l,p,u=0,d=!1,c=!0;if(!kt(t))throw new xn;if(e=zn(0,e)||0,!0===n){var m=!0;c=!1}else At(n)&&(m=n.leading,d="maxWait"in n&&(zn(e,n.maxWait)||0),c="trailing"in n?n.trailing:c);var f=function(){var n=e-($r()-i);if(n<=0){a&&An(a);var d=p;a=l=p=h,d&&(u=$r(),s=t.apply(o,r),l||a||(r=o=null))}else l=Ln(f,n)},$=function(){l&&An(l),a=l=p=h,(c||d!==e)&&(u=$r(),s=t.apply(o,r),l||a||(r=o=null))};return function(){if(r=arguments,i=$r(),o=this,p=c&&(l||!m),!1===d)var n=m&&!l;else{a||m||(u=i);var y=d-(i-u),V=y<=0;V?(a&&(a=An(a)),u=i,s=t.apply(o,r)):a||(a=Ln($,y))}return V&&l?l=An(l):l||e===d||(l=Ln(f,e)),n&&(V=!0,s=t.apply(o,r)),!V||l||a||(r=o=null),s}}function Ue(t){if(!kt(t))throw new xn;var e=y(arguments,1);return Ln(function(){t.apply(h,e)},1)}function Me(t,e){if(!kt(t))throw new xn;var n=y(arguments,2);return Ln(function(){t.apply(h,n)},e)}function Fe(t,e){if(!kt(t))throw new xn;var n=function(){var r=n.cache,a=e?e.apply(this,arguments):v+arguments[0];return Cn.call(r,a)?r[a]:r[a]=t.apply(this,arguments)};return n.cache={},n}function Be(t){var e,n;if(!kt(t))throw new xn;return function(){return e?n:(e=!0,n=t.apply(this,arguments),t=null,n)}}function We(t){return it(t,16,y(arguments,1))}function ze(t){return it(t,32,null,y(arguments,1))}function Ge(t,e,n){var r=!0,a=!0;if(!kt(t))throw new xn;return!1===n?r=!1:At(n)&&(r="leading"in n?n.leading:r,a="trailing"in n?n.trailing:a),J.leading=r,J.maxWait=e,J.trailing=a,je(t,e,J)}function Ye(t,e){return it(e,16,[t])}function He(t){return function(){return t}}function Je(t,e,n){var r=typeof t;if(null==t||"function"==r)return b(t,e,n);if("object"!=r)return en(t);var a=tr(t),s=a[0],i=t[s];return 1!=a.length||i!==i||At(i)?function(e){for(var n=a.length,r=!1;n--&&(r=tt(e[a[n]],t[a[n]],null,!0)););return r}:function(t){var e=t[s];return i===e&&(0!==i||1/i==1/e)}}function Xe(t){return null==t?"":vn(t).replace(ar,ot)}function Ke(t){return t}function Ze(t,r,a){var s=!0,i=r&&gt(r);r&&(a||i.length)||(null==a&&(a=r),o=n,r=t,t=e,i=gt(r)),!1===a?s=!1:At(a)&&"chain"in a&&(s=a.chain);var o=t,l=kt(o);Xt(i,function(e){var n=t[e]=r[e];l&&(o.prototype[e]=function(){var e=this.__chain__,r=this.__wrapped__,a=[r];Rn.apply(a,arguments);var i=n.apply(t,a);if(s||e){if(r===i&&At(i))return this;i=new o(i),i.__chain__=e}return i})})}function Qe(){return t._=Tn,this}function tn(){}function en(t){return function(e){return e[t]}}function nn(t,e,n){var r=null==t,a=null==e;if(null==n&&("boolean"==typeof t&&a?(n=t,t=1):a||"boolean"!=typeof e||(n=e,a=!0)),r&&a&&(e=1),t=+t||0,a?(e=t,t=0):e=+e||0,n||t%1||e%1){var s=Hn();return Gn(t+s*(e-t+parseFloat("1e-"+((s+"").length-1))),e)}return nt(t,e)}function rn(t,e){if(t){var n=t[e];return kt(n)?t[e]():n}}function an(t,n,r){var a=e.templateSettings;t=vn(t||""),r=ir({},r,a);var s,i=ir({},r.imports,a.imports),o=tr(i),l=Bt(i),p=0,u=r.interpolate||C,c="__p += '",m=_n((r.escape||C).source+"|"+u.source+"|"+(u===I?k:C).source+"|"+(r.evaluate||C).source+"|$","g");t.replace(m,function(e,n,r,a,i,o){return r||(r=a),c+=t.slice(p,o).replace(L,d),n&&(c+="' +\n__e("+n+") +\n'"),i&&(s=!0,c+="';\n"+i+";\n__p += '"),r&&(c+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),p=o+e.length,e}),c+="';\n";var f=r.variable,$=f;$||(f="obj",c="with ("+f+") {\n"+c+"\n}\n"),c=(s?c.replace(T,""):c).replace(E,"$1").replace(S,"$1;"),c="function("+f+") {\n"+($?"":f+" || ("+f+" = {});\n")+"var __t, __p = '', __e = _.escape"+(s?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+c+"return __p\n}";var y="\n/*\n//# sourceURL="+(r.sourceURL||"/lodash/template/source["+P+++"]")+"\n*/";try{var V=Vn(o,"return "+c+y).apply(h,l)}catch(t){throw t.source=c,t}return n?V(n):(V.source=c,V)}function sn(t,e,n){t=(t=+t)>-1?t:0;var r=-1,a=fn(t);for(e=b(e,n,1);++r<t;)a[r]=e(r);return a}function on(t){return null==t?"":vn(t).replace(rr,dt)}function ln(t){var e=++_;return vn(null==t?"":t)+e}function pn(t){return t=new n(t),t.__chain__=!0,t}function un(t,e){return e(t),t}function dn(){return this.__chain__=!0,this}function cn(){return vn(this.__wrapped__)}function mn(){return this.__wrapped__}t=t?rt.defaults(Q.Object(),t,rt.pick(Q,D)):Q;var fn=t.Array,$n=t.Boolean,yn=t.Date,Vn=t.Function,hn=t.Math,bn=t.Number,gn=t.Object,_n=t.RegExp,vn=t.String,xn=t.TypeError,qn=[],wn=gn.prototype,Tn=t._,En=wn.toString,Sn=_n("^"+vn(En).replace(/[.*+?^${}()|[\]\\]/g,"\\$&").replace(/toString| for [^\]]+/g,".*?")+"$"),kn=hn.ceil,An=t.clearTimeout,On=hn.floor,In=Vn.prototype.toString,Nn=pt(Nn=gn.getPrototypeOf)&&Nn,Cn=wn.hasOwnProperty,Rn=qn.push,Ln=t.setTimeout,Dn=qn.splice,Pn=qn.unshift,jn=function(){try{var t={},e=pt(e=gn.defineProperty)&&e,n=e(t,t,t)&&e}catch(t){}return n}(),Un=pt(Un=gn.create)&&Un,Mn=pt(Mn=fn.isArray)&&Mn,Fn=t.isFinite,Bn=t.isNaN,Wn=pt(Wn=gn.keys)&&Wn,zn=hn.max,Gn=hn.min,Yn=t.parseInt,Hn=hn.random,Jn={};Jn[U]=fn,Jn[M]=$n,Jn[F]=yn,Jn[B]=Vn,Jn[z]=gn,Jn[W]=bn,Jn[G]=_n,Jn[Y]=vn,n.prototype=e.prototype;var Xn=e.support={};Xn.funcDecomp=!pt(t.WinRTError)&&R.test(V),Xn.funcNames="string"==typeof Vn.name,e.templateSettings={escape:/<%-([\s\S]+?)%>/g,evaluate:/<%([\s\S]+?)%>/g,interpolate:I,variable:"",imports:{_:e}},Un||(o=function(){function e(){}return function(n){if(At(n)){e.prototype=n;var r=new e;e.prototype=null}return r||t.Object()}}());var Kn=jn?function(t,e){X.value=e,jn(t,"__bindData__",X),X.value=null}:tn,Zn=Mn||function(t){return t&&"object"==typeof t&&"number"==typeof t.length&&En.call(t)==U||!1},Qn=function(t){var e,n=t,r=[];if(!n)return r;if(!K[typeof t])return r;for(e in n)Cn.call(n,e)&&r.push(e);return r},tr=Wn?function(t){return At(t)?Wn(t):[]}:Qn,er={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},nr=vt(er),rr=_n("("+tr(nr).join("|")+")","g"),ar=_n("["+tr(er).join("")+"]","g"),sr=function(t,e,n){var r,a=t,s=a;if(!a)return s;var i=arguments,o=0,l="number"==typeof n?2:i.length;if(l>3&&"function"==typeof i[l-2])var p=b(i[--l-1],i[l--],2);else l>2&&"function"==typeof i[l-1]&&(p=i[--l]);for(;++o<l;)if((a=i[o])&&K[typeof a])for(var u=-1,d=K[typeof a]&&tr(a),c=d?d.length:0;++u<c;)r=d[u],s[r]=p?p(s[r],a[r]):a[r];return s},ir=function(t,e,n){var r,a=t,s=a;if(!a)return s;for(var i=arguments,o=0,l="number"==typeof n?2:i.length;++o<l;)if((a=i[o])&&K[typeof a])for(var p=-1,u=K[typeof a]&&tr(a),d=u?u.length:0;++p<d;)r=u[p],void 0===s[r]&&(s[r]=a[r]);return s},or=function(t,e,n){var r,a=t,s=a;if(!a)return s;if(!K[typeof a])return s;e=e&&void 0===n?e:b(e,n,3);for(r in a)if(!1===e(a[r],r,t))return s;return s},lr=function(t,e,n){var r,a=t,s=a;if(!a)return s;if(!K[typeof a])return s;e=e&&void 0===n?e:b(e,n,3);for(var i=-1,o=K[typeof a]&&tr(a),l=o?o.length:0;++i<l;)if(r=o[i],!1===e(a[r],r,t))return s;return s},pr=Nn?function(t){if(!t||En.call(t)!=z)return!1;var e=t.valueOf,n=pt(e)&&(n=Nn(e))&&Nn(n);return n?t==n||Nn(t)==n:ut(t)}:ut,ur=st(function(t,e,n){Cn.call(t,n)?t[n]++:t[n]=1}),dr=st(function(t,e,n){(Cn.call(t,n)?t[n]:t[n]=[]).push(e)}),cr=st(function(t,e,n){t[n]=e}),mr=Qt,fr=Yt,$r=pt($r=yn.now)&&$r||function(){return(new yn).getTime()},yr=8==Yn(w+"08")?Yn:function(t,e){return Yn(Rt(t)?t.replace(N,""):t,e||0)};return e.after=Ne,e.assign=sr,e.at=Wt,e.bind=Ce,e.bindAll=Re,e.bindKey=Le,e.chain=pn,e.compact=de,e.compose=De,e.constant=He,e.countBy=ur,e.create=$t,e.createCallback=Je,e.curry=Pe,e.debounce=je,e.defaults=ir,e.defer=Ue,e.delay=Me,e.difference=ce,e.filter=Yt,e.flatten=ye,e.forEach=Xt,e.forEachRight=Kt,e.forIn=or,e.forInRight=ht,e.forOwn=lr,e.forOwnRight=bt,e.functions=gt,e.groupBy=dr,e.indexBy=cr,e.initial=he,e.intersection=be,e.invert=vt,e.invoke=Zt,e.keys=tr,e.map=Qt,e.mapValues=Dt,e.max=te,e.memoize=Fe,e.merge=Pt,e.min=ee,e.omit=jt,e.once=Be,e.pairs=Ut,e.partial=We,e.partialRight=ze,e.pick=Mt,e.pluck=mr,e.property=en,e.pull=ve,e.range=xe,e.reject=ae,e.remove=qe,e.rest=we,e.shuffle=ie,e.sortBy=pe,e.tap=un,e.throttle=Ge,e.times=sn,e.toArray=ue,e.transform=Ft,e.union=Ee,e.uniq=Se,e.values=Bt,e.where=fr,e.without=ke,e.wrap=Ye,e.xor=Ae,e.zip=Oe,e.zipObject=Ie,e.collect=Qt,e.drop=we,e.each=Xt,e.eachRight=Kt,e.extend=sr,e.methods=gt,e.object=Ie,e.select=Yt,e.tail=we,e.unique=Se,e.unzip=Oe,Ze(e),e.clone=mt,e.cloneDeep=ft,e.contains=zt,e.escape=Xe,e.every=Gt,e.find=Ht,e.findIndex=me,e.findKey=yt,e.findLast=Jt,e.findLastIndex=fe,e.findLastKey=Vt,e.has=_t,e.identity=Ke,e.indexOf=Ve,e.isArguments=ct,e.isArray=Zn,e.isBoolean=xt,e.isDate=qt,e.isElement=wt,e.isEmpty=Tt,e.isEqual=Et,e.isFinite=St,e.isFunction=kt,e.isNaN=Ot,e.isNull=It,e.isNumber=Nt,e.isObject=At,e.isPlainObject=pr,e.isRegExp=Ct,e.isString=Rt,e.isUndefined=Lt,e.lastIndexOf=_e,e.mixin=Ze,e.noConflict=Qe,e.noop=tn,e.now=$r,e.parseInt=yr,e.random=nn,e.reduce=ne,e.reduceRight=re,e.result=rn,e.runInContext=V,e.size=oe,e.some=le,e.sortedIndex=Te,e.template=an,e.unescape=on,e.uniqueId=ln,e.all=Gt,e.any=le,e.detect=Ht,e.findWhere=Ht,e.foldl=ne,e.foldr=re,e.include=zt,e.inject=ne,Ze(function(){var t={};return lr(e,function(n,r){e.prototype[r]||(t[r]=n)}),t}(),!1),e.first=$e,e.last=ge,e.sample=se,e.take=$e,e.head=$e,lr(e,function(t,r){var a="sample"!==r;e.prototype[r]||(e.prototype[r]=function(e,r){var s=this.__chain__,i=t(this.__wrapped__,e,r);return s||null!=e&&(!r||a&&"function"==typeof e)?new n(i,s):i})}),e.VERSION="2.4.2",e.prototype.chain=dn,e.prototype.toString=cn,e.prototype.value=mn,e.prototype.valueOf=mn,Xt(["join","pop","shift"],function(t){var r=qn[t];e.prototype[t]=function(){var t=this.__chain__,e=r.apply(this.__wrapped__,arguments);return t?new n(e,t):e}}),Xt(["push","reverse","sort","unshift"],function(t){var n=qn[t];e.prototype[t]=function(){return n.apply(this.__wrapped__,arguments),this}}),Xt(["concat","slice","splice"],function(t){var r=qn[t];e.prototype[t]=function(){return new n(r.apply(this.__wrapped__,arguments),this.__chain__)}}),e}var h,b=[],g=[],_=0,v=+new Date+"",x=75,q=40,w=" \t\v\f \ufeff\n\r\u2028\u2029 ᠎             　",T=/\b__p \+= '';/g,E=/\b(__p \+=) '' \+/g,S=/(__e\(.*?\)|\b__t\)) \+\n'';/g,k=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,A=/\w*$/,O=/^\s*function[ \n\r\t]+\w/,I=/<%=([\s\S]+?)%>/g,N=RegExp("^["+w+"]*0+(?=.$)"),C=/($^)/,R=/\bthis\b/,L=/['\n\r\t\u2028\u2029\\]/g,D=["Array","Boolean","Date","Function","Math","Number","Object","RegExp","String","_","attachEvent","clearTimeout","isFinite","isNaN","parseInt","setTimeout"],P=0,j="[object Arguments]",U="[object Array]",M="[object Boolean]",F="[object Date]",B="[object Function]",W="[object Number]",z="[object Object]",G="[object RegExp]",Y="[object String]",H={};H[B]=!1,H[j]=H[U]=H[M]=H[F]=H[W]=H[z]=H[G]=H[Y]=!0;var J={leading:!1,maxWait:0,trailing:!1},X={configurable:!1,enumerable:!1,value:null,writable:!1},K={boolean:!1,function:!0,object:!0,number:!1,string:!1,undefined:!1},Z={"\\":"\\","'":"'","\n":"n","\r":"r","\t":"t","\u2028":"u2028","\u2029":"u2029"},Q=K[typeof window]&&window||this,tt=K[typeof e]&&e&&!e.nodeType&&e,et=K[typeof t]&&t&&!t.nodeType&&t,nt=(et&&et.exports,K[typeof r]&&r);!nt||nt.global!==nt&&nt.window!==nt||(Q=nt);var rt=V();Q._=rt,(a=function(){return rt}.call(e,n,e,t))!==h&&(t.exports=a)}).call(this)}).call(e,n(9)(t),n(2))},function(t,e,n){function r(){throw new Error('Looks like you are expecting the previous "elasticsearch" module. It is now the "es" module. To create a client with this module use `new es.Client(params)`.')}r.Client=n(16),r.ConnectionPool=n(10),r.Transport=n(12),r.errors=n(3),t.exports=r},function(t,e,n){var r=n(1).makeFactoryWithModifier(function(t){return n(0).merge(t,{params:{filterPath:{type:"list",name:"filter_path"}}})}),a=n(1).namespaceFactory,s=t.exports={};s._namespaces=["cat","cluster","indices","nodes","snapshot","tasks"],s.bulk=r({params:{consistency:{type:"enum",options:["one","quorum","all"]},refresh:{type:"boolean"},routing:{type:"string"},timeout:{type:"time"},type:{type:"string"},fields:{type:"list"}},urls:[{fmt:"/<%=index%>/<%=type%>/_bulk",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_bulk",req:{index:{type:"string"}}},{fmt:"/_bulk"}],needBody:!0,bulkBody:!0,method:"POST"}),s.cat=a(),s.cat.prototype.aliases=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_cat/aliases"}]}),s.cat.prototype.allocation=r({params:{bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/allocation/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cat/allocation"}]}),s.cat.prototype.count=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/count/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/count"}]}),s.cat.prototype.fielddata=r({params:{bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1},fields:{type:"list"}},urls:[{fmt:"/_cat/fielddata/<%=fields%>",req:{fields:{type:"list"}}},{fmt:"/_cat/fielddata"}]}),s.cat.prototype.health=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},ts:{type:"boolean",default:!0},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/health"}}),s.cat.prototype.help=r({params:{help:{type:"boolean",default:!1}},url:{fmt:"/_cat"}}),s.cat.prototype.indices=r({params:{bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},pri:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/indices/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/indices"}]}),s.cat.prototype.master=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/master"}}),s.cat.prototype.nodeattrs=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodeattrs"}}),s.cat.prototype.nodes=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodes"}}),s.cat.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/pending_tasks"}}),s.cat.prototype.plugins=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/plugins"}}),s.cat.prototype.recovery=r({params:{bytes:{type:"enum",options:["b","k","m","g"]},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/recovery/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/recovery"}]}),s.cat.prototype.repositories=r({params:{local:{type:"boolean",default:!1},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/repositories"}}),s.cat.prototype.segments=r({params:{h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/segments/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/segments"}]}),s.cat.prototype.shards=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/shards/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/shards"}]}),s.cat.prototype.snapshots=r({params:{ignoreUnavailable:{type:"boolean",default:!1,name:"ignore_unavailable"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/snapshots/<%=repository%>",req:{repository:{type:"list"}}}}),s.cat.prototype.threadPool=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1},fullId:{type:"boolean",default:!1,name:"full_id"}},url:{fmt:"/_cat/thread_pool"}}),s.clearScroll=r({urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"list"}}},{fmt:"/_search/scroll"}],paramAsBody:"scrollId",method:"DELETE"}),s.cluster=a(),s.cluster.prototype.getSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"}}),s.cluster.prototype.health=r({params:{level:{type:"enum",default:"cluster",options:["cluster","indices","shards"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},waitForActiveShards:{type:"number",name:"wait_for_active_shards"},waitForNodes:{type:"string",name:"wait_for_nodes"},waitForRelocatingShards:{type:"number",name:"wait_for_relocating_shards"},waitForStatus:{type:"enum",default:null,options:["green","yellow","red"],name:"wait_for_status"}},urls:[{fmt:"/_cluster/health/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cluster/health"}]}),s.cluster.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_cluster/pending_tasks"}}),s.cluster.prototype.putSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"},method:"PUT"}),s.cluster.prototype.reroute=r({params:{dryRun:{type:"boolean",name:"dry_run"},explain:{type:"boolean"},metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","master_node","version"]},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/reroute"},method:"POST"}),s.cluster.prototype.state=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/_cluster/state/<%=metric%>/<%=index%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]},index:{type:"list"}}},{fmt:"/_cluster/state/<%=metric%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]}}},{fmt:"/_cluster/state"}]}),s.cluster.prototype.stats=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},timeout:{type:"time"}},urls:[{fmt:"/_cluster/stats/nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cluster/stats"}]}),s.count=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"}},urls:[{fmt:"/<%=index%>/<%=type%>/_count",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_count",req:{index:{type:"list"}}},{fmt:"/_count"}],method:"POST"}),s.countPercolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.delete=r({params:{consistency:{type:"enum",options:["one","quorum","all"]},parent:{type:"string"},refresh:{type:"boolean"},routing:{type:"string"},timeout:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteScript=r({params:{version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteTemplate=r({params:{version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.exists=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.explain=r({params:{analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},analyzer:{type:"string"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},fields:{type:"list"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},parent:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_explain",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.fieldStats=r({params:{fields:{type:"list"},level:{type:"enum",default:"cluster",options:["indices","cluster"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_stats",req:{index:{type:"list"}}},{fmt:"/_field_stats"}],method:"POST"}),s.get=r({params:{fields:{type:"list"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getScript=r({params:{version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}}}),s.getSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getTemplate=r({params:{version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}}}),s.index=r({params:{consistency:{type:"enum",options:["one","quorum","all"]},opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},parent:{type:"string"},refresh:{type:"boolean"},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"string"},type:{type:"string"}}}],needBody:!0,method:"POST"}),s.indices=a(),s.indices.prototype.analyze=r({params:{analyzer:{type:"string"},charFilters:{type:"list",name:"char_filters"},charFilter:{type:"list",name:"char_filter"},field:{type:"string"},filters:{type:"list"},filter:{type:"list"},index:{type:"string"},preferLocal:{type:"boolean",name:"prefer_local"},text:{type:"list"},tokenizer:{type:"string"},explain:{type:"boolean"},attributes:{type:"list"},format:{type:"enum",default:"detailed",options:["detailed","text"]}},urls:[{fmt:"/<%=index%>/_analyze",req:{index:{type:"string"}}},{fmt:"/_analyze"}],method:"POST"}),s.indices.prototype.clearCache=r({params:{fieldData:{type:"boolean",name:"field_data"},fielddata:{type:"boolean"},fields:{type:"list"},query:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},index:{type:"list"},recycler:{type:"boolean"},request:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_cache/clear",req:{index:{type:"list"}}},{fmt:"/_cache/clear"}],method:"POST"}),s.indices.prototype.close=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_close",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.create=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},updateAllTypes:{type:"boolean",name:"update_all_types"}},url:{fmt:"/<%=index%>",req:{index:{type:"string"}}},method:"POST"}),s.indices.prototype.delete=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteTemplate=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"DELETE"}),s.indices.prototype.deleteWarmer=r({params:{masterTimeout:{type:"time",name:"master_timeout"},name:{type:"list"}},url:{fmt:"/<%=index%>/_warmer/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.exists=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}}],method:"HEAD"}),s.indices.prototype.existsTemplate=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"HEAD"}),s.indices.prototype.existsType=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},method:"HEAD"}),s.indices.prototype.flush=r({params:{force:{type:"boolean"},waitIfOngoing:{type:"boolean",name:"wait_if_ongoing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush",req:{index:{type:"list"}}},{fmt:"/_flush"}],method:"POST"}),s.indices.prototype.flushSynced=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush/synced",req:{index:{type:"list"}}},{fmt:"/_flush/synced"}],method:"POST"}),s.indices.prototype.forcemerge=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_forcemerge",req:{index:{type:"list"}}},{fmt:"/_forcemerge"}],method:"POST"}),s.indices.prototype.get=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/<%=feature%>",req:{index:{type:"list"},feature:{type:"list",options:["_settings","_mappings","_warmers","_aliases"]}}},{fmt:"/<%=index%>",req:{index:{type:"list"}}}]}),s.indices.prototype.getAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}},{fmt:"/_alias"}]}),s.indices.prototype.getAliases=r({params:{timeout:{type:"time"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_aliases/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_aliases",req:{index:{type:"list"}}},{fmt:"/_aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_aliases"}]}),s.indices.prototype.getFieldMapping=r({params:{includeDefaults:{type:"boolean",name:"include_defaults"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>/field/<%=fields%>",req:{index:{type:"list"},type:{type:"list"},fields:{type:"list"}}},{fmt:"/<%=index%>/_mapping/field/<%=fields%>",req:{index:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/<%=type%>/field/<%=fields%>",req:{type:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/field/<%=fields%>",req:{fields:{type:"list"}}}]}),s.indices.prototype.getMapping=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_mapping",req:{index:{type:"list"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"list"}}},{fmt:"/_mapping"}]}),s.indices.prototype.getSettings=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},local:{type:"boolean"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_settings/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_settings"}]}),s.indices.prototype.getTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_template"}]}),s.indices.prototype.getUpgrade=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}]}),s.indices.prototype.getWarmer=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_warmer/<%=name%>",req:{index:{type:"list"},type:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_warmer/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_warmer",req:{index:{type:"list"}}},{fmt:"/_warmer/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_warmer"}]}),s.indices.prototype.open=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"closed",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_open",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.optimize=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_optimize",req:{index:{type:"list"}}},{fmt:"/_optimize"}],method:"POST"}),s.indices.prototype.putAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},method:"PUT"}),s.indices.prototype.putMapping=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},updateAllTypes:{type:"boolean",name:"update_all_types"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"string"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.putSettings=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"}},urls:[{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings"}],needBody:!0,method:"PUT"}),s.indices.prototype.putTemplate=r({params:{order:{type:"number"},create:{type:"boolean",default:!1},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},needBody:!0,method:"PUT"}),s.indices.prototype.putWarmer=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},requestCache:{type:"boolean",name:"request_cache"}},urls:[{fmt:"/<%=index%>/<%=type%>/_warmer/<%=name%>",req:{index:{type:"list"},type:{type:"list"},name:{type:"string"}}},{fmt:"/<%=index%>/_warmer/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},{fmt:"/_warmer/<%=name%>",req:{name:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.recovery=r({params:{detailed:{type:"boolean",default:!1},activeOnly:{type:"boolean",default:!1,name:"active_only"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_recovery",req:{index:{type:"list"}}},{fmt:"/_recovery"}]}),s.indices.prototype.refresh=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},force:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_refresh",req:{index:{type:"list"}}},{fmt:"/_refresh"}],method:"POST"}),s.indices.prototype.segments=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},human:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"},verbose:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_segments",req:{index:{type:"list"}}},{fmt:"/_segments"}]}),s.indices.prototype.shardStores=r({params:{status:{type:"list",options:["green","yellow","red","all"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_shard_stores",req:{index:{type:"list"}}},{fmt:"/_shard_stores"}]}),s.indices.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"list"},human:{type:"boolean",default:!1},level:{type:"enum",default:"indices",options:["cluster","indices","shards"]},types:{type:"list"}},urls:[{fmt:"/<%=index%>/_stats/<%=metric%>",req:{index:{type:"list"},metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_stats/<%=metric%>",req:{metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/<%=index%>/_stats",req:{index:{type:"list"}}},{fmt:"/_stats"}]}),s.indices.prototype.updateAliases=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_aliases"},needBody:!0,method:"POST"}),s.indices.prototype.upgrade=r({params:{allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},onlyAncientSegments:{type:"boolean",name:"only_ancient_segments"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}],method:"POST"}),s.indices.prototype.validateQuery=r({params:{explain:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},rewrite:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_validate/query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_validate/query",req:{index:{type:"list"}}},{fmt:"/_validate/query"}],method:"POST"}),s.info=r({url:{fmt:"/"}}),s.mget=r({params:{fields:{type:"list"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mget",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mget",req:{index:{type:"string"}}},{fmt:"/_mget"}],needBody:!0,method:"POST"}),s.mpercolate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mpercolate",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mpercolate",req:{index:{type:"string"}}},{fmt:"/_mpercolate"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearch=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch","count","scan"],name:"search_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch",req:{index:{type:"list"}}},{fmt:"/_msearch"}],needBody:!0,bulkBody:!0,method:"POST"}),s.mtermvectors=r({params:{ids:{type:"list",required:!1},termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mtermvectors",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mtermvectors",req:{index:{type:"string"}}},{fmt:"/_mtermvectors"}],method:"POST"}),s.nodes=a(),s.nodes.prototype.hotThreads=r({params:{interval:{type:"time"},snapshots:{type:"number"},threads:{type:"number"},ignoreIdleThreads:{type:"boolean",name:"ignore_idle_threads"},type:{type:"enum",options:["cpu","wait","block"]},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/hotthreads",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/hotthreads"}]}),s.nodes.prototype.info=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins"]}}},{fmt:"/_nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/<%=metric%>",req:{metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins"]}}},{fmt:"/_nodes"}]}),s.nodes.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"boolean"},human:{type:"boolean",default:!1},level:{type:"enum",default:"node",options:["node","indices","shards"]},types:{type:"list"},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport"]}}},{fmt:"/_nodes/stats/<%=metric%>/<%=indexMetric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/stats/<%=metric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport"]}}},{fmt:"/_nodes/stats"}]}),s.percolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},percolateRouting:{type:"string",name:"percolate_routing"},percolatePreference:{type:"string",name:"percolate_preference"},percolateFormat:{type:"enum",options:["ids"],name:"percolate_format"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.ping=r({url:{fmt:"/"},requestTimeout:3e3,method:"HEAD"}),s.putScript=r({params:{opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},needBody:!0,method:"PUT"}),s.putTemplate=r({params:{opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.reindex=r({params:{refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},consistency:{type:"enum",options:["one","quorum","all"]},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"}},url:{fmt:"/_reindex"},needBody:!0,method:"POST"}),s.reindexRethrottle=r({params:{requestsPerSecond:{type:"number",required:!0,name:"requests_per_second"}},url:{fmt:"/_reindex/<%=taskId%>/_rethrottle",req:{taskId:{type:"string"}}},method:"POST"}),s.renderSearchTemplate=r({urls:[{fmt:"/_render/template/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_render/template"}],method:"POST"}),s.scroll=r({params:{scroll:{type:"time"},scrollId:{type:"string",name:"scroll_id"}},urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"string"}}},{fmt:"/_search/scroll"}],paramAsBody:"scrollId",method:"POST"}),s.search=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},fields:{type:"list"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch","count","scan"],name:"search_type"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time"},trackScores:{type:"boolean",name:"track_scores"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search",req:{index:{type:"list"}}},{fmt:"/_search"}],method:"POST"}),s.searchExists=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/exists",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/exists",req:{index:{type:"list"}}},{fmt:"/_search/exists"}],method:"POST"}),s.searchShards=r({params:{preference:{type:"string"},routing:{type:"string"},local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search_shards",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search_shards",req:{index:{type:"list"}}},{fmt:"/_search_shards"}],method:"POST"}),s.searchTemplate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch","count","scan"],name:"search_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/template",req:{index:{type:"list"}}},{fmt:"/_search/template"}],method:"POST"}),s.snapshot=a(),s.snapshot.prototype.create=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.createRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},verify:{type:"boolean"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"string"}}},needBody:!0,method:"POST"}),s.snapshot.prototype.delete=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"DELETE"}),s.snapshot.prototype.deleteRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},method:"DELETE"}),s.snapshot.prototype.get=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"list"}}}}),s.snapshot.prototype.getRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_snapshot"}]}),s.snapshot.prototype.restore=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_restore",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.status=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},urls:[{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_status",req:{repository:{type:"string"},snapshot:{type:"list"}}},{fmt:"/_snapshot/<%=repository%>/_status",req:{repository:{type:"string"}}},{fmt:"/_snapshot/_status"}]}),s.snapshot.prototype.verifyRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>/_verify",req:{repository:{type:"string"}}},method:"POST"}),s.suggest=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"string"}},urls:[{fmt:"/<%=index%>/_suggest",req:{index:{type:"list"}}},{fmt:"/_suggest"}],needBody:!0,method:"POST"}),s.tasks=a(),s.tasks.prototype.cancel=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"}},urls:[{fmt:"/_tasks/<%=taskId%>/_cancel",req:{taskId:{type:"string"}}},{fmt:"/_tasks/_cancel"}],method:"POST"}),s.tasks.prototype.list=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"},waitForCompletion:{type:"boolean",name:"wait_for_completion"}},urls:[{fmt:"/_tasks/<%=taskId%>",req:{taskId:{type:"string"}}},{fmt:"/_tasks"}]}),s.termvectors=r({params:{termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},dfs:{type:"boolean",default:!1,required:!1},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_termvectors",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_termvectors",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.update=r({params:{consistency:{type:"enum",options:["one","quorum","all"]},fields:{type:"list"},lang:{type:"string"},parent:{type:"string"},refresh:{type:"boolean"},retryOnConflict:{type:"number",name:"retry_on_conflict"},routing:{type:"string"},script:{type:"string"},scriptId:{type:"string",name:"script_id"},scriptedUpsert:{type:"boolean",name:"scripted_upsert"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_update",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.updateByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},fields:{type:"list"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time",default:"1m"},trackScores:{type:"boolean",name:"track_scores"},version:{type:"boolean"},versionType:{type:"boolean",name:"version_type"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},consistency:{type:"enum",options:["one","quorum","all"]},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"}},urls:[{fmt:"/<%=index%>/<%=type%>/_update_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_update_by_query",req:{index:{type:"list"}}}],method:"POST"}),s.create=r.proxy(s.index,{transform:function(t){t.op_type="create"}})},function(t,e,n){var r=n(1).makeFactoryWithModifier(function(t){return n(0).merge(t,{params:{filterPath:{type:"list",name:"filter_path"}}})}),a=n(1).namespaceFactory,s=t.exports={};s._namespaces=["cat","cluster","indices","ingest","nodes","snapshot","tasks"],s.bulk=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},type:{type:"string"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/_bulk",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_bulk",req:{index:{type:"string"}}},{fmt:"/_bulk"}],needBody:!0,bulkBody:!0,method:"POST"}),s.cat=a(),s.cat.prototype.aliases=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_cat/aliases"}]}),s.cat.prototype.allocation=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/allocation/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cat/allocation"}]}),s.cat.prototype.count=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/count/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/count"}]}),s.cat.prototype.fielddata=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1},fields:{type:"list"}},urls:[{fmt:"/_cat/fielddata/<%=fields%>",req:{fields:{type:"list"}}},{fmt:"/_cat/fielddata"}]}),s.cat.prototype.health=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},ts:{type:"boolean",default:!0},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/health"}}),s.cat.prototype.help=r({params:{help:{type:"boolean",default:!1}},url:{fmt:"/_cat"}}),s.cat.prototype.indices=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},health:{type:"enum",default:null,options:["green","yellow","red"]},help:{type:"boolean",default:!1},pri:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/indices/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/indices"}]}),s.cat.prototype.master=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/master"}}),s.cat.prototype.nodeattrs=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodeattrs"}}),s.cat.prototype.nodes=r({params:{format:{type:"string"},fullId:{type:"boolean",name:"full_id"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodes"}}),s.cat.prototype.pendingTasks=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/pending_tasks"}}),s.cat.prototype.plugins=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/plugins"}}),s.cat.prototype.recovery=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/recovery/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/recovery"}]}),s.cat.prototype.repositories=r({params:{format:{type:"string"},local:{type:"boolean",default:!1},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/repositories"}}),s.cat.prototype.segments=r({params:{format:{type:"string"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/segments/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/segments"}]}),s.cat.prototype.shards=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/shards/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/shards"}]}),s.cat.prototype.snapshots=r({params:{format:{type:"string"},ignoreUnavailable:{type:"boolean",default:!1,name:"ignore_unavailable"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/snapshots/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_cat/snapshots"}]}),s.cat.prototype.tasks=r({params:{format:{type:"string"},nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"number",name:"parent_task"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/tasks"}}),s.cat.prototype.threadPool=r({params:{format:{type:"string"},size:{type:"enum",options:["","k","m","g","t","p"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/thread_pool/<%=threadPoolPatterns%>",req:{threadPoolPatterns:{type:"list"}}},{fmt:"/_cat/thread_pool"}]}),s.clearScroll=r({urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"list"}}},{fmt:"/_search/scroll"}],paramAsBody:"scrollId",method:"DELETE"}),s.cluster=a(),s.cluster.prototype.allocationExplain=r({params:{includeYesDecisions:{type:"boolean",name:"include_yes_decisions"},includeDiskInfo:{type:"boolean",name:"include_disk_info"}},url:{fmt:"/_cluster/allocation/explain"},method:"POST"}),s.cluster.prototype.getSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/_cluster/settings"}}),s.cluster.prototype.health=r({params:{level:{type:"enum",default:"cluster",options:["cluster","indices","shards"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForNodes:{type:"string",name:"wait_for_nodes"},waitForEvents:{type:"enum",options:["immediate","urgent","high","normal","low","languid"],name:"wait_for_events"},waitForNoRelocatingShards:{type:"boolean",name:"wait_for_no_relocating_shards"},waitForStatus:{type:"enum",default:null,options:["green","yellow","red"],name:"wait_for_status"}},urls:[{fmt:"/_cluster/health/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cluster/health"}]}),s.cluster.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_cluster/pending_tasks"}}),s.cluster.prototype.putSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"},method:"PUT"}),s.cluster.prototype.reroute=r({params:{dryRun:{type:"boolean",name:"dry_run"},explain:{type:"boolean"},retryFailed:{type:"boolean",name:"retry_failed"},metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","master_node","version"]},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/reroute"},method:"POST"}),s.cluster.prototype.state=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/_cluster/state/<%=metric%>/<%=index%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]},index:{type:"list"}}},{fmt:"/_cluster/state/<%=metric%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]}}},{fmt:"/_cluster/state"}]}),s.cluster.prototype.stats=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},timeout:{type:"time"}},urls:[{fmt:"/_cluster/stats/nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cluster/stats"}]}),s.count=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"}},urls:[{fmt:"/<%=index%>/<%=type%>/_count",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_count",req:{index:{type:"list"}}},{fmt:"/_count"}],method:"POST"}),s.countPercolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_create",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},needBody:!0,method:"POST"}),s.delete=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"}},urls:[{fmt:"/<%=index%>/<%=type%>/_delete_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_delete_by_query",req:{index:{type:"list"}}}],needBody:!0,method:"POST"}),s.deleteScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.exists=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.explain=r({params:{analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},analyzer:{type:"string"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},storedFields:{type:"list",name:"stored_fields"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},parent:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_explain",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.fieldStats=r({params:{fields:{type:"list"},level:{type:"enum",default:"cluster",options:["indices","cluster"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_stats",req:{index:{type:"list"}}},{fmt:"/_field_stats"}],method:"POST"}),s.get=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}}}),s.getSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}}}),s.index=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"string"},type:{type:"string"}}}],needBody:!0,method:"POST"}),s.indices=a(),s.indices.prototype.analyze=r({params:{analyzer:{type:"string"},charFilter:{type:"list",name:"char_filter"},field:{type:"string"},filter:{type:"list"},index:{type:"string"},preferLocal:{type:"boolean",name:"prefer_local"},text:{type:"list"},tokenizer:{type:"string"},explain:{type:"boolean"},attributes:{type:"list"},format:{type:"enum",default:"detailed",options:["detailed","text"]}},urls:[{fmt:"/<%=index%>/_analyze",req:{index:{type:"string"}}},{fmt:"/_analyze"}],method:"POST"}),s.indices.prototype.clearCache=r({params:{fieldData:{type:"boolean",name:"field_data"},fielddata:{type:"boolean"},fields:{type:"list"},query:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},index:{type:"list"},recycler:{type:"boolean"},request:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_cache/clear",req:{index:{type:"list"}}},{fmt:"/_cache/clear"}],method:"POST"}),s.indices.prototype.close=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_close",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},updateAllTypes:{type:"boolean",name:"update_all_types"}},url:{fmt:"/<%=index%>",req:{index:{type:"string"}}},method:"PUT"}),s.indices.prototype.delete=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteTemplate=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"DELETE"}),s.indices.prototype.exists=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}}],method:"HEAD"}),s.indices.prototype.existsTemplate=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"HEAD"}),s.indices.prototype.existsType=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},method:"HEAD"}),s.indices.prototype.flush=r({params:{force:{type:"boolean"},waitIfOngoing:{type:"boolean",name:"wait_if_ongoing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush",req:{index:{type:"list"}}},{fmt:"/_flush"}],method:"POST"}),s.indices.prototype.flushSynced=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush/synced",req:{index:{type:"list"}}},{fmt:"/_flush/synced"}],method:"POST"}),s.indices.prototype.forcemerge=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_forcemerge",req:{index:{type:"list"}}},{fmt:"/_forcemerge"}],method:"POST"}),s.indices.prototype.get=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/<%=feature%>",req:{index:{type:"list"},feature:{type:"list",options:["_settings","_mappings","_aliases"]}}},{fmt:"/<%=index%>",req:{index:{type:"list"}}}]}),s.indices.prototype.getAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}},{fmt:"/_alias"}]}),s.indices.prototype.getFieldMapping=r({params:{includeDefaults:{type:"boolean",name:"include_defaults"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>/field/<%=fields%>",req:{index:{type:"list"},type:{type:"list"},fields:{type:"list"}}},{fmt:"/<%=index%>/_mapping/field/<%=fields%>",req:{index:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/<%=type%>/field/<%=fields%>",req:{type:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/field/<%=fields%>",req:{fields:{type:"list"}}}]}),s.indices.prototype.getMapping=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_mapping",req:{index:{type:"list"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"list"}}},{fmt:"/_mapping"}]}),s.indices.prototype.getSettings=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},local:{type:"boolean"},human:{type:"boolean",default:!1},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/_settings/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_settings"}]}),s.indices.prototype.getTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_template"}]}),s.indices.prototype.getUpgrade=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}]}),s.indices.prototype.open=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"closed",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_open",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.putAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},method:"PUT"}),s.indices.prototype.putMapping=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},updateAllTypes:{type:"boolean",name:"update_all_types"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"string"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.putSettings=r({params:{masterTimeout:{type:"time",name:"master_timeout"},preserveExisting:{type:"boolean",name:"preserve_existing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"}},urls:[{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings"}],needBody:!0,method:"PUT"}),s.indices.prototype.putTemplate=r({params:{order:{type:"number"},create:{type:"boolean",default:!1},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},needBody:!0,method:"PUT"}),s.indices.prototype.recovery=r({params:{detailed:{type:"boolean",default:!1},activeOnly:{type:"boolean",default:!1,name:"active_only"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_recovery",req:{index:{type:"list"}}},{fmt:"/_recovery"}]}),s.indices.prototype.refresh=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},force:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_refresh",req:{index:{type:"list"}}},{fmt:"/_refresh"}],method:"POST"}),s.indices.prototype.rollover=r({params:{timeout:{type:"time"},dryRun:{type:"boolean",name:"dry_run"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},urls:[{fmt:"/<%=alias%>/_rollover/<%=newIndex%>",req:{alias:{type:"string"},newIndex:{type:"string"}}},{fmt:"/<%=alias%>/_rollover",req:{alias:{type:"string"}}}],method:"POST"}),s.indices.prototype.segments=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},human:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"},verbose:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_segments",req:{index:{type:"list"}}},{fmt:"/_segments"}]}),s.indices.prototype.shardStores=r({params:{status:{type:"list",options:["green","yellow","red","all"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_shard_stores",req:{index:{type:"list"}}},{fmt:"/_shard_stores"}]}),s.indices.prototype.shrink=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},url:{fmt:"/<%=index%>/_shrink/<%=target%>",req:{index:{type:"string"},target:{type:"string"}}},method:"POST"}),s.indices.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"list"},human:{type:"boolean",default:!1},level:{type:"enum",default:"indices",options:["cluster","indices","shards"]},types:{type:"list"}},urls:[{fmt:"/<%=index%>/_stats/<%=metric%>",req:{index:{type:"list"},metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_stats/<%=metric%>",req:{metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/<%=index%>/_stats",req:{index:{type:"list"}}},{fmt:"/_stats"}]}),s.indices.prototype.updateAliases=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_aliases"},needBody:!0,method:"POST"}),s.indices.prototype.upgrade=r({params:{allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},onlyAncientSegments:{type:"boolean",name:"only_ancient_segments"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}],method:"POST"}),s.indices.prototype.validateQuery=r({params:{explain:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},rewrite:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_validate/query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_validate/query",req:{index:{type:"list"}}},{fmt:"/_validate/query"}],method:"POST"}),s.info=r({url:{fmt:"/"}}),s.ingest=a(),s.ingest.prototype.deletePipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.ingest.prototype.getPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},urls:[{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline"}]}),s.ingest.prototype.putPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.ingest.prototype.simulate=r({params:{verbose:{type:"boolean",default:!1}},urls:[{fmt:"/_ingest/pipeline/<%=id%>/_simulate",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline/_simulate"}],needBody:!0,method:"POST"}),s.mget=r({params:{storedFields:{type:"list",name:"stored_fields"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mget",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mget",req:{index:{type:"string"}}},{fmt:"/_mget"}],needBody:!0,method:"POST"}),s.mpercolate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mpercolate",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mpercolate",req:{index:{type:"string"}}},{fmt:"/_mpercolate"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearch=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},maxConcurrentSearches:{type:"number",name:"max_concurrent_searches"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch",req:{index:{type:"list"}}},{fmt:"/_msearch"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearchTemplate=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch/template",req:{index:{type:"list"}}},{fmt:"/_msearch/template"}],needBody:!0,bulkBody:!0,method:"POST"}),s.mtermvectors=r({params:{ids:{type:"list",required:!1},termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mtermvectors",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mtermvectors",req:{index:{type:"string"}}},{fmt:"/_mtermvectors"}],method:"POST"}),s.nodes=a(),s.nodes.prototype.hotThreads=r({params:{interval:{type:"time"},snapshots:{type:"number"},threads:{type:"number"},ignoreIdleThreads:{type:"boolean",name:"ignore_idle_threads"},type:{type:"enum",options:["cpu","wait","block"]},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/hotthreads",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/hotthreads"}]}),s.nodes.prototype.info=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/<%=metric%>",req:{metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes"}]}),s.nodes.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"boolean"},human:{type:"boolean",default:!1},level:{type:"enum",default:"node",options:["indices","node","shards"]},types:{type:"list"},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats/<%=metric%>/<%=indexMetric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/stats/<%=metric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats"}]}),s.percolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},percolateRouting:{type:"string",name:"percolate_routing"},percolatePreference:{type:"string",name:"percolate_preference"},percolateFormat:{type:"enum",options:["ids"],name:"percolate_format"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.ping=r({url:{fmt:"/"},requestTimeout:3e3,method:"HEAD"}),s.putScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},needBody:!0,method:"PUT"}),s.putTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.reindex=r({params:{refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"}},url:{fmt:"/_reindex"},needBody:!0,method:"POST"}),s.reindexRethrottle=r({params:{requestsPerSecond:{type:"number",required:!0,name:"requests_per_second"}},url:{fmt:"/_reindex/<%=taskId%>/_rethrottle",req:{taskId:{type:"string"}}},method:"POST"}),s.renderSearchTemplate=r({urls:[{fmt:"/_render/template/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_render/template"}],method:"POST"}),s.scroll=r({params:{scroll:{type:"time"},scrollId:{type:"string",name:"scroll_id"}},urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"string"}}},{fmt:"/_search/scroll"}],paramAsBody:"scrollId",method:"POST"}),s.search=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},storedFields:{type:"list",name:"stored_fields"},docvalueFields:{type:"list",name:"docvalue_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time"},trackScores:{type:"boolean",name:"track_scores"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search",req:{index:{type:"list"}}},{fmt:"/_search"}],method:"POST"}),s.searchShards=r({params:{preference:{type:"string"},routing:{type:"string"},local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search_shards",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search_shards",req:{index:{type:"list"}}},{fmt:"/_search_shards"}],method:"POST"}),s.searchTemplate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/template",req:{index:{type:"list"}}},{fmt:"/_search/template"}],method:"POST"}),s.snapshot=a(),s.snapshot.prototype.create=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.createRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},verify:{type:"boolean"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"string"}}},needBody:!0,method:"POST"}),s.snapshot.prototype.delete=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"DELETE"}),s.snapshot.prototype.deleteRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},method:"DELETE"}),s.snapshot.prototype.get=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"list"}}}}),s.snapshot.prototype.getRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_snapshot"}]}),s.snapshot.prototype.restore=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_restore",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.status=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},urls:[{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_status",req:{repository:{type:"string"},snapshot:{type:"list"}}},{fmt:"/_snapshot/<%=repository%>/_status",req:{repository:{type:"string"}}},{fmt:"/_snapshot/_status"}]}),s.snapshot.prototype.verifyRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>/_verify",req:{repository:{type:"string"}}},method:"POST"}),s.suggest=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"string"}},urls:[{fmt:"/<%=index%>/_suggest",req:{index:{type:"list"}}},{fmt:"/_suggest"}],needBody:!0,method:"POST"}),s.tasks=a(),s.tasks.prototype.cancel=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"}},urls:[{fmt:"/_tasks/<%=taskId%>/_cancel",req:{taskId:{type:"string"}}},{fmt:"/_tasks/_cancel"}],method:"POST"}),s.tasks.prototype.get=r({params:{waitForCompletion:{type:"boolean",name:"wait_for_completion"}},url:{fmt:"/_tasks/<%=taskId%>",req:{taskId:{type:"string"}}}}),s.tasks.prototype.list=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},groupBy:{type:"enum",default:"nodes",options:["nodes","parents"],name:"group_by"}},url:{fmt:"/_tasks"}}),s.termvectors=r({params:{termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_termvectors",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_termvectors",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.update=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},lang:{type:"string"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},retryOnConflict:{type:"number",name:"retry_on_conflict"},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_update",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.updateByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},lowercaseExpandedTerms:{type:"boolean",name:"lowercase_expanded_terms"},pipeline:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},versionType:{type:"boolean",name:"version_type"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"}},urls:[{fmt:"/<%=index%>/<%=type%>/_update_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_update_by_query",req:{index:{type:"list"}}}],method:"POST"})},function(t,e,n){var r=n(1).makeFactoryWithModifier(function(t){return n(0).merge(t,{params:{filterPath:{type:"list",name:"filter_path"}}})}),a=n(1).namespaceFactory,s=t.exports={};s._namespaces=["cat","cluster","indices","ingest","nodes","snapshot","tasks"],s.bulk=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},type:{type:"string"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/_bulk",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_bulk",req:{index:{type:"string"}}},{fmt:"/_bulk"}],needBody:!0,bulkBody:!0,method:"POST"}),s.cat=a(),s.cat.prototype.aliases=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_cat/aliases"}]}),s.cat.prototype.allocation=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/allocation/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cat/allocation"}]}),s.cat.prototype.count=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/count/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/count"}]}),s.cat.prototype.fielddata=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1},fields:{type:"list"}},urls:[{fmt:"/_cat/fielddata/<%=fields%>",req:{fields:{type:"list"}}},{fmt:"/_cat/fielddata"}]}),s.cat.prototype.health=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},ts:{type:"boolean",default:!0},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/health"}}),s.cat.prototype.help=r({params:{help:{type:"boolean",default:!1},s:{type:"list"}},url:{fmt:"/_cat"}}),s.cat.prototype.indices=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},health:{type:"enum",default:null,options:["green","yellow","red"]},help:{type:"boolean",default:!1},pri:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/indices/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/indices"}]}),s.cat.prototype.master=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/master"}}),s.cat.prototype.nodeattrs=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodeattrs"}}),s.cat.prototype.nodes=r({params:{format:{type:"string"},fullId:{type:"boolean",name:"full_id"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodes"}}),s.cat.prototype.pendingTasks=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/pending_tasks"}}),s.cat.prototype.plugins=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/plugins"}}),s.cat.prototype.recovery=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/recovery/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/recovery"}]}),s.cat.prototype.repositories=r({params:{format:{type:"string"},local:{type:"boolean",default:!1},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/repositories"}}),s.cat.prototype.segments=r({params:{format:{type:"string"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/segments/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/segments"}]}),s.cat.prototype.shards=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/shards/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/shards"}]}),s.cat.prototype.snapshots=r({params:{format:{type:"string"},ignoreUnavailable:{type:"boolean",default:!1,name:"ignore_unavailable"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/snapshots/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_cat/snapshots"}]}),s.cat.prototype.tasks=r({params:{format:{type:"string"},nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"number",name:"parent_task"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/tasks"}}),s.cat.prototype.templates=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/templates/<%=name%>",req:{name:{type:"string"}}},{fmt:"/_cat/templates"}]}),s.cat.prototype.threadPool=r({params:{format:{type:"string"},size:{type:"enum",options:["","k","m","g","t","p"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/thread_pool/<%=threadPoolPatterns%>",req:{threadPoolPatterns:{type:"list"}}},{fmt:"/_cat/thread_pool"}]}),s.clearScroll=r({urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"list"}}},{fmt:"/_search/scroll"}],paramAsBody:"scrollId",method:"DELETE"}),s.cluster=a(),s.cluster.prototype.allocationExplain=r({params:{includeYesDecisions:{type:"boolean",name:"include_yes_decisions"},includeDiskInfo:{type:"boolean",name:"include_disk_info"}},url:{fmt:"/_cluster/allocation/explain"},method:"POST"}),s.cluster.prototype.getSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/_cluster/settings"}}),s.cluster.prototype.health=r({params:{level:{type:"enum",default:"cluster",options:["cluster","indices","shards"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForNodes:{type:"string",name:"wait_for_nodes"},waitForEvents:{type:"enum",options:["immediate","urgent","high","normal","low","languid"],name:"wait_for_events"},waitForNoRelocatingShards:{type:"boolean",name:"wait_for_no_relocating_shards"},waitForStatus:{type:"enum",default:null,options:["green","yellow","red"],name:"wait_for_status"}},urls:[{fmt:"/_cluster/health/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cluster/health"}]}),s.cluster.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_cluster/pending_tasks"}}),s.cluster.prototype.putSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"},method:"PUT"}),s.cluster.prototype.reroute=r({params:{dryRun:{type:"boolean",name:"dry_run"},explain:{type:"boolean"},retryFailed:{type:"boolean",name:"retry_failed"},metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","master_node","version"]},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/reroute"},method:"POST"}),s.cluster.prototype.state=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/_cluster/state/<%=metric%>/<%=index%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]},index:{type:"list"}}},{fmt:"/_cluster/state/<%=metric%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]}}},{fmt:"/_cluster/state"}]}),s.cluster.prototype.stats=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},timeout:{type:"time"}},urls:[{fmt:"/_cluster/stats/nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cluster/stats"}]}),s.count=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_count",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_count",req:{index:{type:"list"}}},{fmt:"/_count"}],method:"POST"}),s.countPercolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_create",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},needBody:!0,method:"POST"}),s.delete=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"integer",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_delete_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_delete_by_query",req:{index:{type:"list"}}}],needBody:!0,method:"POST"}),s.deleteScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.exists=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.explain=r({params:{analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},analyzer:{type:"string"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},storedFields:{type:"list",name:"stored_fields"},lenient:{type:"boolean"},parent:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_explain",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.fieldStats=r({params:{fields:{type:"list"},level:{type:"enum",default:"cluster",options:["indices","cluster"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_stats",req:{index:{type:"list"}}},{fmt:"/_field_stats"}],method:"POST"}),s.get=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}}}),s.getSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}}}),s.index=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"string"},type:{type:"string"}}}],needBody:!0,method:"POST"}),s.indices=a(),s.indices.prototype.analyze=r({params:{analyzer:{type:"string"},charFilter:{type:"list",name:"char_filter"},field:{type:"string"},filter:{type:"list"},index:{type:"string"},preferLocal:{type:"boolean",name:"prefer_local"},text:{type:"list"},tokenizer:{type:"string"},explain:{type:"boolean"},attributes:{type:"list"},format:{type:"enum",default:"detailed",options:["detailed","text"]}},urls:[{fmt:"/<%=index%>/_analyze",req:{index:{type:"string"}}},{fmt:"/_analyze"}],method:"POST"}),s.indices.prototype.clearCache=r({params:{fieldData:{type:"boolean",name:"field_data"},fielddata:{type:"boolean"},fields:{type:"list"},query:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},index:{type:"list"},recycler:{type:"boolean"},request:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_cache/clear",req:{index:{type:"list"}}},{fmt:"/_cache/clear"}],method:"POST"}),s.indices.prototype.close=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_close",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},updateAllTypes:{type:"boolean",name:"update_all_types"}},url:{fmt:"/<%=index%>",req:{index:{type:"string"}}},method:"PUT"}),s.indices.prototype.delete=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteTemplate=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"DELETE"}),s.indices.prototype.exists=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}}],method:"HEAD"}),s.indices.prototype.existsTemplate=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"HEAD"}),s.indices.prototype.existsType=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},method:"HEAD"}),s.indices.prototype.flush=r({params:{force:{type:"boolean"},waitIfOngoing:{type:"boolean",name:"wait_if_ongoing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush",req:{index:{type:"list"}}},{fmt:"/_flush"}],method:"POST"}),s.indices.prototype.flushSynced=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush/synced",req:{index:{type:"list"}}},{fmt:"/_flush/synced"}],method:"POST"}),s.indices.prototype.forcemerge=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_forcemerge",req:{index:{type:"list"}}},{fmt:"/_forcemerge"}],method:"POST"}),s.indices.prototype.get=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/<%=feature%>",req:{index:{type:"list"},feature:{type:"list",options:["_settings","_mappings","_aliases"]}}},{fmt:"/<%=index%>",req:{index:{type:"list"}}}]}),s.indices.prototype.getAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}},{fmt:"/_alias"}]}),s.indices.prototype.getFieldMapping=r({params:{includeDefaults:{type:"boolean",name:"include_defaults"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>/field/<%=fields%>",req:{index:{type:"list"},type:{type:"list"},fields:{type:"list"}}},{fmt:"/<%=index%>/_mapping/field/<%=fields%>",req:{index:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/<%=type%>/field/<%=fields%>",req:{type:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/field/<%=fields%>",req:{fields:{type:"list"}}}]}),s.indices.prototype.getMapping=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_mapping",req:{index:{type:"list"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"list"}}},{fmt:"/_mapping"}]}),s.indices.prototype.getSettings=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},local:{type:"boolean"},human:{type:"boolean",default:!1},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/_settings/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_settings"}]}),s.indices.prototype.getTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_template"}]}),s.indices.prototype.getUpgrade=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}]}),s.indices.prototype.open=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"closed",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_open",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.putAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},method:"PUT"}),s.indices.prototype.putMapping=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},updateAllTypes:{type:"boolean",name:"update_all_types"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"string"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.putSettings=r({params:{masterTimeout:{type:"time",name:"master_timeout"},preserveExisting:{type:"boolean",name:"preserve_existing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"}},urls:[{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings"}],needBody:!0,method:"PUT"}),s.indices.prototype.putTemplate=r({params:{order:{type:"number"},create:{type:"boolean",default:!1},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},needBody:!0,method:"PUT"}),s.indices.prototype.recovery=r({params:{detailed:{type:"boolean",default:!1},activeOnly:{type:"boolean",default:!1,name:"active_only"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_recovery",req:{index:{type:"list"}}},{fmt:"/_recovery"}]}),s.indices.prototype.refresh=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},force:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_refresh",req:{index:{type:"list"}}},{fmt:"/_refresh"}],method:"POST"}),s.indices.prototype.rollover=r({params:{timeout:{type:"time"},dryRun:{type:"boolean",name:"dry_run"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},urls:[{fmt:"/<%=alias%>/_rollover/<%=newIndex%>",req:{alias:{type:"string"},newIndex:{type:"string"}}},{fmt:"/<%=alias%>/_rollover",req:{alias:{type:"string"}}}],method:"POST"}),s.indices.prototype.segments=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},human:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"},verbose:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_segments",req:{index:{type:"list"}}},{fmt:"/_segments"}]}),s.indices.prototype.shardStores=r({params:{status:{type:"list",options:["green","yellow","red","all"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_shard_stores",req:{index:{type:"list"}}},{fmt:"/_shard_stores"}]}),s.indices.prototype.shrink=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},url:{fmt:"/<%=index%>/_shrink/<%=target%>",req:{index:{type:"string"},target:{type:"string"}}},method:"POST"}),s.indices.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"list"},human:{type:"boolean",default:!1},level:{type:"enum",default:"indices",options:["cluster","indices","shards"]},types:{type:"list"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/<%=index%>/_stats/<%=metric%>",req:{index:{type:"list"},metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_stats/<%=metric%>",req:{metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/<%=index%>/_stats",req:{index:{type:"list"}}},{fmt:"/_stats"}]}),s.indices.prototype.updateAliases=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_aliases"},needBody:!0,method:"POST"}),s.indices.prototype.upgrade=r({params:{allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},onlyAncientSegments:{type:"boolean",name:"only_ancient_segments"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}],method:"POST"}),s.indices.prototype.validateQuery=r({params:{explain:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},rewrite:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_validate/query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_validate/query",req:{index:{type:"list"}}},{fmt:"/_validate/query"}],method:"POST"}),s.info=r({url:{fmt:"/"}}),s.ingest=a(),s.ingest.prototype.deletePipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.ingest.prototype.getPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},urls:[{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline"}]}),s.ingest.prototype.putPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.ingest.prototype.simulate=r({params:{verbose:{type:"boolean",default:!1}},urls:[{fmt:"/_ingest/pipeline/<%=id%>/_simulate",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline/_simulate"}],needBody:!0,method:"POST"}),s.mget=r({params:{storedFields:{type:"list",name:"stored_fields"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mget",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mget",req:{index:{type:"string"}}},{fmt:"/_mget"}],needBody:!0,method:"POST"}),s.mpercolate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mpercolate",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mpercolate",req:{index:{type:"string"}}},{fmt:"/_mpercolate"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearch=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},maxConcurrentSearches:{type:"number",name:"max_concurrent_searches"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch",req:{index:{type:"list"}}},{fmt:"/_msearch"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearchTemplate=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch/template",req:{index:{type:"list"}}},{fmt:"/_msearch/template"}],needBody:!0,bulkBody:!0,method:"POST"}),s.mtermvectors=r({params:{ids:{type:"list",required:!1},termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mtermvectors",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mtermvectors",req:{index:{type:"string"}}},{fmt:"/_mtermvectors"}],method:"POST"}),s.nodes=a(),s.nodes.prototype.hotThreads=r({params:{interval:{type:"time"},snapshots:{type:"number"},threads:{type:"number"},ignoreIdleThreads:{type:"boolean",name:"ignore_idle_threads"},type:{type:"enum",options:["cpu","wait","block"]},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/hotthreads",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/hotthreads"}]}),s.nodes.prototype.info=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/<%=metric%>",req:{metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes"}]}),s.nodes.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"boolean"},human:{type:"boolean",default:!1},level:{type:"enum",default:"node",options:["indices","node","shards"]},types:{type:"list"},timeout:{type:"time"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats/<%=metric%>/<%=indexMetric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/stats/<%=metric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats"}]}),s.percolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},percolateRouting:{type:"string",name:"percolate_routing"},percolatePreference:{type:"string",name:"percolate_preference"},percolateFormat:{type:"enum",options:["ids"],name:"percolate_format"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.ping=r({url:{fmt:"/"},requestTimeout:3e3,method:"HEAD"}),s.putScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},needBody:!0,method:"PUT"}),s.putTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.reindex=r({params:{refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"integer",default:1}},url:{fmt:"/_reindex"},needBody:!0,method:"POST"}),s.reindexRethrottle=r({params:{requestsPerSecond:{type:"number",required:!0,name:"requests_per_second"}},url:{fmt:"/_reindex/<%=taskId%>/_rethrottle",req:{taskId:{type:"string"}}},method:"POST"}),s.renderSearchTemplate=r({urls:[{fmt:"/_render/template/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_render/template"}],method:"POST"}),s.scroll=r({params:{scroll:{type:"time"},scrollId:{type:"string",name:"scroll_id"}},urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"string"}}},{fmt:"/_search/scroll"}],paramAsBody:"scrollId",method:"POST"}),s.search=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},storedFields:{type:"list",name:"stored_fields"},docvalueFields:{type:"list",name:"docvalue_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time"},trackScores:{type:"boolean",name:"track_scores"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search",req:{index:{type:"list"}}},{fmt:"/_search"}],method:"POST"}),s.searchShards=r({params:{preference:{type:"string"},routing:{type:"string"},local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search_shards",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search_shards",req:{index:{type:"list"}}},{fmt:"/_search_shards"}],method:"POST"}),s.searchTemplate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},explain:{type:"boolean"},profile:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/template",req:{index:{type:"list"}}},{fmt:"/_search/template"}],method:"POST"}),s.snapshot=a(),s.snapshot.prototype.create=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.createRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},verify:{type:"boolean"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"string"}}},needBody:!0,method:"POST"}),s.snapshot.prototype.delete=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"DELETE"}),s.snapshot.prototype.deleteRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},method:"DELETE"}),s.snapshot.prototype.get=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"list"}}}}),s.snapshot.prototype.getRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_snapshot"}]}),s.snapshot.prototype.restore=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_restore",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.status=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},urls:[{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_status",req:{repository:{type:"string"},snapshot:{type:"list"}}},{fmt:"/_snapshot/<%=repository%>/_status",req:{repository:{type:"string"}}},{fmt:"/_snapshot/_status"}]}),s.snapshot.prototype.verifyRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>/_verify",req:{repository:{type:"string"}}},method:"POST"}),s.suggest=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"string"}},urls:[{fmt:"/<%=index%>/_suggest",req:{index:{type:"list"}}},{fmt:"/_suggest"}],needBody:!0,method:"POST"}),s.tasks=a(),s.tasks.prototype.cancel=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"}},urls:[{fmt:"/_tasks/<%=taskId%>/_cancel",req:{taskId:{type:"string"}}},{fmt:"/_tasks/_cancel"}],method:"POST"}),s.tasks.prototype.get=r({params:{waitForCompletion:{type:"boolean",name:"wait_for_completion"}},url:{fmt:"/_tasks/<%=taskId%>",req:{taskId:{type:"string"}}}}),s.tasks.prototype.list=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},groupBy:{type:"enum",default:"nodes",options:["nodes","parents"],name:"group_by"}},url:{fmt:"/_tasks"}}),s.termvectors=r({params:{termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_termvectors",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_termvectors",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.update=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},lang:{type:"string"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},retryOnConflict:{type:"number",name:"retry_on_conflict"},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_update",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.updateByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},pipeline:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},versionType:{type:"boolean",name:"version_type"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"integer",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_update_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_update_by_query",req:{index:{type:"list"}}}],method:"POST"})},function(t,e,n){var r=n(1).makeFactoryWithModifier(function(t){return n(0).merge(t,{params:{filterPath:{type:"list",name:"filter_path"}}})}),a=n(1).namespaceFactory,s=t.exports={};s._namespaces=["cat","cluster","indices","ingest","nodes","snapshot","tasks"],s.bulk=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},type:{type:"string"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/_bulk",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_bulk",req:{index:{type:"string"}}},{fmt:"/_bulk"}],needBody:!0,bulkBody:!0,method:"POST"}),s.cat=a(),s.cat.prototype.aliases=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_cat/aliases"}]}),s.cat.prototype.allocation=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/allocation/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cat/allocation"}]}),s.cat.prototype.count=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/count/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/count"}]}),s.cat.prototype.fielddata=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1},fields:{type:"list"}},urls:[{fmt:"/_cat/fielddata/<%=fields%>",req:{fields:{type:"list"}}},{fmt:"/_cat/fielddata"}]}),s.cat.prototype.health=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},ts:{type:"boolean",default:!0},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/health"}}),s.cat.prototype.help=r({params:{help:{type:"boolean",default:!1},s:{type:"list"}},url:{fmt:"/_cat"}}),s.cat.prototype.indices=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},health:{type:"enum",default:null,options:["green","yellow","red"]},help:{type:"boolean",default:!1},pri:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/indices/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/indices"}]}),s.cat.prototype.master=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/master"}}),s.cat.prototype.nodeattrs=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodeattrs"}}),s.cat.prototype.nodes=r({params:{format:{type:"string"},fullId:{type:"boolean",name:"full_id"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodes"}}),s.cat.prototype.pendingTasks=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/pending_tasks"}}),s.cat.prototype.plugins=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/plugins"}}),s.cat.prototype.recovery=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/recovery/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/recovery"}]}),s.cat.prototype.repositories=r({params:{format:{type:"string"},local:{type:"boolean",default:!1},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/repositories"}}),s.cat.prototype.segments=r({params:{format:{type:"string"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/segments/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/segments"}]}),s.cat.prototype.shards=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/shards/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/shards"}]}),s.cat.prototype.snapshots=r({params:{format:{type:"string"},ignoreUnavailable:{type:"boolean",default:!1,name:"ignore_unavailable"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/snapshots/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_cat/snapshots"}]}),s.cat.prototype.tasks=r({params:{format:{type:"string"},nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"number",name:"parent_task"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/tasks"}}),s.cat.prototype.templates=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/templates/<%=name%>",req:{name:{type:"string"}}},{fmt:"/_cat/templates"}]}),s.cat.prototype.threadPool=r({params:{format:{type:"string"},size:{type:"enum",options:["","k","m","g","t","p"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/thread_pool/<%=threadPoolPatterns%>",req:{threadPoolPatterns:{type:"list"}}},{fmt:"/_cat/thread_pool"}]}),s.clearScroll=r({urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"list"}}},{fmt:"/_search/scroll"}],paramAsBody:"scrollId",method:"DELETE"}),s.cluster=a(),s.cluster.prototype.allocationExplain=r({params:{includeYesDecisions:{type:"boolean",name:"include_yes_decisions"},includeDiskInfo:{type:"boolean",name:"include_disk_info"}},url:{fmt:"/_cluster/allocation/explain"},method:"POST"}),s.cluster.prototype.getSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/_cluster/settings"}}),s.cluster.prototype.health=r({params:{level:{type:"enum",default:"cluster",options:["cluster","indices","shards"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForNodes:{type:"string",name:"wait_for_nodes"},waitForEvents:{type:"enum",options:["immediate","urgent","high","normal","low","languid"],name:"wait_for_events"},waitForNoRelocatingShards:{type:"boolean",name:"wait_for_no_relocating_shards"},waitForStatus:{type:"enum",default:null,options:["green","yellow","red"],name:"wait_for_status"}},urls:[{fmt:"/_cluster/health/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cluster/health"}]}),s.cluster.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_cluster/pending_tasks"}}),s.cluster.prototype.putSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"},method:"PUT"}),s.cluster.prototype.reroute=r({params:{dryRun:{type:"boolean",name:"dry_run"},explain:{type:"boolean"},retryFailed:{type:"boolean",name:"retry_failed"},metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","master_node","version"]},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/reroute"},method:"POST"}),s.cluster.prototype.state=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/_cluster/state/<%=metric%>/<%=index%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]},index:{type:"list"}}},{fmt:"/_cluster/state/<%=metric%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]}}},{fmt:"/_cluster/state"}]}),s.cluster.prototype.stats=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},timeout:{type:"time"}},urls:[{fmt:"/_cluster/stats/nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cluster/stats"}]}),s.count=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_count",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_count",req:{index:{type:"list"}}},{fmt:"/_count"}],method:"POST"}),s.countPercolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_create",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},needBody:!0,method:"POST"}),s.delete=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_delete_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_delete_by_query",req:{index:{type:"list"}}}],needBody:!0,method:"POST"}),s.deleteScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.exists=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.explain=r({params:{analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},analyzer:{type:"string"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},storedFields:{type:"list",name:"stored_fields"},lenient:{type:"boolean"},parent:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_explain",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.fieldStats=r({params:{fields:{type:"list"},level:{type:"enum",default:"cluster",options:["indices","cluster"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_stats",req:{index:{type:"list"}}},{fmt:"/_field_stats"}],method:"POST"}),s.get=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}}}),s.getSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}}}),s.index=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"string"},type:{type:"string"}}}],needBody:!0,method:"POST"}),s.indices=a(),s.indices.prototype.analyze=r({params:{analyzer:{type:"string"},charFilter:{type:"list",name:"char_filter"},field:{type:"string"},filter:{type:"list"},index:{type:"string"},preferLocal:{type:"boolean",name:"prefer_local"},text:{type:"list"},tokenizer:{type:"string"},explain:{type:"boolean"},attributes:{type:"list"},format:{type:"enum",default:"detailed",options:["detailed","text"]}},urls:[{fmt:"/<%=index%>/_analyze",req:{index:{type:"string"}}},{fmt:"/_analyze"}],method:"POST"}),s.indices.prototype.clearCache=r({params:{fieldData:{type:"boolean",name:"field_data"},fielddata:{type:"boolean"},fields:{type:"list"},query:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},index:{type:"list"},recycler:{type:"boolean"},request:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_cache/clear",req:{index:{type:"list"}}},{fmt:"/_cache/clear"}],method:"POST"}),s.indices.prototype.close=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_close",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},updateAllTypes:{type:"boolean",name:"update_all_types"}},url:{fmt:"/<%=index%>",req:{index:{type:"string"}}},method:"PUT"}),s.indices.prototype.delete=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteTemplate=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"DELETE"}),s.indices.prototype.exists=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}}],method:"HEAD"}),s.indices.prototype.existsTemplate=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"HEAD"}),s.indices.prototype.existsType=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},method:"HEAD"}),s.indices.prototype.flush=r({params:{force:{type:"boolean"},waitIfOngoing:{type:"boolean",name:"wait_if_ongoing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush",req:{index:{type:"list"}}},{fmt:"/_flush"}],method:"POST"}),s.indices.prototype.flushSynced=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush/synced",req:{index:{type:"list"}}},{fmt:"/_flush/synced"}],method:"POST"}),s.indices.prototype.forcemerge=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_forcemerge",req:{index:{type:"list"}}},{fmt:"/_forcemerge"}],method:"POST"}),s.indices.prototype.get=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/<%=feature%>",req:{index:{type:"list"},feature:{type:"list",options:["_settings","_mappings","_aliases"]}}},{fmt:"/<%=index%>",req:{index:{type:"list"}}}]}),s.indices.prototype.getAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}},{fmt:"/_alias"}]}),s.indices.prototype.getFieldMapping=r({params:{includeDefaults:{type:"boolean",name:"include_defaults"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>/field/<%=fields%>",req:{index:{type:"list"},type:{type:"list"},fields:{type:"list"}}},{fmt:"/<%=index%>/_mapping/field/<%=fields%>",req:{index:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/<%=type%>/field/<%=fields%>",req:{type:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/field/<%=fields%>",req:{fields:{type:"list"}}}]}),s.indices.prototype.getMapping=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_mapping",req:{index:{type:"list"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"list"}}},{fmt:"/_mapping"}]}),s.indices.prototype.getSettings=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},local:{type:"boolean"},human:{type:"boolean",default:!1},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/_settings/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_settings"}]}),s.indices.prototype.getTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_template"}]}),s.indices.prototype.getUpgrade=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}]}),s.indices.prototype.open=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"closed",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_open",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.putAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},method:"PUT"}),s.indices.prototype.putMapping=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},updateAllTypes:{type:"boolean",name:"update_all_types"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"string"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.putSettings=r({params:{masterTimeout:{type:"time",name:"master_timeout"},preserveExisting:{type:"boolean",name:"preserve_existing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"}},urls:[{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings"}],needBody:!0,method:"PUT"}),s.indices.prototype.putTemplate=r({params:{order:{type:"number"},create:{type:"boolean",default:!1},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},needBody:!0,method:"PUT"}),s.indices.prototype.recovery=r({params:{detailed:{type:"boolean",default:!1},activeOnly:{type:"boolean",default:!1,name:"active_only"},human:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_recovery",req:{index:{type:"list"}}},{fmt:"/_recovery"}]}),s.indices.prototype.refresh=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},force:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_refresh",req:{index:{type:"list"}}},{fmt:"/_refresh"}],method:"POST"}),s.indices.prototype.rollover=r({params:{timeout:{type:"time"},dryRun:{type:"boolean",name:"dry_run"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},urls:[{fmt:"/<%=alias%>/_rollover/<%=newIndex%>",req:{alias:{type:"string"},newIndex:{type:"string"}}},{fmt:"/<%=alias%>/_rollover",req:{alias:{type:"string"}}}],method:"POST"}),s.indices.prototype.segments=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},human:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"},verbose:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_segments",req:{index:{type:"list"}}},{fmt:"/_segments"}]}),s.indices.prototype.shardStores=r({params:{status:{type:"list",options:["green","yellow","red","all"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_shard_stores",req:{index:{type:"list"}}},{fmt:"/_shard_stores"}]}),s.indices.prototype.shrink=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},url:{fmt:"/<%=index%>/_shrink/<%=target%>",req:{index:{type:"string"},target:{type:"string"}}},method:"POST"}),s.indices.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"list"},human:{type:"boolean",default:!1},level:{type:"enum",default:"indices",options:["cluster","indices","shards"]},types:{type:"list"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/<%=index%>/_stats/<%=metric%>",req:{index:{type:"list"},metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_stats/<%=metric%>",req:{metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/<%=index%>/_stats",req:{index:{type:"list"}}},{fmt:"/_stats"}]}),s.indices.prototype.updateAliases=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_aliases"},needBody:!0,method:"POST"}),s.indices.prototype.upgrade=r({params:{allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},onlyAncientSegments:{type:"boolean",name:"only_ancient_segments"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}],method:"POST"}),s.indices.prototype.validateQuery=r({params:{explain:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},rewrite:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_validate/query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_validate/query",req:{index:{type:"list"}}},{fmt:"/_validate/query"}],method:"POST"}),s.info=r({url:{fmt:"/"}}),s.ingest=a(),s.ingest.prototype.deletePipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.ingest.prototype.getPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},urls:[{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline"}]}),s.ingest.prototype.putPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.ingest.prototype.simulate=r({params:{verbose:{type:"boolean",default:!1}},urls:[{fmt:"/_ingest/pipeline/<%=id%>/_simulate",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline/_simulate"}],needBody:!0,method:"POST"}),s.mget=r({params:{storedFields:{type:"list",name:"stored_fields"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mget",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mget",req:{index:{type:"string"}}},{fmt:"/_mget"}],needBody:!0,method:"POST"}),s.mpercolate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mpercolate",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mpercolate",req:{index:{type:"string"}}},{fmt:"/_mpercolate"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearch=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},maxConcurrentSearches:{type:"number",name:"max_concurrent_searches"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch",req:{index:{type:"list"}}},{fmt:"/_msearch"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearchTemplate=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch/template",req:{index:{type:"list"}}},{fmt:"/_msearch/template"}],needBody:!0,bulkBody:!0,method:"POST"}),s.mtermvectors=r({params:{ids:{type:"list",required:!1},termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mtermvectors",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mtermvectors",req:{index:{type:"string"}}},{fmt:"/_mtermvectors"}],method:"POST"}),s.nodes=a(),s.nodes.prototype.hotThreads=r({params:{interval:{type:"time"},snapshots:{type:"number"},threads:{type:"number"},ignoreIdleThreads:{type:"boolean",name:"ignore_idle_threads"},type:{type:"enum",options:["cpu","wait","block"]},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/hotthreads",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/hotthreads"}]}),s.nodes.prototype.info=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},human:{type:"boolean",default:!1},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/<%=metric%>",req:{metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes"}]}),s.nodes.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"boolean"},human:{type:"boolean",default:!1},level:{type:"enum",default:"node",options:["indices","node","shards"]},types:{type:"list"},timeout:{type:"time"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats/<%=metric%>/<%=indexMetric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/stats/<%=metric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats"}]}),s.percolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},percolateRouting:{type:"string",name:"percolate_routing"},percolatePreference:{type:"string",name:"percolate_preference"},percolateFormat:{type:"enum",options:["ids"],name:"percolate_format"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.ping=r({url:{fmt:"/"},requestTimeout:3e3,method:"HEAD"}),s.putScript=r({url:{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},needBody:!0,method:"PUT"}),s.putTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.reindex=r({params:{refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},url:{fmt:"/_reindex"},needBody:!0,method:"POST"}),s.reindexRethrottle=r({params:{requestsPerSecond:{type:"number",required:!0,name:"requests_per_second"}},url:{fmt:"/_reindex/<%=taskId%>/_rethrottle",req:{taskId:{type:"string"}}},method:"POST"}),s.renderSearchTemplate=r({urls:[{fmt:"/_render/template/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_render/template"}],method:"POST"}),s.scroll=r({params:{scroll:{type:"time"},scrollId:{type:"string",name:"scroll_id"}},urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"string"}}},{fmt:"/_search/scroll"}],paramAsBody:"scrollId",method:"POST"}),s.search=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},storedFields:{type:"list",name:"stored_fields"},docvalueFields:{type:"list",name:"docvalue_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time"},trackScores:{type:"boolean",name:"track_scores"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search",req:{index:{type:"list"}}},{fmt:"/_search"}],method:"POST"}),s.searchShards=r({params:{preference:{type:"string"},routing:{type:"string"},local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search_shards",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search_shards",req:{index:{type:"list"}}},{fmt:"/_search_shards"}],method:"POST"}),s.searchTemplate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},explain:{type:"boolean"},profile:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/template",req:{index:{type:"list"}}},{fmt:"/_search/template"}],method:"POST"}),s.snapshot=a(),s.snapshot.prototype.create=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.createRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},verify:{type:"boolean"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"string"}}},needBody:!0,method:"POST"}),s.snapshot.prototype.delete=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"DELETE"}),s.snapshot.prototype.deleteRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},method:"DELETE"}),s.snapshot.prototype.get=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"list"}}}}),s.snapshot.prototype.getRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_snapshot"}]}),s.snapshot.prototype.restore=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_restore",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.status=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},urls:[{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_status",req:{repository:{type:"string"},snapshot:{type:"list"}}},{fmt:"/_snapshot/<%=repository%>/_status",req:{repository:{type:"string"}}},{fmt:"/_snapshot/_status"}]}),s.snapshot.prototype.verifyRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>/_verify",req:{repository:{type:"string"}}},method:"POST"}),s.suggest=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"string"}},urls:[{fmt:"/<%=index%>/_suggest",req:{index:{type:"list"}}},{fmt:"/_suggest"}],needBody:!0,method:"POST"}),s.tasks=a(),s.tasks.prototype.cancel=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"}},urls:[{fmt:"/_tasks/<%=taskId%>/_cancel",req:{taskId:{type:"string"}}},{fmt:"/_tasks/_cancel"}],method:"POST"}),s.tasks.prototype.get=r({params:{waitForCompletion:{type:"boolean",name:"wait_for_completion"}},url:{fmt:"/_tasks/<%=taskId%>",req:{taskId:{type:"string"}}}}),s.tasks.prototype.list=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},groupBy:{type:"enum",default:"nodes",options:["nodes","parents"],name:"group_by"}},url:{fmt:"/_tasks"}}),s.termvectors=r({params:{termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_termvectors",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_termvectors",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.update=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},lang:{type:"string"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},retryOnConflict:{type:"number",name:"retry_on_conflict"},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_update",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.updateByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},pipeline:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},versionType:{type:"boolean",name:"version_type"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_update_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_update_by_query",req:{index:{type:"list"}}}],method:"POST"})},function(t,e,n){var r=n(1).makeFactoryWithModifier(function(t){return n(0).merge(t,{params:{filterPath:{type:"list",name:"filter_path"}}})}),a=n(1).namespaceFactory,s=t.exports={};s._namespaces=["cat","cluster","indices","ingest","nodes","remote","snapshot","tasks"],s.bulk=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},type:{type:"string"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/_bulk",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_bulk",req:{index:{type:"string"}}},{fmt:"/_bulk"}],needBody:!0,bulkBody:!0,method:"POST"}),s.cat=a(),s.cat.prototype.aliases=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_cat/aliases"}]}),s.cat.prototype.allocation=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/allocation/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cat/allocation"}]}),s.cat.prototype.count=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/count/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/count"}]}),s.cat.prototype.fielddata=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1},fields:{type:"list"}},urls:[{fmt:"/_cat/fielddata/<%=fields%>",req:{fields:{type:"list"}}},{fmt:"/_cat/fielddata"}]}),s.cat.prototype.health=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},ts:{type:"boolean",default:!0},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/health"}}),s.cat.prototype.help=r({params:{help:{type:"boolean",default:!1},s:{type:"list"}},url:{fmt:"/_cat"}}),s.cat.prototype.indices=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},health:{type:"enum",default:null,options:["green","yellow","red"]},help:{type:"boolean",default:!1},pri:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/indices/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/indices"}]}),s.cat.prototype.master=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/master"}}),s.cat.prototype.nodeattrs=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodeattrs"}}),s.cat.prototype.nodes=r({params:{format:{type:"string"},fullId:{type:"boolean",name:"full_id"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodes"}}),s.cat.prototype.pendingTasks=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/pending_tasks"}}),s.cat.prototype.plugins=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/plugins"}}),s.cat.prototype.recovery=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/recovery/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/recovery"}]}),s.cat.prototype.repositories=r({params:{format:{type:"string"},local:{type:"boolean",default:!1},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/repositories"}}),s.cat.prototype.segments=r({params:{format:{type:"string"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/segments/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/segments"}]}),s.cat.prototype.shards=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/shards/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/shards"}]}),s.cat.prototype.snapshots=r({params:{format:{type:"string"},ignoreUnavailable:{type:"boolean",default:!1,name:"ignore_unavailable"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/snapshots/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_cat/snapshots"}]}),s.cat.prototype.tasks=r({params:{format:{type:"string"},nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"number",name:"parent_task"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/tasks"}}),s.cat.prototype.templates=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/templates/<%=name%>",req:{name:{type:"string"}}},{fmt:"/_cat/templates"}]}),s.cat.prototype.threadPool=r({params:{format:{type:"string"},size:{type:"enum",options:["","k","m","g","t","p"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/thread_pool/<%=threadPoolPatterns%>",req:{threadPoolPatterns:{type:"list"}}},{fmt:"/_cat/thread_pool"}]}),s.clearScroll=r({urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"list"}}},{fmt:"/_search/scroll"}],paramAsBody:{param:"scrollId",body:"scroll_id"},method:"DELETE"}),s.cluster=a(),s.cluster.prototype.allocationExplain=r({params:{includeYesDecisions:{type:"boolean",name:"include_yes_decisions"},includeDiskInfo:{type:"boolean",name:"include_disk_info"}},url:{fmt:"/_cluster/allocation/explain"},method:"POST"}),s.cluster.prototype.getSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/_cluster/settings"}}),s.cluster.prototype.health=r({params:{level:{type:"enum",default:"cluster",options:["cluster","indices","shards"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForNodes:{type:"string",name:"wait_for_nodes"},waitForEvents:{type:"enum",options:["immediate","urgent","high","normal","low","languid"],name:"wait_for_events"},waitForNoRelocatingShards:{type:"boolean",name:"wait_for_no_relocating_shards"},waitForStatus:{type:"enum",default:null,options:["green","yellow","red"],name:"wait_for_status"}},urls:[{fmt:"/_cluster/health/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cluster/health"}]}),s.cluster.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_cluster/pending_tasks"}}),s.cluster.prototype.putSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"},method:"PUT"}),s.cluster.prototype.reroute=r({params:{dryRun:{type:"boolean",name:"dry_run"},explain:{type:"boolean"},retryFailed:{type:"boolean",name:"retry_failed"},metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","master_node","version"]},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/reroute"},method:"POST"}),s.cluster.prototype.state=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/_cluster/state/<%=metric%>/<%=index%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]},index:{type:"list"}}},{fmt:"/_cluster/state/<%=metric%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]}}},{fmt:"/_cluster/state"}]}),s.cluster.prototype.stats=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},timeout:{type:"time"}},urls:[{fmt:"/_cluster/stats/nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cluster/stats"}]}),s.count=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_count",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_count",req:{index:{type:"list"}}},{fmt:"/_count"}],method:"POST"}),s.countPercolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_create",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},needBody:!0,method:"POST"}),s.delete=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_delete_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_delete_by_query",req:{index:{type:"list"}}}],needBody:!0,method:"POST"}),s.deleteScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}],method:"DELETE"}),s.deleteTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.exists=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.existsSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.explain=r({params:{analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},analyzer:{type:"string"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},storedFields:{type:"list",name:"stored_fields"},lenient:{type:"boolean"},parent:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_explain",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.fieldCaps=r({params:{fields:{type:"list"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_caps",req:{index:{type:"list"}}},{fmt:"/_field_caps"}],method:"POST"}),s.fieldStats=r({params:{fields:{type:"list"},level:{type:"enum",default:"cluster",options:["indices","cluster"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_stats",req:{index:{type:"list"}}},{fmt:"/_field_stats"}],method:"POST"}),s.get=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}]}),s.getSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}}}),s.index=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"string"},type:{type:"string"}}}],needBody:!0,method:"POST"}),s.indices=a(),s.indices.prototype.analyze=r({params:{analyzer:{type:"string"},charFilter:{type:"list",name:"char_filter"},field:{type:"string"},filter:{type:"list"},index:{type:"string"},preferLocal:{type:"boolean",name:"prefer_local"},text:{type:"list"},tokenizer:{type:"string"},explain:{type:"boolean"},attributes:{type:"list"},format:{type:"enum",default:"detailed",options:["detailed","text"]}},urls:[{fmt:"/<%=index%>/_analyze",req:{index:{type:"string"}}},{fmt:"/_analyze"}],method:"POST"}),s.indices.prototype.clearCache=r({params:{fieldData:{type:"boolean",name:"field_data"},fielddata:{type:"boolean"},fields:{type:"list"},query:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},index:{type:"list"},recycler:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},request:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_cache/clear",req:{index:{type:"list"}}},{fmt:"/_cache/clear"}],method:"POST"}),s.indices.prototype.close=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_close",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},updateAllTypes:{type:"boolean",name:"update_all_types"}},url:{fmt:"/<%=index%>",req:{index:{type:"string"}}},method:"PUT"}),s.indices.prototype.delete=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteTemplate=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"DELETE"}),s.indices.prototype.exists=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}}],method:"HEAD"}),s.indices.prototype.existsTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsType=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},method:"HEAD"}),s.indices.prototype.flush=r({params:{force:{type:"boolean"},waitIfOngoing:{type:"boolean",name:"wait_if_ongoing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush",req:{index:{type:"list"}}},{fmt:"/_flush"}],method:"POST"}),s.indices.prototype.flushSynced=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush/synced",req:{index:{type:"list"}}},{fmt:"/_flush/synced"}],method:"POST"}),s.indices.prototype.forcemerge=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_forcemerge",req:{index:{type:"list"}}},{fmt:"/_forcemerge"}],method:"POST"}),s.indices.prototype.get=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/<%=feature%>",req:{index:{type:"list"},feature:{type:"list",options:["_settings","_mappings","_aliases"]}}},{fmt:"/<%=index%>",req:{index:{type:"list"}}}]}),s.indices.prototype.getAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}},{fmt:"/_alias"}]}),s.indices.prototype.getFieldMapping=r({params:{includeDefaults:{type:"boolean",name:"include_defaults"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>/field/<%=fields%>",req:{index:{type:"list"},type:{type:"list"},fields:{type:"list"}}},{fmt:"/<%=index%>/_mapping/field/<%=fields%>",req:{index:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/<%=type%>/field/<%=fields%>",req:{type:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/field/<%=fields%>",req:{fields:{type:"list"}}}]}),s.indices.prototype.getMapping=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_mapping",req:{index:{type:"list"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"list"}}},{fmt:"/_mapping"}]}),s.indices.prototype.getSettings=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},local:{type:"boolean"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/_settings/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_settings"}]}),s.indices.prototype.getTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_template"}]}),s.indices.prototype.getUpgrade=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}]}),s.indices.prototype.open=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"closed",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_open",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.putAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},method:"PUT"}),s.indices.prototype.putMapping=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},updateAllTypes:{type:"boolean",name:"update_all_types"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"string"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.putSettings=r({params:{masterTimeout:{type:"time",name:"master_timeout"},preserveExisting:{type:"boolean",name:"preserve_existing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"}},urls:[{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings"}],needBody:!0,method:"PUT"}),s.indices.prototype.putTemplate=r({params:{order:{type:"number"},create:{type:"boolean",default:!1},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},needBody:!0,method:"PUT"}),s.indices.prototype.recovery=r({params:{detailed:{type:"boolean",default:!1},activeOnly:{type:"boolean",default:!1,name:"active_only"}},urls:[{fmt:"/<%=index%>/_recovery",req:{index:{type:"list"}}},{fmt:"/_recovery"}]}),s.indices.prototype.refresh=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},force:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_refresh",req:{index:{type:"list"}}},{fmt:"/_refresh"}],method:"POST"}),s.indices.prototype.rollover=r({params:{timeout:{type:"time"},dryRun:{type:"boolean",name:"dry_run"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},urls:[{fmt:"/<%=alias%>/_rollover/<%=newIndex%>",req:{alias:{type:"string"},newIndex:{type:"string"}}},{fmt:"/<%=alias%>/_rollover",req:{alias:{type:"string"}}}],method:"POST"}),s.indices.prototype.segments=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},verbose:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_segments",req:{index:{type:"list"}}},{fmt:"/_segments"}]}),s.indices.prototype.shardStores=r({params:{status:{type:"list",options:["green","yellow","red","all"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_shard_stores",req:{index:{type:"list"}}},{fmt:"/_shard_stores"}]}),s.indices.prototype.shrink=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},url:{fmt:"/<%=index%>/_shrink/<%=target%>",req:{index:{type:"string"},target:{type:"string"}}},method:"POST"}),s.indices.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"list"},level:{type:"enum",default:"indices",options:["cluster","indices","shards"]},types:{type:"list"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/<%=index%>/_stats/<%=metric%>",req:{index:{type:"list"},metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_stats/<%=metric%>",req:{metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/<%=index%>/_stats",req:{index:{type:"list"}}},{fmt:"/_stats"}]}),s.indices.prototype.updateAliases=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_aliases"},needBody:!0,method:"POST"}),s.indices.prototype.upgrade=r({params:{allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},onlyAncientSegments:{type:"boolean",name:"only_ancient_segments"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}],method:"POST"}),s.indices.prototype.validateQuery=r({params:{explain:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},rewrite:{type:"boolean"},allShards:{type:"boolean",name:"all_shards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_validate/query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_validate/query",req:{index:{type:"list"}}},{fmt:"/_validate/query"}],method:"POST"}),s.info=r({url:{fmt:"/"}}),s.ingest=a(),s.ingest.prototype.deletePipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.ingest.prototype.getPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},urls:[{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline"}]}),s.ingest.prototype.putPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.ingest.prototype.simulate=r({params:{verbose:{type:"boolean",default:!1}},urls:[{fmt:"/_ingest/pipeline/<%=id%>/_simulate",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline/_simulate"}],needBody:!0,method:"POST"}),s.mget=r({params:{storedFields:{type:"list",name:"stored_fields"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mget",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mget",req:{index:{type:"string"}}},{fmt:"/_mget"}],needBody:!0,method:"POST"}),s.mpercolate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mpercolate",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mpercolate",req:{index:{type:"string"}}},{fmt:"/_mpercolate"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearch=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},maxConcurrentSearches:{type:"number",name:"max_concurrent_searches"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch",req:{index:{type:"list"}}},{fmt:"/_msearch"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearchTemplate=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch/template",req:{index:{type:"list"}}},{fmt:"/_msearch/template"}],needBody:!0,bulkBody:!0,method:"POST"}),s.mtermvectors=r({params:{ids:{type:"list",required:!1},termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mtermvectors",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mtermvectors",req:{index:{type:"string"}}},{fmt:"/_mtermvectors"}],method:"POST"}),s.nodes=a(),s.nodes.prototype.hotThreads=r({params:{interval:{type:"time"},snapshots:{type:"number"},threads:{type:"number"},ignoreIdleThreads:{type:"boolean",name:"ignore_idle_threads"},type:{type:"enum",options:["cpu","wait","block"]},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/hotthreads",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/hotthreads"}]}),s.nodes.prototype.info=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/<%=metric%>",req:{metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes"}]}),s.nodes.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"boolean"},level:{type:"enum",default:"node",options:["indices","node","shards"]},types:{type:"list"},timeout:{type:"time"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats/<%=metric%>/<%=indexMetric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/stats/<%=metric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats"}]}),s.percolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},percolateRouting:{type:"string",name:"percolate_routing"},percolatePreference:{type:"string",name:"percolate_preference"},percolateFormat:{type:"enum",options:["ids"],name:"percolate_format"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.ping=r({url:{fmt:"/"},requestTimeout:3e3,method:"HEAD"}),s.putScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}],needBody:!0,method:"PUT"}),s.putTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.reindex=r({params:{refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},url:{fmt:"/_reindex"},needBody:!0,method:"POST"}),s.reindexRethrottle=r({params:{requestsPerSecond:{type:"number",required:!0,name:"requests_per_second"}},url:{fmt:"/_reindex/<%=taskId%>/_rethrottle",req:{taskId:{type:"string"}}},method:"POST"}),s.remote=a(),s.remote.prototype.info=r({url:{fmt:"/_remote/info"}}),s.renderSearchTemplate=r({urls:[{fmt:"/_render/template/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_render/template"}],method:"POST"}),s.scroll=r({params:{scroll:{type:"time"},scrollId:{type:"string",name:"scroll_id"}},urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"string"}}},{fmt:"/_search/scroll"}],paramAsBody:{param:"scrollId",body:"scroll_id"},method:"POST"}),s.search=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},storedFields:{type:"list",name:"stored_fields"},docvalueFields:{type:"list",name:"docvalue_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time"},trackScores:{type:"boolean",name:"track_scores"},typedKeys:{type:"boolean",name:"typed_keys"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},batchedReduceSize:{type:"number",default:512,name:"batched_reduce_size"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search",req:{index:{type:"list"}}},{fmt:"/_search"}],method:"POST"}),s.searchShards=r({params:{preference:{type:"string"},routing:{type:"string"},local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search_shards",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search_shards",req:{index:{type:"list"}}},{fmt:"/_search_shards"}],method:"POST"}),s.searchTemplate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},explain:{type:"boolean"},profile:{type:"boolean"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/template",req:{index:{type:"list"}}},{fmt:"/_search/template"}],method:"POST"}),s.snapshot=a(),s.snapshot.prototype.create=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.createRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},verify:{type:"boolean"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"string"}}},needBody:!0,method:"POST"}),s.snapshot.prototype.delete=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"DELETE"}),s.snapshot.prototype.deleteRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},method:"DELETE"}),s.snapshot.prototype.get=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"list"}}}}),s.snapshot.prototype.getRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_snapshot"}]}),s.snapshot.prototype.restore=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_restore",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.status=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},urls:[{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_status",req:{repository:{type:"string"},snapshot:{type:"list"}}},{fmt:"/_snapshot/<%=repository%>/_status",req:{repository:{type:"string"}}},{fmt:"/_snapshot/_status"}]}),s.snapshot.prototype.verifyRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>/_verify",req:{repository:{type:"string"}}},method:"POST"}),s.suggest=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"string"}},urls:[{fmt:"/<%=index%>/_suggest",req:{index:{type:"list"}}},{fmt:"/_suggest"}],needBody:!0,method:"POST"}),s.tasks=a(),s.tasks.prototype.cancel=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"}},urls:[{fmt:"/_tasks/<%=taskId%>/_cancel",req:{taskId:{type:"string"}}},{fmt:"/_tasks/_cancel"}],method:"POST"}),s.tasks.prototype.get=r({params:{waitForCompletion:{type:"boolean",name:"wait_for_completion"}},url:{fmt:"/_tasks/<%=taskId%>",req:{taskId:{type:"string"}}}}),s.tasks.prototype.list=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},groupBy:{type:"enum",default:"nodes",options:["nodes","parents"],name:"group_by"}},url:{fmt:"/_tasks"}}),s.termvectors=r({params:{termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_termvectors",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_termvectors",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.update=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},lang:{type:"string"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},retryOnConflict:{type:"number",name:"retry_on_conflict"},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_update",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.updateByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},pipeline:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},versionType:{type:"boolean",name:"version_type"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_update_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_update_by_query",req:{index:{type:"list"}}}],method:"POST"})},function(t,e,n){var r=n(1).makeFactoryWithModifier(function(t){return n(0).merge(t,{params:{filterPath:{type:"list",name:"filter_path"}}})}),a=n(1).namespaceFactory,s=t.exports={};s._namespaces=["cat","cluster","indices","ingest","nodes","remote","snapshot","tasks"],s.bulk=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},type:{type:"string"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/_bulk",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_bulk",req:{index:{type:"string"}}},{fmt:"/_bulk"}],needBody:!0,bulkBody:!0,method:"POST"}),s.cat=a(),s.cat.prototype.aliases=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_cat/aliases"}]}),s.cat.prototype.allocation=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/allocation/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cat/allocation"}]}),s.cat.prototype.count=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/count/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/count"}]}),s.cat.prototype.fielddata=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1},fields:{type:"list"}},urls:[{fmt:"/_cat/fielddata/<%=fields%>",req:{fields:{type:"list"}}},{fmt:"/_cat/fielddata"}]}),s.cat.prototype.health=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},ts:{type:"boolean",default:!0},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/health"}}),s.cat.prototype.help=r({params:{help:{type:"boolean",default:!1},s:{type:"list"}},url:{fmt:"/_cat"}}),s.cat.prototype.indices=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},health:{type:"enum",default:null,options:["green","yellow","red"]},help:{type:"boolean",default:!1},pri:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/indices/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/indices"}]}),s.cat.prototype.master=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/master"}}),s.cat.prototype.nodeattrs=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodeattrs"}}),s.cat.prototype.nodes=r({params:{format:{type:"string"},fullId:{type:"boolean",name:"full_id"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodes"}}),s.cat.prototype.pendingTasks=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/pending_tasks"}}),s.cat.prototype.plugins=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/plugins"}}),s.cat.prototype.recovery=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/recovery/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/recovery"}]}),s.cat.prototype.repositories=r({params:{format:{type:"string"},local:{type:"boolean",default:!1},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/repositories"}}),s.cat.prototype.segments=r({params:{format:{type:"string"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/segments/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/segments"}]}),s.cat.prototype.shards=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/shards/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/shards"}]}),s.cat.prototype.snapshots=r({params:{format:{type:"string"},ignoreUnavailable:{type:"boolean",default:!1,name:"ignore_unavailable"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/snapshots/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_cat/snapshots"}]}),s.cat.prototype.tasks=r({params:{format:{type:"string"},nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"number",name:"parent_task"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/tasks"}}),s.cat.prototype.templates=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/templates/<%=name%>",req:{name:{type:"string"}}},{fmt:"/_cat/templates"}]}),s.cat.prototype.threadPool=r({params:{format:{type:"string"},size:{type:"enum",options:["","k","m","g","t","p"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/thread_pool/<%=threadPoolPatterns%>",req:{threadPoolPatterns:{type:"list"}}},{fmt:"/_cat/thread_pool"}]}),s.clearScroll=r({urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"list"}}},{fmt:"/_search/scroll"}],paramAsBody:{param:"scrollId",body:"scroll_id"},method:"DELETE"}),s.cluster=a(),s.cluster.prototype.allocationExplain=r({params:{includeYesDecisions:{type:"boolean",name:"include_yes_decisions"},includeDiskInfo:{type:"boolean",name:"include_disk_info"}},url:{fmt:"/_cluster/allocation/explain"},method:"POST"}),s.cluster.prototype.getSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/_cluster/settings"}}),s.cluster.prototype.health=r({params:{level:{type:"enum",default:"cluster",options:["cluster","indices","shards"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForNodes:{type:"string",name:"wait_for_nodes"},waitForEvents:{type:"enum",options:["immediate","urgent","high","normal","low","languid"],name:"wait_for_events"},waitForNoRelocatingShards:{type:"boolean",name:"wait_for_no_relocating_shards"},waitForStatus:{type:"enum",default:null,options:["green","yellow","red"],name:"wait_for_status"}},urls:[{fmt:"/_cluster/health/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cluster/health"}]}),s.cluster.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_cluster/pending_tasks"}}),s.cluster.prototype.putSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"},method:"PUT"}),s.cluster.prototype.reroute=r({params:{dryRun:{type:"boolean",name:"dry_run"},explain:{type:"boolean"},retryFailed:{type:"boolean",name:"retry_failed"},metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","master_node","version"]},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/reroute"},method:"POST"}),s.cluster.prototype.state=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/_cluster/state/<%=metric%>/<%=index%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]},index:{type:"list"}}},{fmt:"/_cluster/state/<%=metric%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]}}},{fmt:"/_cluster/state"}]}),s.cluster.prototype.stats=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},timeout:{type:"time"}},urls:[{fmt:"/_cluster/stats/nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cluster/stats"}]}),s.count=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_count",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_count",req:{index:{type:"list"}}},{fmt:"/_count"}],method:"POST"}),s.countPercolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate/count",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_create",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},needBody:!0,method:"POST"}),s.delete=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_delete_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_delete_by_query",req:{index:{type:"list"}}}],needBody:!0,method:"POST"}),s.deleteScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}],method:"DELETE"}),s.deleteTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.exists=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.existsSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.explain=r({params:{analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},analyzer:{type:"string"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},storedFields:{type:"list",name:"stored_fields"},lenient:{type:"boolean"},parent:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_explain",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.fieldCaps=r({params:{fields:{type:"list"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_caps",req:{index:{type:"list"}}},{fmt:"/_field_caps"}],method:"POST"}),s.fieldStats=r({params:{fields:{type:"list"},level:{type:"enum",default:"cluster",options:["indices","cluster"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_stats",req:{index:{type:"list"}}},{fmt:"/_field_stats"}],method:"POST"}),s.get=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}]}),s.getSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}}}),s.index=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"string"},type:{type:"string"}}}],needBody:!0,method:"POST"}),s.indices=a(),s.indices.prototype.analyze=r({params:{analyzer:{type:"string"},charFilter:{type:"list",name:"char_filter"},field:{type:"string"},filter:{type:"list"},index:{type:"string"},preferLocal:{type:"boolean",name:"prefer_local"},text:{type:"list"},tokenizer:{type:"string"},explain:{type:"boolean"},attributes:{type:"list"},format:{type:"enum",default:"detailed",options:["detailed","text"]}},urls:[{fmt:"/<%=index%>/_analyze",req:{index:{type:"string"}}},{fmt:"/_analyze"}],method:"POST"}),s.indices.prototype.clearCache=r({params:{fieldData:{type:"boolean",name:"field_data"},fielddata:{type:"boolean"},fields:{type:"list"},query:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},index:{type:"list"},recycler:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},request:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_cache/clear",req:{index:{type:"list"}}},{fmt:"/_cache/clear"}],method:"POST"}),s.indices.prototype.close=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_close",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},updateAllTypes:{type:"boolean",name:"update_all_types"}},url:{fmt:"/<%=index%>",req:{index:{type:"string"}}},method:"PUT"}),s.indices.prototype.delete=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteTemplate=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"DELETE"}),s.indices.prototype.exists=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}}],method:"HEAD"}),s.indices.prototype.existsTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsType=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},method:"HEAD"}),s.indices.prototype.flush=r({params:{force:{type:"boolean"},waitIfOngoing:{type:"boolean",name:"wait_if_ongoing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush",req:{index:{type:"list"}}},{fmt:"/_flush"}],method:"POST"}),s.indices.prototype.flushSynced=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush/synced",req:{index:{type:"list"}}},{fmt:"/_flush/synced"}],method:"POST"}),s.indices.prototype.forcemerge=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_forcemerge",req:{index:{type:"list"}}},{fmt:"/_forcemerge"}],method:"POST"}),s.indices.prototype.get=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/<%=feature%>",req:{index:{type:"list"},feature:{type:"list",options:["_settings","_mappings","_aliases"]}}},{fmt:"/<%=index%>",req:{index:{type:"list"}}}]}),s.indices.prototype.getAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}},{fmt:"/_alias"}]}),s.indices.prototype.getFieldMapping=r({params:{includeDefaults:{type:"boolean",name:"include_defaults"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>/field/<%=fields%>",req:{index:{type:"list"},type:{type:"list"},fields:{type:"list"}}},{fmt:"/<%=index%>/_mapping/field/<%=fields%>",req:{index:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/<%=type%>/field/<%=fields%>",req:{type:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/field/<%=fields%>",req:{fields:{type:"list"}}}]}),s.indices.prototype.getMapping=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_mapping",req:{index:{type:"list"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"list"}}},{fmt:"/_mapping"}]}),s.indices.prototype.getSettings=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},local:{type:"boolean"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/_settings/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_settings"}]}),s.indices.prototype.getTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_template"}]}),s.indices.prototype.getUpgrade=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}]}),s.indices.prototype.open=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"closed",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_open",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.putAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},method:"PUT"}),s.indices.prototype.putMapping=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},updateAllTypes:{type:"boolean",name:"update_all_types"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"string"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.putSettings=r({params:{masterTimeout:{type:"time",name:"master_timeout"},preserveExisting:{type:"boolean",name:"preserve_existing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"}},urls:[{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings"}],needBody:!0,method:"PUT"}),s.indices.prototype.putTemplate=r({params:{order:{type:"number"},create:{type:"boolean",default:!1},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},needBody:!0,method:"PUT"}),s.indices.prototype.recovery=r({params:{detailed:{type:"boolean",default:!1},activeOnly:{type:"boolean",default:!1,name:"active_only"}},urls:[{fmt:"/<%=index%>/_recovery",req:{index:{type:"list"}}},{fmt:"/_recovery"}]}),s.indices.prototype.refresh=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},force:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_refresh",req:{index:{type:"list"}}},{fmt:"/_refresh"}],method:"POST"}),s.indices.prototype.rollover=r({params:{timeout:{type:"time"},dryRun:{type:"boolean",name:"dry_run"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},urls:[{fmt:"/<%=alias%>/_rollover/<%=newIndex%>",req:{alias:{type:"string"},newIndex:{type:"string"}}},{fmt:"/<%=alias%>/_rollover",req:{alias:{type:"string"}}}],method:"POST"}),s.indices.prototype.segments=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},verbose:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_segments",req:{index:{type:"list"}}},{fmt:"/_segments"}]}),s.indices.prototype.shardStores=r({params:{status:{type:"list",options:["green","yellow","red","all"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_shard_stores",req:{index:{type:"list"}}},{fmt:"/_shard_stores"}]}),s.indices.prototype.shrink=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},url:{fmt:"/<%=index%>/_shrink/<%=target%>",req:{index:{type:"string"},target:{type:"string"}}},method:"POST"}),s.indices.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"list"},level:{type:"enum",default:"indices",options:["cluster","indices","shards"]},types:{type:"list"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/<%=index%>/_stats/<%=metric%>",req:{index:{type:"list"},metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_stats/<%=metric%>",req:{metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/<%=index%>/_stats",req:{index:{type:"list"}}},{fmt:"/_stats"}]}),s.indices.prototype.updateAliases=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_aliases"},needBody:!0,method:"POST"}),s.indices.prototype.upgrade=r({params:{allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},onlyAncientSegments:{type:"boolean",name:"only_ancient_segments"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}],method:"POST"}),s.indices.prototype.validateQuery=r({params:{explain:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},rewrite:{type:"boolean"},allShards:{type:"boolean",name:"all_shards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_validate/query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_validate/query",req:{index:{type:"list"}}},{fmt:"/_validate/query"}],method:"POST"}),s.info=r({url:{fmt:"/"}}),s.ingest=a(),s.ingest.prototype.deletePipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.ingest.prototype.getPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},urls:[{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline"}]}),s.ingest.prototype.putPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.ingest.prototype.simulate=r({params:{verbose:{type:"boolean",default:!1}},urls:[{fmt:"/_ingest/pipeline/<%=id%>/_simulate",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline/_simulate"}],needBody:!0,method:"POST"}),s.mget=r({params:{storedFields:{type:"list",name:"stored_fields"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mget",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mget",req:{index:{type:"string"}}},{fmt:"/_mget"}],needBody:!0,method:"POST"}),s.mpercolate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mpercolate",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mpercolate",req:{index:{type:"string"}}},{fmt:"/_mpercolate"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearch=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},maxConcurrentSearches:{type:"number",name:"max_concurrent_searches"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch",req:{index:{type:"list"}}},{fmt:"/_msearch"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearchTemplate=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch/template",req:{index:{type:"list"}}},{fmt:"/_msearch/template"}],needBody:!0,bulkBody:!0,method:"POST"}),s.mtermvectors=r({params:{ids:{type:"list",required:!1},termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mtermvectors",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mtermvectors",req:{index:{type:"string"}}},{fmt:"/_mtermvectors"}],method:"POST"}),s.nodes=a(),s.nodes.prototype.hotThreads=r({params:{interval:{type:"time"},snapshots:{type:"number"},threads:{type:"number"},ignoreIdleThreads:{type:"boolean",name:"ignore_idle_threads"},type:{type:"enum",options:["cpu","wait","block"]},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/hotthreads",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/hotthreads"}]}),s.nodes.prototype.info=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/<%=metric%>",req:{metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes"}]}),s.nodes.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"boolean"},level:{type:"enum",default:"node",options:["indices","node","shards"]},types:{type:"list"},timeout:{type:"time"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats/<%=metric%>/<%=indexMetric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","percolate","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/stats/<%=metric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats"}]}),s.percolate=r({params:{routing:{type:"list"},preference:{type:"string"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},percolateIndex:{type:"string",name:"percolate_index"},percolateType:{type:"string",name:"percolate_type"},percolateRouting:{type:"string",name:"percolate_routing"},percolatePreference:{type:"string",name:"percolate_preference"},percolateFormat:{type:"enum",options:["ids"],name:"percolate_format"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_percolate",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_percolate",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.ping=r({url:{fmt:"/"},requestTimeout:3e3,method:"HEAD"}),s.putScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}],needBody:!0,method:"PUT"}),s.putTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.reindex=r({params:{refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},url:{fmt:"/_reindex"},needBody:!0,method:"POST"}),s.reindexRethrottle=r({params:{requestsPerSecond:{type:"number",required:!0,name:"requests_per_second"}},url:{fmt:"/_reindex/<%=taskId%>/_rethrottle",req:{taskId:{type:"string"}}},method:"POST"}),s.remote=a(),s.remote.prototype.info=r({url:{fmt:"/_remote/info"}}),s.renderSearchTemplate=r({urls:[{fmt:"/_render/template/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_render/template"}],method:"POST"}),s.scroll=r({params:{scroll:{type:"time"},scrollId:{type:"string",name:"scroll_id"}},urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"string"}}},{fmt:"/_search/scroll"}],paramAsBody:{param:"scrollId",body:"scroll_id"},method:"POST"}),s.search=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},storedFields:{type:"list",name:"stored_fields"},docvalueFields:{type:"list",name:"docvalue_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time"},trackScores:{type:"boolean",name:"track_scores"},typedKeys:{type:"boolean",name:"typed_keys"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},batchedReduceSize:{type:"number",default:512,name:"batched_reduce_size"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search",req:{index:{type:"list"}}},{fmt:"/_search"}],method:"POST"}),s.searchShards=r({params:{preference:{type:"string"},routing:{type:"string"},local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search_shards",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search_shards",req:{index:{type:"list"}}},{fmt:"/_search_shards"}],method:"POST"}),s.searchTemplate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},explain:{type:"boolean"},profile:{type:"boolean"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/template",req:{index:{type:"list"}}},{fmt:"/_search/template"}],method:"POST"}),s.snapshot=a(),s.snapshot.prototype.create=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.createRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},verify:{type:"boolean"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"string"}}},needBody:!0,method:"POST"}),s.snapshot.prototype.delete=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"DELETE"}),s.snapshot.prototype.deleteRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},method:"DELETE"}),s.snapshot.prototype.get=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"list"}}}}),s.snapshot.prototype.getRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_snapshot"}]}),s.snapshot.prototype.restore=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_restore",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.status=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},urls:[{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_status",req:{repository:{type:"string"},snapshot:{type:"list"}}},{fmt:"/_snapshot/<%=repository%>/_status",req:{repository:{type:"string"}}},{fmt:"/_snapshot/_status"}]}),s.snapshot.prototype.verifyRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>/_verify",req:{repository:{type:"string"}}},method:"POST"}),s.suggest=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"string"}},urls:[{fmt:"/<%=index%>/_suggest",req:{index:{type:"list"}}},{fmt:"/_suggest"}],needBody:!0,method:"POST"}),s.tasks=a(),s.tasks.prototype.cancel=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"}},urls:[{fmt:"/_tasks/<%=taskId%>/_cancel",req:{taskId:{type:"string"}}},{fmt:"/_tasks/_cancel"}],method:"POST"}),s.tasks.prototype.get=r({params:{waitForCompletion:{type:"boolean",name:"wait_for_completion"}},url:{fmt:"/_tasks/<%=taskId%>",req:{taskId:{type:"string"}}}}),s.tasks.prototype.list=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},groupBy:{type:"enum",default:"nodes",options:["nodes","parents"],name:"group_by"}},url:{fmt:"/_tasks"}}),s.termvectors=r({params:{termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_termvectors",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_termvectors",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.update=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},lang:{type:"string"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},retryOnConflict:{type:"number",name:"retry_on_conflict"},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_update",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.updateByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},pipeline:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},versionType:{type:"boolean",name:"version_type"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_update_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_update_by_query",req:{index:{type:"list"}}}],method:"POST"})},function(t,e,n){var r=n(1).makeFactoryWithModifier(function(t){return n(0).merge(t,{params:{filterPath:{type:"list",name:"filter_path"}}})}),a=n(1).namespaceFactory,s=t.exports={};s._namespaces=["cat","cluster","indices","ingest","nodes","remote","snapshot","tasks"],s.bulk=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},type:{type:"string"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/_bulk",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_bulk",req:{index:{type:"string"}}},{fmt:"/_bulk"}],needBody:!0,bulkBody:!0,method:"POST"}),s.cat=a(),s.cat.prototype.aliases=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/aliases/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_cat/aliases"}]}),s.cat.prototype.allocation=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/allocation/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cat/allocation"}]}),s.cat.prototype.count=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/count/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/count"}]}),s.cat.prototype.fielddata=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1},fields:{type:"list"}},urls:[{fmt:"/_cat/fielddata/<%=fields%>",req:{fields:{type:"list"}}},{fmt:"/_cat/fielddata"}]}),s.cat.prototype.health=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},ts:{type:"boolean",default:!0},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/health"}}),s.cat.prototype.help=r({params:{help:{type:"boolean",default:!1},s:{type:"list"}},url:{fmt:"/_cat"}}),s.cat.prototype.indices=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","m","g"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},health:{type:"enum",default:null,options:["green","yellow","red"]},help:{type:"boolean",default:!1},pri:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/indices/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/indices"}]}),s.cat.prototype.master=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/master"}}),s.cat.prototype.nodeattrs=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodeattrs"}}),s.cat.prototype.nodes=r({params:{format:{type:"string"},fullId:{type:"boolean",name:"full_id"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/nodes"}}),s.cat.prototype.pendingTasks=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/pending_tasks"}}),s.cat.prototype.plugins=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/plugins"}}),s.cat.prototype.recovery=r({params:{format:{type:"string"},bytes:{type:"enum",options:["b","k","kb","m","mb","g","gb","t","tb","p","pb"]},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/recovery/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/recovery"}]}),s.cat.prototype.repositories=r({params:{format:{type:"string"},local:{type:"boolean",default:!1},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/repositories"}}),s.cat.prototype.segments=r({params:{format:{type:"string"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/segments/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/segments"}]}),s.cat.prototype.shards=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/shards/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cat/shards"}]}),s.cat.prototype.snapshots=r({params:{format:{type:"string"},ignoreUnavailable:{type:"boolean",default:!1,name:"ignore_unavailable"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/snapshots/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_cat/snapshots"}]}),s.cat.prototype.tasks=r({params:{format:{type:"string"},nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"number",name:"parent_task"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},url:{fmt:"/_cat/tasks"}}),s.cat.prototype.templates=r({params:{format:{type:"string"},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/templates/<%=name%>",req:{name:{type:"string"}}},{fmt:"/_cat/templates"}]}),s.cat.prototype.threadPool=r({params:{format:{type:"string"},size:{type:"enum",options:["","k","m","g","t","p"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},h:{type:"list"},help:{type:"boolean",default:!1},s:{type:"list"},v:{type:"boolean",default:!1}},urls:[{fmt:"/_cat/thread_pool/<%=threadPoolPatterns%>",req:{threadPoolPatterns:{type:"list"}}},{fmt:"/_cat/thread_pool"}]}),s.clearScroll=r({urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"list"}}},{fmt:"/_search/scroll"}],paramAsBody:{param:"scrollId",body:"scroll_id"},method:"DELETE"}),s.cluster=a(),s.cluster.prototype.allocationExplain=r({params:{includeYesDecisions:{type:"boolean",name:"include_yes_decisions"},includeDiskInfo:{type:"boolean",name:"include_disk_info"}},url:{fmt:"/_cluster/allocation/explain"},method:"POST"}),s.cluster.prototype.getSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/_cluster/settings"}}),s.cluster.prototype.health=r({params:{level:{type:"enum",default:"cluster",options:["cluster","indices","shards"]},local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForNodes:{type:"string",name:"wait_for_nodes"},waitForEvents:{type:"enum",options:["immediate","urgent","high","normal","low","languid"],name:"wait_for_events"},waitForNoRelocatingShards:{type:"boolean",name:"wait_for_no_relocating_shards"},waitForStatus:{type:"enum",default:null,options:["green","yellow","red"],name:"wait_for_status"}},urls:[{fmt:"/_cluster/health/<%=index%>",req:{index:{type:"list"}}},{fmt:"/_cluster/health"}]}),s.cluster.prototype.pendingTasks=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_cluster/pending_tasks"}}),s.cluster.prototype.putSettings=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/settings"},method:"PUT"}),s.cluster.prototype.reroute=r({params:{dryRun:{type:"boolean",name:"dry_run"},explain:{type:"boolean"},retryFailed:{type:"boolean",name:"retry_failed"},metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","master_node","version"]},masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_cluster/reroute"},method:"POST"}),s.cluster.prototype.state=r({params:{local:{type:"boolean"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/_cluster/state/<%=metric%>/<%=index%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]},index:{type:"list"}}},{fmt:"/_cluster/state/<%=metric%>",req:{metric:{type:"list",options:["_all","blocks","metadata","nodes","routing_table","routing_nodes","master_node","version"]}}},{fmt:"/_cluster/state"}]}),s.cluster.prototype.stats=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},timeout:{type:"time"}},urls:[{fmt:"/_cluster/stats/nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_cluster/stats"}]}),s.count=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},minScore:{type:"number",name:"min_score"},preference:{type:"string"},routing:{type:"string"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"}},urls:[{fmt:"/<%=index%>/<%=type%>/_count",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_count",req:{index:{type:"list"}}},{fmt:"/_count"}],method:"POST"}),s.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_create",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},needBody:!0,method:"POST"}),s.delete=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"DELETE"}),s.deleteByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_delete_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_delete_by_query",req:{index:{type:"list"}}}],needBody:!0,method:"POST"}),s.deleteScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}],method:"DELETE"}),s.deleteTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.exists=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.existsSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"HEAD"}),s.explain=r({params:{analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},analyzer:{type:"string"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},storedFields:{type:"list",name:"stored_fields"},lenient:{type:"boolean"},parent:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_explain",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.fieldCaps=r({params:{fields:{type:"list"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_caps",req:{index:{type:"list"}}},{fmt:"/_field_caps"}],method:"POST"}),s.fieldStats=r({params:{fields:{type:"list"},level:{type:"enum",default:"cluster",options:["indices","cluster"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_field_stats",req:{index:{type:"list"}}},{fmt:"/_field_stats"}],method:"POST"}),s.get=r({params:{storedFields:{type:"list",name:"stored_fields"},parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}]}),s.getSource=r({params:{parent:{type:"string"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_source",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}}}),s.getTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}}}),s.index=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},opType:{type:"enum",default:"index",options:["index","create"],name:"op_type"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"},pipeline:{type:"string"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>",req:{index:{type:"string"},type:{type:"string"}}}],needBody:!0,method:"POST"}),s.indices=a(),s.indices.prototype.analyze=r({params:{index:{type:"string"},preferLocal:{type:"boolean",name:"prefer_local"},format:{type:"enum",default:"detailed",options:["detailed","text"]}},urls:[{fmt:"/<%=index%>/_analyze",req:{index:{type:"string"}}},{fmt:"/_analyze"}],method:"POST"}),s.indices.prototype.clearCache=r({params:{fieldData:{type:"boolean",name:"field_data"},fielddata:{type:"boolean"},fields:{type:"list"},query:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},index:{type:"list"},recycler:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},request:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_cache/clear",req:{index:{type:"list"}}},{fmt:"/_cache/clear"}],method:"POST"}),s.indices.prototype.close=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_close",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.create=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},updateAllTypes:{type:"boolean",name:"update_all_types"}},url:{fmt:"/<%=index%>",req:{index:{type:"string"}}},method:"PUT"}),s.indices.prototype.delete=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},method:"DELETE"}),s.indices.prototype.deleteTemplate=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},method:"DELETE"}),s.indices.prototype.exists=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},url:{fmt:"/<%=index%>",req:{index:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}}],method:"HEAD"}),s.indices.prototype.existsTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},method:"HEAD"}),s.indices.prototype.existsType=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},url:{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},method:"HEAD"}),s.indices.prototype.flush=r({params:{force:{type:"boolean"},waitIfOngoing:{type:"boolean",name:"wait_if_ongoing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush",req:{index:{type:"list"}}},{fmt:"/_flush"}],method:"POST"}),s.indices.prototype.flushSynced=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_flush/synced",req:{index:{type:"list"}}},{fmt:"/_flush/synced"}],method:"POST"}),s.indices.prototype.forcemerge=r({params:{flush:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},maxNumSegments:{type:"number",name:"max_num_segments"},onlyExpungeDeletes:{type:"boolean",name:"only_expunge_deletes"},operationThreading:{name:"operation_threading"},waitForMerge:{type:"boolean",name:"wait_for_merge"}},urls:[{fmt:"/<%=index%>/_forcemerge",req:{index:{type:"list"}}},{fmt:"/_forcemerge"}],method:"POST"}),s.indices.prototype.get=r({params:{local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/<%=feature%>",req:{index:{type:"list"},feature:{type:"list",options:["_settings","_mappings","_aliases"]}}},{fmt:"/<%=index%>",req:{index:{type:"list"}}}]}),s.indices.prototype.getAlias=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"all",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/_alias/<%=name%>",req:{name:{type:"list"}}},{fmt:"/<%=index%>/_alias",req:{index:{type:"list"}}},{fmt:"/_alias"}]}),s.indices.prototype.getFieldMapping=r({params:{includeDefaults:{type:"boolean",name:"include_defaults"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>/field/<%=fields%>",req:{index:{type:"list"},type:{type:"list"},fields:{type:"list"}}},{fmt:"/<%=index%>/_mapping/field/<%=fields%>",req:{index:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/<%=type%>/field/<%=fields%>",req:{type:{type:"list"},fields:{type:"list"}}},{fmt:"/_mapping/field/<%=fields%>",req:{fields:{type:"list"}}}]}),s.indices.prototype.getMapping=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},local:{type:"boolean"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_mapping",req:{index:{type:"list"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"list"}}},{fmt:"/_mapping"}]}),s.indices.prototype.getSettings=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:["open","closed"],options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"},local:{type:"boolean"},includeDefaults:{type:"boolean",default:!1,name:"include_defaults"}},urls:[{fmt:"/<%=index%>/_settings/<%=name%>",req:{index:{type:"list"},name:{type:"list"}}},{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_settings"}]}),s.indices.prototype.getTemplate=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_template/<%=name%>",req:{name:{type:"list"}}},{fmt:"/_template"}]}),s.indices.prototype.getUpgrade=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}]}),s.indices.prototype.open=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"closed",options:["open","closed","none","all"],name:"expand_wildcards"}},url:{fmt:"/<%=index%>/_open",req:{index:{type:"list"}}},method:"POST"}),s.indices.prototype.putAlias=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/<%=index%>/_alias/<%=name%>",req:{index:{type:"list"},name:{type:"string"}}},method:"PUT"}),s.indices.prototype.putMapping=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},updateAllTypes:{type:"boolean",name:"update_all_types"}},urls:[{fmt:"/<%=index%>/_mapping/<%=type%>",req:{index:{type:"list"},type:{type:"string"}}},{fmt:"/_mapping/<%=type%>",req:{type:{type:"string"}}}],needBody:!0,method:"PUT"}),s.indices.prototype.putSettings=r({params:{masterTimeout:{type:"time",name:"master_timeout"},preserveExisting:{type:"boolean",name:"preserve_existing"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},flatSettings:{type:"boolean",name:"flat_settings"}},urls:[{fmt:"/<%=index%>/_settings",req:{index:{type:"list"}}},{fmt:"/_settings"}],needBody:!0,method:"PUT"}),s.indices.prototype.putTemplate=r({params:{order:{type:"number"},create:{type:"boolean",default:!1},timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},flatSettings:{type:"boolean",name:"flat_settings"}},url:{fmt:"/_template/<%=name%>",req:{name:{type:"string"}}},needBody:!0,method:"PUT"}),s.indices.prototype.recovery=r({params:{detailed:{type:"boolean",default:!1},activeOnly:{type:"boolean",default:!1,name:"active_only"}},urls:[{fmt:"/<%=index%>/_recovery",req:{index:{type:"list"}}},{fmt:"/_recovery"}]}),s.indices.prototype.refresh=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},force:{type:"boolean",default:!1},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_refresh",req:{index:{type:"list"}}},{fmt:"/_refresh"}],method:"POST"}),s.indices.prototype.rollover=r({params:{timeout:{type:"time"},dryRun:{type:"boolean",name:"dry_run"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},urls:[{fmt:"/<%=alias%>/_rollover/<%=newIndex%>",req:{alias:{type:"string"},newIndex:{type:"string"}}},{fmt:"/<%=alias%>/_rollover",req:{alias:{type:"string"}}}],method:"POST"}),s.indices.prototype.segments=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},verbose:{type:"boolean",default:!1}},urls:[{fmt:"/<%=index%>/_segments",req:{index:{type:"list"}}},{fmt:"/_segments"}]}),s.indices.prototype.shardStores=r({params:{status:{type:"list",options:["green","yellow","red","all"]},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"}},urls:[{fmt:"/<%=index%>/_shard_stores",req:{index:{type:"list"}}},{fmt:"/_shard_stores"}]}),s.indices.prototype.shrink=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"}},url:{fmt:"/<%=index%>/_shrink/<%=target%>",req:{index:{type:"string"},target:{type:"string"}}},method:"POST"}),s.indices.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"list"},level:{type:"enum",default:"indices",options:["cluster","indices","shards"]},types:{type:"list"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/<%=index%>/_stats/<%=metric%>",req:{index:{type:"list"},metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_stats/<%=metric%>",req:{metric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/<%=index%>/_stats",req:{index:{type:"list"}}},{fmt:"/_stats"}]}),s.indices.prototype.updateAliases=r({params:{timeout:{type:"time"},masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_aliases"},needBody:!0,method:"POST"}),s.indices.prototype.upgrade=r({params:{allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},onlyAncientSegments:{type:"boolean",name:"only_ancient_segments"}},urls:[{fmt:"/<%=index%>/_upgrade",req:{index:{type:"list"}}},{fmt:"/_upgrade"}],method:"POST"}),s.indices.prototype.validateQuery=r({params:{explain:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},operationThreading:{name:"operation_threading"},q:{type:"string"},analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},lenient:{type:"boolean"},rewrite:{type:"boolean"},allShards:{type:"boolean",name:"all_shards"}},urls:[{fmt:"/<%=index%>/<%=type%>/_validate/query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_validate/query",req:{index:{type:"list"}}},{fmt:"/_validate/query"}],method:"POST"}),s.info=r({url:{fmt:"/"}}),s.ingest=a(),s.ingest.prototype.deletePipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},method:"DELETE"}),s.ingest.prototype.getPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},urls:[{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline"}]}),s.ingest.prototype.putPipeline=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_ingest/pipeline/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.ingest.prototype.simulate=r({params:{verbose:{type:"boolean",default:!1}},urls:[{fmt:"/_ingest/pipeline/<%=id%>/_simulate",req:{id:{type:"string"}}},{fmt:"/_ingest/pipeline/_simulate"}],needBody:!0,method:"POST"}),s.mget=r({params:{storedFields:{type:"list",name:"stored_fields"},preference:{type:"string"},realtime:{type:"boolean"},refresh:{type:"boolean"},routing:{type:"string"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mget",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mget",req:{index:{type:"string"}}},{fmt:"/_mget"}],needBody:!0,method:"POST"}),s.msearch=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},maxConcurrentSearches:{type:"number",name:"max_concurrent_searches"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch",req:{index:{type:"list"}}},{fmt:"/_msearch"}],needBody:!0,bulkBody:!0,method:"POST"}),s.msearchTemplate=r({params:{searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_msearch/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_msearch/template",req:{index:{type:"list"}}},{fmt:"/_msearch/template"}],needBody:!0,bulkBody:!0,method:"POST"}),s.mtermvectors=r({params:{ids:{type:"list",required:!1},termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/_mtermvectors",req:{index:{type:"string"},type:{type:"string"}}},{fmt:"/<%=index%>/_mtermvectors",req:{index:{type:"string"}}},{fmt:"/_mtermvectors"}],method:"POST"}),s.nodes=a(),s.nodes.prototype.hotThreads=r({params:{interval:{type:"time"},snapshots:{type:"number"},threads:{type:"number"},ignoreIdleThreads:{type:"boolean",name:"ignore_idle_threads"},type:{type:"enum",options:["cpu","wait","block"]},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/hotthreads",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/hotthreads"}]}),s.nodes.prototype.info=r({params:{flatSettings:{type:"boolean",name:"flat_settings"},timeout:{type:"time"}},urls:[{fmt:"/_nodes/<%=nodeId%>/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes/<%=nodeId%>",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/<%=metric%>",req:{metric:{type:"list",options:["settings","os","process","jvm","thread_pool","transport","http","plugins","ingest"]}}},{fmt:"/_nodes"}]}),s.nodes.prototype.stats=r({params:{completionFields:{type:"list",name:"completion_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},fields:{type:"list"},groups:{type:"boolean"},level:{type:"enum",default:"node",options:["indices","node","shards"]},types:{type:"list"},timeout:{type:"time"},includeSegmentFileSizes:{type:"boolean",default:!1,name:"include_segment_file_sizes"}},urls:[{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats/<%=metric%>",req:{nodeId:{type:"list"},metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats/<%=metric%>/<%=indexMetric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]},indexMetric:{type:"list",options:["_all","completion","docs","fielddata","query_cache","flush","get","indexing","merge","request_cache","refresh","search","segments","store","warmer","suggest"]}}},{fmt:"/_nodes/<%=nodeId%>/stats",req:{nodeId:{type:"list"}}},{fmt:"/_nodes/stats/<%=metric%>",req:{metric:{type:"list",options:["_all","breaker","fs","http","indices","jvm","os","process","thread_pool","transport","discovery"]}}},{fmt:"/_nodes/stats"}]}),s.ping=r({url:{fmt:"/"},requestTimeout:3e3,method:"HEAD"}),s.putScript=r({urls:[{fmt:"/_scripts/<%=lang%>/<%=id%>",req:{lang:{type:"string"},id:{type:"string"}}},{fmt:"/_scripts/<%=lang%>",req:{lang:{type:"string"}}}],needBody:!0,method:"PUT"}),s.putTemplate=r({url:{fmt:"/_search/template/<%=id%>",req:{id:{type:"string"}}},needBody:!0,method:"PUT"}),s.reindex=r({params:{refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},url:{fmt:"/_reindex"},needBody:!0,method:"POST"}),s.reindexRethrottle=r({params:{requestsPerSecond:{type:"number",required:!0,name:"requests_per_second"}},url:{fmt:"/_reindex/<%=taskId%>/_rethrottle",req:{taskId:{type:"string"}}},method:"POST"}),s.remote=a(),s.remote.prototype.info=r({url:{fmt:"/_remote/info"}}),s.renderSearchTemplate=r({urls:[{fmt:"/_render/template/<%=id%>",req:{id:{type:"string"}}},{fmt:"/_render/template"}],method:"POST"}),s.scroll=r({params:{scroll:{type:"time"},scrollId:{type:"string",name:"scroll_id"}},urls:[{fmt:"/_search/scroll/<%=scrollId%>",req:{scrollId:{type:"string"}}},{fmt:"/_search/scroll"}],paramAsBody:{param:"scrollId",body:"scroll_id"},method:"POST"}),s.search=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},explain:{type:"boolean"},storedFields:{type:"list",name:"stored_fields"},docvalueFields:{type:"list",name:"docvalue_fields"},fielddataFields:{type:"list",name:"fielddata_fields"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},suggestField:{type:"string",name:"suggest_field"},suggestMode:{type:"enum",default:"missing",options:["missing","popular","always"],name:"suggest_mode"},suggestSize:{type:"number",name:"suggest_size"},suggestText:{type:"string",name:"suggest_text"},timeout:{type:"time"},trackScores:{type:"boolean",name:"track_scores"},typedKeys:{type:"boolean",name:"typed_keys"},version:{type:"boolean"},requestCache:{type:"boolean",name:"request_cache"},batchedReduceSize:{type:"number",default:512,name:"batched_reduce_size"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search",req:{index:{type:"list"}}},{fmt:"/_search"}],method:"POST"}),s.searchShards=r({params:{preference:{type:"string"},routing:{type:"string"},local:{type:"boolean"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"}},urls:[{fmt:"/<%=index%>/_search_shards",req:{index:{type:"list"}}},{fmt:"/_search_shards"}],method:"POST"}),s.searchTemplate=r({params:{ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},preference:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","query_and_fetch","dfs_query_then_fetch","dfs_query_and_fetch"],name:"search_type"},explain:{type:"boolean"},profile:{type:"boolean"},typedKeys:{type:"boolean",name:"typed_keys"}},urls:[{fmt:"/<%=index%>/<%=type%>/_search/template",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_search/template",req:{index:{type:"list"}}},{fmt:"/_search/template"}],method:"POST"}),s.snapshot=a(),s.snapshot.prototype.create=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.createRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"},verify:{type:"boolean"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"string"}}},needBody:!0,method:"POST"}),s.snapshot.prototype.delete=r({params:{masterTimeout:{type:"time",name:"master_timeout"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"DELETE"}),s.snapshot.prototype.deleteRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},method:"DELETE"}),s.snapshot.prototype.get=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>",req:{repository:{type:"string"},snapshot:{type:"list"}}}}),s.snapshot.prototype.getRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},local:{type:"boolean"}},urls:[{fmt:"/_snapshot/<%=repository%>",req:{repository:{type:"list"}}},{fmt:"/_snapshot"}]}),s.snapshot.prototype.restore=r({params:{masterTimeout:{type:"time",name:"master_timeout"},waitForCompletion:{type:"boolean",default:!1,name:"wait_for_completion"}},url:{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_restore",req:{repository:{type:"string"},snapshot:{type:"string"}}},method:"POST"}),s.snapshot.prototype.status=r({params:{masterTimeout:{type:"time",name:"master_timeout"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"}},urls:[{fmt:"/_snapshot/<%=repository%>/<%=snapshot%>/_status",req:{repository:{type:"string"},snapshot:{type:"list"}}},{fmt:"/_snapshot/<%=repository%>/_status",req:{repository:{type:"string"}}},{fmt:"/_snapshot/_status"}]}),s.snapshot.prototype.verifyRepository=r({params:{masterTimeout:{type:"time",name:"master_timeout"},timeout:{type:"time"}},url:{fmt:"/_snapshot/<%=repository%>/_verify",req:{repository:{type:"string"}}},method:"POST"}),s.tasks=a(),s.tasks.prototype.cancel=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"}},urls:[{fmt:"/_tasks/<%=taskId%>/_cancel",req:{taskId:{type:"string"}}},{fmt:"/_tasks/_cancel"}],method:"POST"}),s.tasks.prototype.get=r({params:{waitForCompletion:{type:"boolean",name:"wait_for_completion"}},url:{fmt:"/_tasks/<%=taskId%>",req:{taskId:{type:"string"}}}}),s.tasks.prototype.list=r({params:{nodeId:{type:"list",name:"node_id"},actions:{type:"list"},detailed:{type:"boolean"},parentNode:{type:"string",name:"parent_node"},parentTask:{type:"string",name:"parent_task"},waitForCompletion:{type:"boolean",name:"wait_for_completion"},groupBy:{type:"enum",default:"nodes",options:["nodes","parents"],name:"group_by"}},url:{fmt:"/_tasks"}}),s.termvectors=r({params:{termStatistics:{type:"boolean",default:!1,required:!1,name:"term_statistics"},fieldStatistics:{type:"boolean",default:!0,required:!1,name:"field_statistics"},fields:{type:"list",required:!1},offsets:{type:"boolean",default:!0,required:!1},positions:{type:"boolean",default:!0,required:!1},payloads:{type:"boolean",default:!0,required:!1},preference:{type:"string",required:!1},routing:{type:"string",required:!1},parent:{type:"string",required:!1},realtime:{type:"boolean",required:!1},version:{type:"number"},versionType:{type:"enum",options:["internal","external","external_gte","force"],name:"version_type"}},urls:[{fmt:"/<%=index%>/<%=type%>/<%=id%>/_termvectors",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},{fmt:"/<%=index%>/<%=type%>/_termvectors",req:{index:{type:"string"},type:{type:"string"}}}],method:"POST"}),s.update=r({params:{waitForActiveShards:{type:"string",name:"wait_for_active_shards"},fields:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},lang:{type:"string"},parent:{type:"string"},refresh:{type:"enum",options:["true","false","wait_for",""]},retryOnConflict:{type:"number",name:"retry_on_conflict"},routing:{type:"string"},timeout:{type:"time"},timestamp:{type:"time"},ttl:{type:"time"},version:{type:"number"},versionType:{type:"enum",options:["internal","force"],name:"version_type"}},url:{fmt:"/<%=index%>/<%=type%>/<%=id%>/_update",req:{index:{type:"string"},type:{type:"string"},id:{type:"string"}}},method:"POST"}),s.updateByQuery=r({params:{analyzer:{type:"string"},analyzeWildcard:{type:"boolean",name:"analyze_wildcard"},defaultOperator:{type:"enum",default:"OR",options:["AND","OR"],name:"default_operator"},df:{type:"string"},from:{type:"number"},ignoreUnavailable:{type:"boolean",name:"ignore_unavailable"},allowNoIndices:{type:"boolean",name:"allow_no_indices"},conflicts:{type:"enum",default:"abort",options:["abort","proceed"]},expandWildcards:{type:"enum",default:"open",options:["open","closed","none","all"],name:"expand_wildcards"},lenient:{type:"boolean"},pipeline:{type:"string"},preference:{type:"string"},q:{type:"string"},routing:{type:"list"},scroll:{type:"time"},searchType:{type:"enum",options:["query_then_fetch","dfs_query_then_fetch"],name:"search_type"},searchTimeout:{type:"time",name:"search_timeout"},size:{type:"number"},sort:{type:"list"},_source:{type:"list"},_sourceExclude:{type:"list",name:"_source_exclude"},_sourceInclude:{type:"list",name:"_source_include"},terminateAfter:{type:"number",name:"terminate_after"},stats:{type:"list"},version:{type:"boolean"},versionType:{type:"boolean",name:"version_type"},requestCache:{type:"boolean",name:"request_cache"},refresh:{type:"boolean"},timeout:{type:"time",default:"1m"},waitForActiveShards:{type:"string",name:"wait_for_active_shards"},scrollSize:{type:"number",name:"scroll_size"},waitForCompletion:{type:"boolean",default:!0,name:"wait_for_completion"},requestsPerSecond:{type:"number",default:0,name:"requests_per_second"},slices:{type:"number",default:1}},urls:[{fmt:"/<%=index%>/<%=type%>/_update_by_query",req:{index:{type:"list"},type:{type:"list"}}},{fmt:"/<%=index%>/_update_by_query",req:{index:{type:"list"}}}],method:"POST"})},function(t,e,n){function r(t,e){s.call(this,t,e);var n=this;e.$injector.invoke(["$http","$q",function(t,e){n.$q=e,n.$http=t}])}t.exports=r;var a=n(0),s=n(7),i=n(3).ConnectionFault;a.inherits(r,s),r.prototype.request=function(t,e){var n=this.$q.defer();return this.$http({method:t.method,url:this.host.makeUrl(t),data:t.body,cache:!1,headers:this.host.getHeaders(t.headers),transformRequest:[],transformResponse:[],timeout:n.promise}).then(function(t){e(null,t.data,t.status,t.headers())},function(t){t.status?e(null,t.data,t.status,t.headers()):e(new i(t.message))}),function(){n.resolve()}}},function(t,e,n){function r(t,e){s.call(this,t,e)}t.exports=r;var a=n(0),s=n(7),i=n(3).ConnectionFault;a.inherits(r,s),r.prototype.request=function(t,e){var n={url:this.host.makeUrl(t),data:t.body,type:t.method,dataType:"text",headers:this.host.getHeaders(t.headers),done:e},r=jQuery.ajax(n).done(function(t){e(null,t,r.statusCode(),{"content-type":r.getResponseHeader("content-type")})}).fail(function(t,n,r){e(new i(r&&r.message))});return function(){r.abort()}}},function(t,e,n){function r(t,e){s.call(this,t,e)}t.exports=r;var a=n(0),s=n(7),i=n(3).ConnectionFault,o=!(navigator&&/PhantomJS/i.test(navigator.userAgent));a.inherits(r,s);var l=a.noop;if(!(l="undefined"!=typeof XMLHttpRequest?function(){return new XMLHttpRequest}:a(["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"]).map(function(t){try{new window.ActiveXObject(t);return function(){return new window.ActiveXObject(t)}}catch(t){return!1}}).compact().first()))throw new Error("getXhr(): XMLHttpRequest not available");r.prototype.request=function(t,e){var n=l(),r=this.host,a=this.log,s=r.makeUrl(t),p=r.getHeaders(t.headers),u=!1!==t.async&&o;if(n.open(t.method||"GET",s,u),p)for(var d in p)void 0!==p[d]&&n.setRequestHeader(d,p[d]);return n.onreadystatechange=function(){if(4===n.readyState){clearTimeout(void 0),a.trace(t.method,s,t.body,n.responseText,n.status);var r=n.status?void 0:new i(n.statusText||"Request failed to complete.");e(r,n.responseText,n.status)}},n.send(t.body||void 0),function(){n.abort()}}},function(t,e,n){function r(t,e){a.call(this,t,e),this.color=!s.has(e,"color")||!!e.color}t.exports=r;var a=n(18),s=n(0);s.inherits(r,a),r.prototype.setupListeners=function(t){a.prototype.setupListeners.call(this,t)},r.prototype.write=function(t,e,n){console[n]&&console[n](this.format(t,e))},r.prototype.onError=s.handler(function(t){var e=console.error?"error":"log";this.write("Error"===t.name?"ERROR":t.name,t.stack||t.message,e)}),r.prototype.onWarning=s.handler(function(t){this.write("WARNING",t,console.warn?"warn":"log")}),r.prototype.onInfo=s.handler(function(t){this.write("INFO",t,console.info?"info":"log")}),r.prototype.onDebug=s.handler(function(t){this.write("DEBUG",t,console.debug?"debug":"log")}),r.prototype.onTrace=s.handler(function(t){this.write("TRACE",this._formatTraceMessage(t),"log")})},function(t,e){t.exports=function(t){return t[Math.floor(Math.random()*t.length)]}},function(t,e){t.exports=function(t){var e=t[0];return t.push(t.shift()),e}},function(t,e,n){function r(){}var a=n(0),s=n(23);a.inherits(r,s),r.prototype.encode=function(t){switch(typeof t){case"string":return t;case"object":if(t)return angular.toJson(t);default:return}},t.exports=r},function(t,e,n){var r=n(55);t.exports=function(t){if(r(t))return!1;for(var e=t.shift().protocol,n=0;n<t.length;n++)if(e!==t[n].protocol)return!1;return e}},function(t,e,n){var r=n(0);t.exports=function(t){var e=0,n=t.connectionPool,a=n._onConnectionDied,s=function(){s.timerId=t._timeout(s.timerId),t.sniff()},i=function(t){var e=r.now();return function(){return e-t}};n._onConnectionDied=function(r,o){var l=a.call(n,r,o);e=s.timerId?e+1:0;var p=n.calcDeadTimeout(e,1e3);return s.timerId&&p<s.timerId&&s.countdown()&&(s.timerId=t._timeout(s.timerId)),s.timerId||(s.timerId=t._timeout(s,p),s.countdown=i(p)),l},n._onConnectionDied.restore=function(){n._onConnectionDied=a}}},function(t,e){e.read=function(t,e,n,r,a){var s,i,o=8*a-r-1,l=(1<<o)-1,p=l>>1,u=-7,d=n?a-1:0,c=n?-1:1,m=t[e+d];for(d+=c,s=m&(1<<-u)-1,m>>=-u,u+=o;u>0;s=256*s+t[e+d],d+=c,u-=8);for(i=s&(1<<-u)-1,s>>=-u,u+=r;u>0;i=256*i+t[e+d],d+=c,u-=8);if(0===s)s=1-p;else{if(s===l)return i?NaN:1/0*(m?-1:1);i+=Math.pow(2,r),s-=p}return(m?-1:1)*i*Math.pow(2,s-r)},e.write=function(t,e,n,r,a,s){var i,o,l,p=8*s-a-1,u=(1<<p)-1,d=u>>1,c=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,m=r?0:s-1,f=r?1:-1,$=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=u):(i=Math.floor(Math.log(e)/Math.LN2),e*(l=Math.pow(2,-i))<1&&(i--,l*=2),e+=i+d>=1?c/l:c*Math.pow(2,1-d),e*l>=2&&(i++,l/=2),i+d>=u?(o=0,i=u):i+d>=1?(o=(e*l-1)*Math.pow(2,a),i+=d):(o=e*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;t[n+m]=255&o,m+=f,o/=256,a-=8);for(i=i<<a|o,p+=a;p>0;t[n+m]=255&i,m+=f,i/=256,p-=8);t[n+m-f]|=128*$}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){(function(e){function n(t,e){return null==t?void 0:t[e]}function r(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}function a(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function s(){this.__data__=yt?yt(null):{}}function i(t){return this.has(t)&&delete this.__data__[t]}function o(t){var e=this.__data__;if(yt){var n=e[t];return n===B?void 0:n}return ut.call(e,t)?e[t]:void 0}function l(t){var e=this.__data__;return yt?void 0!==e[t]:ut.call(e,t)}function p(t,e){return this.__data__[t]=yt&&void 0===e?B:e,this}function u(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function d(){this.__data__=[]}function c(t){var e=this.__data__,n=v(e,t);return!(n<0)&&(n==e.length-1?e.pop():ft.call(e,n,1),!0)}function m(t){var e=this.__data__,n=v(e,t);return n<0?void 0:e[n][1]}function f(t){return v(this.__data__,t)>-1}function $(t,e){var n=this.__data__,r=v(n,t);return r<0?n.push([t,e]):n[r][1]=e,this}function y(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function V(){this.__data__={hash:new a,map:new($t||u),string:new a}}function h(t){return E(this,t).delete(t)}function b(t){return E(this,t).get(t)}function g(t){return E(this,t).has(t)}function _(t,e){return E(this,t).set(t,e),this}function v(t,e){for(var n=t.length;n--;)if(R(t[n][0],e))return n;return-1}function x(t,e){e=k(e,t)?[e]:T(e);for(var n=0,r=e.length;null!=t&&n<r;)t=t[I(e[n++])];return n&&n==r?t:void 0}function q(t){return!(!D(t)||O(t))&&(L(t)||r(t)?ct:tt).test(N(t))}function w(t){if("string"==typeof t)return t;if(j(t))return ht?ht.call(t):"";var e=t+"";return"0"==e&&1/t==-W?"-0":e}function T(t){return gt(t)?t:bt(t)}function E(t,e){var n=t.__data__;return A(e)?n["string"==typeof e?"string":"hash"]:n.map}function S(t,e){var r=n(t,e);return q(r)?r:void 0}function k(t,e){if(gt(t))return!1;var n=typeof t;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=t&&!j(t))||(J.test(t)||!H.test(t)||null!=e&&t in Object(e))}function A(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}function O(t){return!!lt&&lt in t}function I(t){if("string"==typeof t||j(t))return t;var e=t+"";return"0"==e&&1/t==-W?"-0":e}function N(t){if(null!=t){try{return pt.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function C(t,e){if("function"!=typeof t||e&&"function"!=typeof e)throw new TypeError(F);var n=function(){var r=arguments,a=e?e.apply(this,r):r[0],s=n.cache;if(s.has(a))return s.get(a);var i=t.apply(this,r);return n.cache=s.set(a,i),i};return n.cache=new(C.Cache||y),n}function R(t,e){return t===e||t!==t&&e!==e}function L(t){var e=D(t)?dt.call(t):"";return e==z||e==G}function D(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function P(t){return!!t&&"object"==typeof t}function j(t){return"symbol"==typeof t||P(t)&&dt.call(t)==Y}function U(t){return null==t?"":w(t)}function M(t,e,n){var r=null==t?void 0:x(t,e);return void 0===r?n:r}var F="Expected a function",B="__lodash_hash_undefined__",W=1/0,z="[object Function]",G="[object GeneratorFunction]",Y="[object Symbol]",H=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,J=/^\w*$/,X=/^\./,K=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Z=/[\\^$.*+?()[\]{}|]/g,Q=/\\(\\)?/g,tt=/^\[object .+?Constructor\]$/,et="object"==typeof e&&e&&e.Object===Object&&e,nt="object"==typeof self&&self&&self.Object===Object&&self,rt=et||nt||Function("return this")(),at=Array.prototype,st=Function.prototype,it=Object.prototype,ot=rt["__core-js_shared__"],lt=function(){var t=/[^.]+$/.exec(ot&&ot.keys&&ot.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),pt=st.toString,ut=it.hasOwnProperty,dt=it.toString,ct=RegExp("^"+pt.call(ut).replace(Z,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),mt=rt.Symbol,ft=at.splice,$t=S(rt,"Map"),yt=S(Object,"create"),Vt=mt?mt.prototype:void 0,ht=Vt?Vt.toString:void 0;a.prototype.clear=s,a.prototype.delete=i,a.prototype.get=o,a.prototype.has=l,a.prototype.set=p,u.prototype.clear=d,u.prototype.delete=c,u.prototype.get=m,u.prototype.has=f,u.prototype.set=$,y.prototype.clear=V,y.prototype.delete=h,y.prototype.get=b,y.prototype.has=g,y.prototype.set=_;var bt=C(function(t){t=U(t);var e=[];return X.test(t)&&e.push(""),t.replace(K,function(t,n,r,a){e.push(r?a.replace(Q,"$1"):n||t)}),e});C.Cache=y;var gt=Array.isArray;t.exports=M}).call(e,n(2))},function(t,e,n){(function(t,n){function r(t,e){return null==t?void 0:t[e]}function a(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}function s(t){return U.call(t)}function i(t){return!(!V(t)||l(t))&&($(t)||a(t)?M:E).test(u(t))}function o(t,e){var n=r(t,e);return i(n)?n:void 0}function l(t){return!!D&&D in t}function p(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||R)}function u(t){if(null!=t){try{return P.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function d(t){return m(t)&&j.call(t,"callee")&&(!B.call(t,"callee")||U.call(t)==_)}function c(t){return null!=t&&y(t.length)&&!$(t)}function m(t){return h(t)&&c(t)}function f(t){if(c(t)&&(at(t)||"string"==typeof t||"function"==typeof t.splice||st(t)||d(t)))return!t.length;var e=rt(t);if(e==q||e==w)return!t.size;if(K||p(t))return!z(t).length;for(var n in t)if(j.call(t,n))return!1;return!0}function $(t){var e=V(t)?U.call(t):"";return e==v||e==x}function y(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=g}function V(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function h(t){return!!t&&"object"==typeof t}function b(){return!1}var g=9007199254740991,_="[object Arguments]",v="[object Function]",x="[object GeneratorFunction]",q="[object Map]",w="[object Set]",T=/[\\^$.*+?()[\]{}|]/g,E=/^\[object .+?Constructor\]$/,S="object"==typeof t&&t&&t.Object===Object&&t,k="object"==typeof self&&self&&self.Object===Object&&self,A=S||k||Function("return this")(),O="object"==typeof e&&e&&!e.nodeType&&e,I=O&&"object"==typeof n&&n&&!n.nodeType&&n,N=I&&I.exports===O,C=Function.prototype,R=Object.prototype,L=A["__core-js_shared__"],D=function(){var t=/[^.]+$/.exec(L&&L.keys&&L.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),P=C.toString,j=R.hasOwnProperty,U=R.toString,M=RegExp("^"+P.call(j).replace(T,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),F=N?A.Buffer:void 0,B=R.propertyIsEnumerable,W=F?F.isBuffer:void 0,z=function(t,e){return function(n){return t(e(n))}}(Object.keys,Object),G=o(A,"DataView"),Y=o(A,"Map"),H=o(A,"Promise"),J=o(A,"Set"),X=o(A,"WeakMap"),K=!B.call({valueOf:1},"valueOf"),Z=u(G),Q=u(Y),tt=u(H),et=u(J),nt=u(X),rt=s;(G&&"[object DataView]"!=rt(new G(new ArrayBuffer(1)))||Y&&rt(new Y)!=q||H&&"[object Promise]"!=rt(H.resolve())||J&&rt(new J)!=w||X&&"[object WeakMap]"!=rt(new X))&&(rt=function(t){var e=U.call(t),n="[object Object]"==e?t.constructor:void 0,r=n?u(n):void 0;if(r)switch(r){case Z:return"[object DataView]";case Q:return q;case tt:return"[object Promise]";case et:return w;case nt:return"[object WeakMap]"}return e});var at=Array.isArray,st=W||b;n.exports=f}).call(e,n(2),n(9)(t))},function(t,e,n){(function(e){function n(t){return t.split("")}function r(t,e,n,r){for(var a=t.length,s=n+(r?1:-1);r?s--:++s<a;)if(e(t[s],s,t))return s;return-1}function a(t,e,n){if(e!==e)return r(t,s,n);for(var a=n-1,i=t.length;++a<i;)if(t[a]===e)return a;return-1}function s(t){return t!==t}function i(t,e){for(var n=t.length;n--&&a(e,t[n],0)>-1;);return n}function o(t){return k.test(t)}function l(t){return o(t)?p(t):n(t)}function p(t){return t.match(S)||[]}function u(t,e,n){var r=-1,a=t.length;e<0&&(e=-e>a?0:a+e),n=n>a?a:n,n<0&&(n+=a),a=e>n?0:n-e>>>0,e>>>=0;for(var s=Array(a);++r<a;)s[r]=t[r+e];return s}function d(t){if("string"==typeof t)return t;if(f(t))return D?D.call(t):"";var e=t+"";return"0"==e&&1/t==-V?"-0":e}function c(t,e,n){var r=t.length;return n=void 0===n?r:n,!e&&n>=r?t:u(t,e,n)}function m(t){return!!t&&"object"==typeof t}function f(t){return"symbol"==typeof t||m(t)&&C.call(t)==h}function $(t){return null==t?"":d(t)}function y(t,e,n){if((t=$(t))&&(n||void 0===e))return t.replace(b,"");if(!t||!(e=d(e)))return t;var r=l(t);return c(r,0,i(r,l(e))+1).join("")}var V=1/0,h="[object Symbol]",b=/\s+$/,g="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",_="\\ud83c[\\udffb-\\udfff]",v="(?:\\ud83c[\\udde6-\\uddff]){2}",x="[\\ud800-\\udbff][\\udc00-\\udfff]",q="(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?",w="(?:\\u200d(?:"+["[^\\ud800-\\udfff]",v,x].join("|")+")[\\ufe0e\\ufe0f]?"+q+")*",T="[\\ufe0e\\ufe0f]?"+q+w,E="(?:"+["[^\\ud800-\\udfff]"+g+"?",g,v,x,"[\\ud800-\\udfff]"].join("|")+")",S=RegExp(_+"(?="+_+")|"+E+T,"g"),k=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),A="object"==typeof e&&e&&e.Object===Object&&e,O="object"==typeof self&&self&&self.Object===Object&&self,I=A||O||Function("return this")(),N=Object.prototype,C=N.toString,R=I.Symbol,L=R?R.prototype:void 0,D=L?L.toString:void 0;t.exports=y}).call(e,n(2))},function(t,e,n){var r,r;!function(e){t.exports=e()}(function(){var t;return function t(e,n,a){function s(o,l){if(!n[o]){if(!e[o]){var p="function"==typeof r&&r;if(!l&&p)return r(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var u=n[o]={exports:{}};e[o][0].call(u.exports,function(t){var n=e[o][1][t];return s(n||t)},u,u.exports,t,e,n,a)}return n[o].exports}for(var i="function"==typeof r&&r,o=0;o<a.length;o++)s(a[o]);return s}({1:[function(e,n,r){(function(a){!function(e){if("object"==typeof r)n.exports=e();else if("function"==typeof t&&t.amd)t(e);else{var s;"undefined"!=typeof window?s=window:void 0!==a?s=a:"undefined"!=typeof self&&(s=self),s.NanoFlux=e()}}(function(){return function t(n,r,a){function s(o,l){if(!r[o]){if(!n[o]){var p="function"==typeof e&&e;if(!l&&p)return p(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var u=r[o]={exports:{}};n[o][0].call(u.exports,function(t){var e=n[o][1][t];return s(e||t)},u,u.exports,t,n,r,a)}return r[o].exports}for(var i="function"==typeof e&&e,o=0;o<a.length;o++)s(a[o]);return s}({1:[function(t,e,n){"use strict";function r(t,e){this.__dispatcher=t,this.__constructor(e)}r.prototype.__constructor=function(t){for(var e in t)t.hasOwnProperty(e)&&(this[e]=t[e])},r.prototype.dispatch=function(t,e){this.__dispatcher.dispatch(t,e)};var a={};e.exports={clear:function(){a={}},create:function(t,e,n){if(!t||0===t.length)throw"Empty names are not allowed";return a[t]=new r(e,n),a[t]},getActions:function(t){return a[t]}}},{}],2:[function(t,e,n){"use strict";function r(t){return Array.isArray(t)?t:[t]}function a(t){var e=this;this.__stores=[],this.__handlerMapCache={},this.__isDispatching=!1,this.__middlewares=[];var n=function(t){for(var n=r(t),a=0;a<n.length;++a)e.__registerAction(n[a])};!function(){t&&n(t)}()}function s(t,e){return t||(t=o),i[t]||(i[t]=new a(e)),i[t]}a.prototype.__getHandlerName=function(t){var e=this.__handlerMapCache[t];return e||(e="on"+t[0].toUpperCase()+t.substr(1),this.__handlerMapCache[t]=e),e},a.prototype.__callAction=function(){var t=this.__getHandlerName(arguments[0]),e=Array.prototype.slice.call(arguments,1);this.__callMiddleware(t,e);for(var n=0;n<this.__stores.length;++n){var r=this.__stores[n];r[t]&&r[t].apply(r,e)}},a.prototype.__registerAction=function(t){this[t]||(this[t]=this.__callAction.bind(this,t))},a.prototype.__callMiddleware=function(t,e){for(var n=0;n<this.__middlewares.length;++n)this.__middlewares[n].call(null,t,e)},a.prototype.addMiddleware=function(t){this.__middlewares.push(t)},a.prototype.connectTo=function(t){for(var e=r(t),n=0;n<e.length;++n)-1===this.__stores.indexOf(e[n])&&this.__stores.push(e[n])},a.prototype.dispatch=function(t,e){if(this.__isDispatching)throw"DISPATCH WHILE DISPATCHING: Don't trigger any action in your store callbacks!";try{this.__isDispatching=!0,this.__registerAction(t),this[t](e)}catch(t){throw console.error(t),t}finally{this.__isDispatching=!1}};var i={},o="__defDispatcher";e.exports={clear:function(){i={}},create:function(t,e){return s(t,e)},getDispatcher:function(t){return s(t)}}},{}],3:[function(t,e,n){"use strict";var r=t("./store"),a=t("./dispatcher"),s=t("./actioncreator");e.exports={reset:function(){a.clear(),r.clear(),s.clear()},createStore:function(t,e){return r.create(t,e)},createDispatcher:function(t,e){return a.create(t,e)},createActions:function(t,e,n){return s.create(t,e,n)},getDispatcher:function(t){return a.getDispatcher(t)},getStore:function(t){return r.getStore(t)},getActions:function(t){return s.getActions(t)},use:function(t,e){e?e.addMiddleware(t):a.getDispatcher().addMiddleware(t)}}},{"./actioncreator":1,"./dispatcher":2,"./store":4}],4:[function(t,e,n){"use strict";function r(t,e){var n=e,r=t;this.unsubscribe=function(){var t=e.indexOf(r);n.splice(t,1)}}function a(t){this.__constructor(t),this.__subscriptionList=[]}a.prototype.__constructor=function(t){for(var e in t)t.hasOwnProperty(e)&&(this[e]=t[e]);this.onInitialize&&this.onInitialize()},a.prototype.subscribe=function(t,e){var n={context:t,func:e};return this.__subscriptionList.push(n),new r(n,this.__subscriptionList)},a.prototype.notify=function(){for(var t=0;t<this.__subscriptionList.length;++t){var e=this.__subscriptionList[t];e.func.apply(e.context,arguments)}};var s={};e.exports={clear:function(){s={}},create:function(t,e){return s[t]=new a(e),s[t]},getStore:function(t){return s[t]}}},{}]},{},[3])(3)})}).call(this,"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(t,e,n){e.exports=t("./dist/nanoflux.min")},{"./dist/nanoflux.min":1}],3:[function(t,e,n){function r(){function t(e){return Object.getOwnPropertyNames(e).forEach(function(n){var r=e[n];"object"==typeof r&&null!==r&&t(r)}),Object.freeze(e)}function e(t,e){for(var n=t,s=0;s<r.length;++s)n=r[s].call(this,n,a.immutableState,e);return n}function n(t,n,r){var s={};r||(n=e.call(this,n,t)),Object.assign(s,a.immutableState,n),a.setState(s),r||this.notify(a.immutableState)}var r=[],a={immutableState:null,setState:function(e){t(e),this.immutableState=e}};return{on__fuse:function(t){var e=t.actor,r=t.fuse.call(null,a.immutableState,t.params);r.then?r.then(n.bind(this,e)).catch(function(t){console.error("# Nanoflux-Fusion: Promise Exception\n",t)}):n.call(this,e,r)},__initState:function(t){n.call(this,"__initState",t,!0)},use:function(t){r.push(t)},getState:function(){return a.immutableState}}}function a(t){if(!i.getStore(o)||t){var e=i.createStore(o,r());i.createDispatcher(null,["__fuse"]).connectTo(e)}}function s(t,e){return function(){i.getDispatcher().__fuse({actor:e,fuse:t[e],params:arguments})}}var i=t("nanoflux"),o="__fusionStore__",l="__defaultFusionator__",p=[];i.getFusionStore=function(){return i.getStore(o)},i.createFusionator=function(t,e,n){var r={descriptor:t,actors:{}};if(!e)throw"You must specify an initial state";i.getFusionStore().__initState(e),p[n||l]=r;for(funcName in t)t.hasOwnProperty(funcName)&&(r.actors[funcName]=s(t,funcName))},i.getFusionActor=function(t,e){e=e||l;var n=p[e];if(!n)throw"Fusionator with name '"+e+"' is not defined";var r=n.actors[t];if(!r)throw"Actor with name '"+t+"' is not defined for fusionator '"+e;return r};var u=i.reset;i.reset=function(){u(),a(!0),p=[]},a(!1),e.exports=i},{nanoflux:2}]},{},[3])(3)})},function(t,e,n){var r,a;/*! @preserve
 * numeral.js
 * version : 2.0.6
 * author : Adam Draper
 * license : MIT
 * http://adamwdraper.github.com/Numeral-js/
 */
!function(s,i){r=i,void 0!==(a="function"==typeof r?r.call(e,n,e,t):r)&&(t.exports=a)}(0,function(){function t(t,e){this._input=t,this._value=e}var e,n,r={},a={},s={currentLocale:"en",zeroFormat:null,nullFormat:null,defaultFormat:"0,0",scalePercentBy100:!0},i={currentLocale:s.currentLocale,zeroFormat:s.zeroFormat,nullFormat:s.nullFormat,defaultFormat:s.defaultFormat,scalePercentBy100:s.scalePercentBy100};return e=function(a){var s,o,l,p;if(e.isNumeral(a))s=a.value();else if(0===a||void 0===a)s=0;else if(null===a||n.isNaN(a))s=null;else if("string"==typeof a)if(i.zeroFormat&&a===i.zeroFormat)s=0;else if(i.nullFormat&&a===i.nullFormat||!a.replace(/[^0-9]+/g,"").length)s=null;else{for(o in r)if((p="function"==typeof r[o].regexps.unformat?r[o].regexps.unformat():r[o].regexps.unformat)&&a.match(p)){l=r[o].unformat;break}l=l||e._.stringToNumber,s=l(a)}else s=Number(a)||null;return new t(a,s)},e.version="2.0.6",e.isNumeral=function(e){return e instanceof t},e._=n={numberToFormat:function(t,n,r){var s,i,o,l,p,u,d,c=a[e.options.currentLocale],m=!1,f=!1,$=0,y="",V="",h=!1;if(t=t||0,i=Math.abs(t),e._.includes(n,"(")?(m=!0,n=n.replace(/[\(|\)]/g,"")):(e._.includes(n,"+")||e._.includes(n,"-"))&&(p=e._.includes(n,"+")?n.indexOf("+"):t<0?n.indexOf("-"):-1,n=n.replace(/[\+|\-]/g,"")),e._.includes(n,"a")&&(s=n.match(/a(k|m|b|t)?/),s=!!s&&s[1],e._.includes(n," a")&&(y=" "),n=n.replace(new RegExp(y+"a[kmbt]?"),""),i>=1e12&&!s||"t"===s?(y+=c.abbreviations.trillion,t/=1e12):i<1e12&&i>=1e9&&!s||"b"===s?(y+=c.abbreviations.billion,t/=1e9):i<1e9&&i>=1e6&&!s||"m"===s?(y+=c.abbreviations.million,t/=1e6):(i<1e6&&i>=1e3&&!s||"k"===s)&&(y+=c.abbreviations.thousand,t/=1e3)),e._.includes(n,"[.]")&&(f=!0,n=n.replace("[.]",".")),o=t.toString().split(".")[0],l=n.split(".")[1],u=n.indexOf(","),$=(n.split(".")[0].split(",")[0].match(/0/g)||[]).length,l?(e._.includes(l,"[")?(l=l.replace("]",""),l=l.split("["),V=e._.toFixed(t,l[0].length+l[1].length,r,l[1].length)):V=e._.toFixed(t,l.length,r),o=V.split(".")[0],V=e._.includes(V,".")?c.delimiters.decimal+V.split(".")[1]:"",f&&0===Number(V.slice(1))&&(V="")):o=e._.toFixed(t,0,r),y&&!s&&Number(o)>=1e3&&y!==c.abbreviations.trillion)switch(o=String(Number(o)/1e3),y){case c.abbreviations.thousand:y=c.abbreviations.million;break;case c.abbreviations.million:y=c.abbreviations.billion;break;case c.abbreviations.billion:y=c.abbreviations.trillion}if(e._.includes(o,"-")&&(o=o.slice(1),h=!0),o.length<$)for(var b=$-o.length;b>0;b--)o="0"+o;return u>-1&&(o=o.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1"+c.delimiters.thousands)),0===n.indexOf(".")&&(o=""),d=o+V+(y||""),m?d=(m&&h?"(":"")+d+(m&&h?")":""):p>=0?d=0===p?(h?"-":"+")+d:d+(h?"-":"+"):h&&(d="-"+d),d},stringToNumber:function(t){var e,n,r,s=a[i.currentLocale],o=t,l={thousand:3,million:6,billion:9,trillion:12};if(i.zeroFormat&&t===i.zeroFormat)n=0;else if(i.nullFormat&&t===i.nullFormat||!t.replace(/[^0-9]+/g,"").length)n=null;else{n=1,"."!==s.delimiters.decimal&&(t=t.replace(/\./g,"").replace(s.delimiters.decimal,"."));for(e in l)if(r=new RegExp("[^a-zA-Z]"+s.abbreviations[e]+"(?:\\)|(\\"+s.currency.symbol+")?(?:\\))?)?$"),o.match(r)){n*=Math.pow(10,l[e]);break}n*=(t.split("-").length+Math.min(t.split("(").length-1,t.split(")").length-1))%2?1:-1,t=t.replace(/[^0-9\.]+/g,""),n*=Number(t)}return n},isNaN:function(t){return"number"==typeof t&&isNaN(t)},includes:function(t,e){return-1!==t.indexOf(e)},insert:function(t,e,n){return t.slice(0,n)+e+t.slice(n)},reduce:function(t,e){if(null===this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof e)throw new TypeError(e+" is not a function");var n,r=Object(t),a=r.length>>>0,s=0;if(3===arguments.length)n=arguments[2];else{for(;s<a&&!(s in r);)s++;if(s>=a)throw new TypeError("Reduce of empty array with no initial value");n=r[s++]}for(;s<a;s++)s in r&&(n=e(n,r[s],s,r));return n},multiplier:function(t){var e=t.toString().split(".");return e.length<2?1:Math.pow(10,e[1].length)},correctionFactor:function(){return Array.prototype.slice.call(arguments).reduce(function(t,e){var r=n.multiplier(e);return t>r?t:r},1)},toFixed:function(t,e,n,r){var a,s,i,o,l=t.toString().split("."),p=e-(r||0);return a=2===l.length?Math.min(Math.max(l[1].length,p),e):p,i=Math.pow(10,a),o=(n(t+"e+"+a)/i).toFixed(a),r>e-a&&(s=new RegExp("\\.?0{1,"+(r-(e-a))+"}$"),o=o.replace(s,"")),o}},e.options=i,e.formats=r,e.locales=a,e.locale=function(t){return t&&(i.currentLocale=t.toLowerCase()),i.currentLocale},e.localeData=function(t){if(!t)return a[i.currentLocale];if(t=t.toLowerCase(),!a[t])throw new Error("Unknown locale : "+t);return a[t]},e.reset=function(){for(var t in s)i[t]=s[t]},e.zeroFormat=function(t){i.zeroFormat="string"==typeof t?t:null},e.nullFormat=function(t){i.nullFormat="string"==typeof t?t:null},e.defaultFormat=function(t){i.defaultFormat="string"==typeof t?t:"0.0"},e.register=function(t,e,n){if(e=e.toLowerCase(),this[t+"s"][e])throw new TypeError(e+" "+t+" already registered.");return this[t+"s"][e]=n,n},e.validate=function(t,n){var r,a,s,i,o,l,p,u;if("string"!=typeof t&&(t+="",console.warn&&console.warn("Numeral.js: Value is not string. It has been co-erced to: ",t)),t=t.trim(),t.match(/^\d+$/))return!0;if(""===t)return!1;try{p=e.localeData(n)}catch(t){p=e.localeData(e.locale())}return s=p.currency.symbol,o=p.abbreviations,r=p.delimiters.decimal,a="."===p.delimiters.thousands?"\\.":p.delimiters.thousands,(null===(u=t.match(/^[^\d]+/))||(t=t.substr(1),u[0]===s))&&((null===(u=t.match(/[^\d]+$/))||(t=t.slice(0,-1),u[0]===o.thousand||u[0]===o.million||u[0]===o.billion||u[0]===o.trillion))&&(l=new RegExp(a+"{2}"),!t.match(/[^\d.,]/g)&&(i=t.split(r),!(i.length>2)&&(i.length<2?!!i[0].match(/^\d+.*\d$/)&&!i[0].match(l):1===i[0].length?!!i[0].match(/^\d+$/)&&!i[0].match(l)&&!!i[1].match(/^\d+$/):!!i[0].match(/^\d+.*\d$/)&&!i[0].match(l)&&!!i[1].match(/^\d+$/)))))},e.fn=t.prototype={clone:function(){return e(this)},format:function(t,n){var a,s,o,l=this._value,p=t||i.defaultFormat;if(n=n||Math.round,0===l&&null!==i.zeroFormat)s=i.zeroFormat;else if(null===l&&null!==i.nullFormat)s=i.nullFormat;else{for(a in r)if(p.match(r[a].regexps.format)){o=r[a].format;break}o=o||e._.numberToFormat,s=o(l,p,n)}return s},value:function(){return this._value},input:function(){return this._input},set:function(t){return this._value=Number(t),this},add:function(t){function e(t,e,n,a){return t+Math.round(r*e)}var r=n.correctionFactor.call(null,this._value,t);return this._value=n.reduce([this._value,t],e,0)/r,this},subtract:function(t){function e(t,e,n,a){return t-Math.round(r*e)}var r=n.correctionFactor.call(null,this._value,t);return this._value=n.reduce([t],e,Math.round(this._value*r))/r,this},multiply:function(t){function e(t,e,r,a){var s=n.correctionFactor(t,e);return Math.round(t*s)*Math.round(e*s)/Math.round(s*s)}return this._value=n.reduce([this._value,t],e,1),this},divide:function(t){function e(t,e,r,a){var s=n.correctionFactor(t,e);return Math.round(t*s)/Math.round(e*s)}return this._value=n.reduce([this._value,t],e),this},difference:function(t){return Math.abs(e(this._value).subtract(t).value())}},e.register("locale","en",{delimiters:{thousands:",",decimal:"."},abbreviations:{thousand:"k",million:"m",billion:"b",trillion:"t"},ordinal:function(t){var e=t%10;return 1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th"},currency:{symbol:"$"}}),function(){e.register("format","bps",{regexps:{format:/(BPS)/,unformat:/(BPS)/},format:function(t,n,r){var a,s=e._.includes(n," BPS")?" ":"";return t*=1e4,n=n.replace(/\s?BPS/,""),a=e._.numberToFormat(t,n,r),e._.includes(a,")")?(a=a.split(""),a.splice(-1,0,s+"BPS"),a=a.join("")):a=a+s+"BPS",a},unformat:function(t){return+(1e-4*e._.stringToNumber(t)).toFixed(15)}})}(),function(){var t={base:1e3,suffixes:["B","KB","MB","GB","TB","PB","EB","ZB","YB"]},n={base:1024,suffixes:["B","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"]},r=t.suffixes.concat(n.suffixes.filter(function(e){return t.suffixes.indexOf(e)<0})),a=r.join("|");a="("+a.replace("B","B(?!PS)")+")",e.register("format","bytes",{regexps:{format:/([0\s]i?b)/,unformat:new RegExp(a)},format:function(r,a,s){var i,o,l,p=e._.includes(a,"ib")?n:t,u=e._.includes(a," b")||e._.includes(a," ib")?" ":"";for(a=a.replace(/\s?i?b/,""),i=0;i<=p.suffixes.length;i++)if(o=Math.pow(p.base,i),l=Math.pow(p.base,i+1),null===r||0===r||r>=o&&r<l){u+=p.suffixes[i],o>0&&(r/=o);break}return e._.numberToFormat(r,a,s)+u},unformat:function(r){var a,s,i=e._.stringToNumber(r);if(i){for(a=t.suffixes.length-1;a>=0;a--){if(e._.includes(r,t.suffixes[a])){s=Math.pow(t.base,a);break}if(e._.includes(r,n.suffixes[a])){s=Math.pow(n.base,a);break}}i*=s||1}return i}})}(),function(){e.register("format","currency",{regexps:{format:/(\$)/},format:function(t,n,r){var a,s,i=e.locales[e.options.currentLocale],o={before:n.match(/^([\+|\-|\(|\s|\$]*)/)[0],after:n.match(/([\+|\-|\)|\s|\$]*)$/)[0]};for(n=n.replace(/\s?\$\s?/,""),a=e._.numberToFormat(t,n,r),t>=0?(o.before=o.before.replace(/[\-\(]/,""),o.after=o.after.replace(/[\-\)]/,"")):t<0&&!e._.includes(o.before,"-")&&!e._.includes(o.before,"(")&&(o.before="-"+o.before),s=0;s<o.before.length;s++)switch(o.before[s]){case"$":a=e._.insert(a,i.currency.symbol,s);break;case" ":a=e._.insert(a," ",s+i.currency.symbol.length-1)}for(s=o.after.length-1;s>=0;s--)switch(o.after[s]){case"$":a=s===o.after.length-1?a+i.currency.symbol:e._.insert(a,i.currency.symbol,-(o.after.length-(1+s)));break;case" ":a=s===o.after.length-1?a+" ":e._.insert(a," ",-(o.after.length-(1+s)+i.currency.symbol.length-1))}return a}})}(),function(){e.register("format","exponential",{regexps:{format:/(e\+|e-)/,unformat:/(e\+|e-)/},format:function(t,n,r){var a="number"!=typeof t||e._.isNaN(t)?"0e+0":t.toExponential(),s=a.split("e");return n=n.replace(/e[\+|\-]{1}0/,""),e._.numberToFormat(Number(s[0]),n,r)+"e"+s[1]},unformat:function(t){function n(t,n,r,a){var s=e._.correctionFactor(t,n);return t*s*(n*s)/(s*s)}var r=e._.includes(t,"e+")?t.split("e+"):t.split("e-"),a=Number(r[0]),s=Number(r[1]);return s=e._.includes(t,"e-")?s*=-1:s,e._.reduce([a,Math.pow(10,s)],n,1)}})}(),function(){e.register("format","ordinal",{regexps:{format:/(o)/},format:function(t,n,r){var a=e.locales[e.options.currentLocale],s=e._.includes(n," o")?" ":"";return n=n.replace(/\s?o/,""),s+=a.ordinal(t),e._.numberToFormat(t,n,r)+s}})}(),function(){e.register("format","percentage",{regexps:{format:/(%)/,unformat:/(%)/},format:function(t,n,r){var a,s=e._.includes(n," %")?" ":"";return e.options.scalePercentBy100&&(t*=100),n=n.replace(/\s?\%/,""),a=e._.numberToFormat(t,n,r),e._.includes(a,")")?(a=a.split(""),a.splice(-1,0,s+"%"),a=a.join("")):a=a+s+"%",a},unformat:function(t){var n=e._.stringToNumber(t);return e.options.scalePercentBy100?.01*n:n}})}(),function(){e.register("format","time",{regexps:{format:/(:)/,unformat:/(:)/},format:function(t,e,n){var r=Math.floor(t/60/60),a=Math.floor((t-60*r*60)/60),s=Math.round(t-60*r*60-60*a);return r+":"+(a<10?"0"+a:a)+":"+(s<10?"0"+s:s)},unformat:function(t){var e=t.split(":"),n=0;return 3===e.length?(n+=60*Number(e[0])*60,n+=60*Number(e[1]),n+=Number(e[2])):2===e.length&&(n+=60*Number(e[0]),n+=Number(e[1])),Number(n)}})}(),e})},function(t,e,n){(function(t,r){var a;!function(s){function i(t){throw new RangeError(I[t])}function o(t,e){for(var n=t.length,r=[];n--;)r[n]=e(t[n]);return r}function l(t,e){var n=t.split("@"),r="";return n.length>1&&(r=n[0]+"@",t=n[1]),t=t.replace(O,"."),r+o(t.split("."),e).join(".")}function p(t){for(var e,n,r=[],a=0,s=t.length;a<s;)e=t.charCodeAt(a++),e>=55296&&e<=56319&&a<s?(n=t.charCodeAt(a++),56320==(64512&n)?r.push(((1023&e)<<10)+(1023&n)+65536):(r.push(e),a--)):r.push(e);return r}function u(t){return o(t,function(t){var e="";return t>65535&&(t-=65536,e+=R(t>>>10&1023|55296),t=56320|1023&t),e+=R(t)}).join("")}function d(t){return t-48<10?t-22:t-65<26?t-65:t-97<26?t-97:_}function c(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function m(t,e,n){var r=0;for(t=n?C(t/w):t>>1,t+=C(t/e);t>N*x>>1;r+=_)t=C(t/N);return C(r+(N+1)*t/(t+q))}function f(t){var e,n,r,a,s,o,l,p,c,f,$=[],y=t.length,V=0,h=E,b=T;for(n=t.lastIndexOf(S),n<0&&(n=0),r=0;r<n;++r)t.charCodeAt(r)>=128&&i("not-basic"),$.push(t.charCodeAt(r));for(a=n>0?n+1:0;a<y;){for(s=V,o=1,l=_;a>=y&&i("invalid-input"),p=d(t.charCodeAt(a++)),(p>=_||p>C((g-V)/o))&&i("overflow"),V+=p*o,c=l<=b?v:l>=b+x?x:l-b,!(p<c);l+=_)f=_-c,o>C(g/f)&&i("overflow"),o*=f;e=$.length+1,b=m(V-s,e,0==s),C(V/e)>g-h&&i("overflow"),h+=C(V/e),V%=e,$.splice(V++,0,h)}return u($)}function $(t){var e,n,r,a,s,o,l,u,d,f,$,y,V,h,b,q=[];for(t=p(t),y=t.length,e=E,n=0,s=T,o=0;o<y;++o)($=t[o])<128&&q.push(R($));for(r=a=q.length,a&&q.push(S);r<y;){for(l=g,o=0;o<y;++o)($=t[o])>=e&&$<l&&(l=$);for(V=r+1,l-e>C((g-n)/V)&&i("overflow"),n+=(l-e)*V,e=l,o=0;o<y;++o)if($=t[o],$<e&&++n>g&&i("overflow"),$==e){for(u=n,d=_;f=d<=s?v:d>=s+x?x:d-s,!(u<f);d+=_)b=u-f,h=_-f,q.push(R(c(f+b%h,0))),u=C(b/h);q.push(R(c(u,0))),s=m(n,V,r==a),n=0,++r}++n,++e}return q.join("")}function y(t){return l(t,function(t){return k.test(t)?f(t.slice(4).toLowerCase()):t})}function V(t){return l(t,function(t){return A.test(t)?"xn--"+$(t):t})}var h=("object"==typeof e&&e&&e.nodeType,"object"==typeof t&&t&&t.nodeType,"object"==typeof r&&r);var b,g=2147483647,_=36,v=1,x=26,q=38,w=700,T=72,E=128,S="-",k=/^xn--/,A=/[^\x20-\x7E]/,O=/[\x2E\u3002\uFF0E\uFF61]/g,I={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},N=_-v,C=Math.floor,R=String.fromCharCode;b={version:"1.4.1",ucs2:{decode:p,encode:u},decode:f,encode:$,toASCII:V,toUnicode:y},void 0!==(a=function(){return b}.call(e,n,e,t))&&(t.exports=a)}()}).call(e,n(9)(t),n(2))},function(t,e,n){"use strict";function r(t,e){return Object.prototype.hasOwnProperty.call(t,e)}t.exports=function(t,e,n,s){e=e||"&",n=n||"=";var i={};if("string"!=typeof t||0===t.length)return i;var o=/\+/g;t=t.split(e);var l=1e3;s&&"number"==typeof s.maxKeys&&(l=s.maxKeys);var p=t.length;l>0&&p>l&&(p=l);for(var u=0;u<p;++u){var d,c,m,f,$=t[u].replace(o,"%20"),y=$.indexOf(n);y>=0?(d=$.substr(0,y),c=$.substr(y+1)):(d=$,c=""),m=decodeURIComponent(d),f=decodeURIComponent(c),r(i,m)?a(i[m])?i[m].push(f):i[m]=[i[m],f]:i[m]=f}return i};var a=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},function(t,e,n){"use strict";function r(t,e){if(t.map)return t.map(e);for(var n=[],r=0;r<t.length;r++)n.push(e(t[r],r));return n}var a=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}};t.exports=function(t,e,n,o){return e=e||"&",n=n||"=",null===t&&(t=void 0),"object"==typeof t?r(i(t),function(i){var o=encodeURIComponent(a(i))+n;return s(t[i])?r(t[i],function(t){return o+encodeURIComponent(a(t))}).join(e):o+encodeURIComponent(a(t[i]))}).join(e):o?encodeURIComponent(a(o))+n+encodeURIComponent(a(t)):""};var s=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)},i=Object.keys||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.push(n);return e}},function(t,e){t.exports="//! AlaSQL v0.4.0 | © 2014-2016 Andrey Gershun & Mathias Rangel Wulff | License: MIT \n/*\n@module alasql\n@version 0.4.0\n\nAlaSQL - JavaScript SQL database\n© 2014-2016\tAndrey Gershun & Mathias Rangel Wulff\n\n@license\nThe MIT License (MIT)\n\nCopyright 2014-2016 Andrey Gershun (agershun@gmail.com) & Mathias Rangel Wulff (m@rawu.dk) \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n/**\n\t@fileoverview AlaSQL JavaScript SQL library\n\t@see http://github.com/agershun/alasql\n*/\n\n/**\n\tCallback from statement\n\t@callback statement-callback\n\t@param {object} data Result data\n*/\n\n/**\n\tUMD envelope for AlaSQL\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n    \t/** alasql main function */\n        module.exports = factory();\n    } else {\n        root.alasql = factory();\n    }\n}(this, function () {\n\n/**\n\tAlaSQL - Main Alasql class\n \t@function\n \t@param {string|function|object} sql - SQL-statement or data object for fuent interface\n \t@param {object} params - SQL parameters\n \t@param {function} cb - callback function\n \t@param {object} scope - Scope for nested queries\n \t@return {any} - Result data object\n\n\t@example\n Standard sync call:\n    alasql('CREATE TABLE one');\n Query:\n \tvar res = alasql('SELECT * FROM one');\n Call with parameters:\n \tvar res = alasql('SELECT * FROM ?',[data]);\n Standard async call with callback function:\n \talasql('SELECT * FROM ?',[data],function(res){\n\t\tconsole.log(data);\n \t});\n Call with scope for subquery (to pass common values):\n    var scope = {one:{a:2,b;20}}\n    alasql('SELECT * FROM ? two WHERE two.a = one.a',[data],null,scope);\n Call for fluent interface with data object:\n    alasql(data).Where(function(x){return x.a == 10}).exec();\n Call for fluent interface without data object:\n    alasql().From(data).Where(function(x){return x.a == 10}).exec();\n */\n\nvar alasql = function(sql, params, cb, scope) {\n\n\tparams = params||[];\n\n\tif(typeof importScripts !== 'function' && alasql.webworker) {\n\t\tvar id = alasql.lastid++;\n\t\talasql.buffer[id] = cb;\n\t\talasql.webworker.postMessage({id:id,sql:sql,params:params});\n\t\treturn;\n\t} \n\n\tif(arguments.length === 0) {\n\t\t// Without arguments - Fluent interface\n\t\treturn new yy.Select({\n\t\t\tcolumns:[new yy.Column({columnid:'*'})],\n\t\t\tfrom: [new yy.ParamValue({param:0})]\n\t\t});\n\t} else if(arguments.length === 1){ \n\t\t// Access promise notation without using `.promise(...)`\n\t\tif(sql.constructor === Array){\n\t\t\treturn alasql.promise(sql);\n\t\t}\n\t} \n\t// Avoid setting params if not needed even with callback\n\tif(typeof params === 'function'){\n\t\tscope = cb;\n\t\tcb = params;\n\t\tparams = [];\n\t}\n\n\tif(typeof params !== 'object'){\n\t\t\tparams = [params];\n\t}\n\n\t// Standard interface\n\t// alasql('#sql');\n\tif(typeof sql === 'string' && sql[0]==='#' && typeof document === \"object\") {\n\t\tsql = document.querySelector(sql).textContent;\n\t} else if(typeof sql === 'object' && sql instanceof HTMLElement) {\n\t\tsql = sql.textContent;\n\t} else if(typeof sql === 'function') {\n\t\t// to run multiline functions\n\t\tsql = sql.toString().slice(14,-3);\n\t}\n\t// Run SQL\t\t\t\n\treturn alasql.exec(sql, params, cb, scope);\n};\n\n/** \n\tCurrent version of alasql \n \t@constant {string} \n*/\nalasql.version = '0.4.0';\n\n/**\n\tDebug flag\n\t@type {boolean}\n*/\nalasql.debug = undefined; // Initial debug variable\n\n/*only-for-browser/*\nvar require = function(){return null}; // as alasqlparser.js is generated, we can not \"remove\" referenses to \nvar __dirname = '';\n//*/\n\n/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar alasqlparser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[2,13],$V1=[1,104],$V2=[1,102],$V3=[1,103],$V4=[1,6],$V5=[1,42],$V6=[1,79],$V7=[1,76],$V8=[1,94],$V9=[1,93],$Va=[1,69],$Vb=[1,101],$Vc=[1,85],$Vd=[1,64],$Ve=[1,71],$Vf=[1,84],$Vg=[1,66],$Vh=[1,70],$Vi=[1,68],$Vj=[1,61],$Vk=[1,74],$Vl=[1,62],$Vm=[1,67],$Vn=[1,83],$Vo=[1,77],$Vp=[1,86],$Vq=[1,87],$Vr=[1,81],$Vs=[1,82],$Vt=[1,80],$Vu=[1,88],$Vv=[1,89],$Vw=[1,90],$Vx=[1,91],$Vy=[1,92],$Vz=[1,98],$VA=[1,65],$VB=[1,78],$VC=[1,72],$VD=[1,96],$VE=[1,97],$VF=[1,63],$VG=[1,73],$VH=[1,108],$VI=[1,107],$VJ=[10,306,602,764],$VK=[10,306,310,602,764],$VL=[1,115],$VM=[1,116],$VN=[1,117],$VO=[1,118],$VP=[1,119],$VQ=[130,353,410],$VR=[1,127],$VS=[1,126],$VT=[1,134],$VU=[1,164],$VV=[1,175],$VW=[1,178],$VX=[1,173],$VY=[1,181],$VZ=[1,185],$V_=[1,160],$V$=[1,182],$V01=[1,169],$V11=[1,171],$V21=[1,174],$V31=[1,183],$V41=[1,166],$V51=[1,193],$V61=[1,188],$V71=[1,189],$V81=[1,194],$V91=[1,195],$Va1=[1,196],$Vb1=[1,197],$Vc1=[1,198],$Vd1=[1,199],$Ve1=[1,200],$Vf1=[1,201],$Vg1=[1,202],$Vh1=[1,176],$Vi1=[1,177],$Vj1=[1,179],$Vk1=[1,180],$Vl1=[1,186],$Vm1=[1,192],$Vn1=[1,184],$Vo1=[1,187],$Vp1=[1,172],$Vq1=[1,170],$Vr1=[1,191],$Vs1=[1,203],$Vt1=[2,4,5],$Vu1=[2,471],$Vv1=[1,206],$Vw1=[1,211],$Vx1=[1,220],$Vy1=[1,216],$Vz1=[10,72,78,93,98,118,128,162,168,169,183,198,232,245,247,306,310,602,764],$VA1=[2,4,5,10,72,76,77,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,183,185,187,198,280,281,282,283,284,285,286,287,288,306,310,420,424,602,764],$VB1=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VC1=[1,249],$VD1=[1,256],$VE1=[1,265],$VF1=[1,270],$VG1=[1,269],$VH1=[2,4,5,10,72,77,78,93,98,107,118,128,131,132,137,143,145,149,152,154,156,162,168,169,179,180,181,183,198,232,245,247,265,266,270,271,273,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,302,303,306,310,312,317,420,424,602,764],$VI1=[2,162],$VJ1=[1,281],$VK1=[10,74,78,306,310,505,602,764],$VL1=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,193,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,297,300,302,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,343,344,356,368,369,370,373,374,386,389,396,400,401,402,403,404,405,406,408,409,417,418,420,424,426,433,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,514,515,516,517,602,764],$VM1=[2,4,5,10,53,72,89,124,146,156,189,266,267,290,306,335,338,339,396,400,401,404,406,408,409,417,418,434,436,437,439,440,441,442,443,447,448,451,452,505,507,508,517,602,764],$VN1=[1,562],$VO1=[1,564],$VP1=[2,503],$VQ1=[1,569],$VR1=[1,580],$VS1=[1,583],$VT1=[1,584],$VU1=[10,78,89,132,137,146,189,296,306,310,470,602,764],$VV1=[10,74,306,310,602,764],$VW1=[2,567],$VX1=[1,602],$VY1=[2,4,5,156],$VZ1=[1,640],$V_1=[1,612],$V$1=[1,646],$V02=[1,647],$V12=[1,620],$V22=[1,631],$V32=[1,618],$V42=[1,626],$V52=[1,619],$V62=[1,627],$V72=[1,629],$V82=[1,621],$V92=[1,622],$Va2=[1,641],$Vb2=[1,638],$Vc2=[1,639],$Vd2=[1,615],$Ve2=[1,617],$Vf2=[1,609],$Vg2=[1,610],$Vh2=[1,611],$Vi2=[1,613],$Vj2=[1,614],$Vk2=[1,616],$Vl2=[1,623],$Vm2=[1,624],$Vn2=[1,628],$Vo2=[1,630],$Vp2=[1,632],$Vq2=[1,633],$Vr2=[1,634],$Vs2=[1,635],$Vt2=[1,636],$Vu2=[1,642],$Vv2=[1,643],$Vw2=[1,644],$Vx2=[1,645],$Vy2=[2,287],$Vz2=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,297,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,343,356,368,369,373,374,396,400,401,404,406,408,409,417,418,420,424,426,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VA2=[2,359],$VB2=[1,668],$VC2=[1,678],$VD2=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,426,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VE2=[1,694],$VF2=[1,703],$VG2=[1,702],$VH2=[2,4,5,10,72,74,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,245,247,306,310,602,764],$VI2=[10,72,74,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,245,247,306,310,602,764],$VJ2=[2,202],$VK2=[1,725],$VL2=[10,72,78,93,98,118,128,162,168,169,183,232,245,247,306,310,602,764],$VM2=[2,163],$VN2=[1,728],$VO2=[2,4,5,112],$VP2=[1,741],$VQ2=[1,760],$VR2=[1,740],$VS2=[1,739],$VT2=[1,734],$VU2=[1,735],$VV2=[1,737],$VW2=[1,738],$VX2=[1,742],$VY2=[1,743],$VZ2=[1,744],$V_2=[1,745],$V$2=[1,746],$V03=[1,747],$V13=[1,748],$V23=[1,749],$V33=[1,750],$V43=[1,751],$V53=[1,752],$V63=[1,753],$V73=[1,754],$V83=[1,755],$V93=[1,756],$Va3=[1,757],$Vb3=[1,759],$Vc3=[1,761],$Vd3=[1,762],$Ve3=[1,763],$Vf3=[1,764],$Vg3=[1,765],$Vh3=[1,766],$Vi3=[1,767],$Vj3=[1,770],$Vk3=[1,771],$Vl3=[1,772],$Vm3=[1,773],$Vn3=[1,774],$Vo3=[1,775],$Vp3=[1,776],$Vq3=[1,777],$Vr3=[1,778],$Vs3=[1,779],$Vt3=[1,780],$Vu3=[1,781],$Vv3=[74,89,189],$Vw3=[10,74,78,154,187,230,297,306,310,343,356,368,369,373,374,602,764],$Vx3=[1,798],$Vy3=[10,74,78,300,306,310,602,764],$Vz3=[1,799],$VA3=[1,805],$VB3=[1,806],$VC3=[1,810],$VD3=[10,74,78,306,310,602,764],$VE3=[2,4,5,77,131,132,137,143,145,149,152,154,156,179,180,181,265,266,270,271,273,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,302,303,312,317,420,424],$VF3=[10,72,78,93,98,107,118,128,162,168,169,183,198,232,245,247,306,310,602,764],$VG3=[2,4,5,10,72,77,78,93,98,107,118,128,131,132,137,143,145,149,152,154,156,162,164,168,169,179,180,181,183,185,187,195,198,232,245,247,265,266,270,271,273,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,302,303,306,310,312,317,420,424,602,764],$VH3=[2,4,5,132,296],$VI3=[1,844],$VJ3=[10,74,76,78,306,310,602,764],$VK3=[2,738],$VL3=[10,74,76,78,132,139,141,145,152,306,310,420,424,602,764],$VM3=[2,1161],$VN3=[10,74,76,78,139,141,145,152,306,310,420,424,602,764],$VO3=[10,74,76,78,139,141,145,306,310,420,424,602,764],$VP3=[10,74,78,139,141,306,310,602,764],$VQ3=[10,78,89,132,146,189,296,306,310,470,602,764],$VR3=[335,338,339],$VS3=[2,764],$VT3=[1,869],$VU3=[1,870],$VV3=[1,871],$VW3=[1,872],$VX3=[1,881],$VY3=[1,880],$VZ3=[164,166,334],$V_3=[2,444],$V$3=[1,936],$V04=[2,4,5,77,131,156,290,291,292,293],$V14=[1,951],$V24=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,134,135,137,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,313,314,315,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$V34=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,312,313,314,315,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$V44=[2,375],$V54=[1,958],$V64=[306,308,310],$V74=[74,300],$V84=[74,300,426],$V94=[1,965],$Va4=[2,4,5,10,53,72,74,76,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$Vb4=[74,426],$Vc4=[1,978],$Vd4=[1,977],$Ve4=[1,984],$Vf4=[10,72,78,93,98,118,128,162,168,169,232,245,247,306,310,602,764],$Vg4=[1,1010],$Vh4=[10,72,78,306,310,602,764],$Vi4=[1,1016],$Vj4=[1,1017],$Vk4=[1,1018],$Vl4=[2,4,5,10,72,74,76,77,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,198,280,281,282,283,284,285,286,287,288,306,310,420,424,602,764],$Vm4=[1,1068],$Vn4=[1,1067],$Vo4=[1,1081],$Vp4=[1,1080],$Vq4=[1,1088],$Vr4=[10,72,74,78,93,98,107,118,128,162,168,169,183,198,232,245,247,306,310,602,764],$Vs4=[1,1119],$Vt4=[10,78,89,146,189,306,310,470,602,764],$Vu4=[1,1139],$Vv4=[1,1138],$Vw4=[1,1137],$Vx4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,297,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,343,356,368,369,373,374,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$Vy4=[1,1153],$Vz4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,313,314,315,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VA4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,313,315,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VB4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,313,314,315,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VC4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,124,128,129,130,131,132,134,135,137,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,313,314,315,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VD4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,314,320,321,322,323,324,325,326,330,331,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VE4=[2,406],$VF4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,107,118,122,128,129,130,131,132,134,135,137,143,145,146,148,149,150,152,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,314,330,331,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VG4=[2,285],$VH4=[2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,426,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$VI4=[10,78,306,310,602,764],$VJ4=[1,1189],$VK4=[10,77,78,143,145,152,181,302,306,310,420,424,602,764],$VL4=[10,74,78,306,308,310,464,602,764],$VM4=[1,1200],$VN4=[10,72,78,118,128,162,168,169,232,245,247,306,310,602,764],$VO4=[10,72,74,78,93,98,118,128,162,168,169,183,198,232,245,247,306,310,602,764],$VP4=[2,4,5,72,76,77,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,185,187,280,281,282,283,284,285,286,287,288,420,424],$VQ4=[2,4,5,72,74,76,77,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,185,187,280,281,282,283,284,285,286,287,288,420,424],$VR4=[2,1085],$VS4=[2,4,5,72,74,76,77,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,185,187,280,281,282,283,284,285,286,287,288,420,424],$VT4=[1,1252],$VU4=[10,74,78,128,306,308,310,464,602,764],$VV4=[115,116,124],$VW4=[2,584],$VX4=[1,1280],$VY4=[76,139],$VZ4=[2,724],$V_4=[1,1297],$V$4=[1,1298],$V05=[2,4,5,10,53,72,76,89,124,146,156,189,230,266,267,290,306,310,335,338,339,396,400,401,404,406,408,409,417,418,434,436,437,439,440,441,442,443,447,448,451,452,505,507,508,517,602,764],$V15=[2,330],$V25=[1,1322],$V35=[1,1336],$V45=[1,1338],$V55=[2,487],$V65=[74,78],$V75=[10,306,308,310,464,602,764],$V85=[10,72,78,118,162,168,169,232,245,247,306,310,602,764],$V95=[1,1354],$Va5=[1,1358],$Vb5=[1,1359],$Vc5=[1,1361],$Vd5=[1,1362],$Ve5=[1,1363],$Vf5=[1,1364],$Vg5=[1,1365],$Vh5=[1,1366],$Vi5=[1,1367],$Vj5=[1,1368],$Vk5=[10,72,74,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,232,245,247,306,310,602,764],$Vl5=[1,1393],$Vm5=[10,72,78,118,162,168,169,245,247,306,310,602,764],$Vn5=[10,72,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,232,245,247,306,310,602,764],$Vo5=[1,1490],$Vp5=[1,1492],$Vq5=[2,4,5,77,143,145,152,156,181,290,291,292,293,302,420,424],$Vr5=[1,1506],$Vs5=[10,72,74,78,162,168,169,245,247,306,310,602,764],$Vt5=[1,1524],$Vu5=[1,1526],$Vv5=[1,1527],$Vw5=[1,1523],$Vx5=[1,1522],$Vy5=[1,1521],$Vz5=[1,1528],$VA5=[1,1518],$VB5=[1,1519],$VC5=[1,1520],$VD5=[1,1545],$VE5=[2,4,5,10,53,72,89,124,146,156,189,266,267,290,306,310,335,338,339,396,400,401,404,406,408,409,417,418,434,436,437,439,440,441,442,443,447,448,451,452,505,507,508,517,602,764],$VF5=[1,1556],$VG5=[1,1564],$VH5=[1,1563],$VI5=[10,72,78,162,168,169,245,247,306,310,602,764],$VJ5=[10,72,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,245,247,306,310,602,764],$VK5=[2,4,5,10,72,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,245,247,306,310,602,764],$VL5=[1,1621],$VM5=[1,1623],$VN5=[1,1620],$VO5=[1,1622],$VP5=[187,193,368,369,370,373],$VQ5=[2,515],$VR5=[1,1628],$VS5=[1,1647],$VT5=[10,72,78,162,168,169,306,310,602,764],$VU5=[1,1657],$VV5=[1,1658],$VW5=[1,1659],$VX5=[1,1678],$VY5=[4,10,243,306,310,343,356,602,764],$VZ5=[1,1726],$V_5=[10,72,74,78,118,162,168,169,239,245,247,306,310,602,764],$V$5=[2,4,5,77],$V06=[1,1820],$V16=[1,1832],$V26=[1,1851],$V36=[10,72,78,162,168,169,306,310,415,602,764],$V46=[10,74,78,230,306,310,602,764];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"Literal\":3,\"LITERAL\":4,\"BRALITERAL\":5,\"NonReserved\":6,\"LiteralWithSpaces\":7,\"main\":8,\"Statements\":9,\"EOF\":10,\"Statements_group0\":11,\"AStatement\":12,\"ExplainStatement\":13,\"EXPLAIN\":14,\"QUERY\":15,\"PLAN\":16,\"Statement\":17,\"AlterTable\":18,\"AttachDatabase\":19,\"Call\":20,\"CreateDatabase\":21,\"CreateIndex\":22,\"CreateGraph\":23,\"CreateTable\":24,\"CreateView\":25,\"CreateEdge\":26,\"CreateVertex\":27,\"Declare\":28,\"Delete\":29,\"DetachDatabase\":30,\"DropDatabase\":31,\"DropIndex\":32,\"DropTable\":33,\"DropView\":34,\"If\":35,\"Insert\":36,\"Merge\":37,\"Reindex\":38,\"RenameTable\":39,\"Select\":40,\"ShowCreateTable\":41,\"ShowColumns\":42,\"ShowDatabases\":43,\"ShowIndex\":44,\"ShowTables\":45,\"TruncateTable\":46,\"WithSelect\":47,\"CreateTrigger\":48,\"DropTrigger\":49,\"BeginTransaction\":50,\"CommitTransaction\":51,\"RollbackTransaction\":52,\"EndTransaction\":53,\"UseDatabase\":54,\"Update\":55,\"JavaScript\":56,\"Source\":57,\"Assert\":58,\"While\":59,\"Continue\":60,\"Break\":61,\"BeginEnd\":62,\"Print\":63,\"Require\":64,\"SetVariable\":65,\"ExpressionStatement\":66,\"AddRule\":67,\"Query\":68,\"Echo\":69,\"CreateFunction\":70,\"CreateAggregate\":71,\"WITH\":72,\"WithTablesList\":73,\"COMMA\":74,\"WithTable\":75,\"AS\":76,\"LPAR\":77,\"RPAR\":78,\"SelectClause\":79,\"Select_option0\":80,\"IntoClause\":81,\"FromClause\":82,\"Select_option1\":83,\"WhereClause\":84,\"GroupClause\":85,\"OrderClause\":86,\"LimitClause\":87,\"UnionClause\":88,\"SEARCH\":89,\"Select_repetition0\":90,\"Select_option2\":91,\"PivotClause\":92,\"PIVOT\":93,\"Expression\":94,\"FOR\":95,\"PivotClause_option0\":96,\"PivotClause_option1\":97,\"UNPIVOT\":98,\"IN\":99,\"ColumnsList\":100,\"PivotClause_option2\":101,\"PivotClause2\":102,\"AsList\":103,\"AsLiteral\":104,\"AsPart\":105,\"RemoveClause\":106,\"REMOVE\":107,\"RemoveClause_option0\":108,\"RemoveColumnsList\":109,\"RemoveColumn\":110,\"Column\":111,\"LIKE\":112,\"StringValue\":113,\"ArrowDot\":114,\"ARROW\":115,\"DOT\":116,\"SearchSelector\":117,\"ORDER\":118,\"BY\":119,\"OrderExpressionsList\":120,\"SearchSelector_option0\":121,\"DOTDOT\":122,\"CARET\":123,\"EQ\":124,\"SearchSelector_repetition_plus0\":125,\"SearchSelector_repetition_plus1\":126,\"SearchSelector_option1\":127,\"WHERE\":128,\"OF\":129,\"CLASS\":130,\"NUMBER\":131,\"STRING\":132,\"SLASH\":133,\"VERTEX\":134,\"EDGE\":135,\"EXCLAMATION\":136,\"SHARP\":137,\"MODULO\":138,\"GT\":139,\"LT\":140,\"GTGT\":141,\"LTLT\":142,\"DOLLAR\":143,\"Json\":144,\"AT\":145,\"SET\":146,\"SetColumnsList\":147,\"TO\":148,\"VALUE\":149,\"ROW\":150,\"ExprList\":151,\"COLON\":152,\"PlusStar\":153,\"NOT\":154,\"SearchSelector_repetition2\":155,\"IF\":156,\"SearchSelector_repetition3\":157,\"Aggregator\":158,\"SearchSelector_repetition4\":159,\"SearchSelector_group0\":160,\"SearchSelector_repetition5\":161,\"UNION\":162,\"SearchSelectorList\":163,\"ALL\":164,\"SearchSelector_repetition6\":165,\"ANY\":166,\"SearchSelector_repetition7\":167,\"INTERSECT\":168,\"EXCEPT\":169,\"AND\":170,\"OR\":171,\"PATH\":172,\"RETURN\":173,\"ResultColumns\":174,\"REPEAT\":175,\"SearchSelector_repetition8\":176,\"SearchSelectorList_repetition0\":177,\"SearchSelectorList_repetition1\":178,\"PLUS\":179,\"STAR\":180,\"QUESTION\":181,\"SearchFrom\":182,\"FROM\":183,\"SelectModifier\":184,\"DISTINCT\":185,\"TopClause\":186,\"UNIQUE\":187,\"SelectClause_option0\":188,\"SELECT\":189,\"COLUMN\":190,\"MATRIX\":191,\"TEXTSTRING\":192,\"INDEX\":193,\"RECORDSET\":194,\"TOP\":195,\"NumValue\":196,\"TopClause_option0\":197,\"INTO\":198,\"Table\":199,\"FuncValue\":200,\"ParamValue\":201,\"VarValue\":202,\"FromTablesList\":203,\"JoinTablesList\":204,\"ApplyClause\":205,\"CROSS\":206,\"APPLY\":207,\"OUTER\":208,\"FromTable\":209,\"FromTable_option0\":210,\"FromTable_option1\":211,\"INDEXED\":212,\"INSERTED\":213,\"FromString\":214,\"JoinTable\":215,\"JoinMode\":216,\"JoinTableAs\":217,\"OnClause\":218,\"JoinTableAs_option0\":219,\"JoinTableAs_option1\":220,\"JoinModeMode\":221,\"NATURAL\":222,\"JOIN\":223,\"INNER\":224,\"LEFT\":225,\"RIGHT\":226,\"FULL\":227,\"SEMI\":228,\"ANTI\":229,\"ON\":230,\"USING\":231,\"GROUP\":232,\"GroupExpressionsList\":233,\"HavingClause\":234,\"GroupExpression\":235,\"GROUPING\":236,\"ROLLUP\":237,\"CUBE\":238,\"HAVING\":239,\"CORRESPONDING\":240,\"OrderExpression\":241,\"DIRECTION\":242,\"COLLATE\":243,\"NOCASE\":244,\"LIMIT\":245,\"OffsetClause\":246,\"OFFSET\":247,\"LimitClause_option0\":248,\"FETCH\":249,\"LimitClause_option1\":250,\"LimitClause_option2\":251,\"LimitClause_option3\":252,\"ResultColumn\":253,\"Star\":254,\"AggrValue\":255,\"Op\":256,\"LogicValue\":257,\"NullValue\":258,\"ExistsValue\":259,\"CaseValue\":260,\"CastClause\":261,\"ArrayValue\":262,\"NewClause\":263,\"Expression_group0\":264,\"CURRENT_TIMESTAMP\":265,\"JAVASCRIPT\":266,\"CREATE\":267,\"FUNCTION\":268,\"AGGREGATE\":269,\"NEW\":270,\"CAST\":271,\"ColumnType\":272,\"CONVERT\":273,\"PrimitiveValue\":274,\"OverClause\":275,\"OVER\":276,\"OverPartitionClause\":277,\"OverOrderByClause\":278,\"PARTITION\":279,\"SUM\":280,\"COUNT\":281,\"MIN\":282,\"MAX\":283,\"AVG\":284,\"FIRST\":285,\"LAST\":286,\"AGGR\":287,\"ARRAY\":288,\"FuncValue_option0\":289,\"REPLACE\":290,\"DATEADD\":291,\"DATEDIFF\":292,\"INTERVAL\":293,\"TRUE\":294,\"FALSE\":295,\"NSTRING\":296,\"NULL\":297,\"EXISTS\":298,\"ARRAYLBRA\":299,\"RBRA\":300,\"ParamValue_group0\":301,\"BRAQUESTION\":302,\"CASE\":303,\"WhensList\":304,\"ElseClause\":305,\"END\":306,\"When\":307,\"WHEN\":308,\"THEN\":309,\"ELSE\":310,\"REGEXP\":311,\"TILDA\":312,\"GLOB\":313,\"ESCAPE\":314,\"NOT_LIKE\":315,\"BARBAR\":316,\"MINUS\":317,\"AMPERSAND\":318,\"BAR\":319,\"GE\":320,\"LE\":321,\"EQEQ\":322,\"EQEQEQ\":323,\"NE\":324,\"NEEQEQ\":325,\"NEEQEQEQ\":326,\"CondOp\":327,\"AllSome\":328,\"ColFunc\":329,\"BETWEEN\":330,\"NOT_BETWEEN\":331,\"IS\":332,\"DOUBLECOLON\":333,\"SOME\":334,\"UPDATE\":335,\"SetColumn\":336,\"SetColumn_group0\":337,\"DELETE\":338,\"INSERT\":339,\"Into\":340,\"Values\":341,\"ValuesListsList\":342,\"DEFAULT\":343,\"VALUES\":344,\"ValuesList\":345,\"Value\":346,\"DateValue\":347,\"TemporaryClause\":348,\"TableClass\":349,\"IfNotExists\":350,\"CreateTableDefClause\":351,\"CreateTableOptionsClause\":352,\"TABLE\":353,\"CreateTableOptions\":354,\"CreateTableOption\":355,\"IDENTITY\":356,\"TEMP\":357,\"ColumnDefsList\":358,\"ConstraintsList\":359,\"Constraint\":360,\"ConstraintName\":361,\"PrimaryKey\":362,\"ForeignKey\":363,\"UniqueKey\":364,\"IndexKey\":365,\"Check\":366,\"CONSTRAINT\":367,\"CHECK\":368,\"PRIMARY\":369,\"KEY\":370,\"PrimaryKey_option0\":371,\"ColsList\":372,\"FOREIGN\":373,\"REFERENCES\":374,\"ForeignKey_option0\":375,\"OnForeignKeyClause\":376,\"ParColsList\":377,\"OnDeleteClause\":378,\"OnUpdateClause\":379,\"NO\":380,\"ACTION\":381,\"UniqueKey_option0\":382,\"UniqueKey_option1\":383,\"ColumnDef\":384,\"ColumnConstraintsClause\":385,\"ColumnConstraints\":386,\"SingularColumnType\":387,\"NumberMax\":388,\"ENUM\":389,\"MAXNUM\":390,\"ColumnConstraintsList\":391,\"ColumnConstraint\":392,\"ParLiteral\":393,\"ColumnConstraint_option0\":394,\"ColumnConstraint_option1\":395,\"DROP\":396,\"DropTable_group0\":397,\"IfExists\":398,\"TablesList\":399,\"ALTER\":400,\"RENAME\":401,\"ADD\":402,\"MODIFY\":403,\"ATTACH\":404,\"DATABASE\":405,\"DETACH\":406,\"AsClause\":407,\"USE\":408,\"SHOW\":409,\"VIEW\":410,\"CreateView_option0\":411,\"CreateView_option1\":412,\"SubqueryRestriction\":413,\"READ\":414,\"ONLY\":415,\"OPTION\":416,\"SOURCE\":417,\"ASSERT\":418,\"JsonObject\":419,\"ATLBRA\":420,\"JsonArray\":421,\"JsonValue\":422,\"JsonPrimitiveValue\":423,\"LCUR\":424,\"JsonPropertiesList\":425,\"RCUR\":426,\"JsonElementsList\":427,\"JsonProperty\":428,\"OnOff\":429,\"SetPropsList\":430,\"AtDollar\":431,\"SetProp\":432,\"OFF\":433,\"COMMIT\":434,\"TRANSACTION\":435,\"ROLLBACK\":436,\"BEGIN\":437,\"ElseStatement\":438,\"WHILE\":439,\"CONTINUE\":440,\"BREAK\":441,\"PRINT\":442,\"REQUIRE\":443,\"StringValuesList\":444,\"PluginsList\":445,\"Plugin\":446,\"ECHO\":447,\"DECLARE\":448,\"DeclaresList\":449,\"DeclareItem\":450,\"TRUNCATE\":451,\"MERGE\":452,\"MergeInto\":453,\"MergeUsing\":454,\"MergeOn\":455,\"MergeMatchedList\":456,\"OutputClause\":457,\"MergeMatched\":458,\"MergeNotMatched\":459,\"MATCHED\":460,\"MergeMatchedAction\":461,\"MergeNotMatchedAction\":462,\"TARGET\":463,\"OUTPUT\":464,\"CreateVertex_option0\":465,\"CreateVertex_option1\":466,\"CreateVertex_option2\":467,\"CreateVertexSet\":468,\"SharpValue\":469,\"CONTENT\":470,\"CreateEdge_option0\":471,\"GRAPH\":472,\"GraphList\":473,\"GraphVertexEdge\":474,\"GraphElement\":475,\"GraphVertexEdge_option0\":476,\"GraphVertexEdge_option1\":477,\"GraphElementVar\":478,\"GraphVertexEdge_option2\":479,\"GraphVertexEdge_option3\":480,\"GraphVertexEdge_option4\":481,\"GraphVar\":482,\"GraphAsClause\":483,\"GraphAtClause\":484,\"GraphElement2\":485,\"GraphElement2_option0\":486,\"GraphElement2_option1\":487,\"GraphElement2_option2\":488,\"GraphElement2_option3\":489,\"GraphElement_option0\":490,\"GraphElement_option1\":491,\"GraphElement_option2\":492,\"SharpLiteral\":493,\"GraphElement_option3\":494,\"GraphElement_option4\":495,\"GraphElement_option5\":496,\"ColonLiteral\":497,\"DeleteVertex\":498,\"DeleteVertex_option0\":499,\"DeleteEdge\":500,\"DeleteEdge_option0\":501,\"DeleteEdge_option1\":502,\"DeleteEdge_option2\":503,\"Term\":504,\"COLONDASH\":505,\"TermsList\":506,\"QUESTIONDASH\":507,\"CALL\":508,\"TRIGGER\":509,\"BeforeAfter\":510,\"InsertDeleteUpdate\":511,\"CreateTrigger_option0\":512,\"CreateTrigger_option1\":513,\"BEFORE\":514,\"AFTER\":515,\"INSTEAD\":516,\"REINDEX\":517,\"A\":518,\"ABSENT\":519,\"ABSOLUTE\":520,\"ACCORDING\":521,\"ADA\":522,\"ADMIN\":523,\"ALWAYS\":524,\"ASC\":525,\"ASSERTION\":526,\"ASSIGNMENT\":527,\"ATTRIBUTE\":528,\"ATTRIBUTES\":529,\"BASE64\":530,\"BERNOULLI\":531,\"BLOCKED\":532,\"BOM\":533,\"BREADTH\":534,\"C\":535,\"CASCADE\":536,\"CATALOG\":537,\"CATALOG_NAME\":538,\"CHAIN\":539,\"CHARACTERISTICS\":540,\"CHARACTERS\":541,\"CHARACTER_SET_CATALOG\":542,\"CHARACTER_SET_NAME\":543,\"CHARACTER_SET_SCHEMA\":544,\"CLASS_ORIGIN\":545,\"COBOL\":546,\"COLLATION\":547,\"COLLATION_CATALOG\":548,\"COLLATION_NAME\":549,\"COLLATION_SCHEMA\":550,\"COLUMNS\":551,\"COLUMN_NAME\":552,\"COMMAND_FUNCTION\":553,\"COMMAND_FUNCTION_CODE\":554,\"COMMITTED\":555,\"CONDITION_NUMBER\":556,\"CONNECTION\":557,\"CONNECTION_NAME\":558,\"CONSTRAINTS\":559,\"CONSTRAINT_CATALOG\":560,\"CONSTRAINT_NAME\":561,\"CONSTRAINT_SCHEMA\":562,\"CONSTRUCTOR\":563,\"CONTROL\":564,\"CURSOR_NAME\":565,\"DATA\":566,\"DATETIME_INTERVAL_CODE\":567,\"DATETIME_INTERVAL_PRECISION\":568,\"DB\":569,\"DEFAULTS\":570,\"DEFERRABLE\":571,\"DEFERRED\":572,\"DEFINED\":573,\"DEFINER\":574,\"DEGREE\":575,\"DEPTH\":576,\"DERIVED\":577,\"DESC\":578,\"DESCRIPTOR\":579,\"DIAGNOSTICS\":580,\"DISPATCH\":581,\"DOCUMENT\":582,\"DOMAIN\":583,\"DYNAMIC_FUNCTION\":584,\"DYNAMIC_FUNCTION_CODE\":585,\"EMPTY\":586,\"ENCODING\":587,\"ENFORCED\":588,\"EXCLUDE\":589,\"EXCLUDING\":590,\"EXPRESSION\":591,\"FILE\":592,\"FINAL\":593,\"FLAG\":594,\"FOLLOWING\":595,\"FORTRAN\":596,\"FOUND\":597,\"FS\":598,\"G\":599,\"GENERAL\":600,\"GENERATED\":601,\"GO\":602,\"GOTO\":603,\"GRANTED\":604,\"HEX\":605,\"HIERARCHY\":606,\"ID\":607,\"IGNORE\":608,\"IMMEDIATE\":609,\"IMMEDIATELY\":610,\"IMPLEMENTATION\":611,\"INCLUDING\":612,\"INCREMENT\":613,\"INDENT\":614,\"INITIALLY\":615,\"INPUT\":616,\"INSTANCE\":617,\"INSTANTIABLE\":618,\"INTEGRITY\":619,\"INVOKER\":620,\"ISOLATION\":621,\"K\":622,\"KEY_MEMBER\":623,\"KEY_TYPE\":624,\"LENGTH\":625,\"LEVEL\":626,\"LIBRARY\":627,\"LINK\":628,\"LOCATION\":629,\"LOCATOR\":630,\"M\":631,\"MAP\":632,\"MAPPING\":633,\"MAXVALUE\":634,\"MESSAGE_LENGTH\":635,\"MESSAGE_OCTET_LENGTH\":636,\"MESSAGE_TEXT\":637,\"MINVALUE\":638,\"MORE\":639,\"MUMPS\":640,\"NAME\":641,\"NAMES\":642,\"NAMESPACE\":643,\"NESTING\":644,\"NEXT\":645,\"NFC\":646,\"NFD\":647,\"NFKC\":648,\"NFKD\":649,\"NIL\":650,\"NORMALIZED\":651,\"NULLABLE\":652,\"NULLS\":653,\"OBJECT\":654,\"OCTETS\":655,\"OPTIONS\":656,\"ORDERING\":657,\"ORDINALITY\":658,\"OTHERS\":659,\"OVERRIDING\":660,\"P\":661,\"PAD\":662,\"PARAMETER_MODE\":663,\"PARAMETER_NAME\":664,\"PARAMETER_ORDINAL_POSITION\":665,\"PARAMETER_SPECIFIC_CATALOG\":666,\"PARAMETER_SPECIFIC_NAME\":667,\"PARAMETER_SPECIFIC_SCHEMA\":668,\"PARTIAL\":669,\"PASCAL\":670,\"PASSING\":671,\"PASSTHROUGH\":672,\"PERMISSION\":673,\"PLACING\":674,\"PLI\":675,\"PRECEDING\":676,\"PRESERVE\":677,\"PRIOR\":678,\"PRIVILEGES\":679,\"PUBLIC\":680,\"RECOVERY\":681,\"RELATIVE\":682,\"REPEATABLE\":683,\"REQUIRING\":684,\"RESPECT\":685,\"RESTART\":686,\"RESTORE\":687,\"RESTRICT\":688,\"RETURNED_CARDINALITY\":689,\"RETURNED_LENGTH\":690,\"RETURNED_OCTET_LENGTH\":691,\"RETURNED_SQLSTATE\":692,\"RETURNING\":693,\"ROLE\":694,\"ROUTINE\":695,\"ROUTINE_CATALOG\":696,\"ROUTINE_NAME\":697,\"ROUTINE_SCHEMA\":698,\"ROW_COUNT\":699,\"SCALE\":700,\"SCHEMA\":701,\"SCHEMA_NAME\":702,\"SCOPE_CATALOG\":703,\"SCOPE_NAME\":704,\"SCOPE_SCHEMA\":705,\"SECTION\":706,\"SECURITY\":707,\"SELECTIVE\":708,\"SELF\":709,\"SEQUENCE\":710,\"SERIALIZABLE\":711,\"SERVER\":712,\"SERVER_NAME\":713,\"SESSION\":714,\"SETS\":715,\"SIMPLE\":716,\"SIZE\":717,\"SPACE\":718,\"SPECIFIC_NAME\":719,\"STANDALONE\":720,\"STATE\":721,\"STATEMENT\":722,\"STRIP\":723,\"STRUCTURE\":724,\"STYLE\":725,\"SUBCLASS_ORIGIN\":726,\"T\":727,\"TABLE_NAME\":728,\"TEMPORARY\":729,\"TIES\":730,\"TOKEN\":731,\"TOP_LEVEL_COUNT\":732,\"TRANSACTIONS_COMMITTED\":733,\"TRANSACTIONS_ROLLED_BACK\":734,\"TRANSACTION_ACTIVE\":735,\"TRANSFORM\":736,\"TRANSFORMS\":737,\"TRIGGER_CATALOG\":738,\"TRIGGER_NAME\":739,\"TRIGGER_SCHEMA\":740,\"TYPE\":741,\"UNBOUNDED\":742,\"UNCOMMITTED\":743,\"UNDER\":744,\"UNLINK\":745,\"UNNAMED\":746,\"UNTYPED\":747,\"URI\":748,\"USAGE\":749,\"USER_DEFINED_TYPE_CATALOG\":750,\"USER_DEFINED_TYPE_CODE\":751,\"USER_DEFINED_TYPE_NAME\":752,\"USER_DEFINED_TYPE_SCHEMA\":753,\"VALID\":754,\"VERSION\":755,\"WHITESPACE\":756,\"WORK\":757,\"WRAPPER\":758,\"WRITE\":759,\"XMLDECLARATION\":760,\"XMLSCHEMA\":761,\"YES\":762,\"ZONE\":763,\"SEMICOLON\":764,\"PERCENT\":765,\"ROWS\":766,\"FuncValue_option0_group0\":767,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"LITERAL\",5:\"BRALITERAL\",10:\"EOF\",14:\"EXPLAIN\",15:\"QUERY\",16:\"PLAN\",53:\"EndTransaction\",72:\"WITH\",74:\"COMMA\",76:\"AS\",77:\"LPAR\",78:\"RPAR\",89:\"SEARCH\",93:\"PIVOT\",95:\"FOR\",98:\"UNPIVOT\",99:\"IN\",107:\"REMOVE\",112:\"LIKE\",115:\"ARROW\",116:\"DOT\",118:\"ORDER\",119:\"BY\",122:\"DOTDOT\",123:\"CARET\",124:\"EQ\",128:\"WHERE\",129:\"OF\",130:\"CLASS\",131:\"NUMBER\",132:\"STRING\",133:\"SLASH\",134:\"VERTEX\",135:\"EDGE\",136:\"EXCLAMATION\",137:\"SHARP\",138:\"MODULO\",139:\"GT\",140:\"LT\",141:\"GTGT\",142:\"LTLT\",143:\"DOLLAR\",145:\"AT\",146:\"SET\",148:\"TO\",149:\"VALUE\",150:\"ROW\",152:\"COLON\",154:\"NOT\",156:\"IF\",162:\"UNION\",164:\"ALL\",166:\"ANY\",168:\"INTERSECT\",169:\"EXCEPT\",170:\"AND\",171:\"OR\",172:\"PATH\",173:\"RETURN\",175:\"REPEAT\",179:\"PLUS\",180:\"STAR\",181:\"QUESTION\",183:\"FROM\",185:\"DISTINCT\",187:\"UNIQUE\",189:\"SELECT\",190:\"COLUMN\",191:\"MATRIX\",192:\"TEXTSTRING\",193:\"INDEX\",194:\"RECORDSET\",195:\"TOP\",198:\"INTO\",206:\"CROSS\",207:\"APPLY\",208:\"OUTER\",212:\"INDEXED\",213:\"INSERTED\",222:\"NATURAL\",223:\"JOIN\",224:\"INNER\",225:\"LEFT\",226:\"RIGHT\",227:\"FULL\",228:\"SEMI\",229:\"ANTI\",230:\"ON\",231:\"USING\",232:\"GROUP\",236:\"GROUPING\",237:\"ROLLUP\",238:\"CUBE\",239:\"HAVING\",240:\"CORRESPONDING\",242:\"DIRECTION\",243:\"COLLATE\",244:\"NOCASE\",245:\"LIMIT\",247:\"OFFSET\",249:\"FETCH\",265:\"CURRENT_TIMESTAMP\",266:\"JAVASCRIPT\",267:\"CREATE\",268:\"FUNCTION\",269:\"AGGREGATE\",270:\"NEW\",271:\"CAST\",273:\"CONVERT\",276:\"OVER\",279:\"PARTITION\",280:\"SUM\",281:\"COUNT\",282:\"MIN\",283:\"MAX\",284:\"AVG\",285:\"FIRST\",286:\"LAST\",287:\"AGGR\",288:\"ARRAY\",290:\"REPLACE\",291:\"DATEADD\",292:\"DATEDIFF\",293:\"INTERVAL\",294:\"TRUE\",295:\"FALSE\",296:\"NSTRING\",297:\"NULL\",298:\"EXISTS\",299:\"ARRAYLBRA\",300:\"RBRA\",302:\"BRAQUESTION\",303:\"CASE\",306:\"END\",308:\"WHEN\",309:\"THEN\",310:\"ELSE\",311:\"REGEXP\",312:\"TILDA\",313:\"GLOB\",314:\"ESCAPE\",315:\"NOT_LIKE\",316:\"BARBAR\",317:\"MINUS\",318:\"AMPERSAND\",319:\"BAR\",320:\"GE\",321:\"LE\",322:\"EQEQ\",323:\"EQEQEQ\",324:\"NE\",325:\"NEEQEQ\",326:\"NEEQEQEQ\",330:\"BETWEEN\",331:\"NOT_BETWEEN\",332:\"IS\",333:\"DOUBLECOLON\",334:\"SOME\",335:\"UPDATE\",338:\"DELETE\",339:\"INSERT\",343:\"DEFAULT\",344:\"VALUES\",347:\"DateValue\",353:\"TABLE\",356:\"IDENTITY\",357:\"TEMP\",367:\"CONSTRAINT\",368:\"CHECK\",369:\"PRIMARY\",370:\"KEY\",373:\"FOREIGN\",374:\"REFERENCES\",380:\"NO\",381:\"ACTION\",386:\"ColumnConstraints\",389:\"ENUM\",390:\"MAXNUM\",396:\"DROP\",400:\"ALTER\",401:\"RENAME\",402:\"ADD\",403:\"MODIFY\",404:\"ATTACH\",405:\"DATABASE\",406:\"DETACH\",408:\"USE\",409:\"SHOW\",410:\"VIEW\",414:\"READ\",415:\"ONLY\",416:\"OPTION\",417:\"SOURCE\",418:\"ASSERT\",420:\"ATLBRA\",424:\"LCUR\",426:\"RCUR\",433:\"OFF\",434:\"COMMIT\",435:\"TRANSACTION\",436:\"ROLLBACK\",437:\"BEGIN\",439:\"WHILE\",440:\"CONTINUE\",441:\"BREAK\",442:\"PRINT\",443:\"REQUIRE\",447:\"ECHO\",448:\"DECLARE\",451:\"TRUNCATE\",452:\"MERGE\",460:\"MATCHED\",463:\"TARGET\",464:\"OUTPUT\",470:\"CONTENT\",472:\"GRAPH\",505:\"COLONDASH\",507:\"QUESTIONDASH\",508:\"CALL\",509:\"TRIGGER\",514:\"BEFORE\",515:\"AFTER\",516:\"INSTEAD\",517:\"REINDEX\",518:\"A\",519:\"ABSENT\",520:\"ABSOLUTE\",521:\"ACCORDING\",522:\"ADA\",523:\"ADMIN\",524:\"ALWAYS\",525:\"ASC\",526:\"ASSERTION\",527:\"ASSIGNMENT\",528:\"ATTRIBUTE\",529:\"ATTRIBUTES\",530:\"BASE64\",531:\"BERNOULLI\",532:\"BLOCKED\",533:\"BOM\",534:\"BREADTH\",535:\"C\",536:\"CASCADE\",537:\"CATALOG\",538:\"CATALOG_NAME\",539:\"CHAIN\",540:\"CHARACTERISTICS\",541:\"CHARACTERS\",542:\"CHARACTER_SET_CATALOG\",543:\"CHARACTER_SET_NAME\",544:\"CHARACTER_SET_SCHEMA\",545:\"CLASS_ORIGIN\",546:\"COBOL\",547:\"COLLATION\",548:\"COLLATION_CATALOG\",549:\"COLLATION_NAME\",550:\"COLLATION_SCHEMA\",551:\"COLUMNS\",552:\"COLUMN_NAME\",553:\"COMMAND_FUNCTION\",554:\"COMMAND_FUNCTION_CODE\",555:\"COMMITTED\",556:\"CONDITION_NUMBER\",557:\"CONNECTION\",558:\"CONNECTION_NAME\",559:\"CONSTRAINTS\",560:\"CONSTRAINT_CATALOG\",561:\"CONSTRAINT_NAME\",562:\"CONSTRAINT_SCHEMA\",563:\"CONSTRUCTOR\",564:\"CONTROL\",565:\"CURSOR_NAME\",566:\"DATA\",567:\"DATETIME_INTERVAL_CODE\",568:\"DATETIME_INTERVAL_PRECISION\",569:\"DB\",570:\"DEFAULTS\",571:\"DEFERRABLE\",572:\"DEFERRED\",573:\"DEFINED\",574:\"DEFINER\",575:\"DEGREE\",576:\"DEPTH\",577:\"DERIVED\",578:\"DESC\",579:\"DESCRIPTOR\",580:\"DIAGNOSTICS\",581:\"DISPATCH\",582:\"DOCUMENT\",583:\"DOMAIN\",584:\"DYNAMIC_FUNCTION\",585:\"DYNAMIC_FUNCTION_CODE\",586:\"EMPTY\",587:\"ENCODING\",588:\"ENFORCED\",589:\"EXCLUDE\",590:\"EXCLUDING\",591:\"EXPRESSION\",592:\"FILE\",593:\"FINAL\",594:\"FLAG\",595:\"FOLLOWING\",596:\"FORTRAN\",597:\"FOUND\",598:\"FS\",599:\"G\",600:\"GENERAL\",601:\"GENERATED\",602:\"GO\",603:\"GOTO\",604:\"GRANTED\",605:\"HEX\",606:\"HIERARCHY\",607:\"ID\",608:\"IGNORE\",609:\"IMMEDIATE\",610:\"IMMEDIATELY\",611:\"IMPLEMENTATION\",612:\"INCLUDING\",613:\"INCREMENT\",614:\"INDENT\",615:\"INITIALLY\",616:\"INPUT\",617:\"INSTANCE\",618:\"INSTANTIABLE\",619:\"INTEGRITY\",620:\"INVOKER\",621:\"ISOLATION\",622:\"K\",623:\"KEY_MEMBER\",624:\"KEY_TYPE\",625:\"LENGTH\",626:\"LEVEL\",627:\"LIBRARY\",628:\"LINK\",629:\"LOCATION\",630:\"LOCATOR\",631:\"M\",632:\"MAP\",633:\"MAPPING\",634:\"MAXVALUE\",635:\"MESSAGE_LENGTH\",636:\"MESSAGE_OCTET_LENGTH\",637:\"MESSAGE_TEXT\",638:\"MINVALUE\",639:\"MORE\",640:\"MUMPS\",641:\"NAME\",642:\"NAMES\",643:\"NAMESPACE\",644:\"NESTING\",645:\"NEXT\",646:\"NFC\",647:\"NFD\",648:\"NFKC\",649:\"NFKD\",650:\"NIL\",651:\"NORMALIZED\",652:\"NULLABLE\",653:\"NULLS\",654:\"OBJECT\",655:\"OCTETS\",656:\"OPTIONS\",657:\"ORDERING\",658:\"ORDINALITY\",659:\"OTHERS\",660:\"OVERRIDING\",661:\"P\",662:\"PAD\",663:\"PARAMETER_MODE\",664:\"PARAMETER_NAME\",665:\"PARAMETER_ORDINAL_POSITION\",666:\"PARAMETER_SPECIFIC_CATALOG\",667:\"PARAMETER_SPECIFIC_NAME\",668:\"PARAMETER_SPECIFIC_SCHEMA\",669:\"PARTIAL\",670:\"PASCAL\",671:\"PASSING\",672:\"PASSTHROUGH\",673:\"PERMISSION\",674:\"PLACING\",675:\"PLI\",676:\"PRECEDING\",677:\"PRESERVE\",678:\"PRIOR\",679:\"PRIVILEGES\",680:\"PUBLIC\",681:\"RECOVERY\",682:\"RELATIVE\",683:\"REPEATABLE\",684:\"REQUIRING\",685:\"RESPECT\",686:\"RESTART\",687:\"RESTORE\",688:\"RESTRICT\",689:\"RETURNED_CARDINALITY\",690:\"RETURNED_LENGTH\",691:\"RETURNED_OCTET_LENGTH\",692:\"RETURNED_SQLSTATE\",693:\"RETURNING\",694:\"ROLE\",695:\"ROUTINE\",696:\"ROUTINE_CATALOG\",697:\"ROUTINE_NAME\",698:\"ROUTINE_SCHEMA\",699:\"ROW_COUNT\",700:\"SCALE\",701:\"SCHEMA\",702:\"SCHEMA_NAME\",703:\"SCOPE_CATALOG\",704:\"SCOPE_NAME\",705:\"SCOPE_SCHEMA\",706:\"SECTION\",707:\"SECURITY\",708:\"SELECTIVE\",709:\"SELF\",710:\"SEQUENCE\",711:\"SERIALIZABLE\",712:\"SERVER\",713:\"SERVER_NAME\",714:\"SESSION\",715:\"SETS\",716:\"SIMPLE\",717:\"SIZE\",718:\"SPACE\",719:\"SPECIFIC_NAME\",720:\"STANDALONE\",721:\"STATE\",722:\"STATEMENT\",723:\"STRIP\",724:\"STRUCTURE\",725:\"STYLE\",726:\"SUBCLASS_ORIGIN\",727:\"T\",728:\"TABLE_NAME\",729:\"TEMPORARY\",730:\"TIES\",731:\"TOKEN\",732:\"TOP_LEVEL_COUNT\",733:\"TRANSACTIONS_COMMITTED\",734:\"TRANSACTIONS_ROLLED_BACK\",735:\"TRANSACTION_ACTIVE\",736:\"TRANSFORM\",737:\"TRANSFORMS\",738:\"TRIGGER_CATALOG\",739:\"TRIGGER_NAME\",740:\"TRIGGER_SCHEMA\",741:\"TYPE\",742:\"UNBOUNDED\",743:\"UNCOMMITTED\",744:\"UNDER\",745:\"UNLINK\",746:\"UNNAMED\",747:\"UNTYPED\",748:\"URI\",749:\"USAGE\",750:\"USER_DEFINED_TYPE_CATALOG\",751:\"USER_DEFINED_TYPE_CODE\",752:\"USER_DEFINED_TYPE_NAME\",753:\"USER_DEFINED_TYPE_SCHEMA\",754:\"VALID\",755:\"VERSION\",756:\"WHITESPACE\",757:\"WORK\",758:\"WRAPPER\",759:\"WRITE\",760:\"XMLDECLARATION\",761:\"XMLSCHEMA\",762:\"YES\",763:\"ZONE\",764:\"SEMICOLON\",765:\"PERCENT\",766:\"ROWS\"},\nproductions_: [0,[3,1],[3,1],[3,2],[7,1],[7,2],[8,2],[9,3],[9,1],[9,1],[13,2],[13,4],[12,1],[17,0],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[47,3],[73,3],[73,1],[75,5],[40,10],[40,4],[92,8],[92,11],[102,4],[104,2],[104,1],[103,3],[103,1],[105,1],[105,3],[106,3],[109,3],[109,1],[110,1],[110,2],[114,1],[114,1],[117,1],[117,5],[117,5],[117,1],[117,2],[117,1],[117,2],[117,2],[117,3],[117,4],[117,4],[117,4],[117,4],[117,4],[117,1],[117,1],[117,1],[117,1],[117,1],[117,1],[117,2],[117,2],[117,2],[117,1],[117,1],[117,1],[117,1],[117,1],[117,1],[117,2],[117,3],[117,4],[117,3],[117,1],[117,4],[117,2],[117,2],[117,4],[117,4],[117,4],[117,4],[117,4],[117,5],[117,4],[117,4],[117,4],[117,4],[117,4],[117,4],[117,4],[117,4],[117,6],[163,3],[163,1],[153,1],[153,1],[153,1],[182,2],[79,4],[79,4],[79,4],[79,3],[184,1],[184,2],[184,2],[184,2],[184,2],[184,2],[184,2],[184,2],[186,3],[186,4],[186,0],[81,0],[81,2],[81,2],[81,2],[81,2],[81,2],[82,2],[82,3],[82,5],[82,0],[205,6],[205,7],[205,6],[205,7],[203,1],[203,3],[209,4],[209,5],[209,3],[209,3],[209,2],[209,3],[209,1],[209,3],[209,2],[209,3],[209,1],[209,1],[209,2],[209,3],[209,1],[209,1],[209,2],[209,3],[209,1],[209,2],[209,3],[214,1],[199,3],[199,1],[204,2],[204,2],[204,1],[204,1],[215,3],[217,1],[217,2],[217,3],[217,3],[217,2],[217,3],[217,4],[217,5],[217,1],[217,2],[217,3],[217,1],[217,2],[217,3],[216,1],[216,2],[221,1],[221,2],[221,2],[221,3],[221,2],[221,3],[221,2],[221,3],[221,2],[221,2],[221,2],[218,2],[218,2],[218,0],[84,0],[84,2],[85,0],[85,4],[233,1],[233,3],[235,5],[235,4],[235,4],[235,1],[234,0],[234,2],[88,0],[88,2],[88,3],[88,2],[88,2],[88,3],[88,4],[88,3],[88,3],[86,0],[86,3],[120,1],[120,3],[241,1],[241,2],[241,3],[241,4],[87,0],[87,3],[87,8],[246,0],[246,2],[174,3],[174,1],[253,3],[253,2],[253,3],[253,2],[253,3],[253,2],[253,1],[254,5],[254,3],[254,1],[111,5],[111,3],[111,3],[111,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,1],[94,3],[94,3],[94,3],[94,1],[94,1],[56,1],[70,5],[71,5],[263,2],[263,2],[261,6],[261,8],[261,6],[261,8],[274,1],[274,1],[274,1],[274,1],[274,1],[274,1],[274,1],[255,5],[255,6],[255,6],[275,0],[275,4],[275,4],[275,5],[277,3],[278,3],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[158,1],[200,5],[200,3],[200,4],[200,4],[200,8],[200,8],[200,8],[200,8],[200,3],[151,1],[151,3],[196,1],[257,1],[257,1],[113,1],[113,1],[258,1],[202,2],[259,4],[262,3],[201,2],[201,2],[201,1],[201,1],[260,5],[260,4],[304,2],[304,1],[307,4],[305,2],[305,0],[256,3],[256,3],[256,3],[256,3],[256,5],[256,3],[256,5],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,5],[256,3],[256,3],[256,3],[256,5],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,3],[256,6],[256,6],[256,3],[256,3],[256,2],[256,2],[256,2],[256,2],[256,2],[256,3],[256,5],[256,6],[256,5],[256,6],[256,4],[256,5],[256,3],[256,4],[256,3],[256,4],[256,3],[256,3],[256,3],[256,3],[256,3],[329,1],[329,1],[329,4],[327,1],[327,1],[327,1],[327,1],[327,1],[327,1],[328,1],[328,1],[328,1],[55,6],[55,4],[147,1],[147,3],[336,3],[336,4],[29,5],[29,3],[36,5],[36,4],[36,7],[36,6],[36,5],[36,4],[36,5],[36,8],[36,7],[36,4],[36,6],[36,7],[341,1],[341,1],[340,0],[340,1],[342,3],[342,1],[342,1],[342,5],[342,3],[342,3],[345,1],[345,3],[346,1],[346,1],[346,1],[346,1],[346,1],[346,1],[100,1],[100,3],[24,9],[24,5],[349,1],[349,1],[352,0],[352,1],[354,2],[354,1],[355,1],[355,3],[355,3],[355,3],[348,0],[348,1],[350,0],[350,3],[351,3],[351,1],[351,2],[359,1],[359,3],[360,2],[360,2],[360,2],[360,2],[360,2],[361,0],[361,2],[366,4],[362,6],[363,9],[377,3],[376,0],[376,2],[378,4],[379,4],[364,6],[365,5],[365,5],[372,1],[372,1],[372,3],[372,3],[358,1],[358,3],[384,3],[384,2],[384,1],[387,6],[387,4],[387,1],[387,4],[272,2],[272,1],[388,1],[388,1],[385,0],[385,1],[391,2],[391,1],[393,3],[392,2],[392,5],[392,3],[392,6],[392,1],[392,2],[392,4],[392,2],[392,1],[392,2],[392,1],[392,1],[392,3],[392,5],[33,4],[399,3],[399,1],[398,0],[398,2],[18,6],[18,6],[18,6],[18,8],[18,6],[39,5],[19,4],[19,7],[19,6],[19,9],[30,3],[21,4],[21,6],[21,9],[21,6],[407,0],[407,2],[54,3],[54,2],[31,4],[31,5],[31,5],[22,8],[22,9],[32,3],[43,2],[43,4],[43,3],[43,5],[45,2],[45,4],[45,4],[45,6],[42,4],[42,6],[44,4],[44,6],[41,4],[41,6],[25,11],[25,8],[413,3],[413,3],[413,5],[34,4],[66,2],[57,2],[58,2],[58,2],[58,4],[144,4],[144,2],[144,2],[144,2],[144,2],[144,1],[144,2],[144,2],[422,1],[422,1],[423,1],[423,1],[423,1],[423,1],[423,1],[423,1],[423,1],[423,3],[419,3],[419,4],[419,2],[421,2],[421,3],[421,1],[425,3],[425,1],[428,3],[428,3],[428,3],[427,3],[427,1],[65,4],[65,3],[65,4],[65,5],[65,5],[65,6],[431,1],[431,1],[430,3],[430,2],[432,1],[432,1],[432,3],[429,1],[429,1],[51,2],[52,2],[50,2],[35,4],[35,3],[438,2],[59,3],[60,1],[61,1],[62,3],[63,2],[63,2],[64,2],[64,2],[446,1],[446,1],[69,2],[444,3],[444,1],[445,3],[445,1],[28,2],[449,1],[449,3],[450,3],[450,4],[450,5],[450,6],[46,3],[37,6],[453,1],[453,2],[454,2],[455,2],[456,2],[456,2],[456,1],[456,1],[458,4],[458,6],[461,1],[461,3],[459,5],[459,7],[459,7],[459,9],[459,7],[459,9],[462,3],[462,6],[462,3],[462,6],[457,0],[457,2],[457,5],[457,4],[457,7],[27,6],[469,2],[468,0],[468,2],[468,2],[468,1],[26,8],[23,3],[23,4],[473,3],[473,1],[474,3],[474,7],[474,6],[474,3],[474,4],[478,1],[478,1],[482,2],[483,3],[484,2],[485,4],[475,4],[475,3],[475,2],[475,1],[497,2],[493,2],[493,2],[498,4],[500,6],[67,3],[67,2],[506,3],[506,1],[504,1],[504,4],[68,2],[20,2],[48,9],[48,8],[48,9],[510,0],[510,1],[510,1],[510,1],[510,2],[511,1],[511,1],[511,1],[49,3],[38,2],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[11,1],[11,1],[80,0],[80,1],[83,0],[83,1],[90,0],[90,2],[91,0],[91,1],[96,0],[96,1],[97,0],[97,1],[101,0],[101,1],[108,0],[108,1],[121,0],[121,1],[125,1],[125,2],[126,1],[126,2],[127,0],[127,1],[155,0],[155,2],[157,0],[157,2],[159,0],[159,2],[160,1],[160,1],[161,0],[161,2],[165,0],[165,2],[167,0],[167,2],[176,0],[176,2],[177,0],[177,2],[178,0],[178,2],[188,0],[188,1],[197,0],[197,1],[210,0],[210,1],[211,0],[211,1],[219,0],[219,1],[220,0],[220,1],[248,0],[248,1],[250,0],[250,1],[251,0],[251,1],[252,0],[252,1],[264,1],[264,1],[767,1],[767,1],[289,0],[289,1],[301,1],[301,1],[337,1],[337,1],[371,0],[371,1],[375,0],[375,1],[382,0],[382,1],[383,0],[383,1],[394,0],[394,1],[395,0],[395,1],[397,1],[397,1],[411,0],[411,1],[412,0],[412,1],[465,0],[465,1],[466,0],[466,1],[467,0],[467,1],[471,0],[471,1],[476,0],[476,1],[477,0],[477,1],[479,0],[479,1],[480,0],[480,1],[481,0],[481,1],[486,0],[486,1],[487,0],[487,1],[488,0],[488,1],[489,0],[489,1],[490,0],[490,1],[491,0],[491,1],[492,0],[492,1],[494,0],[494,1],[495,0],[495,1],[496,0],[496,1],[499,0],[499,2],[501,0],[501,2],[502,0],[502,2],[503,0],[503,2],[512,0],[512,1],[513,0],[513,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n\t\t\tif (yy.casesensitive) this.$ = $$[$0];\r\n\t\t\telse this.$ = $$[$0].toLowerCase();\r\n\nbreak;\ncase 2:\n this.$ = doubleq($$[$0].substr(1,$$[$0].length-2)); \nbreak;\ncase 3:\n this.$ = $$[$0].toLowerCase() \nbreak;\ncase 4:\n this.$ = $$[$0] \nbreak;\ncase 5:\n this.$ = $$[$0] ? $$[$0-1] + ' ' + $$[$0] : $$[$0-1] \nbreak;\ncase 6:\n return new yy.Statements({statements:$$[$0-1]}); \nbreak;\ncase 7:\n this.$ = $$[$0-2]; if($$[$0]) $$[$0-2].push($$[$0]); \nbreak;\ncase 8: case 9: case 70: case 80: case 85: case 143: case 177: case 205: case 206: case 242: case 261: case 273: case 354: case 372: case 451: case 474: case 475: case 479: case 487: case 528: case 529: case 566: case 649: case 659: case 683: case 685: case 687: case 701: case 702: case 732: case 756:\n this.$ = [$$[$0]]; \nbreak;\ncase 10:\n this.$ = $$[$0]; $$[$0].explain = true; \nbreak;\ncase 11:\n this.$ = $$[$0];  $$[$0].explain = true;\nbreak;\ncase 12:\n\n\t\t\tthis.$ = $$[$0];\r\n\n\t\t\t// TODO combine exists and queries\r\n\t\t    if(yy.exists) this.$.exists = yy.exists;\r\n\t\t    delete yy.exists;\r\n\t\t    if(yy.queries) this.$.queries = yy.queries;\r\n\t\t\tdelete yy.queries;\r\n\nbreak;\ncase 13: case 162: case 172: case 237: case 238: case 240: case 248: case 250: case 259: case 267: case 270: case 375: case 491: case 501: case 503: case 515: case 521: case 522: case 567:\n this.$ = undefined; \nbreak;\ncase 68:\n this.$ = new yy.WithSelect({withs: $$[$0-1], select:$$[$0]}); \nbreak;\ncase 69: case 565:\n $$[$0-2].push($$[$0]); this.$=$$[$0-2]; \nbreak;\ncase 71:\n this.$ = {name:$$[$0-4], select:$$[$0-1]}; \nbreak;\ncase 72:\n\n\t\t\tyy.extend(this.$,$$[$0-9]); yy.extend(this.$,$$[$0-8]); yy.extend(this.$,$$[$0-7]); yy.extend(this.$,$$[$0-6]); \r\n\t\t    yy.extend(this.$,$$[$0-5]); yy.extend(this.$,$$[$0-4]);yy.extend(this.$,$$[$0-3]); \r\n\t\t    yy.extend(this.$,$$[$0-2]); yy.extend(this.$,$$[$0-1]); yy.extend(this.$,$$[$0]); \r\n\t\t    this.$ = $$[$0-9];\r\n/*\t\t    if(yy.exists) this.$.exists = yy.exists;\r\n\t\t    delete yy.exists;\r\n\t\t    if(yy.queries) this.$.queries = yy.queries;\r\n\t\t\tdelete yy.queries;\r\n*/\t\t\nbreak;\ncase 73:\n\n\t\t\tthis.$ = new yy.Search({selectors:$$[$0-2], from:$$[$0]});\r\n\t\t\tyy.extend(this.$,$$[$0-1]);\r\n\nbreak;\ncase 74:\n this.$ = {pivot:{expr:$$[$0-5], columnid:$$[$0-3], inlist:$$[$0-2], as:$$[$0]}}; \nbreak;\ncase 75:\n this.$ = {unpivot:{tocolumnid:$$[$0-8], forcolumnid:$$[$0-6], inlist:$$[$0-3], as:$$[$0]}}; \nbreak;\ncase 76: case 520: case 549: case 585: case 619: case 636: case 637: case 640: case 662:\n this.$ = $$[$0-1]; \nbreak;\ncase 77: case 78: case 86: case 147: case 185: case 247: case 280: case 288: case 289: case 290: case 291: case 292: case 293: case 294: case 295: case 296: case 297: case 298: case 299: case 300: case 301: case 304: case 305: case 320: case 321: case 322: case 323: case 324: case 325: case 374: case 440: case 441: case 442: case 443: case 444: case 445: case 516: case 542: case 546: case 548: case 623: case 624: case 625: case 626: case 627: case 628: case 632: case 634: case 635: case 644: case 660: case 661: case 723: case 738: case 739: case 741: case 742: case 748: case 749:\n this.$ = $$[$0]; \nbreak;\ncase 79: case 84: case 731: case 755:\n this.$ = $$[$0-2]; this.$.push($$[$0]); \nbreak;\ncase 81:\n this.$ = {expr:$$[$0]}; \nbreak;\ncase 82:\n this.$ = {expr:$$[$0-2],as:$$[$0]}; \nbreak;\ncase 83:\n this.$ = {removecolumns:$$[$0]}; \nbreak;\ncase 87:\n this.$ = {like:$$[$0]}; \nbreak;\ncase 90: case 104:\n this.$ = {srchid:\"PROP\", args: [$$[$0]]}; \nbreak;\ncase 91:\n this.$ = {srchid:\"ORDERBY\", args: $$[$0-1]}; \nbreak;\ncase 92:\n\n\t\t\tvar dir = $$[$0-1];\r\n\t\t\tif(!dir) dir = 'ASC';\r\n\t\t\tthis.$ = {srchid:\"ORDERBY\", args: [{expression: new yy.Column({columnid:'_'}), direction:dir}]};\r\n\nbreak;\ncase 93:\n this.$ = {srchid:\"PARENT\"}; \nbreak;\ncase 94:\n this.$ = {srchid:\"APROP\", args: [$$[$0]]}; \nbreak;\ncase 95:\n this.$ = {selid:\"ROOT\"};\nbreak;\ncase 96:\n this.$ = {srchid:\"EQ\", args: [$$[$0]]}; \nbreak;\ncase 97:\n this.$ = {srchid:\"LIKE\", args: [$$[$0]]}; \nbreak;\ncase 98: case 99:\n this.$ = {selid:\"WITH\", args: $$[$0-1]}; \nbreak;\ncase 100:\n this.$ = {srchid:$$[$0-3].toUpperCase(), args:$$[$0-1]}; \nbreak;\ncase 101:\n this.$ = {srchid:\"WHERE\", args:[$$[$0-1]]}; \nbreak;\ncase 102:\n this.$ = {selid:\"OF\", args:[$$[$0-1]]}; \nbreak;\ncase 103:\n this.$ = {srchid:\"CLASS\", args:[$$[$0-1]]}; \nbreak;\ncase 105:\n this.$ = {srchid:\"NAME\", args: [$$[$0].substr(1,$$[$0].length-2)]}; \nbreak;\ncase 106:\n this.$ = {srchid:\"CHILD\"}; \nbreak;\ncase 107:\n this.$ = {srchid:\"VERTEX\"}; \nbreak;\ncase 108:\n this.$ = {srchid:\"EDGE\"}; \nbreak;\ncase 109:\n this.$ = {srchid:\"REF\"}; \nbreak;\ncase 110:\n this.$ = {srchid:\"SHARP\", args:[$$[$0]]}; \nbreak;\ncase 111:\n this.$ = {srchid:\"ATTR\", args:((typeof $$[$0] == 'undefined')?undefined:[$$[$0]])}; \nbreak;\ncase 112:\n this.$ = {srchid:\"ATTR\"}; \nbreak;\ncase 113:\n this.$ = {srchid:\"OUT\"}; \nbreak;\ncase 114:\n this.$ = {srchid:\"IN\"}; \nbreak;\ncase 115:\n this.$ = {srchid:\"OUTOUT\"}; \nbreak;\ncase 116:\n this.$ = {srchid:\"ININ\"}; \nbreak;\ncase 117:\n this.$ = {srchid:\"CONTENT\"}; \nbreak;\ncase 118:\n this.$ = {srchid:\"EX\",args:[new yy.Json({value:$$[$0]})]}; \nbreak;\ncase 119:\n this.$ = {srchid:\"AT\", args:[$$[$0]]}; \nbreak;\ncase 120:\n this.$ = {srchid:\"AS\", args:[$$[$0]]}; \nbreak;\ncase 121:\n this.$ = {srchid:\"SET\", args:$$[$0-1]}; \nbreak;\ncase 122:\n this.$ = {selid:\"TO\", args:[$$[$0]]}; \nbreak;\ncase 123:\n this.$ = {srchid:\"VALUE\"}; \nbreak;\ncase 124:\n this.$ = {srchid:\"ROW\", args:$$[$0-1]}; \nbreak;\ncase 125:\n this.$ = {srchid:\"CLASS\", args:[$$[$0]]}; \nbreak;\ncase 126:\n this.$ = {selid:$$[$0],args:[$$[$0-1]] }; \nbreak;\ncase 127:\n this.$ = {selid:\"NOT\",args:$$[$0-1] }; \nbreak;\ncase 128:\n this.$ = {selid:\"IF\",args:$$[$0-1] }; \nbreak;\ncase 129:\n this.$ = {selid:$$[$0-3],args:$$[$0-1] }; \nbreak;\ncase 130:\n this.$ = {selid:'DISTINCT',args:$$[$0-1] }; \nbreak;\ncase 131:\n this.$ = {selid:'UNION',args:$$[$0-1] }; \nbreak;\ncase 132:\n this.$ = {selid:'UNIONALL',args:$$[$0-1] }; \nbreak;\ncase 133:\n this.$ = {selid:'ALL',args:[$$[$0-1]] }; \nbreak;\ncase 134:\n this.$ = {selid:'ANY',args:[$$[$0-1]] }; \nbreak;\ncase 135:\n this.$ = {selid:'INTERSECT',args:$$[$0-1] }; \nbreak;\ncase 136:\n this.$ = {selid:'EXCEPT',args:$$[$0-1] }; \nbreak;\ncase 137:\n this.$ = {selid:'AND',args:$$[$0-1] }; \nbreak;\ncase 138:\n this.$ = {selid:'OR',args:$$[$0-1] }; \nbreak;\ncase 139:\n this.$ = {selid:'PATH',args:[$$[$0-1]] }; \nbreak;\ncase 140:\n this.$ = {srchid:'RETURN',args:$$[$0-1] }; \nbreak;\ncase 141:\n this.$ = {selid:'REPEAT',sels:$$[$0-3], args:$$[$0-1] }; \nbreak;\ncase 142:\n this.$ = $$[$0-2]; this.$.push($$[$0]);\nbreak;\ncase 144:\n this.$ = \"PLUS\"; \nbreak;\ncase 145:\n this.$ = \"STAR\"; \nbreak;\ncase 146:\n this.$ = \"QUESTION\"; \nbreak;\ncase 148:\n this.$ = new yy.Select({ columns:$$[$0], distinct: true }); yy.extend(this.$, $$[$0-3]); yy.extend(this.$, $$[$0-1]); \nbreak;\ncase 149:\n this.$ = new yy.Select({ columns:$$[$0], distinct: true }); yy.extend(this.$, $$[$0-3]);yy.extend(this.$, $$[$0-1]); \nbreak;\ncase 150:\n this.$ = new yy.Select({ columns:$$[$0], all:true }); yy.extend(this.$, $$[$0-3]);yy.extend(this.$, $$[$0-1]); \nbreak;\ncase 151:\n\n\t\t\tif(!$$[$0]) {\r\n\t\t\t\tthis.$ = new yy.Select({columns:[new yy.Column({columnid:'_',})], modifier:'COLUMN'});\r\n\t\t\t} else {\r\n\t\t\t\tthis.$ = new yy.Select({ columns:$$[$0] }); yy.extend(this.$, $$[$0-2]);yy.extend(this.$, $$[$0-1]); \r\n\t\t\t}\r\n\nbreak;\ncase 152:\n if($$[$0]=='SELECT') this.$ = undefined; else this.$ = {modifier: $$[$0]};  \nbreak;\ncase 153:\n this.$ = {modifier:'VALUE'}\nbreak;\ncase 154:\n this.$ = {modifier:'ROW'}\nbreak;\ncase 155:\n this.$ = {modifier:'COLUMN'}\nbreak;\ncase 156:\n this.$ = {modifier:'MATRIX'}\nbreak;\ncase 157:\n this.$ = {modifier:'TEXTSTRING'}\nbreak;\ncase 158:\n this.$ = {modifier:'INDEX'}\nbreak;\ncase 159:\n this.$ = {modifier:'RECORDSET'}\nbreak;\ncase 160:\n this.$ = {top: $$[$0-1], percent:(typeof $$[$0] != 'undefined'?true:undefined)}; \nbreak;\ncase 161:\n this.$ = {top: $$[$0-1]}; \nbreak;\ncase 163: case 330: case 523: case 524: case 724:\nthis.$ = undefined; \nbreak;\ncase 164: case 165: case 166: case 167:\nthis.$ = {into: $$[$0]} \nbreak;\ncase 168:\n\n\t\t\tvar s = $$[$0];\r\n\t\t\ts = s.substr(1,s.length-2);\r\n\t\t\tvar x3 = s.substr(-3).toUpperCase();\r\n\t\t\tvar x4 = s.substr(-4).toUpperCase();\r\n\t\t\tif(s[0] == '#') {\r\n\t\t\t\tthis.$ = {into: new yy.FuncValue({funcid: 'HTML', args:[new yy.StringValue({value: s}), new yy.Json({value:{headers:true}})]})};\r\n\t\t\t} else if(x3=='XLS' || x3 == 'CSV' || x3=='TAB') {\r\n\t\t\t\tthis.$ = {into: new yy.FuncValue({funcid: x3, args:[new yy.StringValue({value: s}), new yy.Json({value:{headers:true}})]})};\r\n\t\t\t} else if(x4=='XLSX' || x4 == 'JSON') {\r\n\t\t\t\tthis.$ = {into: new yy.FuncValue({funcid: x4, args:[new yy.StringValue({value: s}), new yy.Json({value:{headers:true}})]})};\r\n\t\t\t}\r\n\nbreak;\ncase 169:\n this.$ = { from: $$[$0] }; \nbreak;\ncase 170:\n this.$ = { from: $$[$0-1], joins: $$[$0] }; \nbreak;\ncase 171:\n this.$ = { from: $$[$0-2], joins: $$[$0-1] }; \nbreak;\ncase 173:\n this.$ = new yy.Apply({select: $$[$0-2], applymode:'CROSS', as:$$[$0]}); \nbreak;\ncase 174:\n this.$ = new yy.Apply({select: $$[$0-3], applymode:'CROSS', as:$$[$0]}); \nbreak;\ncase 175:\n this.$ = new yy.Apply({select: $$[$0-2], applymode:'OUTER', as:$$[$0]}); \nbreak;\ncase 176:\n this.$ = new yy.Apply({select: $$[$0-3], applymode:'OUTER', as:$$[$0]}); \nbreak;\ncase 178: case 243: case 452: case 530: case 531:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]); \nbreak;\ncase 179:\n this.$ = $$[$0-2]; this.$.as = $$[$0] \nbreak;\ncase 180:\n this.$ = $$[$0-3]; this.$.as = $$[$0] \nbreak;\ncase 181:\n this.$ = $$[$0-1]; this.$.as = 'default' \nbreak;\ncase 182:\n this.$ = new yy.Json({value:$$[$0-2]}); $$[$0-2].as = $$[$0] \nbreak;\ncase 183:\n this.$ = $$[$0-1]; $$[$0-1].as = $$[$0] \nbreak;\ncase 184:\n this.$ = $$[$0-2]; $$[$0-2].as = $$[$0] \nbreak;\ncase 186: case 638: case 641:\n this.$ = $$[$0-2]; \nbreak;\ncase 187: case 191: case 195: case 198:\n this.$ = $$[$0-1]; $$[$0-1].as = $$[$0]; \nbreak;\ncase 188: case 192: case 196: case 199:\n this.$ = $$[$0-2]; $$[$0-2].as = $$[$0]; \nbreak;\ncase 189: case 190: case 194: case 197:\n this.$ = $$[$0]; $$[$0].as = 'default'; \nbreak;\ncase 193:\n this.$ = {inserted:true}; $$[$0].as = 'default'; \nbreak;\ncase 200:\n\n\t\t\tvar s = $$[$0];\r\n\t\t\ts = s.substr(1,s.length-2);\r\n\t\t\tvar x3 = s.substr(-3).toUpperCase();\r\n\t\t\tvar x4 = s.substr(-4).toUpperCase();\r\n\t\t\tvar r;\r\n\t\t\tif(s[0] == '#') {\r\n\t\t\t\tr = new yy.FuncValue({funcid: 'HTML', args:[new yy.StringValue({value: s}), new yy.Json({value:{headers:true}})]});\r\n\t\t\t} else if(x3=='XLS' || x3 == 'CSV' || x3=='TAB') {\r\n\t\t\t\tr = new yy.FuncValue({funcid: x3, args:[new yy.StringValue({value: s}), new yy.Json({value:{headers:true}})]});\r\n\t\t\t} else if(x4=='XLSX' || x4 == 'JSON') {\r\n\t\t\t\tr = new yy.FuncValue({funcid: x4, args:[new yy.StringValue({value: s}), new yy.Json({value:{headers:true}})]});\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Unknown string in FROM clause');\r\n\t\t\t};\r\n\t\t\tthis.$ = r;\r\n\nbreak;\ncase 201:\n\n\t\t\tif($$[$0-2] == 'INFORMATION_SCHEMA') {\r\n\t\t\t\tthis.$ = new yy.FuncValue({funcid: $$[$0-2], args:[new yy.StringValue({value:$$[$0]})]});\r\n\t\t\t} else {\r\n\t\t\t\tthis.$ = new yy.Table({databaseid: $$[$0-2], tableid:$$[$0]});\r\n\t\t\t}\r\n\nbreak;\ncase 202:\n this.$ = new yy.Table({tableid: $$[$0]});\nbreak;\ncase 203: case 204:\n this.$ = $$[$0-1]; $$[$0-1].push($$[$0]); \nbreak;\ncase 207:\n this.$ = new yy.Join($$[$0-2]); yy.extend(this.$, $$[$0-1]); yy.extend(this.$, $$[$0]); \nbreak;\ncase 208:\n this.$ = {table: $$[$0]}; \nbreak;\ncase 209:\n this.$ = {table: $$[$0-1], as: $$[$0] } ; \nbreak;\ncase 210:\n this.$ = {table: $$[$0-2], as: $$[$0] } ; \nbreak;\ncase 211:\n this.$ = {json:new yy.Json({value:$$[$0-2],as:$$[$0]})}; \nbreak;\ncase 212:\n this.$ = {param: $$[$0-1], as: $$[$0] } ; \nbreak;\ncase 213:\n this.$ = {param: $$[$0-2], as: $$[$0] } ; \nbreak;\ncase 214:\n this.$ = {select: $$[$0-2], as: $$[$0]} ; \nbreak;\ncase 215:\n this.$ = {select: $$[$0-3], as: $$[$0] } ; \nbreak;\ncase 216:\n this.$ = {funcid:$$[$0], as:'default'}; \nbreak;\ncase 217:\n this.$ = {funcid:$$[$0-1], as: $$[$0]}; \nbreak;\ncase 218:\n this.$ = {funcid:$$[$0-2], as: $$[$0]}; \nbreak;\ncase 219:\n this.$ = {variable:$$[$0],as:'default'}; \nbreak;\ncase 220:\n this.$ = {variable:$$[$0-1],as:$$[$0]}; \nbreak;\ncase 221:\n this.$ = {variable:$$[$0-2],as:$$[$0]} \nbreak;\ncase 222:\n this.$ = { joinmode: $$[$0] } ; \nbreak;\ncase 223:\n this.$ = {joinmode: $$[$0-1], natural:true} ; \nbreak;\ncase 224: case 225:\n this.$ = \"INNER\"; \nbreak;\ncase 226: case 227:\n this.$ = \"LEFT\"; \nbreak;\ncase 228: case 229:\n this.$ = \"RIGHT\"; \nbreak;\ncase 230: case 231:\n this.$ = \"OUTER\"; \nbreak;\ncase 232:\n this.$ = \"SEMI\"; \nbreak;\ncase 233:\n this.$ = \"ANTI\"; \nbreak;\ncase 234:\n this.$ = \"CROSS\"; \nbreak;\ncase 235:\n this.$ = {on: $$[$0]}; \nbreak;\ncase 236: case 697:\n this.$ = {using: $$[$0]}; \nbreak;\ncase 239:\n this.$ = {where: new yy.Expression({expression:$$[$0]})}; \nbreak;\ncase 241:\n this.$ = {group:$$[$0-1]}; yy.extend(this.$,$$[$0]); \nbreak;\ncase 244:\n this.$ = new yy.GroupExpression({type:'GROUPING SETS', group: $$[$0-1]}); \nbreak;\ncase 245:\n this.$ = new yy.GroupExpression({type:'ROLLUP', group: $$[$0-1]}); \nbreak;\ncase 246:\n this.$ = new yy.GroupExpression({type:'CUBE', group: $$[$0-1]}); \nbreak;\ncase 249:\n this.$ = {having:$$[$0]}\nbreak;\ncase 251:\n this.$ = {union: $$[$0]} ; \nbreak;\ncase 252:\n this.$ = {unionall: $$[$0]} ; \nbreak;\ncase 253:\n this.$ = {except: $$[$0]} ; \nbreak;\ncase 254:\n this.$ = {intersect: $$[$0]} ; \nbreak;\ncase 255:\n this.$ = {union: $$[$0], corresponding:true} ; \nbreak;\ncase 256:\n this.$ = {unionall: $$[$0], corresponding:true} ; \nbreak;\ncase 257:\n this.$ = {except: $$[$0], corresponding:true} ; \nbreak;\ncase 258:\n this.$ = {intersect: $$[$0], corresponding:true} ; \nbreak;\ncase 260:\n this.$ = {order:$$[$0]}\nbreak;\ncase 262:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0])\nbreak;\ncase 263:\n this.$ = new yy.Expression({expression: $$[$0], direction:'ASC'}) \nbreak;\ncase 264:\n this.$ = new yy.Expression({expression: $$[$0-1], direction:$$[$0].toUpperCase()}) \nbreak;\ncase 265:\n this.$ = new yy.Expression({expression: $$[$0-2], direction:'ASC', nocase:true}) \nbreak;\ncase 266:\n this.$ = new yy.Expression({expression: $$[$0-3], direction:$$[$0].toUpperCase(), nocase:true}) \nbreak;\ncase 268:\n this.$ = {limit:$$[$0-1]}; yy.extend(this.$, $$[$0]); \nbreak;\ncase 269:\n this.$ = {limit:$$[$0-2],offset:$$[$0-6]}; \nbreak;\ncase 271:\n this.$ = {offset:$$[$0]}; \nbreak;\ncase 272: case 509: case 533: case 648: case 658: case 682: case 684: case 688:\n $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; \nbreak;\ncase 274: case 276: case 278:\n $$[$0-2].as = $$[$0]; this.$ = $$[$0-2];\nbreak;\ncase 275: case 277: case 279:\n $$[$0-1].as = $$[$0]; this.$ = $$[$0-1];\nbreak;\ncase 281:\n this.$ = new yy.Column({columid: $$[$0], tableid: $$[$0-2], databaseid:$$[$0-4]}); \nbreak;\ncase 282:\n this.$ = new yy.Column({columnid: $$[$0], tableid: $$[$0-2]}); \nbreak;\ncase 283:\n this.$ = new yy.Column({columnid:$$[$0]}); \nbreak;\ncase 284:\n this.$ = new yy.Column({columnid: $$[$0], tableid: $$[$0-2], databaseid:$$[$0-4]});\nbreak;\ncase 285: case 286:\n this.$ = new yy.Column({columnid: $$[$0], tableid: $$[$0-2]});\nbreak;\ncase 287:\n this.$ = new yy.Column({columnid: $$[$0]});\nbreak;\ncase 302:\n this.$ = new yy.DomainValueValue(); \nbreak;\ncase 303:\n this.$ = new yy.Json({value:$$[$0]}); \nbreak;\ncase 306: case 307: case 308:\n\n\t\t\tif(!yy.queries) yy.queries = []; \r\n\t\t\tyy.queries.push($$[$0-1]);\r\n\t\t\t$$[$0-1].queriesidx = yy.queries.length;\r\n\t\t\tthis.$ = $$[$0-1];\r\n\nbreak;\ncase 309:\nthis.$ = $$[$0]\nbreak;\ncase 310:\n this.$ = new yy.FuncValue({funcid:'CURRENT_TIMESTAMP'});\nbreak;\ncase 311:\n this.$ = new yy.JavaScript({value:$$[$0].substr(2,$$[$0].length-4)}); \nbreak;\ncase 312:\n this.$ = new yy.JavaScript({value:'alasql.fn[\"'+$$[$0-2]+'\"] = '+$$[$0].substr(2,$$[$0].length-4)}); \nbreak;\ncase 313:\n this.$ = new yy.JavaScript({value:'alasql.aggr[\"'+$$[$0-2]+'\"] = '+$$[$0].substr(2,$$[$0].length-4)}); \nbreak;\ncase 314:\n this.$ = new yy.FuncValue({funcid:$$[$0], newid:true}); \nbreak;\ncase 315:\n this.$ = $$[$0]; yy.extend(this.$,{newid:true}); \nbreak;\ncase 316:\n this.$ = new yy.Convert({expression:$$[$0-3]}) ; yy.extend(this.$,$$[$0-1]) ; \nbreak;\ncase 317:\n this.$ = new yy.Convert({expression:$$[$0-5], style:$$[$0-1]}) ; yy.extend(this.$,$$[$0-3]) ; \nbreak;\ncase 318:\n this.$ = new yy.Convert({expression:$$[$0-1]}) ; yy.extend(this.$,$$[$0-3]) ; \nbreak;\ncase 319:\n this.$ = new yy.Convert({expression:$$[$0-3], style:$$[$0-1]}) ; yy.extend(this.$,$$[$0-5]) ; \nbreak;\ncase 326:\n this.$ = new yy.FuncValue({funcid:'CURRENT_TIMESTAMP'}); \nbreak;\ncase 327:\n\n\t\t  if($$[$0-2].length > 1 && ($$[$0-4].toUpperCase() == 'MAX' || $$[$0-4].toUpperCase() == 'MIN')) {\r\n\t\t  \tthis.$ = new yy.FuncValue({funcid:$$[$0-4],args:$$[$0-2]});\r\n\t\t  } else {\r\n\t\t\tthis.$ = new yy.AggrValue({aggregatorid: $$[$0-4].toUpperCase(), expression: $$[$0-2].pop(), over:$$[$0]}); \r\n\t\t  } \r\n\nbreak;\ncase 328:\n this.$ = new yy.AggrValue({aggregatorid: $$[$0-5].toUpperCase(), expression: $$[$0-2], distinct:true, over:$$[$0]}); \nbreak;\ncase 329:\n this.$ = new yy.AggrValue({aggregatorid: $$[$0-5].toUpperCase(), expression: $$[$0-2],\r\n\t\t over:$$[$0]}); \nbreak;\ncase 331: case 332:\n this.$ = new yy.Over(); yy.extend(this.$,$$[$0-1]); \nbreak;\ncase 333:\n this.$ = new yy.Over(); yy.extend(this.$,$$[$0-2]); yy.extend(this.$,$$[$0-1]);\nbreak;\ncase 334:\n this.$ = {partition:$$[$0]}; \nbreak;\ncase 335:\n this.$ = {order:$$[$0]}; \nbreak;\ncase 336:\n this.$ = \"SUM\"; \nbreak;\ncase 337:\n this.$ = \"COUNT\"; \nbreak;\ncase 338:\n this.$ = \"MIN\"; \nbreak;\ncase 339: case 544:\n this.$ = \"MAX\"; \nbreak;\ncase 340:\n this.$ = \"AVG\"; \nbreak;\ncase 341:\n this.$ = \"FIRST\"; \nbreak;\ncase 342:\n this.$ = \"LAST\"; \nbreak;\ncase 343:\n this.$ = \"AGGR\"; \nbreak;\ncase 344:\n this.$ = \"ARRAY\"; \nbreak;\ncase 345:\n\n\t\t\tvar funcid = $$[$0-4];\r\n\t\t\tvar exprlist = $$[$0-1];\r\n\t\t\tif(exprlist.length > 1 && (funcid.toUpperCase() == 'MIN' || funcid.toUpperCase() == 'MAX')) {\r\n\t\t\t\t\tthis.$ = new yy.FuncValue({funcid: funcid, args: exprlist}); \r\n\t\t\t} else if(alasql.aggr[$$[$0-4]]) {\r\n\t\t    \tthis.$ = new yy.AggrValue({aggregatorid: 'REDUCE', \r\n                      funcid: funcid, expression: exprlist.pop(),distinct:($$[$0-2]=='DISTINCT') });\r\n\t\t    } else {\r\n\t\t\t    this.$ = new yy.FuncValue({funcid: funcid, args: exprlist}); \r\n\t\t\t};\r\n\nbreak;\ncase 346:\n this.$ = new yy.FuncValue({ funcid: $$[$0-2] }) \nbreak;\ncase 347:\n this.$ = new yy.FuncValue({ funcid: 'IIF', args:$$[$0-1] }) \nbreak;\ncase 348:\n this.$ = new yy.FuncValue({ funcid: 'REPLACE', args:$$[$0-1] }) \nbreak;\ncase 349:\n this.$ = new yy.FuncValue({ funcid: 'DATEADD', args:[new yy.StringValue({value:$$[$0-5]}),$$[$0-3],$$[$0-1]]}) \nbreak;\ncase 350:\n this.$ = new yy.FuncValue({ funcid: 'DATEADD', args:[$$[$0-5],$$[$0-3],$$[$0-1]]}) \nbreak;\ncase 351:\n this.$ = new yy.FuncValue({ funcid: 'DATEDIFF', args:[new yy.StringValue({value:$$[$0-5]}),$$[$0-3],$$[$0-1]]}) \nbreak;\ncase 352:\n this.$ = new yy.FuncValue({ funcid: 'DATEDIFF', args:[$$[$0-5],$$[$0-3],$$[$0-1]]}) \nbreak;\ncase 353:\n this.$ = new yy.FuncValue({ funcid: 'INTERVAL', args:[$$[$0-1],new yy.StringValue({value:($$[$0]).toLowerCase()})]}); \nbreak;\ncase 355:\n $$[$0-2].push($$[$0]); this.$ = $$[$0-2] \nbreak;\ncase 356:\n this.$ = new yy.NumValue({value:+$$[$0]}); \nbreak;\ncase 357:\n this.$ = new yy.LogicValue({value:true}); \nbreak;\ncase 358:\n this.$ = new yy.LogicValue({value:false}); \nbreak;\ncase 359:\n this.$ = new yy.StringValue({value: $$[$0].substr(1,$$[$0].length-2).replace(/(\\\\\\')/g,\"'\").replace(/(\\'\\')/g,\"'\")}); \nbreak;\ncase 360:\n this.$ = new yy.StringValue({value: $$[$0].substr(2,$$[$0].length-3).replace(/(\\\\\\')/g,\"'\").replace(/(\\'\\')/g,\"'\")}); \nbreak;\ncase 361:\n this.$ = new yy.NullValue({value:undefined}); \nbreak;\ncase 362:\n this.$ = new yy.VarValue({variable:$$[$0]}); \nbreak;\ncase 363:\n\n\t\t\tif(!yy.exists) yy.exists = [];\r\n\t\t\tthis.$ = new yy.ExistsValue({value:$$[$0-1], existsidx:yy.exists.length}); \r\n\t\t\tyy.exists.push($$[$0-1]);\r\n\nbreak;\ncase 364:\n this.$ = new yy.ArrayValue({value:$$[$0-1]}); \nbreak;\ncase 365: case 366:\n this.$ = new yy.ParamValue({param: $$[$0]}); \nbreak;\ncase 367:\n\n\t\t\tif(typeof yy.question == 'undefined') yy.question = 0; \r\n\t\t\tthis.$ = new yy.ParamValue({param: yy.question++}); \r\n\nbreak;\ncase 368:\n\n\t\t\tif(typeof yy.question == 'undefined') yy.question = 0; \r\n\t\t\tthis.$ = new yy.ParamValue({param: yy.question++, array:true}); \r\n\nbreak;\ncase 369:\n this.$ = new yy.CaseValue({expression:$$[$0-3], whens: $$[$0-2], elses: $$[$0-1]}); \nbreak;\ncase 370:\n this.$ = new yy.CaseValue({whens: $$[$0-2], elses: $$[$0-1]}); \nbreak;\ncase 371: case 699: case 700:\n this.$ = $$[$0-1]; this.$.push($$[$0]); \nbreak;\ncase 373:\n this.$ = {when: $$[$0-2], then: $$[$0] }; \nbreak;\ncase 376: case 377:\n this.$ = new yy.Op({left:$$[$0-2], op:'REGEXP', right:$$[$0]}); \nbreak;\ncase 378:\n this.$ = new yy.Op({left:$$[$0-2], op:'GLOB', right:$$[$0]}); \nbreak;\ncase 379:\n this.$ = new yy.Op({left:$$[$0-2], op:'LIKE', right:$$[$0]}); \nbreak;\ncase 380:\n this.$ = new yy.Op({left:$$[$0-4], op:'LIKE', right:$$[$0-2], escape:$$[$0]}); \nbreak;\ncase 381:\n this.$ = new yy.Op({left:$$[$0-2], op:'NOT LIKE', right:$$[$0] }); \nbreak;\ncase 382:\n this.$ = new yy.Op({left:$$[$0-4], op:'NOT LIKE', right:$$[$0-2], escape:$$[$0] }); \nbreak;\ncase 383:\n this.$ = new yy.Op({left:$$[$0-2], op:'||', right:$$[$0]}); \nbreak;\ncase 384:\n this.$ = new yy.Op({left:$$[$0-2], op:'+', right:$$[$0]}); \nbreak;\ncase 385:\n this.$ = new yy.Op({left:$$[$0-2], op:'-', right:$$[$0]}); \nbreak;\ncase 386:\n this.$ = new yy.Op({left:$$[$0-2], op:'*', right:$$[$0]}); \nbreak;\ncase 387:\n this.$ = new yy.Op({left:$$[$0-2], op:'/', right:$$[$0]}); \nbreak;\ncase 388:\n this.$ = new yy.Op({left:$$[$0-2], op:'%', right:$$[$0]}); \nbreak;\ncase 389:\n this.$ = new yy.Op({left:$$[$0-2], op:'^', right:$$[$0]}); \nbreak;\ncase 390:\n this.$ = new yy.Op({left:$$[$0-2], op:'>>', right:$$[$0]}); \nbreak;\ncase 391:\n this.$ = new yy.Op({left:$$[$0-2], op:'<<', right:$$[$0]}); \nbreak;\ncase 392:\n this.$ = new yy.Op({left:$$[$0-2], op:'&', right:$$[$0]}); \nbreak;\ncase 393:\n this.$ = new yy.Op({left:$$[$0-2], op:'|', right:$$[$0]}); \nbreak;\ncase 394: case 395: case 397:\n this.$ = new yy.Op({left:$$[$0-2], op:'->' , right:$$[$0]}); \nbreak;\ncase 396:\n this.$ = new yy.Op({left:$$[$0-4], op:'->' , right:$$[$0-1]}); \nbreak;\ncase 398: case 399: case 401:\n this.$ = new yy.Op({left:$$[$0-2], op:'!' , right:$$[$0]}); \nbreak;\ncase 400:\n this.$ = new yy.Op({left:$$[$0-4], op:'!' , right:$$[$0-1]}); \nbreak;\ncase 402:\n this.$ = new yy.Op({left:$$[$0-2], op:'>' , right:$$[$0]}); \nbreak;\ncase 403:\n this.$ = new yy.Op({left:$$[$0-2], op:'>=' , right:$$[$0]}); \nbreak;\ncase 404:\n this.$ = new yy.Op({left:$$[$0-2], op:'<' , right:$$[$0]}); \nbreak;\ncase 405:\n this.$ = new yy.Op({left:$$[$0-2], op:'<=' , right:$$[$0]}); \nbreak;\ncase 406:\n this.$ = new yy.Op({left:$$[$0-2], op:'=' , right:$$[$0]}); \nbreak;\ncase 407:\n this.$ = new yy.Op({left:$$[$0-2], op:'==' , right:$$[$0]}); \nbreak;\ncase 408:\n this.$ = new yy.Op({left:$$[$0-2], op:'===' , right:$$[$0]}); \nbreak;\ncase 409:\n this.$ = new yy.Op({left:$$[$0-2], op:'!=' , right:$$[$0]}); \nbreak;\ncase 410:\n this.$ = new yy.Op({left:$$[$0-2], op:'!==' , right:$$[$0]}); \nbreak;\ncase 411:\n this.$ = new yy.Op({left:$$[$0-2], op:'!===' , right:$$[$0]}); \nbreak;\ncase 412:\n\n\t\t\tif(!yy.queries) yy.queries = []; \r\n\t\t\tthis.$ = new yy.Op({left:$$[$0-5], op:$$[$0-4] , allsome:$$[$0-3], right:$$[$0-1], queriesidx: yy.queries.length}); \r\n\t\t\tyy.queries.push($$[$0-1]);  \r\n\nbreak;\ncase 413:\n\n\t\t\tthis.$ = new yy.Op({left:$$[$0-5], op:$$[$0-4] , allsome:$$[$0-3], right:$$[$0-1]}); \r\n\nbreak;\ncase 414:\n\n\t\t\tif($$[$0-2].op == 'BETWEEN1') {\r\n\n\t\t\t\tif($$[$0-2].left.op == 'AND') {\r\n\t\t\t\t\tthis.$ = new yy.Op({left:$$[$0-2].left.left,op:'AND',right:\r\n\t\t\t\t\t\tnew yy.Op({left:$$[$0-2].left.right, op:'BETWEEN', \r\n\t\t\t\t\t\t\tright1:$$[$0-2].right, right2:$$[$0]})\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$ = new yy.Op({left:$$[$0-2].left, op:'BETWEEN', \r\n\t\t\t\t\t\tright1:$$[$0-2].right, right2:$$[$0]});\r\n\t\t\t\t}\r\n\n\t\t\t} else if($$[$0-2].op == 'NOT BETWEEN1') {\r\n\t\t\t\tif($$[$0-2].left.op == 'AND') {\r\n\t\t\t\t\tthis.$ = new yy.Op({left:$$[$0-2].left.left,op:'AND',right:\r\n\t\t\t\t\t\tnew yy.Op({left:$$[$0-2].left.right, op:'NOT BETWEEN', \r\n\t\t\t\t\t\t\tright1:$$[$0-2].right, right2:$$[$0]})\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$ = new yy.Op({left:$$[$0-2].left, op:'NOT BETWEEN', \r\n\t\t\t\t\t\tright1:$$[$0-2].right, right2:$$[$0]});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.$ = new yy.Op({left:$$[$0-2], op:'AND', right:$$[$0]});\r\n\t\t\t}\r\n\nbreak;\ncase 415:\n this.$ = new yy.Op({left:$$[$0-2], op:'OR' , right:$$[$0]}); \nbreak;\ncase 416:\n this.$ = new yy.UniOp({op:'NOT' , right:$$[$0]}); \nbreak;\ncase 417:\n this.$ = new yy.UniOp({op:'-' , right:$$[$0]}); \nbreak;\ncase 418:\n this.$ = new yy.UniOp({op:'+' , right:$$[$0]}); \nbreak;\ncase 419:\n this.$ = new yy.UniOp({op:'~' , right:$$[$0]}); \nbreak;\ncase 420:\n this.$ = new yy.UniOp({op:'#' , right:$$[$0]}); \nbreak;\ncase 421:\n this.$ = new yy.UniOp({right: $$[$0-1]}); \nbreak;\ncase 422:\n\n\t\t\tif(!yy.queries) yy.queries = []; \r\n\t\t\tthis.$ = new yy.Op({left: $$[$0-4], op:'IN', right:$$[$0-1], queriesidx: yy.queries.length});\r\n\t\t\tyy.queries.push($$[$0-1]);  \r\n\nbreak;\ncase 423:\n\n\t\t\tif(!yy.queries) yy.queries = []; \r\n\t\t\tthis.$ = new yy.Op({left: $$[$0-5], op:'NOT IN', right:$$[$0-1], queriesidx: yy.queries.length});\r\n\t\t\tyy.queries.push($$[$0-1]);  \r\n\nbreak;\ncase 424:\n this.$ = new yy.Op({left: $$[$0-4], op:'IN', right:$$[$0-1]}); \nbreak;\ncase 425:\n this.$ = new yy.Op({left: $$[$0-5], op:'NOT IN', right:$$[$0-1]}); \nbreak;\ncase 426:\n this.$ = new yy.Op({left: $$[$0-3], op:'IN', right:[]}); \nbreak;\ncase 427:\n this.$ = new yy.Op({left: $$[$0-4], op:'NOT IN', right:[]}); \nbreak;\ncase 428: case 430:\n this.$ = new yy.Op({left: $$[$0-2], op:'IN', right:$$[$0]}); \nbreak;\ncase 429: case 431:\n this.$ = new yy.Op({left: $$[$0-3], op:'NOT IN', right:$$[$0]}); \nbreak;\ncase 432:\n\n/*\t\t\tvar expr = $$[$0];\r\n\t\t\tif(expr.left && expr.left.op == 'AND') {\r\n\t\t\t\tthis.$ = new yy.Op({left:new yy.Op({left:$$[$0-2], op:'BETWEEN', right:expr.left}), op:'AND', right:expr.right }); \r\n\t\t\t} else {\r\n*/\r\n\t\t\t\tthis.$ = new yy.Op({left:$$[$0-2], op:'BETWEEN1', right:$$[$0] }); \r\n\nbreak;\ncase 433:\n\n\t\t\t\tthis.$ = new yy.Op({left:$$[$0-2], op:'NOT BETWEEN1', right:$$[$0] }); \r\n\nbreak;\ncase 434:\n this.$ = new yy.Op({op:'IS' , left:$$[$0-2], right:$$[$0]}); \nbreak;\ncase 435:\n\n\t\t\tthis.$ = new yy.Op({\r\n\t\t\t\top:'IS', \r\n\t\t\t\tleft:$$[$0-2], \r\n\t\t\t\tright: new yy.UniOp({\r\n\t\t\t\t\top:'NOT',\r\n\t\t\t\t\tright:new yy.NullValue({value:undefined}) \r\n\t\t\t\t})\r\n\t\t\t}); \r\n\nbreak;\ncase 436:\n this.$ = new yy.Convert({expression:$$[$0-2]}) ; yy.extend(this.$,$$[$0]) ; \nbreak;\ncase 437: case 438:\n this.$ = $$[$0];\nbreak;\ncase 439:\n this.$ = $$[$0-1];\nbreak;\ncase 446:\n this.$ = 'ALL'; \nbreak;\ncase 447:\n this.$ = 'SOME'; \nbreak;\ncase 448:\n this.$ = 'ANY'; \nbreak;\ncase 449:\n this.$ = new yy.Update({table:$$[$0-4], columns:$$[$0-2], where:$$[$0]}); \nbreak;\ncase 450:\n this.$ = new yy.Update({table:$$[$0-2], columns:$$[$0]}); \nbreak;\ncase 453:\n this.$ = new yy.SetColumn({column:$$[$0-2], expression:$$[$0]})\nbreak;\ncase 454:\n this.$ = new yy.SetColumn({variable:$$[$0-2], expression:$$[$0], method:$$[$0-3]})\nbreak;\ncase 455:\n this.$ = new yy.Delete({table:$$[$0-2], where:$$[$0]});\nbreak;\ncase 456:\n this.$ = new yy.Delete({table:$$[$0]});\nbreak;\ncase 457:\n this.$ = new yy.Insert({into:$$[$0-2], values: $$[$0]}); \nbreak;\ncase 458:\n this.$ = new yy.Insert({into:$$[$0-1], values: $$[$0]}); \nbreak;\ncase 459: case 461:\n this.$ = new yy.Insert({into:$$[$0-2], values: $$[$0], orreplace:true}); \nbreak;\ncase 460: case 462:\n this.$ = new yy.Insert({into:$$[$0-1], values: $$[$0], orreplace:true}); \nbreak;\ncase 463:\n this.$ = new yy.Insert({into:$$[$0-2], \"default\": true}) ; \nbreak;\ncase 464:\n this.$ = new yy.Insert({into:$$[$0-5], columns: $$[$0-3], values: $$[$0]}); \nbreak;\ncase 465:\n this.$ = new yy.Insert({into:$$[$0-4], columns: $$[$0-2], values: $$[$0]}); \nbreak;\ncase 466:\n this.$ = new yy.Insert({into:$$[$0-1], select: $$[$0]}); \nbreak;\ncase 467:\n this.$ = new yy.Insert({into:$$[$0-1], select: $$[$0], orreplace:true}); \nbreak;\ncase 468:\n this.$ = new yy.Insert({into:$$[$0-4], columns: $$[$0-2], select: $$[$0]}); \nbreak;\ncase 473:\n this.$ = [$$[$0-1]]; \nbreak;\ncase 476:\nthis.$ = $$[$0-4]; $$[$0-4].push($$[$0-1])\nbreak;\ncase 477: case 478: case 480: case 488:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0])\nbreak;\ncase 489:\n\n\t\t\tthis.$ = new yy.CreateTable({table:$$[$0-4]}); \r\n\t\t\tyy.extend(this.$,$$[$0-7]); \r\n\t\t\tyy.extend(this.$,$$[$0-6]); \r\n\t\t\tyy.extend(this.$,$$[$0-5]); \r\n\t\t\tyy.extend(this.$,$$[$0-2]); \r\n\t\t\tyy.extend(this.$,$$[$0]); \r\n\nbreak;\ncase 490:\n\n\t\t\tthis.$ = new yy.CreateTable({table:$$[$0]}); \r\n\t\t\tyy.extend(this.$,$$[$0-3]); \r\n\t\t\tyy.extend(this.$,$$[$0-2]); \r\n\t\t\tyy.extend(this.$,$$[$0-1]); \r\n\nbreak;\ncase 492:\n this.$ = {class:true}; \nbreak;\ncase 502:\n this.$ = {temporary:true}; \nbreak;\ncase 504:\n this.$ = {ifnotexists: true}; \nbreak;\ncase 505:\n this.$ = {columns: $$[$0-2], constraints: $$[$0]}; \nbreak;\ncase 506:\n this.$ = {columns: $$[$0]}; \nbreak;\ncase 507:\n this.$ = {as: $$[$0]} \nbreak;\ncase 508: case 532:\n this.$ = [$$[$0]];\nbreak;\ncase 510: case 511: case 512: case 513: case 514:\n $$[$0].constraintid = $$[$0-1]; this.$ = $$[$0]; \nbreak;\ncase 517:\n this.$ = {type: 'CHECK', expression: $$[$0-1]}; \nbreak;\ncase 518:\n this.$ = {type: 'PRIMARY KEY', columns: $$[$0-1], clustered:($$[$0-3]+'').toUpperCase()}; \nbreak;\ncase 519:\n this.$ = {type: 'FOREIGN KEY', columns: $$[$0-5], fktable: $$[$0-2], fkcolumns: $$[$0-1]}; \nbreak;\ncase 525:\n\n\t\t\tthis.$ = {type: 'UNIQUE', columns: $$[$0-1], clustered:($$[$0-3]+'').toUpperCase()};\r\n\nbreak;\ncase 534:\n this.$ = new yy.ColumnDef({columnid:$$[$0-2]}); yy.extend(this.$,$$[$0-1]); yy.extend(this.$,$$[$0]);\nbreak;\ncase 535:\n this.$ = new yy.ColumnDef({columnid:$$[$0-1]}); yy.extend(this.$,$$[$0]); \nbreak;\ncase 536:\n this.$ = new yy.ColumnDef({columnid:$$[$0], dbtypeid: ''}); \nbreak;\ncase 537:\n this.$ = {dbtypeid: $$[$0-5], dbsize: $$[$0-3], dbprecision: +$$[$0-1]} \nbreak;\ncase 538:\n this.$ = {dbtypeid: $$[$0-3], dbsize: $$[$0-1]} \nbreak;\ncase 539:\n this.$ = {dbtypeid: $$[$0]} \nbreak;\ncase 540:\n this.$ = {dbtypeid: 'ENUM', enumvalues: $$[$0-1]} \nbreak;\ncase 541:\n this.$ = $$[$0-1]; $$[$0-1].dbtypeid += '[' + $$[$0] + ']'; \nbreak;\ncase 543: case 750:\n this.$ = +$$[$0]; \nbreak;\ncase 545:\nthis.$ = undefined\nbreak;\ncase 547:\n\n\t\t\tyy.extend($$[$0-1],$$[$0]); this.$ = $$[$0-1];\r\n\nbreak;\ncase 550:\nthis.$ = {primarykey:true};\nbreak;\ncase 551: case 552:\nthis.$ = {foreignkey:{table:$$[$0-1], columnid: $$[$0]}};\nbreak;\ncase 553:\n this.$ = {identity: {value:$$[$0-3],step:$$[$0-1]}} \nbreak;\ncase 554:\n this.$ = {identity: {value:1,step:1}} \nbreak;\ncase 555: case 557:\nthis.$ = {\"default\":$$[$0]};\nbreak;\ncase 556:\nthis.$ = {\"default\":$$[$0-1]};\nbreak;\ncase 558:\nthis.$ = {null:true}; \nbreak;\ncase 559:\nthis.$ = {notnull:true}; \nbreak;\ncase 560:\nthis.$ = {check:$$[$0]}; \nbreak;\ncase 561:\nthis.$ = {unique:true}; \nbreak;\ncase 562:\nthis.$ = {\"onupdate\":$$[$0]};\nbreak;\ncase 563:\nthis.$ = {\"onupdate\":$$[$0-1]};\nbreak;\ncase 564:\n this.$ = new yy.DropTable({tables:$$[$0],type:$$[$0-2]}); yy.extend(this.$, $$[$0-1]); \nbreak;\ncase 568:\n this.$ = {ifexists: true};\nbreak;\ncase 569:\n this.$ = new yy.AlterTable({table:$$[$0-3], renameto: $$[$0]});\nbreak;\ncase 570:\n this.$ = new yy.AlterTable({table:$$[$0-3], addcolumn: $$[$0]});\nbreak;\ncase 571:\n this.$ = new yy.AlterTable({table:$$[$0-3], modifycolumn: $$[$0]});\nbreak;\ncase 572:\n this.$ = new yy.AlterTable({table:$$[$0-5], renamecolumn: $$[$0-2], to: $$[$0]});\nbreak;\ncase 573:\n this.$ = new yy.AlterTable({table:$$[$0-3], dropcolumn: $$[$0]});\nbreak;\ncase 574:\n this.$ = new yy.AlterTable({table:$$[$0-2], renameto: $$[$0]});\nbreak;\ncase 575:\n this.$ = new yy.AttachDatabase({databaseid:$$[$0], engineid:$$[$0-2].toUpperCase() });\nbreak;\ncase 576:\n this.$ = new yy.AttachDatabase({databaseid:$$[$0-3], engineid:$$[$0-5].toUpperCase(), args:$$[$0-1] });\nbreak;\ncase 577:\n this.$ = new yy.AttachDatabase({databaseid:$$[$0-2], engineid:$$[$0-4].toUpperCase(), as:$$[$0] });\nbreak;\ncase 578:\n this.$ = new yy.AttachDatabase({databaseid:$$[$0-5], engineid:$$[$0-7].toUpperCase(), as:$$[$0], args:$$[$0-3]});\nbreak;\ncase 579:\n this.$ = new yy.DetachDatabase({databaseid:$$[$0]});\nbreak;\ncase 580:\n this.$ = new yy.CreateDatabase({databaseid:$$[$0] }); yy.extend(this.$,$$[$0]); \nbreak;\ncase 581:\n this.$ = new yy.CreateDatabase({engineid:$$[$0-4].toUpperCase(), databaseid:$$[$0-1], as:$$[$0] }); yy.extend(this.$,$$[$0-2]); \nbreak;\ncase 582:\n this.$ = new yy.CreateDatabase({engineid:$$[$0-7].toUpperCase(), databaseid:$$[$0-4], args:$$[$0-2], as:$$[$0] }); yy.extend(this.$,$$[$0-5]); \nbreak;\ncase 583:\n this.$ = new yy.CreateDatabase({engineid:$$[$0-4].toUpperCase(), \r\n\t\t    as:$$[$0], args:[$$[$0-1]] }); yy.extend(this.$,$$[$0-2]); \nbreak;\ncase 584:\nthis.$ = undefined;\nbreak;\ncase 586: case 587:\n this.$ = new yy.UseDatabase({databaseid: $$[$0] });\nbreak;\ncase 588:\n this.$ = new yy.DropDatabase({databaseid: $$[$0] }); yy.extend(this.$,$$[$0-1]); \nbreak;\ncase 589: case 590:\n this.$ = new yy.DropDatabase({databaseid: $$[$0], engineid:$$[$0-3].toUpperCase() }); yy.extend(this.$,$$[$0-1]); \nbreak;\ncase 591:\n this.$ = new yy.CreateIndex({indexid:$$[$0-5], table:$$[$0-3], columns:$$[$0-1]})\nbreak;\ncase 592:\n this.$ = new yy.CreateIndex({indexid:$$[$0-5], table:$$[$0-3], columns:$$[$0-1], unique:true})\nbreak;\ncase 593:\n this.$ = new yy.DropIndex({indexid:$$[$0]});\nbreak;\ncase 594:\n this.$ = new yy.ShowDatabases();\nbreak;\ncase 595:\n this.$ = new yy.ShowDatabases({like:$$[$0]});\nbreak;\ncase 596:\n this.$ = new yy.ShowDatabases({engineid:$$[$0-1].toUpperCase() });\nbreak;\ncase 597:\n this.$ = new yy.ShowDatabases({engineid:$$[$0-3].toUpperCase() , like:$$[$0]});\nbreak;\ncase 598:\n this.$ = new yy.ShowTables();\nbreak;\ncase 599:\n this.$ = new yy.ShowTables({like:$$[$0]});\nbreak;\ncase 600:\n this.$ = new yy.ShowTables({databaseid: $$[$0]});\nbreak;\ncase 601:\n this.$ = new yy.ShowTables({like:$$[$0], databaseid: $$[$0-2]});\nbreak;\ncase 602:\n this.$ = new yy.ShowColumns({table: $$[$0]});\nbreak;\ncase 603:\n this.$ = new yy.ShowColumns({table: $$[$0-2], databaseid:$$[$0]});\nbreak;\ncase 604:\n this.$ = new yy.ShowIndex({table: $$[$0]});\nbreak;\ncase 605:\n this.$ = new yy.ShowIndex({table: $$[$0-2], databaseid: $$[$0]});\nbreak;\ncase 606:\n this.$ = new yy.ShowCreateTable({table: $$[$0]});\nbreak;\ncase 607:\n this.$ = new yy.ShowCreateTable({table: $$[$0-2], databaseid:$$[$0]});\nbreak;\ncase 608:\n\n\t\t\tthis.$ = new yy.CreateTable({table:$$[$0-6],view:true,select:$$[$0-1],viewcolumns:$$[$0-4]}); \r\n\t\t\tyy.extend(this.$,$$[$0-9]); \r\n\t\t\tyy.extend(this.$,$$[$0-7]); \r\n\nbreak;\ncase 609:\n\n\t\t\tthis.$ = new yy.CreateTable({table:$$[$0-3],view:true,select:$$[$0-1]}); \r\n\t\t\tyy.extend(this.$,$$[$0-6]); \r\n\t\t\tyy.extend(this.$,$$[$0-4]); \r\n\nbreak;\ncase 613:\n this.$ = new yy.DropTable({tables:$$[$0], view:true}); yy.extend(this.$, $$[$0-1]); \nbreak;\ncase 614: case 760:\n this.$ = new yy.ExpressionStatement({expression:$$[$0]}); \nbreak;\ncase 615:\n this.$ = new yy.Source({url:$$[$0].value}); \nbreak;\ncase 616:\n this.$ = new yy.Assert({value:$$[$0]}); \nbreak;\ncase 617:\n this.$ = new yy.Assert({value:$$[$0].value}); \nbreak;\ncase 618:\n this.$ = new yy.Assert({value:$$[$0], message:$$[$0-2]}); \nbreak;\ncase 620: case 631: case 633:\n this.$ = $$[$0].value; \nbreak;\ncase 621: case 629:\n this.$ = +$$[$0].value; \nbreak;\ncase 622:\n this.$ = (!!$$[$0].value); \nbreak;\ncase 630:\n this.$ = \"\"+$$[$0].value; \nbreak;\ncase 639:\n this.$ = {}; \nbreak;\ncase 642:\n this.$ = []; \nbreak;\ncase 643:\n yy.extend($$[$0-2],$$[$0]); this.$ = $$[$0-2]; \nbreak;\ncase 645:\n this.$ = {}; this.$[$$[$0-2].substr(1,$$[$0-2].length-2)] = $$[$0]; \nbreak;\ncase 646: case 647:\n this.$ = {}; this.$[$$[$0-2]] = $$[$0]; \nbreak;\ncase 650:\n this.$ = new yy.SetVariable({variable:$$[$0-2].toLowerCase(), value:$$[$0]});\nbreak;\ncase 651:\n this.$ = new yy.SetVariable({variable:$$[$0-1].toLowerCase(), value:$$[$0]});\nbreak;\ncase 652:\n this.$ = new yy.SetVariable({variable:$$[$0-2], expression:$$[$0]});\nbreak;\ncase 653:\n this.$ = new yy.SetVariable({variable:$$[$0-3], props: $$[$0-2], expression:$$[$0]});\nbreak;\ncase 654:\n this.$ = new yy.SetVariable({variable:$$[$0-2], expression:$$[$0], method:$$[$0-3]});\nbreak;\ncase 655:\n this.$ = new yy.SetVariable({variable:$$[$0-3], props: $$[$0-2], expression:$$[$0], method:$$[$0-4]});\nbreak;\ncase 656:\nthis.$ = '@'; \nbreak;\ncase 657:\nthis.$ = '$'; \nbreak;\ncase 663:\n this.$ = true; \nbreak;\ncase 664:\n this.$ = false; \nbreak;\ncase 665:\n this.$ = new yy.CommitTransaction(); \nbreak;\ncase 666:\n this.$ = new yy.RollbackTransaction(); \nbreak;\ncase 667:\n this.$ = new yy.BeginTransaction(); \nbreak;\ncase 668:\n this.$ = new yy.If({expression:$$[$0-2],thenstat:$$[$0-1], elsestat:$$[$0]}); \r\n\t\t\tif($$[$0-1].exists) this.$.exists = $$[$0-1].exists;\r\n\t\t\tif($$[$0-1].queries) this.$.queries = $$[$0-1].queries;\r\n\nbreak;\ncase 669:\n\n\t\t\tthis.$ = new yy.If({expression:$$[$0-1],thenstat:$$[$0]}); \r\n\t\t\tif($$[$0].exists) this.$.exists = $$[$0].exists;\r\n\t\t\tif($$[$0].queries) this.$.queries = $$[$0].queries;\r\n\nbreak;\ncase 670:\nthis.$ = $$[$0];\nbreak;\ncase 671:\n this.$ = new yy.While({expression:$$[$0-1],loopstat:$$[$0]}); \r\n\t\t\tif($$[$0].exists) this.$.exists = $$[$0].exists;\r\n\t\t\tif($$[$0].queries) this.$.queries = $$[$0].queries;\r\n\nbreak;\ncase 672:\n this.$ = new yy.Continue(); \nbreak;\ncase 673:\n this.$ = new yy.Break(); \nbreak;\ncase 674:\n this.$ = new yy.BeginEnd({statements:$$[$0-1]}); \nbreak;\ncase 675:\n this.$ = new yy.Print({exprs:$$[$0]});\nbreak;\ncase 676:\n this.$ = new yy.Print({select:$$[$0]});\nbreak;\ncase 677:\n this.$ = new yy.Require({paths:$$[$0]}); \nbreak;\ncase 678:\n this.$ = new yy.Require({plugins:$$[$0]}); \nbreak;\ncase 679: case 680:\nthis.$ = $$[$0].toUpperCase(); \nbreak;\ncase 681:\n this.$ = new yy.Echo({expr:$$[$0]}); \nbreak;\ncase 686:\n this.$ = new yy.Declare({declares:$$[$0]}); \nbreak;\ncase 689:\n this.$ = {variable: $$[$0-1]}; yy.extend(this.$,$$[$0]); \nbreak;\ncase 690:\n this.$ = {variable: $$[$0-2]}; yy.extend(this.$,$$[$0]); \nbreak;\ncase 691:\n this.$ = {variable: $$[$0-3], expression:$$[$0]}; yy.extend(this.$,$$[$0-2]);\nbreak;\ncase 692:\n this.$ = {variable: $$[$0-4], expression:$$[$0]}; yy.extend(this.$,$$[$0-2]);\nbreak;\ncase 693:\n this.$ = new yy.TruncateTable({table:$$[$0]});\nbreak;\ncase 694:\n\n\t\t\tthis.$ = new yy.Merge(); yy.extend(this.$,$$[$0-4]); yy.extend(this.$,$$[$0-3]); \r\n\t\t\tyy.extend(this.$,$$[$0-2]);\r\n\t\t\tyy.extend(this.$,{matches:$$[$0-1]});yy.extend(this.$,$$[$0]);\r\n\nbreak;\ncase 695: case 696:\n this.$ = {into: $$[$0]}; \nbreak;\ncase 698:\n this.$ = {on:$$[$0]}; \nbreak;\ncase 703:\n this.$ = {matched:true, action:$$[$0]} \nbreak;\ncase 704:\n this.$ = {matched:true, expr: $$[$0-2], action:$$[$0]} \nbreak;\ncase 705:\n this.$ = {delete:true}; \nbreak;\ncase 706:\n this.$ = {update:$$[$0]}; \nbreak;\ncase 707: case 708:\n this.$ = {matched:false, bytarget: true, action:$$[$0]} \nbreak;\ncase 709: case 710:\n this.$ = {matched:false, bytarget: true, expr:$$[$0-2], action:$$[$0]} \nbreak;\ncase 711:\n this.$ = {matched:false, bysource: true, action:$$[$0]} \nbreak;\ncase 712:\n this.$ = {matched:false, bysource: true, expr:$$[$0-2], action:$$[$0]} \nbreak;\ncase 713:\n this.$ = {insert:true, values:$$[$0]}; \nbreak;\ncase 714:\n this.$ = {insert:true, values:$$[$0], columns:$$[$0-3]}; \nbreak;\ncase 715:\n this.$ = {insert:true, defaultvalues:true}; \nbreak;\ncase 716:\n this.$ = {insert:true, defaultvalues:true, columns:$$[$0-3]}; \nbreak;\ncase 718:\n this.$ = {output:{columns:$$[$0]}} \nbreak;\ncase 719:\n this.$ = {output:{columns:$$[$0-3], intovar: $$[$0], method:$$[$0-1]}} \nbreak;\ncase 720:\n this.$ = {output:{columns:$$[$0-2], intotable: $$[$0]}} \nbreak;\ncase 721:\n this.$ = {output:{columns:$$[$0-5], intotable: $$[$0-3], intocolumns:$$[$0-1]}} \nbreak;\ncase 722:\n\n\t\t\tthis.$ = new yy.CreateVertex({class:$$[$0-3],sharp:$$[$0-2], name:$$[$0-1]}); \r\n\t\t\tyy.extend(this.$,$$[$0]); \r\n\nbreak;\ncase 725:\n this.$ = {sets:$$[$0]}; \nbreak;\ncase 726:\n this.$ = {content:$$[$0]}; \nbreak;\ncase 727:\n this.$ = {select:$$[$0]}; \nbreak;\ncase 728:\n\n\t\t\tthis.$ = new yy.CreateEdge({from:$$[$0-3],to:$$[$0-1],name:$$[$0-5]});\r\n\t\t\tyy.extend(this.$,$$[$0]); \r\n\nbreak;\ncase 729:\n this.$ = new yy.CreateGraph({graph:$$[$0]}); \nbreak;\ncase 730:\n this.$ = new yy.CreateGraph({from:$$[$0]}); \nbreak;\ncase 733:\n\n\t\t\tthis.$ = $$[$0-2]; \r\n\t\t\tif($$[$0-1]) this.$.json = new yy.Json({value:$$[$0-1]});\r\n\t\t\tif($$[$0]) this.$.as = $$[$0];\r\n\nbreak;\ncase 734:\n\n\t\t\tthis.$ = {source:$$[$0-6], target: $$[$0]};\r\n\t\t\tif($$[$0-3]) this.$.json = new yy.Json({value:$$[$0-3]});\r\n\t\t\tif($$[$0-2]) this.$.as = $$[$0-2];\r\n\t\t\tyy.extend(this.$,$$[$0-4]);\r\n\nbreak;\ncase 735:\n\n\t\t\tthis.$ = {source:$$[$0-5], target: $$[$0]};\r\n\t\t\tif($$[$0-2]) this.$.json = new yy.Json({value:$$[$0-3]});\r\n\t\t\tif($$[$0-1]) this.$.as = $$[$0-2];\r\n\nbreak;\ncase 736:\n\n\t\t\tthis.$ = {source:$$[$0-2], target: $$[$0]};\r\n\nbreak;\ncase 740:\n this.$ = {vars:$$[$0], method:$$[$0-1]}; \nbreak;\ncase 743: case 744:\n\n\t\t\tvar s3 = $$[$0-1];\r\n\t\t\tthis.$ = {prop:$$[$0-3], sharp:$$[$0-2], name:(typeof s3 == 'undefined')?undefined:s3.substr(1,s3.length-2), class:$$[$0]}; \r\n\nbreak;\ncase 745:\n\n\t\t\tvar s2 = $$[$0-1];\r\n\t\t\tthis.$ = {sharp:$$[$0-2], name:(typeof s2 == 'undefined')?undefined:s2.substr(1,s2.length-2), class:$$[$0]}; \r\n\nbreak;\ncase 746:\n\n\t\t\tvar s1 = $$[$0-1];\r\n\t\t\tthis.$ = {name:(typeof s1 == 'undefined')?undefined:s1.substr(1,s1.length-2), class:$$[$0]}; \r\n\nbreak;\ncase 747:\n\n\t\t\tthis.$ = {class:$$[$0]}; \r\n\nbreak;\ncase 753:\n this.$ = new yy.AddRule({left:$$[$0-2], right:$$[$0]}); \nbreak;\ncase 754:\n this.$ = new yy.AddRule({right:$$[$0]}); \nbreak;\ncase 757:\n this.$ = new yy.Term({termid:$$[$0]}); \nbreak;\ncase 758:\n this.$ = new yy.Term({termid:$$[$0-3],args:$$[$0-1]}); \nbreak;\ncase 761:\n\n\t\t\tthis.$ = new yy.CreateTrigger({trigger:$$[$0-6], when:$$[$0-5], action:$$[$0-4], table:$$[$0-2], statement:$$[$0]}); \r\n\t\t\tif($$[$0].exists) this.$.exists = $$[$0].exists;\r\n\t\t\tif($$[$0].queries) this.$.queries = $$[$0].queries;\r\n\nbreak;\ncase 762:\n\n\t\t\tthis.$ = new yy.CreateTrigger({trigger:$$[$0-5], when:$$[$0-4], action:$$[$0-3], table:$$[$0-1], funcid:$$[$0]}); \r\n\nbreak;\ncase 763:\n\n\t\t\tthis.$ = new yy.CreateTrigger({trigger:$$[$0-6], when:$$[$0-4], action:$$[$0-3], table:$$[$0-5], statement:$$[$0]}); \r\n\t\t\tif($$[$0].exists) this.$.exists = $$[$0].exists;\r\n\t\t\tif($$[$0].queries) this.$.queries = $$[$0].queries;\r\n\nbreak;\ncase 764: case 765: case 767:\n this.$ = 'AFTER'; \nbreak;\ncase 766:\n this.$ = 'BEFORE'; \nbreak;\ncase 768:\n this.$ = 'INSTEADOF'; \nbreak;\ncase 769:\n this.$ = 'INSERT'; \nbreak;\ncase 770:\n this.$ = 'DELETE'; \nbreak;\ncase 771:\n this.$ = 'UPDATE'; \nbreak;\ncase 772:\n this.$ = new yy.DropTrigger({trigger:$$[$0]}); \nbreak;\ncase 773:\n this.$ = new yy.Reindex({indexid:$$[$0]});\nbreak;\ncase 1047: case 1067: case 1069: case 1071: case 1075: case 1077: case 1079: case 1081: case 1083: case 1085:\nthis.$ = [];\nbreak;\ncase 1048: case 1062: case 1064: case 1068: case 1070: case 1072: case 1076: case 1078: case 1080: case 1082: case 1084: case 1086:\n$$[$0-1].push($$[$0]);\nbreak;\ncase 1061: case 1063:\nthis.$ = [$$[$0]];\nbreak;\n}\n},\ntable: [o([10,602,764],$V0,{8:1,9:2,12:3,13:4,17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,2:$V1,4:$V2,5:$V3,14:$V4,53:$V5,72:$V6,89:$V7,124:$V8,146:$V9,156:$Va,189:$Vb,266:$Vc,267:$Vd,290:$Ve,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),{1:[3]},{10:[1,105],11:106,602:$VH,764:$VI},o($VJ,[2,8]),o($VJ,[2,9]),o($VK,[2,12]),o($VJ,$V0,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,12:109,2:$V1,4:$V2,5:$V3,15:[1,110],53:$V5,72:$V6,89:$V7,124:$V8,146:$V9,156:$Va,189:$Vb,266:$Vc,267:$Vd,290:$Ve,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),o($VK,[2,14]),o($VK,[2,15]),o($VK,[2,16]),o($VK,[2,17]),o($VK,[2,18]),o($VK,[2,19]),o($VK,[2,20]),o($VK,[2,21]),o($VK,[2,22]),o($VK,[2,23]),o($VK,[2,24]),o($VK,[2,25]),o($VK,[2,26]),o($VK,[2,27]),o($VK,[2,28]),o($VK,[2,29]),o($VK,[2,30]),o($VK,[2,31]),o($VK,[2,32]),o($VK,[2,33]),o($VK,[2,34]),o($VK,[2,35]),o($VK,[2,36]),o($VK,[2,37]),o($VK,[2,38]),o($VK,[2,39]),o($VK,[2,40]),o($VK,[2,41]),o($VK,[2,42]),o($VK,[2,43]),o($VK,[2,44]),o($VK,[2,45]),o($VK,[2,46]),o($VK,[2,47]),o($VK,[2,48]),o($VK,[2,49]),o($VK,[2,50]),o($VK,[2,51]),o($VK,[2,52]),o($VK,[2,53]),o($VK,[2,54]),o($VK,[2,55]),o($VK,[2,56]),o($VK,[2,57]),o($VK,[2,58]),o($VK,[2,59]),o($VK,[2,60]),o($VK,[2,61]),o($VK,[2,62]),o($VK,[2,63]),o($VK,[2,64]),o($VK,[2,65]),o($VK,[2,66]),o($VK,[2,67]),{353:[1,111]},{2:$V1,3:112,4:$V2,5:$V3},{2:$V1,3:114,4:$V2,5:$V3,156:$VL,200:113,290:$VM,291:$VN,292:$VO,293:$VP},o($VQ,[2,501],{3:121,348:125,2:$V1,4:$V2,5:$V3,134:$VR,135:$VS,187:[1,123],193:[1,122],268:[1,129],269:[1,130],357:[1,131],405:[1,120],472:[1,124],509:[1,128]}),{145:$VT,449:132,450:133},{183:[1,135]},{405:[1,136]},{2:$V1,3:138,4:$V2,5:$V3,130:[1,144],193:[1,139],353:[1,143],397:140,405:[1,137],410:[1,141],509:[1,142]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:145,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vt1,$Vu1,{340:204,171:[1,205],198:$Vv1}),o($Vt1,$Vu1,{340:207,198:$Vv1}),{2:$V1,3:219,4:$V2,5:$V3,77:$Vw1,132:$Vx1,143:$VY,144:212,145:$VZ,152:$V$,156:$VL,181:$V31,198:[1,210],199:213,200:215,201:214,202:217,209:209,213:$Vy1,214:218,290:$VM,291:$VN,292:$VO,293:$VP,302:$Vn1,419:190,420:$Vr1,424:$Vs1,453:208},{2:$V1,3:221,4:$V2,5:$V3},{353:[1,222]},o($Vz1,[2,1043],{80:223,106:224,107:[1,225]}),o($VA1,[2,1047],{90:226}),{2:$V1,3:230,4:$V2,5:$V3,190:[1,228],193:[1,231],267:[1,227],353:[1,232],405:[1,229]},{353:[1,233]},{2:$V1,3:236,4:$V2,5:$V3,73:234,75:235},o([306,602,764],$V0,{12:3,13:4,17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,9:238,2:$V1,4:$V2,5:$V3,14:$V4,53:$V5,72:$V6,89:$V7,124:$V8,146:$V9,156:$Va,189:$Vb,266:$Vc,267:$Vd,290:$Ve,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,435:[1,237],436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),{435:[1,239]},{435:[1,240]},{2:$V1,3:242,4:$V2,5:$V3,405:[1,241]},{2:$V1,3:244,4:$V2,5:$V3,199:243},o($VB1,[2,311]),{113:245,132:$VW,296:$Vj1},{2:$V1,3:114,4:$V2,5:$V3,113:251,131:$VV,132:[1,248],143:$VY,144:246,145:$VC1,152:$V$,156:$VL,181:$V31,196:250,200:255,201:254,257:252,258:253,265:$VD1,274:247,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,302:$Vn1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:257,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VK,[2,672]),o($VK,[2,673]),{2:$V1,3:168,4:$V2,5:$V3,40:259,56:165,77:$VU,79:75,89:$V7,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:258,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,184:99,189:$Vb,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:266,4:$V2,5:$V3,113:263,132:$VW,296:$Vj1,444:261,445:262,446:264,447:$VE1},{2:$V1,3:267,4:$V2,5:$V3,143:$VF1,145:$VG1,431:268},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:271,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{505:[1,272]},{2:$V1,3:100,4:$V2,5:$V3,504:274,506:273},{2:$V1,3:114,4:$V2,5:$V3,156:$VL,200:275,290:$VM,291:$VN,292:$VO,293:$VP},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:276,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VH1,$VI1,{186:280,164:[1,279],185:[1,277],187:[1,278],195:$VJ1}),o($VK1,[2,757],{77:[1,282]}),o([2,4,5,10,72,77,78,93,98,107,118,128,131,132,137,143,145,152,154,156,162,164,168,169,179,180,181,183,185,187,195,198,232,245,247,265,266,270,271,273,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,302,303,306,310,312,317,420,424,602,764],[2,152],{149:[1,283],150:[1,284],190:[1,285],191:[1,286],192:[1,287],193:[1,288],194:[1,289]}),o($VL1,[2,1]),o($VL1,[2,2]),{6:290,131:[1,439],172:[1,462],245:[1,411],285:[1,373],286:[1,407],370:[1,404],381:[1,295],402:[1,297],410:[1,549],414:[1,471],416:[1,443],417:[1,509],433:[1,442],435:[1,525],440:[1,342],460:[1,418],464:[1,448],470:[1,341],514:[1,307],515:[1,299],516:[1,399],518:[1,291],519:[1,292],520:[1,293],521:[1,294],522:[1,296],523:[1,298],524:[1,300],525:[1,301],526:[1,302],527:[1,303],528:[1,304],529:[1,305],530:[1,306],531:[1,308],532:[1,309],533:[1,310],534:[1,311],535:[1,312],536:[1,313],537:[1,314],538:[1,315],539:[1,316],540:[1,317],541:[1,318],542:[1,319],543:[1,320],544:[1,321],545:[1,322],546:[1,323],547:[1,324],548:[1,325],549:[1,326],550:[1,327],551:[1,328],552:[1,329],553:[1,330],554:[1,331],555:[1,332],556:[1,333],557:[1,334],558:[1,335],559:[1,336],560:[1,337],561:[1,338],562:[1,339],563:[1,340],564:[1,343],565:[1,344],566:[1,345],567:[1,346],568:[1,347],569:[1,348],570:[1,349],571:[1,350],572:[1,351],573:[1,352],574:[1,353],575:[1,354],576:[1,355],577:[1,356],578:[1,357],579:[1,358],580:[1,359],581:[1,360],582:[1,361],583:[1,362],584:[1,363],585:[1,364],586:[1,365],587:[1,366],588:[1,367],589:[1,368],590:[1,369],591:[1,370],592:[1,371],593:[1,372],594:[1,374],595:[1,375],596:[1,376],597:[1,377],598:[1,378],599:[1,379],600:[1,380],601:[1,381],602:[1,382],603:[1,383],604:[1,384],605:[1,385],606:[1,386],607:[1,387],608:[1,388],609:[1,389],610:[1,390],611:[1,391],612:[1,392],613:[1,393],614:[1,394],615:[1,395],616:[1,396],617:[1,397],618:[1,398],619:[1,400],620:[1,401],621:[1,402],622:[1,403],623:[1,405],624:[1,406],625:[1,408],626:[1,409],627:[1,410],628:[1,412],629:[1,413],630:[1,414],631:[1,415],632:[1,416],633:[1,417],634:[1,419],635:[1,420],636:[1,421],637:[1,422],638:[1,423],639:[1,424],640:[1,425],641:[1,426],642:[1,427],643:[1,428],644:[1,429],645:[1,430],646:[1,431],647:[1,432],648:[1,433],649:[1,434],650:[1,435],651:[1,436],652:[1,437],653:[1,438],654:[1,440],655:[1,441],656:[1,444],657:[1,445],658:[1,446],659:[1,447],660:[1,449],661:[1,450],662:[1,451],663:[1,452],664:[1,453],665:[1,454],666:[1,455],667:[1,456],668:[1,457],669:[1,458],670:[1,459],671:[1,460],672:[1,461],673:[1,463],674:[1,464],675:[1,465],676:[1,466],677:[1,467],678:[1,468],679:[1,469],680:[1,470],681:[1,472],682:[1,473],683:[1,474],684:[1,475],685:[1,476],686:[1,477],687:[1,478],688:[1,479],689:[1,480],690:[1,481],691:[1,482],692:[1,483],693:[1,484],694:[1,485],695:[1,486],696:[1,487],697:[1,488],698:[1,489],699:[1,490],700:[1,491],701:[1,492],702:[1,493],703:[1,494],704:[1,495],705:[1,496],706:[1,497],707:[1,498],708:[1,499],709:[1,500],710:[1,501],711:[1,502],712:[1,503],713:[1,504],714:[1,505],715:[1,506],716:[1,507],717:[1,508],718:[1,510],719:[1,511],720:[1,512],721:[1,513],722:[1,514],723:[1,515],724:[1,516],725:[1,517],726:[1,518],727:[1,519],728:[1,520],729:[1,521],730:[1,522],731:[1,523],732:[1,524],733:[1,526],734:[1,527],735:[1,528],736:[1,529],737:[1,530],738:[1,531],739:[1,532],740:[1,533],741:[1,534],742:[1,535],743:[1,536],744:[1,537],745:[1,538],746:[1,539],747:[1,540],748:[1,541],749:[1,542],750:[1,543],751:[1,544],752:[1,545],753:[1,546],754:[1,547],755:[1,548],756:[1,550],757:[1,551],758:[1,552],759:[1,553],760:[1,554],761:[1,555],762:[1,556],763:[1,557]},{1:[2,6]},o($VJ,$V0,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,12:558,2:$V1,4:$V2,5:$V3,53:$V5,72:$V6,89:$V7,124:$V8,146:$V9,156:$Va,189:$Vb,266:$Vc,267:$Vd,290:$Ve,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),o($VM1,[2,1041]),o($VM1,[2,1042]),o($VJ,[2,10]),{16:[1,559]},{2:$V1,3:244,4:$V2,5:$V3,199:560},{405:[1,561]},o($VK,[2,760]),{77:$VN1},{77:[1,563]},{77:$VO1},{77:[1,565]},{77:[1,566]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:567,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vt1,$VP1,{350:568,156:$VQ1}),{405:[1,570]},{2:$V1,3:571,4:$V2,5:$V3},{193:[1,572]},{2:$V1,3:578,4:$V2,5:$V3,132:$VR1,137:$VS1,143:$VF1,145:$VG1,152:$VT1,183:[1,574],431:585,473:573,474:575,475:576,478:577,482:582,493:579,497:581},{130:[1,589],349:586,353:[1,588],410:[1,587]},{113:591,132:$VW,183:[2,1141],296:$Vj1,471:590},o($VU1,[2,1135],{465:592,3:593,2:$V1,4:$V2,5:$V3}),{2:$V1,3:594,4:$V2,5:$V3},{4:[1,595]},{4:[1,596]},o($VQ,[2,502]),o($VK,[2,686],{74:[1,597]}),o($VV1,[2,687]),{2:$V1,3:598,4:$V2,5:$V3},{2:$V1,3:244,4:$V2,5:$V3,199:599},{2:$V1,3:600,4:$V2,5:$V3},o($Vt1,$VW1,{398:601,156:$VX1}),{405:[1,603]},{2:$V1,3:604,4:$V2,5:$V3},o($Vt1,$VW1,{398:605,156:$VX1}),o($Vt1,$VW1,{398:606,156:$VX1}),{2:$V1,3:607,4:$V2,5:$V3},o($VY1,[2,1129]),o($VY1,[2,1130]),o($VK,$V0,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,12:608,114:625,327:637,2:$V1,4:$V2,5:$V3,53:$V5,72:$V6,89:$V7,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$V22,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,146:$V9,154:$Va2,156:$Va,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,189:$Vb,266:$Vc,267:$Vd,290:$Ve,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),o($VB1,[2,288]),o($VB1,[2,289]),o($VB1,[2,290]),o($VB1,[2,291]),o($VB1,[2,292]),o($VB1,[2,293]),o($VB1,[2,294]),o($VB1,[2,295]),o($VB1,[2,296]),o($VB1,[2,297]),o($VB1,[2,298]),o($VB1,[2,299]),o($VB1,[2,300]),o($VB1,[2,301]),o($VB1,[2,302]),o($VB1,[2,303]),o($VB1,[2,304]),o($VB1,[2,305]),{2:$V1,3:168,4:$V2,5:$V3,26:654,27:653,36:649,40:648,56:165,77:$VU,79:75,89:$V7,94:651,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,184:99,189:$Vb,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,264:650,265:$V41,266:$Vc,267:[1,655],270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:[1,652],291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,339:$Vh,419:190,420:$Vr1,424:$Vs1},o($VB1,[2,309]),o($VB1,[2,310]),{77:[1,656]},o([2,4,5,10,53,72,74,76,78,89,93,95,98,99,107,112,115,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$Vy2,{77:$VN1,116:[1,657]}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:658,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:659,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:660,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:661,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:662,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VB1,[2,283]),o([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,242,243,245,247,249,265,266,267,270,271,273,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,302,303,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,343,356,368,369,373,374,396,400,401,404,406,408,409,415,417,418,420,424,426,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764,765,766],[2,356]),o($Vz2,[2,357]),o($Vz2,[2,358]),o($Vz2,$VA2),o($Vz2,[2,360]),o([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,297,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,343,356,368,369,373,374,396,400,401,404,406,408,409,417,418,420,424,426,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],[2,361]),{2:$V1,3:664,4:$V2,5:$V3,131:[1,665],301:663},{2:$V1,3:666,4:$V2,5:$V3},o($Vz2,[2,367]),o($Vz2,[2,368]),{2:$V1,3:667,4:$V2,5:$V3,77:$VB2,113:669,131:$VV,132:$VW,143:$VY,152:$V$,181:$V31,196:670,201:672,257:671,294:$Vh1,295:$Vi1,296:$Vj1,302:$Vn1,419:673,424:$Vs1},{77:[1,674]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:675,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,304:676,307:677,308:$VC2,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{77:[1,679]},{77:[1,680]},o($VD2,[2,624]),{2:$V1,3:695,4:$V2,5:$V3,77:$VE2,111:690,113:688,131:$VV,132:$VW,143:$VY,144:685,145:$VC1,152:$V$,156:$VL,181:$V31,196:687,200:693,201:692,257:689,258:691,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,300:[1,683],302:$Vn1,419:190,420:$Vr1,421:681,422:684,423:686,424:$Vs1,427:682},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:696,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:697,4:$V2,5:$V3,156:$VL,200:698,290:$VM,291:$VN,292:$VO,293:$VP},{77:[2,336]},{77:[2,337]},{77:[2,338]},{77:[2,339]},{77:[2,340]},{77:[2,341]},{77:[2,342]},{77:[2,343]},{77:[2,344]},{2:$V1,3:704,4:$V2,5:$V3,131:$VF2,132:$VG2,425:699,426:[1,700],428:701},{2:$V1,3:244,4:$V2,5:$V3,199:705},{290:[1,706]},o($Vt1,[2,472]),{2:$V1,3:244,4:$V2,5:$V3,199:707},{231:[1,709],454:708},{231:[2,695]},{2:$V1,3:219,4:$V2,5:$V3,77:$Vw1,132:$Vx1,143:$VY,144:212,145:$VZ,152:$V$,156:$VL,181:$V31,199:213,200:215,201:214,202:217,209:710,213:$Vy1,214:218,290:$VM,291:$VN,292:$VO,293:$VP,302:$Vn1,419:190,420:$Vr1,424:$Vs1},{40:711,79:75,89:$V7,184:99,189:$Vb},o($VH2,[2,1091],{210:712,76:[1,713]}),o($VI2,[2,185],{3:714,2:$V1,4:$V2,5:$V3,76:[1,715],154:[1,716]}),o($VI2,[2,189],{3:717,2:$V1,4:$V2,5:$V3,76:[1,718]}),o($VI2,[2,190],{3:719,2:$V1,4:$V2,5:$V3,76:[1,720]}),o($VI2,[2,193]),o($VI2,[2,194],{3:721,2:$V1,4:$V2,5:$V3,76:[1,722]}),o($VI2,[2,197],{3:723,2:$V1,4:$V2,5:$V3,76:[1,724]}),o([2,4,5,10,72,74,76,78,93,98,118,128,154,162,168,169,183,206,208,222,223,224,225,226,227,228,229,230,231,232,245,247,306,310,602,764],$VJ2,{77:$VN1,116:$VK2}),o([2,4,5,10,72,74,76,78,93,98,118,128,162,168,169,206,208,222,223,224,225,226,227,228,229,230,231,232,245,247,306,310,602,764],[2,200]),o($VK,[2,773]),{2:$V1,3:244,4:$V2,5:$V3,199:726},o($VL2,$VM2,{81:727,198:$VN2}),o($Vz1,[2,1044]),o($VO2,[2,1057],{108:729,190:[1,730]}),o([10,78,183,306,310,602,764],$VM2,{419:190,81:731,117:732,3:733,114:736,144:758,158:768,160:769,2:$V1,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,112:$VS2,115:$V$1,116:$V02,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,198:$VN2,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,420:$Vr1,424:$Vs1}),{353:[1,782]},{183:[1,783]},o($VK,[2,594],{112:[1,784]}),{405:[1,785]},{183:[1,786]},o($VK,[2,598],{112:[1,787],183:[1,788]}),{2:$V1,3:244,4:$V2,5:$V3,199:789},{40:790,74:[1,791],79:75,89:$V7,184:99,189:$Vb},o($Vv3,[2,70]),{76:[1,792]},o($VK,[2,667]),{11:106,306:[1,793],602:$VH,764:$VI},o($VK,[2,665]),o($VK,[2,666]),{2:$V1,3:794,4:$V2,5:$V3},o($VK,[2,587]),{146:[1,795]},o([2,4,5,10,53,72,74,76,77,78,89,95,124,128,143,145,146,148,149,152,154,156,181,183,187,189,230,266,267,290,297,302,306,310,335,338,339,343,344,356,368,369,373,374,396,400,401,402,403,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,505,507,508,514,515,516,517,602,764],$VJ2,{116:$VK2}),o($VK,[2,615]),o($VK,[2,616]),o($VK,[2,617]),o($VK,$VA2,{74:[1,796]}),{77:$VB2,113:669,131:$VV,132:$VW,143:$VY,152:$V$,181:$V31,196:670,201:672,257:671,294:$Vh1,295:$Vi1,296:$Vj1,302:$Vn1,419:673,424:$Vs1},o($Vw3,[2,320]),o($Vw3,[2,321]),o($Vw3,[2,322]),o($Vw3,[2,323]),o($Vw3,[2,324]),o($Vw3,[2,325]),o($Vw3,[2,326]),o($VK,$V0,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,114:625,327:637,12:797,2:$V1,4:$V2,5:$V3,53:$V5,72:$V6,89:$V7,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$V22,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,146:$V9,154:$Va2,156:$Va,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,189:$Vb,266:$Vc,267:$Vd,290:$Ve,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),o($VK,[2,675],{74:$Vx3}),o($VK,[2,676]),o($Vy3,[2,354],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VK,[2,677],{74:[1,800]}),o($VK,[2,678],{74:[1,801]}),o($VV1,[2,683]),o($VV1,[2,685]),o($VV1,[2,679]),o($VV1,[2,680]),{114:807,115:$V$1,116:$V02,124:[1,802],230:$VA3,429:803,430:804,433:$VB3},{2:$V1,3:808,4:$V2,5:$V3},o($Vt1,[2,656]),o($Vt1,[2,657]),o($VK,[2,614],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{2:$V1,3:100,4:$V2,5:$V3,504:274,506:809},o($VK,[2,754],{74:$VC3}),o($VD3,[2,756]),o($VK,[2,759]),o($VK,[2,681],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VE3,$VI1,{186:811,195:$VJ1}),o($VE3,$VI1,{186:812,195:$VJ1}),o($VE3,$VI1,{186:813,195:$VJ1}),o($VF3,[2,1087],{255:146,200:147,256:148,111:149,254:150,196:151,257:152,113:153,258:154,201:155,202:156,259:157,260:158,261:159,144:161,262:162,263:163,56:165,158:167,3:168,419:190,188:814,174:815,253:816,94:817,2:$V1,4:$V2,5:$V3,77:$VU,131:$VV,132:$VW,137:$VX,143:$VY,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,179:$V11,180:$V21,181:$V31,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,420:$Vr1,424:$Vs1}),{77:[1,819],131:$VV,196:818},{2:$V1,3:100,4:$V2,5:$V3,504:274,506:820},o($VG3,[2,153]),o($VG3,[2,154]),o($VG3,[2,155]),o($VG3,[2,156]),o($VG3,[2,157]),o($VG3,[2,158]),o($VG3,[2,159]),o($VL1,[2,3]),o($VL1,[2,774]),o($VL1,[2,775]),o($VL1,[2,776]),o($VL1,[2,777]),o($VL1,[2,778]),o($VL1,[2,779]),o($VL1,[2,780]),o($VL1,[2,781]),o($VL1,[2,782]),o($VL1,[2,783]),o($VL1,[2,784]),o($VL1,[2,785]),o($VL1,[2,786]),o($VL1,[2,787]),o($VL1,[2,788]),o($VL1,[2,789]),o($VL1,[2,790]),o($VL1,[2,791]),o($VL1,[2,792]),o($VL1,[2,793]),o($VL1,[2,794]),o($VL1,[2,795]),o($VL1,[2,796]),o($VL1,[2,797]),o($VL1,[2,798]),o($VL1,[2,799]),o($VL1,[2,800]),o($VL1,[2,801]),o($VL1,[2,802]),o($VL1,[2,803]),o($VL1,[2,804]),o($VL1,[2,805]),o($VL1,[2,806]),o($VL1,[2,807]),o($VL1,[2,808]),o($VL1,[2,809]),o($VL1,[2,810]),o($VL1,[2,811]),o($VL1,[2,812]),o($VL1,[2,813]),o($VL1,[2,814]),o($VL1,[2,815]),o($VL1,[2,816]),o($VL1,[2,817]),o($VL1,[2,818]),o($VL1,[2,819]),o($VL1,[2,820]),o($VL1,[2,821]),o($VL1,[2,822]),o($VL1,[2,823]),o($VL1,[2,824]),o($VL1,[2,825]),o($VL1,[2,826]),o($VL1,[2,827]),o($VL1,[2,828]),o($VL1,[2,829]),o($VL1,[2,830]),o($VL1,[2,831]),o($VL1,[2,832]),o($VL1,[2,833]),o($VL1,[2,834]),o($VL1,[2,835]),o($VL1,[2,836]),o($VL1,[2,837]),o($VL1,[2,838]),o($VL1,[2,839]),o($VL1,[2,840]),o($VL1,[2,841]),o($VL1,[2,842]),o($VL1,[2,843]),o($VL1,[2,844]),o($VL1,[2,845]),o($VL1,[2,846]),o($VL1,[2,847]),o($VL1,[2,848]),o($VL1,[2,849]),o($VL1,[2,850]),o($VL1,[2,851]),o($VL1,[2,852]),o($VL1,[2,853]),o($VL1,[2,854]),o($VL1,[2,855]),o($VL1,[2,856]),o($VL1,[2,857]),o($VL1,[2,858]),o($VL1,[2,859]),o($VL1,[2,860]),o($VL1,[2,861]),o($VL1,[2,862]),o($VL1,[2,863]),o($VL1,[2,864]),o($VL1,[2,865]),o($VL1,[2,866]),o($VL1,[2,867]),o($VL1,[2,868]),o($VL1,[2,869]),o($VL1,[2,870]),o($VL1,[2,871]),o($VL1,[2,872]),o($VL1,[2,873]),o($VL1,[2,874]),o($VL1,[2,875]),o($VL1,[2,876]),o($VL1,[2,877]),o($VL1,[2,878]),o($VL1,[2,879]),o($VL1,[2,880]),o($VL1,[2,881]),o($VL1,[2,882]),o($VL1,[2,883]),o($VL1,[2,884]),o($VL1,[2,885]),o($VL1,[2,886]),o($VL1,[2,887]),o($VL1,[2,888]),o($VL1,[2,889]),o($VL1,[2,890]),o($VL1,[2,891]),o($VL1,[2,892]),o($VL1,[2,893]),o($VL1,[2,894]),o($VL1,[2,895]),o($VL1,[2,896]),o($VL1,[2,897]),o($VL1,[2,898]),o($VL1,[2,899]),o($VL1,[2,900]),o($VL1,[2,901]),o($VL1,[2,902]),o($VL1,[2,903]),o($VL1,[2,904]),o($VL1,[2,905]),o($VL1,[2,906]),o($VL1,[2,907]),o($VL1,[2,908]),o($VL1,[2,909]),o($VL1,[2,910]),o($VL1,[2,911]),o($VL1,[2,912]),o($VL1,[2,913]),o($VL1,[2,914]),o($VL1,[2,915]),o($VL1,[2,916]),o($VL1,[2,917]),o($VL1,[2,918]),o($VL1,[2,919]),o($VL1,[2,920]),o($VL1,[2,921]),o($VL1,[2,922]),o($VL1,[2,923]),o($VL1,[2,924]),o($VL1,[2,925]),o($VL1,[2,926]),o($VL1,[2,927]),o($VL1,[2,928]),o($VL1,[2,929]),o($VL1,[2,930]),o($VL1,[2,931]),o($VL1,[2,932]),o($VL1,[2,933]),o($VL1,[2,934]),o($VL1,[2,935]),o($VL1,[2,936]),o($VL1,[2,937]),o($VL1,[2,938]),o($VL1,[2,939]),o($VL1,[2,940]),o($VL1,[2,941]),o($VL1,[2,942]),o($VL1,[2,943]),o($VL1,[2,944]),o($VL1,[2,945]),o($VL1,[2,946]),o($VL1,[2,947]),o($VL1,[2,948]),o($VL1,[2,949]),o($VL1,[2,950]),o($VL1,[2,951]),o($VL1,[2,952]),o($VL1,[2,953]),o($VL1,[2,954]),o($VL1,[2,955]),o($VL1,[2,956]),o($VL1,[2,957]),o($VL1,[2,958]),o($VL1,[2,959]),o($VL1,[2,960]),o($VL1,[2,961]),o($VL1,[2,962]),o($VL1,[2,963]),o($VL1,[2,964]),o($VL1,[2,965]),o($VL1,[2,966]),o($VL1,[2,967]),o($VL1,[2,968]),o($VL1,[2,969]),o($VL1,[2,970]),o($VL1,[2,971]),o($VL1,[2,972]),o($VL1,[2,973]),o($VL1,[2,974]),o($VL1,[2,975]),o($VL1,[2,976]),o($VL1,[2,977]),o($VL1,[2,978]),o($VL1,[2,979]),o($VL1,[2,980]),o($VL1,[2,981]),o($VL1,[2,982]),o($VL1,[2,983]),o($VL1,[2,984]),o($VL1,[2,985]),o($VL1,[2,986]),o($VL1,[2,987]),o($VL1,[2,988]),o($VL1,[2,989]),o($VL1,[2,990]),o($VL1,[2,991]),o($VL1,[2,992]),o($VL1,[2,993]),o($VL1,[2,994]),o($VL1,[2,995]),o($VL1,[2,996]),o($VL1,[2,997]),o($VL1,[2,998]),o($VL1,[2,999]),o($VL1,[2,1000]),o($VL1,[2,1001]),o($VL1,[2,1002]),o($VL1,[2,1003]),o($VL1,[2,1004]),o($VL1,[2,1005]),o($VL1,[2,1006]),o($VL1,[2,1007]),o($VL1,[2,1008]),o($VL1,[2,1009]),o($VL1,[2,1010]),o($VL1,[2,1011]),o($VL1,[2,1012]),o($VL1,[2,1013]),o($VL1,[2,1014]),o($VL1,[2,1015]),o($VL1,[2,1016]),o($VL1,[2,1017]),o($VL1,[2,1018]),o($VL1,[2,1019]),o($VL1,[2,1020]),o($VL1,[2,1021]),o($VL1,[2,1022]),o($VL1,[2,1023]),o($VL1,[2,1024]),o($VL1,[2,1025]),o($VL1,[2,1026]),o($VL1,[2,1027]),o($VL1,[2,1028]),o($VL1,[2,1029]),o($VL1,[2,1030]),o($VL1,[2,1031]),o($VL1,[2,1032]),o($VL1,[2,1033]),o($VL1,[2,1034]),o($VL1,[2,1035]),o($VL1,[2,1036]),o($VL1,[2,1037]),o($VL1,[2,1038]),o($VL1,[2,1039]),o($VL1,[2,1040]),o($VJ,[2,7]),o($VJ,$V0,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,12:821,2:$V1,4:$V2,5:$V3,53:$V5,72:$V6,89:$V7,124:$V8,146:$V9,156:$Va,189:$Vb,266:$Vc,267:$Vd,290:$Ve,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),{396:[1,825],401:[1,822],402:[1,823],403:[1,824]},{2:$V1,3:826,4:$V2,5:$V3},o($VE3,[2,1111],{289:827,767:829,78:[1,828],164:[1,831],185:[1,830]}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:832,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:833,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:834,4:$V2,5:$V3,132:[1,835]},{2:$V1,3:836,4:$V2,5:$V3,132:[1,837]},{2:$V1,3:838,4:$V2,5:$V3,99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{2:$V1,3:839,4:$V2,5:$V3},{154:[1,840]},o($VH3,$VP1,{350:841,156:$VQ1}),{230:[1,842]},{2:$V1,3:843,4:$V2,5:$V3},o($VK,[2,729],{74:$VI3}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:845,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VD3,[2,732]),o($VJ3,[2,1143],{419:190,476:846,144:847,139:$VK3,141:$VK3,145:$VC1,420:$Vr1,424:$Vs1}),{139:[1,848],141:[1,849]},o($VL3,$VM3,{490:851,493:852,77:[1,850],137:$VS1}),o($VN3,[2,1167],{494:853,132:[1,854]}),o($VO3,[2,1171],{496:855,497:856,152:$VT1}),o($VO3,[2,747]),o($VP3,[2,739]),{2:$V1,3:857,4:$V2,5:$V3,131:[1,858]},{2:$V1,3:859,4:$V2,5:$V3},{2:$V1,3:860,4:$V2,5:$V3},o($Vt1,$VP1,{350:861,156:$VQ1}),o($Vt1,$VP1,{350:862,156:$VQ1}),o($VY1,[2,491]),o($VY1,[2,492]),{183:[1,863]},{183:[2,1142]},o($VQ3,[2,1137],{466:864,469:865,137:[1,866]}),o($VU1,[2,1136]),o($VR3,$VS3,{510:867,95:$VT3,230:[1,868],514:$VU3,515:$VV3,516:$VW3}),{76:[1,873]},{76:[1,874]},{145:$VT,450:875},{4:$VX3,7:879,76:[1,877],272:876,387:878,389:$VY3},o($VK,[2,456],{128:[1,882]}),o($VK,[2,579]),{2:$V1,3:883,4:$V2,5:$V3},{298:[1,884]},o($VH3,$VW1,{398:885,156:$VX1}),o($VK,[2,593]),{2:$V1,3:244,4:$V2,5:$V3,199:887,399:886},{2:$V1,3:244,4:$V2,5:$V3,199:887,399:888},o($VK,[2,772]),o($VJ,[2,669],{438:889,310:[1,890]}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:891,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:892,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:893,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:894,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:895,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:896,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:897,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:898,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:899,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:900,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:901,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:902,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:903,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:904,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:905,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:906,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:907,4:$V2,5:$V3,77:[1,909],131:$VV,156:$VL,196:908,200:910,290:$VM,291:$VN,292:$VO,293:$VP},{2:$V1,3:911,4:$V2,5:$V3,77:[1,913],131:$VV,156:$VL,196:912,200:914,290:$VM,291:$VN,292:$VO,293:$VP},o($VZ3,[2,440],{255:146,200:147,256:148,111:149,254:150,196:151,257:152,113:153,258:154,201:155,202:156,259:157,260:158,261:159,144:161,262:162,263:163,56:165,158:167,3:168,419:190,94:915,2:$V1,4:$V2,5:$V3,77:$VU,131:$VV,132:$VW,137:$VX,143:$VY,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,179:$V11,180:$V21,181:$V31,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,420:$Vr1,424:$Vs1}),o($VZ3,[2,441],{255:146,200:147,256:148,111:149,254:150,196:151,257:152,113:153,258:154,201:155,202:156,259:157,260:158,261:159,144:161,262:162,263:163,56:165,158:167,3:168,419:190,94:916,2:$V1,4:$V2,5:$V3,77:$VU,131:$VV,132:$VW,137:$VX,143:$VY,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,179:$V11,180:$V21,181:$V31,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,420:$Vr1,424:$Vs1}),o($VZ3,[2,442],{255:146,200:147,256:148,111:149,254:150,196:151,257:152,113:153,258:154,201:155,202:156,259:157,260:158,261:159,144:161,262:162,263:163,56:165,158:167,3:168,419:190,94:917,2:$V1,4:$V2,5:$V3,77:$VU,131:$VV,132:$VW,137:$VX,143:$VY,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,179:$V11,180:$V21,181:$V31,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,420:$Vr1,424:$Vs1}),o($VZ3,[2,443],{255:146,200:147,256:148,111:149,254:150,196:151,257:152,113:153,258:154,201:155,202:156,259:157,260:158,261:159,144:161,262:162,263:163,56:165,158:167,3:168,419:190,94:918,2:$V1,4:$V2,5:$V3,77:$VU,131:$VV,132:$VW,137:$VX,143:$VY,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,179:$V11,180:$V21,181:$V31,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,420:$Vr1,424:$Vs1}),o($VZ3,$V_3,{255:146,200:147,256:148,111:149,254:150,196:151,257:152,113:153,258:154,201:155,202:156,259:157,260:158,261:159,144:161,262:162,263:163,56:165,158:167,3:168,419:190,94:919,2:$V1,4:$V2,5:$V3,77:$VU,131:$VV,132:$VW,137:$VX,143:$VY,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,179:$V11,180:$V21,181:$V31,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,420:$Vr1,424:$Vs1}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:920,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:921,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VZ3,[2,445],{255:146,200:147,256:148,111:149,254:150,196:151,257:152,113:153,258:154,201:155,202:156,259:157,260:158,261:159,144:161,262:162,263:163,56:165,158:167,3:168,419:190,94:922,2:$V1,4:$V2,5:$V3,77:$VU,131:$VV,132:$VW,137:$VX,143:$VY,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,179:$V11,180:$V21,181:$V31,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,420:$Vr1,424:$Vs1}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:923,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:924,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{164:[1,926],166:[1,928],328:925,334:[1,927]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:929,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:930,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:695,4:$V2,5:$V3,77:[1,931],111:934,145:$V$3,156:$VL,200:935,202:933,290:$VM,291:$VN,292:$VO,293:$VP,329:932},{99:[1,937],297:[1,938]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:939,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:940,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:941,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{4:$VX3,7:879,272:942,387:878,389:$VY3},o($V04,[2,88]),o($V04,[2,89]),{78:[1,943]},{78:[1,944]},{78:[1,945]},{78:[1,946],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($Vt1,$Vu1,{340:207,77:$VO1,198:$Vv1}),{78:[2,1107]},{78:[2,1108]},{134:$VR,135:$VS},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:947,152:$V$,154:$V01,156:$VL,158:167,164:[1,949],179:$V11,180:$V21,181:$V31,185:[1,948],196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:950,4:$V2,5:$V3,149:$V14,180:[1,952]},o([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,118,122,128,129,130,131,132,134,135,137,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,314,330,331,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],[2,416],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,332:$Vw2}),o($V24,[2,417],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,180:$Ve2,312:$Vg2,316:$Vj2}),o($V24,[2,418],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,180:$Ve2,312:$Vg2,316:$Vj2}),o($V34,[2,419],{114:625,327:637,316:$Vj2}),o($V34,[2,420],{114:625,327:637,316:$Vj2}),o($Vz2,[2,365]),o($Vz2,[2,1113]),o($Vz2,[2,1114]),o($Vz2,[2,366]),o([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,231,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],[2,362]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:953,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VD2,[2,620]),o($VD2,[2,621]),o($VD2,[2,622]),o($VD2,[2,623]),o($VD2,[2,625]),{40:954,79:75,89:$V7,184:99,189:$Vb},{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,304:955,307:677,308:$VC2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{305:956,306:$V44,307:957,308:$VC2,310:$V54},o($V64,[2,372]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:959,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:960,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{4:$VX3,7:879,272:961,387:878,389:$VY3},o($VD2,[2,626]),{74:[1,963],300:[1,962]},o($VD2,[2,642]),o($V74,[2,649]),o($V84,[2,627]),o($V84,[2,628]),o($V84,[2,629]),o($V84,[2,630]),o($V84,[2,631]),o($V84,[2,632]),o($V84,[2,633]),o($V84,[2,634]),o($V84,[2,635]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:964,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o([2,4,5,10,53,72,74,76,78,89,93,95,98,99,107,112,115,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,426,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],$Vy2,{77:$VN1,116:$V94}),{74:$Vx3,300:[1,966]},o($Va4,[2,314],{77:$VN1}),o($VB1,[2,315]),{74:[1,968],426:[1,967]},o($VD2,[2,639]),o($Vb4,[2,644]),{152:[1,969]},{152:[1,970]},{152:[1,971]},{40:976,77:[1,975],79:75,89:$V7,143:$VY,144:979,145:$VC1,149:$Vc4,152:$V$,181:$V31,184:99,189:$Vb,201:980,302:$Vn1,341:972,342:973,343:[1,974],344:$Vd4,419:190,420:$Vr1,424:$Vs1},o($Vt1,$Vu1,{340:981,198:$Vv1}),{77:$Ve4,143:$VY,144:979,145:$VC1,149:$Vc4,152:$V$,181:$V31,201:980,302:$Vn1,341:982,342:983,344:$Vd4,419:190,420:$Vr1,424:$Vs1},{230:[1,986],455:985},{2:$V1,3:219,4:$V2,5:$V3,77:$Vw1,132:$Vx1,143:$VY,144:212,145:$VZ,152:$V$,156:$VL,181:$V31,199:213,200:215,201:214,202:217,209:987,213:$Vy1,214:218,290:$VM,291:$VN,292:$VO,293:$VP,302:$Vn1,419:190,420:$Vr1,424:$Vs1},{231:[2,696]},{78:[1,988]},o($VI2,[2,1093],{211:989,3:990,2:$V1,4:$V2,5:$V3}),o($VH2,[2,1092]),o($VI2,[2,183]),{2:$V1,3:991,4:$V2,5:$V3},{212:[1,992]},o($VI2,[2,187]),{2:$V1,3:993,4:$V2,5:$V3},o($VI2,[2,191]),{2:$V1,3:994,4:$V2,5:$V3},o($VI2,[2,195]),{2:$V1,3:995,4:$V2,5:$V3},o($VI2,[2,198]),{2:$V1,3:996,4:$V2,5:$V3},{2:$V1,3:997,4:$V2,5:$V3},{148:[1,998]},o($Vf4,[2,172],{82:999,183:[1,1000]}),{2:$V1,3:219,4:$V2,5:$V3,132:[1,1005],143:$VY,145:[1,1006],152:$V$,156:$VL,181:$V31,199:1001,200:1002,201:1003,202:1004,290:$VM,291:$VN,292:$VO,293:$VP,302:$Vn1},{2:$V1,3:1011,4:$V2,5:$V3,109:1007,110:1008,111:1009,112:$Vg4},o($VO2,[2,1058]),o($Vh4,[2,1049],{91:1012,182:1013,183:[1,1014]}),o($VA1,[2,1048],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o([2,4,5,10,72,74,76,78,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,198,280,281,282,283,284,285,286,287,288,306,310,420,424,602,764],[2,90],{77:[1,1019]}),{119:[1,1020]},o($Vl4,[2,93]),{2:$V1,3:1021,4:$V2,5:$V3},o($Vl4,[2,95]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1022,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1023,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,112:$VS2,114:736,115:$V$1,116:$V02,117:1025,118:$VT2,122:$VU2,123:$VV2,124:$VW2,125:1024,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{77:[1,1026]},{77:[1,1027]},{77:[1,1028]},{77:[1,1029]},o($Vl4,[2,104]),o($Vl4,[2,105]),o($Vl4,[2,106]),o($Vl4,[2,107]),o($Vl4,[2,108]),o($Vl4,[2,109]),{2:$V1,3:1030,4:$V2,5:$V3},{2:$V1,3:1031,4:$V2,5:$V3,133:[1,1032]},o($Vl4,[2,113]),o($Vl4,[2,114]),o($Vl4,[2,115]),o($Vl4,[2,116]),o($Vl4,[2,117]),o($Vl4,[2,118]),{2:$V1,3:1033,4:$V2,5:$V3,77:$VB2,113:669,131:$VV,132:$VW,143:$VY,152:$V$,181:$V31,196:670,201:672,257:671,294:$Vh1,295:$Vi1,296:$Vj1,302:$Vn1,419:673,424:$Vs1},{145:[1,1034]},{77:[1,1035]},{145:[1,1036]},o($Vl4,[2,123]),{77:[1,1037]},{2:$V1,3:1038,4:$V2,5:$V3},{77:[1,1039]},{77:[1,1040]},{77:[1,1041]},{77:[1,1042]},{77:[1,1043],164:[1,1044]},{77:[1,1045]},{77:[1,1046]},{77:[1,1047]},{77:[1,1048]},{77:[1,1049]},{77:[1,1050]},{77:[1,1051]},{77:[1,1052]},{77:[1,1053]},{77:[2,1073]},{77:[2,1074]},{2:$V1,3:244,4:$V2,5:$V3,199:1054},{2:$V1,3:244,4:$V2,5:$V3,199:1055},{113:1056,132:$VW,296:$Vj1},o($VK,[2,596],{112:[1,1057]}),{2:$V1,3:244,4:$V2,5:$V3,199:1058},{113:1059,132:$VW,296:$Vj1},{2:$V1,3:1060,4:$V2,5:$V3},o($VK,[2,693]),o($VK,[2,68]),{2:$V1,3:236,4:$V2,5:$V3,75:1061},{77:[1,1062]},o($VK,[2,674]),o($VK,[2,586]),{2:$V1,3:1011,4:$V2,5:$V3,111:1065,143:$Vm4,145:$Vn4,147:1063,336:1064,337:1066},{144:1069,145:$VC1,419:190,420:$Vr1,424:$Vs1},o($VK,[2,671]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1070,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VZ3,$V_3,{255:146,200:147,256:148,111:149,254:150,196:151,257:152,113:153,258:154,201:155,202:156,259:157,260:158,261:159,144:161,262:162,263:163,56:165,158:167,3:168,419:190,94:1071,2:$V1,4:$V2,5:$V3,77:$VU,131:$VV,132:$VW,137:$VX,143:$VY,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,179:$V11,180:$V21,181:$V31,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,420:$Vr1,424:$Vs1}),{113:1072,132:$VW,296:$Vj1},{2:$V1,3:266,4:$V2,5:$V3,446:1073,447:$VE1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1075,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,230:$VA3,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1,429:1074,433:$VB3},o($VK,[2,651]),{114:1077,115:$V$1,116:$V02,124:[1,1076]},o($VK,[2,663]),o($VK,[2,664]),{2:$V1,3:1079,4:$V2,5:$V3,77:$Vo4,131:$Vp4,432:1078},{114:807,115:$V$1,116:$V02,124:[1,1082],430:1083},o($VK,[2,753],{74:$VC3}),{2:$V1,3:100,4:$V2,5:$V3,504:1084},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:817,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,174:1085,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,253:816,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:817,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,174:1086,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,253:816,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:817,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,174:1087,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,253:816,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VF3,[2,151]),o($VF3,[2,1088],{74:$Vq4}),o($Vr4,[2,273]),o($Vr4,[2,280],{114:625,327:637,3:1090,113:1092,2:$V1,4:$V2,5:$V3,76:[1,1089],99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,131:[1,1091],132:$VW,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,296:$Vj1,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VH1,[2,1089],{197:1093,765:[1,1094]}),{131:$VV,196:1095},{74:$VC3,78:[1,1096]},o($VJ,[2,11]),{148:[1,1097],190:[1,1098]},{190:[1,1099]},{190:[1,1100]},{190:[1,1101]},o($VK,[2,575],{76:[1,1103],77:[1,1102]}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1104,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vz2,[2,346]),o($VE3,[2,1112]),o($VE3,[2,1109]),o($VE3,[2,1110]),{74:$Vx3,78:[1,1105]},{74:$Vx3,78:[1,1106]},{74:[1,1107]},{74:[1,1108]},{74:[1,1109]},{74:[1,1110]},o($Vz2,[2,353]),o($VK,[2,580]),{298:[1,1111]},{2:$V1,3:1112,4:$V2,5:$V3,113:1113,132:$VW,296:$Vj1},{2:$V1,3:244,4:$V2,5:$V3,199:1114},{230:[1,1115]},{2:$V1,3:578,4:$V2,5:$V3,132:$VR1,137:$VS1,143:$VF1,145:$VG1,152:$VT1,431:585,474:1116,475:576,478:577,482:582,493:579,497:581},o($VK,[2,730],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VD3,[2,1145],{477:1117,483:1118,76:$Vs4}),o($VJ3,[2,1144]),{2:$V1,3:1122,4:$V2,5:$V3,132:$VR1,137:$VS1,144:1121,145:$VC1,152:$VT1,419:190,420:$Vr1,424:$Vs1,475:1120,493:579,497:581},{2:$V1,3:1122,4:$V2,5:$V3,132:$VR1,137:$VS1,143:$VF1,145:$VG1,152:$VT1,431:585,475:1124,478:1123,482:582,493:579,497:581},{2:$V1,3:578,4:$V2,5:$V3,132:$VR1,137:$VS1,143:$VF1,145:$VG1,152:$VT1,431:585,473:1125,474:575,475:576,478:577,482:582,493:579,497:581},o($VN3,[2,1163],{491:1126,132:[1,1127]}),o($VL3,[2,1162]),o($VO3,[2,1169],{495:1128,497:1129,152:$VT1}),o($VN3,[2,1168]),o($VO3,[2,746]),o($VO3,[2,1172]),o($VL3,[2,749]),o($VL3,[2,750]),o($VO3,[2,748]),o($VP3,[2,740]),{2:$V1,3:244,4:$V2,5:$V3,199:1130},{2:$V1,3:244,4:$V2,5:$V3,199:1131},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1132,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vt4,[2,1139],{467:1133,113:1134,132:$VW,296:$Vj1}),o($VQ3,[2,1138]),{2:$V1,3:1135,4:$V2,5:$V3},{335:$Vu4,338:$Vv4,339:$Vw4,511:1136},{2:$V1,3:244,4:$V2,5:$V3,199:1140},o($VR3,[2,765]),o($VR3,[2,766]),o($VR3,[2,767]),{129:[1,1141]},{266:[1,1142]},{266:[1,1143]},o($VV1,[2,688]),o($VV1,[2,689],{124:[1,1144]}),{4:$VX3,7:879,272:1145,387:878,389:$VY3},o([2,4,10,53,72,74,76,77,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,297,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,343,356,368,369,373,374,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],[2,542],{5:[1,1146]}),o([2,5,10,53,72,74,76,78,89,93,95,98,99,107,112,115,116,118,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,230,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,297,300,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,343,356,368,369,373,374,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],[2,539],{4:[1,1148],77:[1,1147]}),{77:[1,1149]},o($Vx4,[2,4]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1150,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VK,[2,588]),o($VH3,[2,568]),{2:$V1,3:1151,4:$V2,5:$V3,113:1152,132:$VW,296:$Vj1},o($VK,[2,564],{74:$Vy4}),o($VV1,[2,566]),o($VK,[2,613],{74:$Vy4}),o($VK,[2,668]),o($VK,$V0,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,12:1154,2:$V1,4:$V2,5:$V3,53:$V5,72:$V6,89:$V7,124:$V8,146:$V9,156:$Va,189:$Vb,266:$Vc,267:$Vd,290:$Ve,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),o($Vz4,[2,376],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,312:$Vg2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2}),o($V34,[2,377],{114:625,327:637,316:$Vj2}),o($Vz4,[2,378],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,312:$Vg2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2}),o($VA4,[2,379],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,312:$Vg2,314:[1,1155],316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2}),o($VA4,[2,381],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,312:$Vg2,314:[1,1156],316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2}),o($VB1,[2,383],{114:625,327:637}),o($V24,[2,384],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,180:$Ve2,312:$Vg2,316:$Vj2}),o($V24,[2,385],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,180:$Ve2,312:$Vg2,316:$Vj2}),o($VB4,[2,386],{114:625,327:637,115:$V$1,116:$V02,123:$V12,136:$V42,312:$Vg2,316:$Vj2}),o($VB4,[2,387],{114:625,327:637,115:$V$1,116:$V02,123:$V12,136:$V42,312:$Vg2,316:$Vj2}),o($VB4,[2,388],{114:625,327:637,115:$V$1,116:$V02,123:$V12,136:$V42,312:$Vg2,316:$Vj2}),o([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,112,118,122,123,124,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,179,180,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,311,313,314,315,317,318,319,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],[2,389],{114:625,327:637,115:$V$1,116:$V02,136:$V42,312:$Vg2,316:$Vj2}),o($VC4,[2,390],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,179:$Vd2,180:$Ve2,312:$Vg2,316:$Vj2,317:$Vk2}),o($VC4,[2,391],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,179:$Vd2,180:$Ve2,312:$Vg2,316:$Vj2,317:$Vk2}),o($VC4,[2,392],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,179:$Vd2,180:$Ve2,312:$Vg2,316:$Vj2,317:$Vk2}),o($VC4,[2,393],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,179:$Vd2,180:$Ve2,312:$Vg2,316:$Vj2,317:$Vk2}),o($Va4,[2,394],{77:$VN1}),o($VB1,[2,395]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1157,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VB1,[2,397]),o($Va4,[2,398],{77:$VN1}),o($VB1,[2,399]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1158,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VB1,[2,401]),o($VD4,[2,402],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VD4,[2,403],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VD4,[2,404],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VD4,[2,405],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o([2,4,5,10,53,72,89,99,124,139,140,146,154,156,170,171,189,266,267,290,306,310,320,321,322,323,324,325,326,330,331,333,335,338,339,396,400,401,404,406,408,409,417,418,434,436,437,439,440,441,442,443,447,448,451,452,505,507,508,517,602,764],$VE4,{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VD4,[2,407],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VD4,[2,408],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VD4,[2,409],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VD4,[2,410],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VD4,[2,411],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),{77:[1,1159]},{77:[2,446]},{77:[2,447]},{77:[2,448]},o($VF4,[2,414],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,332:$Vw2}),o([2,4,5,10,53,72,74,76,77,78,89,93,95,98,107,118,122,128,129,130,131,132,134,135,137,143,145,146,148,149,150,152,156,162,164,166,168,169,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,314,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],[2,415],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2}),{2:$V1,3:168,4:$V2,5:$V3,40:1160,56:165,77:$VU,78:[1,1162],79:75,89:$V7,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1161,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,184:99,189:$Vb,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VB1,[2,428]),o($VB1,[2,430]),o($VB1,[2,437]),o($VB1,[2,438]),{2:$V1,3:667,4:$V2,5:$V3,77:[1,1163]},{2:$V1,3:695,4:$V2,5:$V3,77:[1,1164],111:934,145:$V$3,156:$VL,200:935,202:1166,290:$VM,291:$VN,292:$VO,293:$VP,329:1165},o($VB1,[2,435]),o($VF4,[2,432],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,332:$Vw2}),o($VF4,[2,433],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,332:$Vw2}),o([2,4,5,10,53,72,74,76,77,78,89,93,95,98,99,107,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,189,198,206,208,222,223,224,225,226,227,228,229,232,239,242,243,245,247,266,267,280,281,282,283,284,285,286,287,288,290,296,300,306,308,309,310,314,320,321,322,323,324,325,326,330,331,332,333,335,338,339,396,400,401,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,464,470,505,507,508,517,602,764],[2,434],{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2}),o($VB1,[2,436]),o($VB1,[2,306]),o($VB1,[2,307]),o($VB1,[2,308]),o($VB1,[2,421]),{74:$Vx3,78:[1,1167]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1168,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1169,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VB1,$VG4),o($VH4,[2,286]),o($VB1,[2,282]),{78:[1,1171],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1172]},{305:1173,306:$V44,307:957,308:$VC2,310:$V54},{306:[1,1174]},o($V64,[2,371]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1175,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,309:[1,1176],311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{76:[1,1177],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{74:[1,1178]},o($VD2,[2,640]),{2:$V1,3:695,4:$V2,5:$V3,77:$VE2,111:690,113:688,131:$VV,132:$VW,143:$VY,144:685,145:$VC1,152:$V$,156:$VL,181:$V31,196:687,200:693,201:692,257:689,258:691,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,300:[1,1179],302:$Vn1,419:190,420:$Vr1,422:1180,423:686,424:$Vs1},{78:[1,1181],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{2:$V1,3:1182,4:$V2,5:$V3,149:$V14},o($VB1,[2,364]),o($VD2,[2,637]),{2:$V1,3:704,4:$V2,5:$V3,131:$VF2,132:$VG2,426:[1,1183],428:1184},{2:$V1,3:695,4:$V2,5:$V3,77:$VE2,111:690,113:688,131:$VV,132:$VW,143:$VY,144:685,145:$VC1,152:$V$,156:$VL,181:$V31,196:687,200:693,201:692,257:689,258:691,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,302:$Vn1,419:190,420:$Vr1,422:1185,423:686,424:$Vs1},{2:$V1,3:695,4:$V2,5:$V3,77:$VE2,111:690,113:688,131:$VV,132:$VW,143:$VY,144:685,145:$VC1,152:$V$,156:$VL,181:$V31,196:687,200:693,201:692,257:689,258:691,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,302:$Vn1,419:190,420:$Vr1,422:1186,423:686,424:$Vs1},{2:$V1,3:695,4:$V2,5:$V3,77:$VE2,111:690,113:688,131:$VV,132:$VW,143:$VY,144:685,145:$VC1,152:$V$,156:$VL,181:$V31,196:687,200:693,201:692,257:689,258:691,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,302:$Vn1,419:190,420:$Vr1,422:1187,423:686,424:$Vs1},{77:$Ve4,143:$VY,144:979,145:$VC1,152:$V$,181:$V31,201:980,302:$Vn1,342:1188,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,458],{74:$VJ4}),{149:$Vc4,341:1190,344:$Vd4},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1194,100:1191,111:1193,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,345:1192,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,466]),o($VK4,[2,469]),o($VK4,[2,470]),o($VL4,[2,474]),o($VL4,[2,475]),{2:$V1,3:244,4:$V2,5:$V3,199:1195},{77:$Ve4,143:$VY,144:979,145:$VC1,152:$V$,181:$V31,201:980,302:$Vn1,342:1196,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,462],{74:$VJ4}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1194,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,345:1192,419:190,420:$Vr1,424:$Vs1},{308:$VM4,456:1197,458:1198,459:1199},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1201,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{230:[2,697]},o($VI2,[2,181],{3:1202,2:$V1,4:$V2,5:$V3,76:[1,1203]}),o($VI2,[2,182]),o($VI2,[2,1094]),o($VI2,[2,184]),o($VI2,[2,186]),o($VI2,[2,188]),o($VI2,[2,192]),o($VI2,[2,196]),o($VI2,[2,199]),o([2,4,5,10,53,72,74,76,77,78,89,93,95,98,118,124,128,143,145,146,148,149,152,154,156,162,168,169,181,183,187,189,206,208,222,223,224,225,226,227,228,229,230,231,232,245,247,266,267,290,297,302,306,310,335,338,339,343,344,356,368,369,373,374,396,400,401,402,403,404,406,408,409,417,418,420,424,434,436,437,439,440,441,442,443,447,448,451,452,505,507,508,514,515,516,517,602,764],[2,201]),{2:$V1,3:1204,4:$V2,5:$V3},o($VN4,[2,1045],{83:1205,92:1206,93:[1,1207],98:[1,1208]}),{2:$V1,3:219,4:$V2,5:$V3,77:[1,1210],132:$Vx1,143:$VY,144:212,145:$VZ,152:$V$,156:$VL,181:$V31,199:213,200:215,201:214,202:217,203:1209,209:1211,213:$Vy1,214:218,290:$VM,291:$VN,292:$VO,293:$VP,302:$Vn1,419:190,420:$Vr1,424:$Vs1},o($VL2,[2,164]),o($VL2,[2,165]),o($VL2,[2,166]),o($VL2,[2,167]),o($VL2,[2,168]),{2:$V1,3:667,4:$V2,5:$V3},o($Vz1,[2,83],{74:[1,1212]}),o($VO4,[2,85]),o($VO4,[2,86]),{113:1213,132:$VW,296:$Vj1},o([10,72,74,78,93,98,118,124,128,162,168,169,183,198,206,208,222,223,224,225,226,227,228,229,232,245,247,306,310,602,764],$Vy2,{116:$V94}),o($Vh4,[2,73]),o($Vh4,[2,1050]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1214,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vl4,[2,126]),o($Vl4,[2,144]),o($Vl4,[2,145]),o($Vl4,[2,146]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,78:[2,1065],94:260,111:149,113:153,127:1215,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1216,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{77:[1,1217]},o($Vl4,[2,94]),o([2,4,5,10,72,74,76,77,78,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,198,280,281,282,283,284,285,286,287,288,306,310,420,424,602,764],[2,96],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o([2,4,5,10,72,74,76,77,78,112,118,122,124,128,129,130,131,132,134,135,137,139,140,143,145,146,148,149,150,152,154,156,162,164,166,168,169,170,171,172,173,175,181,183,185,187,198,280,281,282,283,284,285,286,287,288,306,310,420,424,602,764],[2,97],{114:625,327:637,99:$VZ1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,78:[1,1218],112:$VS2,114:736,115:$V$1,116:$V02,117:1219,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},o($VP4,[2,1061],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,112:$VS2,114:736,115:$V$1,116:$V02,117:1221,118:$VT2,122:$VU2,123:$VV2,124:$VW2,126:1220,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1222,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1223,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1224,4:$V2,5:$V3},o($Vl4,[2,110]),o($Vl4,[2,111]),o($Vl4,[2,112]),o($Vl4,[2,119]),{2:$V1,3:1225,4:$V2,5:$V3},{2:$V1,3:1011,4:$V2,5:$V3,111:1065,143:$Vm4,145:$Vn4,147:1226,336:1064,337:1066},{2:$V1,3:1227,4:$V2,5:$V3},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1228,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vl4,[2,125]),o($VP4,[2,1067],{155:1229}),o($VP4,[2,1069],{157:1230}),o($VP4,[2,1071],{159:1231}),o($VP4,[2,1075],{161:1232}),o($VQ4,$VR4,{163:1233,178:1234}),{77:[1,1235]},o($VP4,[2,1077],{165:1236}),o($VP4,[2,1079],{167:1237}),o($VQ4,$VR4,{178:1234,163:1238}),o($VQ4,$VR4,{178:1234,163:1239}),o($VQ4,$VR4,{178:1234,163:1240}),o($VQ4,$VR4,{178:1234,163:1241}),{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,112:$VS2,114:736,115:$V$1,116:$V02,117:1242,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:817,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,174:1243,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,253:816,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VS4,[2,1081],{176:1244}),o($VK,[2,606],{183:[1,1245]}),o($VK,[2,602],{183:[1,1246]}),o($VK,[2,595]),{113:1247,132:$VW,296:$Vj1},o($VK,[2,604],{183:[1,1248]}),o($VK,[2,599]),o($VK,[2,600],{112:[1,1249]}),o($Vv3,[2,69]),{40:1250,79:75,89:$V7,184:99,189:$Vb},o($VK,[2,450],{74:$VT4,128:[1,1251]}),o($VU4,[2,451]),{124:[1,1253]},{2:$V1,3:1254,4:$V2,5:$V3},o($Vt1,[2,1115]),o($Vt1,[2,1116]),o($VK,[2,618]),o($Vy3,[2,355],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VD4,$VE4,{114:625,327:637,112:$V_1,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,332:$Vw2}),o($VV1,[2,682]),o($VV1,[2,684]),o($VK,[2,650]),o($VK,[2,652],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1255,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1079,4:$V2,5:$V3,77:$Vo4,131:$Vp4,432:1256},o($VV4,[2,659]),o($VV4,[2,660]),o($VV4,[2,661]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1257,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1258,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{114:1077,115:$V$1,116:$V02,124:[1,1259]},o($VD3,[2,755]),o($VF3,[2,148],{74:$Vq4}),o($VF3,[2,149],{74:$Vq4}),o($VF3,[2,150],{74:$Vq4}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:817,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,253:1260,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1261,4:$V2,5:$V3,113:1263,131:[1,1262],132:$VW,296:$Vj1},o($Vr4,[2,275]),o($Vr4,[2,277]),o($Vr4,[2,279]),o($VH1,[2,160]),o($VH1,[2,1090]),{78:[1,1264]},o($VK1,[2,758]),{2:$V1,3:1265,4:$V2,5:$V3},{2:$V1,3:1266,4:$V2,5:$V3},{2:$V1,3:1268,4:$V2,5:$V3,384:1267},{2:$V1,3:1268,4:$V2,5:$V3,384:1269},{2:$V1,3:1270,4:$V2,5:$V3},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1271,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1272,4:$V2,5:$V3},{74:$Vx3,78:[1,1273]},o($Vz2,[2,347]),o($Vz2,[2,348]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1274,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1275,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1276,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1277,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VH3,[2,504]),o($VK,$VW4,{407:1278,76:$VX4,77:[1,1279]}),o($VK,$VW4,{407:1281,76:$VX4}),{77:[1,1282]},{2:$V1,3:244,4:$V2,5:$V3,199:1283},o($VD3,[2,731]),o($VD3,[2,733]),o($VD3,[2,1146]),{143:$VF1,145:$VG1,431:1284},o($VY4,[2,1147],{419:190,479:1285,144:1286,145:$VC1,420:$Vr1,424:$Vs1}),{76:$Vs4,139:[2,1151],481:1287,483:1288},o([10,74,76,78,132,139,145,152,306,310,420,424,602,764],$VM3,{490:851,493:852,137:$VS1}),o($VD3,[2,736]),o($VD3,$VK3),{74:$VI3,78:[1,1289]},o($VO3,[2,1165],{492:1290,497:1291,152:$VT1}),o($VN3,[2,1164]),o($VO3,[2,745]),o($VO3,[2,1170]),o($VK,[2,490],{77:[1,1292]}),{76:[1,1294],77:[1,1293]},{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,148:[1,1295],154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($VI4,$VZ4,{79:75,184:99,468:1296,40:1299,89:$V7,146:$V_4,189:$Vb,470:$V$4}),o($Vt4,[2,1140]),o($VQ3,[2,723]),{230:[1,1300]},o($V05,[2,769]),o($V05,[2,770]),o($V05,[2,771]),o($VR3,$VS3,{510:1301,95:$VT3,514:$VU3,515:$VV3,516:$VW3}),o($VR3,[2,768]),o($VK,[2,312]),o($VK,[2,313]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1302,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VV1,[2,690],{124:[1,1303]}),o($Vx4,[2,541]),{131:[1,1305],388:1304,390:[1,1306]},o($Vx4,[2,5]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1194,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,345:1307,419:190,420:$Vr1,424:$Vs1},o($VK,[2,455],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VK,[2,589]),o($VK,[2,590]),{2:$V1,3:244,4:$V2,5:$V3,199:1308},o($VK,[2,670]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1309,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1310,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{78:[1,1311],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1312],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{2:$V1,3:168,4:$V2,5:$V3,40:1313,56:165,77:$VU,79:75,89:$V7,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1314,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,184:99,189:$Vb,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{78:[1,1315]},{74:$Vx3,78:[1,1316]},o($VB1,[2,426]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1317,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,40:1318,56:165,77:$VU,78:[1,1320],79:75,89:$V7,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1319,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,184:99,189:$Vb,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VB1,[2,429]),o($VB1,[2,431]),o($VB1,$V15,{275:1321,276:$V25}),{78:[1,1323],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1324],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{2:$V1,3:1325,4:$V2,5:$V3,180:[1,1326]},o($VD2,[2,619]),o($VB1,[2,363]),{306:[1,1327]},o($VB1,[2,370]),{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,306:[2,374],311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1328,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{4:$VX3,7:879,272:1329,387:878,389:$VY3},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1330,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VD2,[2,641]),o($V74,[2,648]),o($V84,[2,636]),o($VH4,$VG4),o($VD2,[2,638]),o($Vb4,[2,643]),o($Vb4,[2,645]),o($Vb4,[2,646]),o($Vb4,[2,647]),o($VI4,[2,457],{74:$VJ4}),{77:[1,1332],143:$VY,144:1333,145:$VC1,152:$V$,181:$V31,201:1334,302:$Vn1,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,463]),{74:$V35,78:[1,1335]},{74:$V45,78:[1,1337]},o([74,78,99,112,115,116,123,124,133,136,138,139,140,141,142,154,170,171,179,180,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,330,331,332,333],$V55),o($V65,[2,479],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{40:1341,77:$Ve4,79:75,89:$V7,143:$VY,144:979,145:$VC1,149:$Vc4,152:$V$,181:$V31,184:99,189:$Vb,201:980,302:$Vn1,341:1339,342:1340,344:$Vd4,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,461],{74:$VJ4}),o($VK,[2,717],{457:1342,458:1343,459:1344,308:$VM4,464:[1,1345]}),o($V75,[2,701]),o($V75,[2,702]),{154:[1,1347],460:[1,1346]},{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,308:[2,698],311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($VI2,[2,179]),{2:$V1,3:1348,4:$V2,5:$V3},o($VK,[2,574]),o($V85,[2,238],{84:1349,128:[1,1350]}),o($VN4,[2,1046]),{77:[1,1351]},{77:[1,1352]},o($Vf4,[2,169],{204:1353,215:1355,205:1356,216:1357,221:1360,74:$V95,206:$Va5,208:$Vb5,222:$Vc5,223:$Vd5,224:$Ve5,225:$Vf5,226:$Vg5,227:$Vh5,228:$Vi5,229:$Vj5}),{2:$V1,3:219,4:$V2,5:$V3,40:711,77:$Vw1,79:75,89:$V7,132:$Vx1,143:$VY,144:212,145:$VZ,152:$V$,156:$VL,181:$V31,184:99,189:$Vb,199:213,200:215,201:214,202:217,203:1369,209:1211,213:$Vy1,214:218,290:$VM,291:$VN,292:$VO,293:$VP,302:$Vn1,419:190,420:$Vr1,424:$Vs1},o($Vk5,[2,177]),{2:$V1,3:1011,4:$V2,5:$V3,110:1370,111:1009,112:$Vg4},o($VO4,[2,87]),o($Vh4,[2,147],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{78:[1,1371]},{74:$Vx3,78:[2,1066]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,78:[2,1059],94:1376,111:149,113:153,120:1372,121:1373,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,241:1374,242:[1,1375],254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vl4,[2,98]),o($VP4,[2,1062],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,78:[1,1377],112:$VS2,114:736,115:$V$1,116:$V02,117:1378,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},o($VP4,[2,1063],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),{78:[1,1379],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1380],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1381]},o($Vl4,[2,120]),{74:$VT4,78:[1,1382]},o($Vl4,[2,122]),{74:$Vx3,78:[1,1383]},{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,78:[1,1384],112:$VS2,114:736,115:$V$1,116:$V02,117:1385,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,78:[1,1386],112:$VS2,114:736,115:$V$1,116:$V02,117:1387,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,78:[1,1388],112:$VS2,114:736,115:$V$1,116:$V02,117:1389,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,78:[1,1390],112:$VS2,114:736,115:$V$1,116:$V02,117:1391,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{74:$Vl5,78:[1,1392]},o($V65,[2,143],{419:190,3:733,114:736,144:758,158:768,160:769,117:1394,2:$V1,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,112:$VS2,115:$V$1,116:$V02,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,420:$Vr1,424:$Vs1}),o($VQ4,$VR4,{178:1234,163:1395}),{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,78:[1,1396],112:$VS2,114:736,115:$V$1,116:$V02,117:1397,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,78:[1,1398],112:$VS2,114:736,115:$V$1,116:$V02,117:1399,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{74:$Vl5,78:[1,1400]},{74:$Vl5,78:[1,1401]},{74:$Vl5,78:[1,1402]},{74:$Vl5,78:[1,1403]},{78:[1,1404],153:1015,179:$Vi4,180:$Vj4,181:$Vk4},{74:$Vq4,78:[1,1405]},{2:$V1,3:733,4:$V2,5:$V3,72:$VP2,74:[1,1406],76:$VQ2,77:$VR2,112:$VS2,114:736,115:$V$1,116:$V02,117:1407,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,144:758,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,158:768,160:769,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1408,4:$V2,5:$V3},{2:$V1,3:1409,4:$V2,5:$V3},o($VK,[2,597]),{2:$V1,3:1410,4:$V2,5:$V3},{113:1411,132:$VW,296:$Vj1},{78:[1,1412]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1413,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1011,4:$V2,5:$V3,111:1065,143:$Vm4,145:$Vn4,336:1414,337:1066},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1415,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{124:[1,1416]},o($VK,[2,653],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VV4,[2,658]),{78:[1,1417],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($VK,[2,654],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1418,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vr4,[2,272]),o($Vr4,[2,274]),o($Vr4,[2,276]),o($Vr4,[2,278]),o($VH1,[2,161]),o($VK,[2,569]),{148:[1,1419]},o($VK,[2,570]),o($VD3,[2,536],{387:878,7:879,272:1420,4:$VX3,386:[1,1421],389:$VY3}),o($VK,[2,571]),o($VK,[2,573]),{74:$Vx3,78:[1,1422]},o($VK,[2,577]),o($Vz2,[2,345]),{74:[1,1423],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{74:[1,1424],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{74:[1,1425],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{74:[1,1426],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($VK,[2,581]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1427,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1428,4:$V2,5:$V3},o($VK,[2,583]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1376,111:149,113:153,120:1429,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,241:1374,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{77:[1,1430]},{2:$V1,3:1431,4:$V2,5:$V3},{76:$Vs4,139:[2,1149],480:1432,483:1433},o($VY4,[2,1148]),{139:[1,1434]},{139:[2,1152]},o($VD3,[2,737]),o($VO3,[2,744]),o($VO3,[2,1166]),{2:$V1,3:1268,4:$V2,5:$V3,76:[1,1437],351:1435,358:1436,384:1438},{2:$V1,3:1011,4:$V2,5:$V3,100:1439,111:1440},{40:1441,79:75,89:$V7,184:99,189:$Vb},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1442,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,722]),{2:$V1,3:1011,4:$V2,5:$V3,111:1065,143:$Vm4,145:$Vn4,147:1443,336:1064,337:1066},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1444,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,727]),{2:$V1,3:244,4:$V2,5:$V3,199:1445},{335:$Vu4,338:$Vv4,339:$Vw4,511:1446},o($VV1,[2,691],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1447,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{74:[1,1448],78:[1,1449]},o($V65,[2,543]),o($V65,[2,544]),{74:$V45,78:[1,1450]},o($VV1,[2,565]),o($Vz4,[2,380],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,312:$Vg2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2}),o($Vz4,[2,382],{114:625,327:637,115:$V$1,116:$V02,123:$V12,133:$V32,136:$V42,138:$V52,141:$V82,142:$V92,179:$Vd2,180:$Ve2,312:$Vg2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2}),o($VB1,[2,396]),o($VB1,[2,400]),{78:[1,1451]},{74:$Vx3,78:[1,1452]},o($VB1,[2,422]),o($VB1,[2,424]),{78:[1,1453],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1454]},{74:$Vx3,78:[1,1455]},o($VB1,[2,427]),o($VB1,[2,327]),{77:[1,1456]},o($VB1,$V15,{275:1457,276:$V25}),o($VB1,$V15,{275:1458,276:$V25}),o($VH4,[2,284]),o($VB1,[2,281]),o($VB1,[2,369]),o($V64,[2,373],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{74:[1,1460],78:[1,1459]},{74:[1,1462],78:[1,1461],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{2:$V1,3:1325,4:$V2,5:$V3},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1194,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,345:1463,419:190,420:$Vr1,424:$Vs1},o($VL4,[2,477]),o($VL4,[2,478]),{40:1466,77:$Ve4,79:75,89:$V7,143:$VY,144:979,145:$VC1,149:$Vc4,152:$V$,181:$V31,184:99,189:$Vb,201:980,302:$Vn1,341:1464,342:1465,344:$Vd4,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1011,4:$V2,5:$V3,111:1467},o($VL4,[2,473]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1468,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{77:$Ve4,143:$VY,144:979,145:$VC1,152:$V$,181:$V31,201:980,302:$Vn1,342:1469,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,460],{74:$VJ4}),o($VI4,[2,467]),o($VK,[2,694]),o($V75,[2,699]),o($V75,[2,700]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:817,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,174:1470,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,253:816,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{170:[1,1472],309:[1,1471]},{460:[1,1473]},o($VI2,[2,180]),o($Vm5,[2,240],{85:1474,232:[1,1475]}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1476,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1477,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1478,4:$V2,5:$V3},o($Vf4,[2,170],{216:1357,221:1360,215:1479,205:1480,206:$Va5,208:$Vb5,222:$Vc5,223:$Vd5,224:$Ve5,225:$Vf5,226:$Vg5,227:$Vh5,228:$Vi5,229:$Vj5}),{2:$V1,3:219,4:$V2,5:$V3,77:$Vw1,132:$Vx1,143:$VY,144:212,145:$VZ,152:$V$,156:$VL,181:$V31,199:213,200:215,201:214,202:217,209:1481,213:$Vy1,214:218,290:$VM,291:$VN,292:$VO,293:$VP,302:$Vn1,419:190,420:$Vr1,424:$Vs1},o($Vn5,[2,205]),o($Vn5,[2,206]),{2:$V1,3:219,4:$V2,5:$V3,77:[1,1486],143:$VY,144:1484,145:$VZ,152:$V$,156:$VL,181:$V31,199:1483,200:1487,201:1485,202:1488,217:1482,290:$VM,291:$VN,292:$VO,293:$VP,302:$Vn1,419:190,420:$Vr1,424:$Vs1},{207:[1,1489],223:$Vo5},{207:[1,1491],223:$Vp5},o($Vq5,[2,222]),{206:[1,1495],208:[1,1494],221:1493,223:$Vd5,224:$Ve5,225:$Vf5,226:$Vg5,227:$Vh5,228:$Vi5,229:$Vj5},o($Vq5,[2,224]),{223:[1,1496]},{208:[1,1498],223:[1,1497]},{208:[1,1500],223:[1,1499]},{208:[1,1501]},{223:[1,1502]},{223:[1,1503]},{74:$V95,204:1504,205:1356,206:$Va5,208:$Vb5,215:1355,216:1357,221:1360,222:$Vc5,223:$Vd5,224:$Ve5,225:$Vf5,226:$Vg5,227:$Vh5,228:$Vi5,229:$Vj5},o($VO4,[2,84]),o($Vl4,[2,100]),{74:$Vr5,78:[1,1505]},{78:[1,1507]},o($Vs5,[2,261]),{78:[2,1060]},o($Vs5,[2,263],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,242:[1,1508],243:[1,1509],311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($Vl4,[2,99]),o($VP4,[2,1064],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($Vl4,[2,101]),o($Vl4,[2,102]),o($Vl4,[2,103]),o($Vl4,[2,121]),o($Vl4,[2,124]),o($Vl4,[2,127]),o($VP4,[2,1068],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($Vl4,[2,128]),o($VP4,[2,1070],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($Vl4,[2,129]),o($VP4,[2,1072],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($Vl4,[2,130]),o($VP4,[2,1076],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($Vl4,[2,131]),o($VQ4,[2,1083],{177:1510}),o($VQ4,[2,1086],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),{74:$Vl5,78:[1,1511]},o($Vl4,[2,133]),o($VP4,[2,1078],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($Vl4,[2,134]),o($VP4,[2,1080],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($Vl4,[2,135]),o($Vl4,[2,136]),o($Vl4,[2,137]),o($Vl4,[2,138]),o($Vl4,[2,139]),o($Vl4,[2,140]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:260,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,151:1512,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VS4,[2,1082],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($VK,[2,607]),o($VK,[2,603]),o($VK,[2,605]),o($VK,[2,601]),o($Vv3,[2,71]),o($VK,[2,449],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VU4,[2,452]),o($VU4,[2,453],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1513,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VV4,[2,662]),o($VK,[2,655],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{2:$V1,3:1514,4:$V2,5:$V3},o($VD3,[2,545],{385:1515,391:1516,392:1517,366:1525,154:$Vt5,187:$Vu5,230:$Vv5,297:$Vw5,343:$Vx5,356:$Vy5,368:$Vz5,369:$VA5,373:$VB5,374:$VC5}),o($VD3,[2,535]),o($VK,[2,576],{76:[1,1529]}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1530,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1531,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1532,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1533,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{74:$Vx3,78:[1,1534]},o($VK,[2,585]),{74:$Vr5,78:[1,1535]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1376,111:149,113:153,120:1536,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,241:1374,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o([10,74,78,139,306,310,602,764],[2,741]),{139:[1,1537]},{139:[2,1150]},{2:$V1,3:1122,4:$V2,5:$V3,132:$VR1,137:$VS1,143:$VF1,145:$VG1,152:$VT1,431:585,475:1124,478:1538,482:582,493:579,497:581},{78:[1,1539]},{74:[1,1540],78:[2,506]},{40:1541,79:75,89:$V7,184:99,189:$Vb},o($V65,[2,532]),{74:$V35,78:[1,1542]},o($Vk5,$V55),o($VK,[2,1133],{412:1543,413:1544,72:$VD5}),o($VI4,$VZ4,{79:75,184:99,114:625,327:637,40:1299,468:1546,89:$V7,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,146:$V_4,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,189:$Vb,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2,470:$V$4}),o($VI4,[2,725],{74:$VT4}),o($VI4,[2,726],{74:$Vx3}),o([10,53,72,89,124,146,156,189,266,267,290,306,310,335,338,339,396,400,401,404,406,408,409,417,418,434,436,437,439,440,441,442,443,447,448,451,452,505,507,508,517,602,764],[2,1181],{512:1547,3:1548,2:$V1,4:$V2,5:$V3,76:[1,1549]}),o($VE5,[2,1183],{513:1550,76:[1,1551]}),o($VV1,[2,692],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{131:[1,1552]},o($Vx4,[2,538]),o($Vx4,[2,540]),o($VB1,[2,412]),o($VB1,[2,413]),o($VB1,[2,439]),o($VB1,[2,423]),o($VB1,[2,425]),{118:$VF5,277:1553,278:1554,279:[1,1555]},o($VB1,[2,328]),o($VB1,[2,329]),o($VB1,[2,316]),{131:[1,1557]},o($VB1,[2,318]),{131:[1,1558]},{74:$V45,78:[1,1559]},{77:$Ve4,143:$VY,144:979,145:$VC1,152:$V$,181:$V31,201:980,302:$Vn1,342:1560,419:190,420:$Vr1,424:$Vs1},o($VI4,[2,465],{74:$VJ4}),o($VI4,[2,468]),o($Vk5,[2,488]),o($V65,[2,480],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VI4,[2,459],{74:$VJ4}),o($VK,[2,718],{74:$Vq4,198:[1,1561]}),{335:$VG5,338:$VH5,461:1562},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1565,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{119:[1,1567],170:[1,1568],309:[1,1566]},o($VI5,[2,259],{86:1569,118:[1,1570]}),{119:[1,1571]},o($V85,[2,239],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{95:[1,1572],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{95:[1,1573]},o($Vn5,[2,203]),o($Vn5,[2,204]),o($Vk5,[2,178]),o($Vn5,[2,237],{218:1574,230:[1,1575],231:[1,1576]}),o($VJ5,[2,208],{3:1577,2:$V1,4:$V2,5:$V3,76:[1,1578]}),o($VK5,[2,1095],{219:1579,76:[1,1580]}),{2:$V1,3:1581,4:$V2,5:$V3,76:[1,1582]},{40:1583,79:75,89:$V7,184:99,189:$Vb},o($VJ5,[2,216],{3:1584,2:$V1,4:$V2,5:$V3,76:[1,1585]}),o($VJ5,[2,219],{3:1586,2:$V1,4:$V2,5:$V3,76:[1,1587]}),{77:[1,1588]},o($Vq5,[2,234]),{77:[1,1589]},o($Vq5,[2,230]),o($Vq5,[2,223]),{223:$Vp5},{223:$Vo5},o($Vq5,[2,225]),o($Vq5,[2,226]),{223:[1,1590]},o($Vq5,[2,228]),{223:[1,1591]},{223:[1,1592]},o($Vq5,[2,232]),o($Vq5,[2,233]),{78:[1,1593],205:1480,206:$Va5,208:$Vb5,215:1479,216:1357,221:1360,222:$Vc5,223:$Vd5,224:$Ve5,225:$Vf5,226:$Vg5,227:$Vh5,228:$Vi5,229:$Vj5},o($Vl4,[2,91]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1376,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,241:1594,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vl4,[2,92]),o($Vs5,[2,264]),{244:[1,1595]},o($V65,[2,142],{419:190,3:733,114:736,144:758,158:768,160:769,117:1596,2:$V1,4:$V2,5:$V3,72:$VP2,76:$VQ2,77:$VR2,112:$VS2,115:$V$1,116:$V02,118:$VT2,122:$VU2,123:$VV2,124:$VW2,128:$VX2,129:$VY2,130:$VZ2,131:$V_2,132:$V$2,133:$V03,134:$V13,135:$V23,136:$V33,137:$V43,138:$V53,139:$V63,140:$V73,141:$V83,142:$V93,143:$Va3,145:$Vb3,146:$Vc3,148:$Vd3,149:$Ve3,150:$Vf3,152:$Vg3,154:$Vh3,156:$Vi3,162:$Vj3,164:$Vk3,166:$Vl3,168:$Vm3,169:$Vn3,170:$Vo3,171:$Vp3,172:$Vq3,173:$Vr3,175:$Vs3,185:$Vt3,187:$Vu3,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,420:$Vr1,424:$Vs1}),o($Vl4,[2,132]),{74:$Vx3,78:[1,1597]},o($VU4,[2,454],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($VK,[2,572]),o($VD3,[2,534]),o($VD3,[2,546],{366:1525,392:1598,154:$Vt5,187:$Vu5,230:$Vv5,297:$Vw5,343:$Vx5,356:$Vy5,368:$Vz5,369:$VA5,373:$VB5,374:$VC5}),o($Vw3,[2,548]),{370:[1,1599]},{370:[1,1600]},{2:$V1,3:244,4:$V2,5:$V3,199:1601},o($Vw3,[2,554],{77:[1,1602]}),{2:$V1,3:114,4:$V2,5:$V3,77:[1,1604],113:251,131:$VV,132:$VW,143:$VY,152:$V$,156:$VL,181:$V31,196:250,200:1605,201:254,257:252,258:253,265:$VD1,274:1603,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,302:$Vn1},o($Vw3,[2,558]),{297:[1,1606]},o($Vw3,[2,560]),o($Vw3,[2,561]),{335:[1,1607]},{77:[1,1608]},{2:$V1,3:1609,4:$V2,5:$V3},{78:[1,1610],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1611],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1612],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{78:[1,1613],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($VK,$VW4,{407:1614,76:$VX4}),o($VK,[2,591]),{74:$Vr5,78:[1,1615]},{2:$V1,3:1122,4:$V2,5:$V3,132:$VR1,137:$VS1,143:$VF1,145:$VG1,152:$VT1,431:585,475:1124,478:1616,482:582,493:579,497:581},o($VD3,[2,735]),o($VK,[2,493],{352:1617,354:1618,355:1619,4:$VL5,243:$VM5,343:$VN5,356:$VO5}),o($VP5,$VQ5,{3:1268,359:1624,384:1625,360:1626,361:1627,2:$V1,4:$V2,5:$V3,367:$VR5}),{78:[2,507]},{76:[1,1629]},o($VK,[2,609]),o($VK,[2,1134]),{368:[1,1631],414:[1,1630]},o($VI4,[2,728]),o($VK,$V0,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,12:1632,2:$V1,4:$V2,5:$V3,53:$V5,72:$V6,89:$V7,124:$V8,146:$V9,156:$Va,189:$Vb,266:$Vc,267:$Vd,290:$Ve,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),o($VK,[2,762]),o($VE5,[2,1182]),o($VK,$V0,{17:5,18:7,19:8,20:9,21:10,22:11,23:12,24:13,25:14,26:15,27:16,28:17,29:18,30:19,31:20,32:21,33:22,34:23,35:24,36:25,37:26,38:27,39:28,40:29,41:30,42:31,43:32,44:33,45:34,46:35,47:36,48:37,49:38,50:39,51:40,52:41,54:43,55:44,56:45,57:46,58:47,59:48,60:49,61:50,62:51,63:52,64:53,65:54,66:55,67:56,68:57,69:58,70:59,71:60,79:75,504:95,184:99,3:100,12:1633,2:$V1,4:$V2,5:$V3,53:$V5,72:$V6,89:$V7,124:$V8,146:$V9,156:$Va,189:$Vb,266:$Vc,267:$Vd,290:$Ve,335:$Vf,338:$Vg,339:$Vh,396:$Vi,400:$Vj,401:$Vk,404:$Vl,406:$Vm,408:$Vn,409:$Vo,417:$Vp,418:$Vq,434:$Vr,436:$Vs,437:$Vt,439:$Vu,440:$Vv,441:$Vw,442:$Vx,443:$Vy,447:$Vz,448:$VA,451:$VB,452:$VC,505:$VD,507:$VE,508:$VF,517:$VG}),o($VE5,[2,1184]),{78:[1,1634]},{78:[1,1635],118:$VF5,278:1636},{78:[1,1637]},{119:[1,1638]},{119:[1,1639]},{78:[1,1640]},{78:[1,1641]},o($VL4,[2,476]),o($VI4,[2,464],{74:$VJ4}),{2:$V1,3:244,4:$V2,5:$V3,143:$VF1,145:$VG1,199:1643,431:1642},o($V75,[2,703]),o($V75,[2,705]),{146:[1,1644]},{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,309:[1,1645],311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},{339:$VS5,462:1646},{417:[1,1649],463:[1,1648]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1650,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VT5,[2,267],{87:1651,245:[1,1652],247:[1,1653]}),{119:[1,1654]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1660,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,233:1655,235:1656,236:$VU5,237:$VV5,238:$VW5,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1661,4:$V2,5:$V3},{2:$V1,3:1662,4:$V2,5:$V3},o($Vn5,[2,207]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1663,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1011,4:$V2,5:$V3,100:1664,111:1440},o($VJ5,[2,209]),{2:$V1,3:1665,4:$V2,5:$V3},o($VJ5,[2,1097],{220:1666,3:1667,2:$V1,4:$V2,5:$V3}),o($VK5,[2,1096]),o($VJ5,[2,212]),{2:$V1,3:1668,4:$V2,5:$V3},{78:[1,1669]},o($VJ5,[2,217]),{2:$V1,3:1670,4:$V2,5:$V3},o($VJ5,[2,220]),{2:$V1,3:1671,4:$V2,5:$V3},{40:1672,79:75,89:$V7,184:99,189:$Vb},{40:1673,79:75,89:$V7,184:99,189:$Vb},o($Vq5,[2,227]),o($Vq5,[2,229]),o($Vq5,[2,231]),o($Vf4,[2,171]),o($Vs5,[2,262]),o($Vs5,[2,265],{242:[1,1674]}),o($VQ4,[2,1084],{153:1015,179:$Vi4,180:$Vj4,181:$Vk4}),o($Vl4,[2,141]),o($Vw3,[2,547]),o($Vw3,[2,550]),{374:[1,1675]},o($Vw3,[2,1127],{395:1676,393:1677,77:$VX5}),{131:$VV,196:1679},o($Vw3,[2,555]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1680,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vw3,[2,557]),o($Vw3,[2,559]),{2:$V1,3:114,4:$V2,5:$V3,77:[1,1682],113:251,131:$VV,132:$VW,143:$VY,152:$V$,156:$VL,181:$V31,196:250,200:255,201:254,257:252,258:253,265:$VD1,274:1681,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,302:$Vn1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1683,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VK,[2,578]),o($Vz2,[2,349]),o($Vz2,[2,350]),o($Vz2,[2,351]),o($Vz2,[2,352]),o($VK,[2,582]),o($VK,[2,592]),o($VD3,[2,734]),o($VK,[2,489]),o($VK,[2,494],{355:1684,4:$VL5,243:$VM5,343:$VN5,356:$VO5}),o($VY5,[2,496]),o($VY5,[2,497]),{124:[1,1685]},{124:[1,1686]},{124:[1,1687]},{74:[1,1688],78:[2,505]},o($V65,[2,533]),o($V65,[2,508]),{187:[1,1696],193:[1,1697],362:1689,363:1690,364:1691,365:1692,366:1693,368:$Vz5,369:[1,1694],370:[1,1698],373:[1,1695]},{2:$V1,3:1699,4:$V2,5:$V3},{40:1700,79:75,89:$V7,184:99,189:$Vb},{415:[1,1701]},{416:[1,1702]},o($VK,[2,761]),o($VK,[2,763]),o($Vx4,[2,537]),o($VB1,[2,331]),{78:[1,1703]},o($VB1,[2,332]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1660,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,233:1704,235:1656,236:$VU5,237:$VV5,238:$VW5,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1376,111:149,113:153,120:1705,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,241:1374,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($VB1,[2,317]),o($VB1,[2,319]),{2:$V1,3:1706,4:$V2,5:$V3},o($VK,[2,720],{77:[1,1707]}),{2:$V1,3:1011,4:$V2,5:$V3,111:1065,143:$Vm4,145:$Vn4,147:1708,336:1064,337:1066},{335:$VG5,338:$VH5,461:1709},o($V75,[2,707]),{77:[1,1711],343:[1,1712],344:[1,1710]},{170:[1,1714],309:[1,1713]},{170:[1,1716],309:[1,1715]},{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,309:[1,1717],311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($Vh4,[2,250],{88:1718,162:[1,1719],168:[1,1721],169:[1,1720]}),{131:$VV,196:1722},{131:$VV,196:1723},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1376,111:149,113:153,120:1724,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,241:1374,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},o($Vm5,[2,248],{234:1725,74:$VZ5,239:[1,1727]}),o($V_5,[2,242]),{146:[1,1728]},{77:[1,1729]},{77:[1,1730]},o($V_5,[2,247],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{78:[2,1051],96:1731,99:[1,1733],102:1732},{99:[1,1734]},o($Vn5,[2,235],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),o($Vn5,[2,236],{74:$V35}),o($VJ5,[2,210]),o($VJ5,[2,211]),o($VJ5,[2,1098]),o($VJ5,[2,213]),{2:$V1,3:1735,4:$V2,5:$V3,76:[1,1736]},o($VJ5,[2,218]),o($VJ5,[2,221]),{78:[1,1737]},{78:[1,1738]},o($Vs5,[2,266]),{2:$V1,3:244,4:$V2,5:$V3,199:1739},o($Vw3,[2,552]),o($Vw3,[2,1128]),{2:$V1,3:1740,4:$V2,5:$V3},{74:[1,1741]},{78:[1,1742],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($Vw3,[2,562]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1743,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{78:[1,1744],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($VY5,[2,495]),{2:$V1,3:1745,4:$V2,5:$V3},{131:$VV,196:1746},{2:$V1,3:1747,4:$V2,5:$V3},o($VP5,$VQ5,{361:1627,360:1748,367:$VR5}),o($VD3,[2,510]),o($VD3,[2,511]),o($VD3,[2,512]),o($VD3,[2,513]),o($VD3,[2,514]),{370:[1,1749]},{370:[1,1750]},o($V$5,[2,1121],{382:1751,370:[1,1752]}),{2:$V1,3:1753,4:$V2,5:$V3},{2:$V1,3:1754,4:$V2,5:$V3},o($VP5,[2,516]),o($VK,[2,1131],{411:1755,413:1756,72:$VD5}),o($VK,[2,610]),o($VK,[2,611],{367:[1,1757]}),o($VB1,[2,333]),o([78,118],[2,334],{74:$VZ5}),{74:$Vr5,78:[2,335]},o($VK,[2,719]),{2:$V1,3:1011,4:$V2,5:$V3,100:1758,111:1440},o($V75,[2,706],{74:$VT4}),o($V75,[2,704]),{77:$Ve4,143:$VY,144:979,145:$VC1,152:$V$,181:$V31,201:980,302:$Vn1,342:1759,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1011,4:$V2,5:$V3,100:1760,111:1440},{344:[1,1761]},{339:$VS5,462:1762},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1763,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{339:$VS5,462:1764},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1765,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{339:$VS5,462:1766},o($Vh4,[2,72]),{40:1767,79:75,89:$V7,164:[1,1768],184:99,189:$Vb,240:[1,1769]},{40:1770,79:75,89:$V7,184:99,189:$Vb,240:[1,1771]},{40:1772,79:75,89:$V7,184:99,189:$Vb,240:[1,1773]},o($VT5,[2,270],{246:1774,247:[1,1775]}),{248:1776,249:[2,1099],766:[1,1777]},o($VI5,[2,260],{74:$Vr5}),o($Vm5,[2,241]),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1660,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,235:1778,236:$VU5,237:$VV5,238:$VW5,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1779,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{77:[1,1780]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1660,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,233:1781,235:1656,236:$VU5,237:$VV5,238:$VW5,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1660,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,233:1782,235:1656,236:$VU5,237:$VV5,238:$VW5,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{78:[1,1783]},{78:[2,1052]},{77:[1,1784]},{77:[1,1785]},o($VJ5,[2,214]),{2:$V1,3:1786,4:$V2,5:$V3},{2:$V1,3:1787,4:$V2,5:$V3,76:[1,1788]},{2:$V1,3:1789,4:$V2,5:$V3,76:[1,1790]},o($Vw3,[2,1125],{394:1791,393:1792,77:$VX5}),{78:[1,1793]},{131:$VV,196:1794},o($Vw3,[2,556]),{78:[1,1795],99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($Vw3,[2,517]),o($VY5,[2,498]),o($VY5,[2,499]),o($VY5,[2,500]),o($V65,[2,509]),{2:$V1,3:1797,4:$V2,5:$V3,77:[2,1117],371:1796},{77:[1,1798]},{2:$V1,3:1800,4:$V2,5:$V3,77:[2,1123],383:1799},o($V$5,[2,1122]),{77:[1,1801]},{77:[1,1802]},o($VK,[2,608]),o($VK,[2,1132]),o($VP5,$VQ5,{361:1627,360:1803,367:$VR5}),{74:$V35,78:[1,1804]},o($V75,[2,713],{74:$VJ4}),{74:$V35,78:[1,1805]},o($V75,[2,715]),o($V75,[2,708]),{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,309:[1,1806],311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($V75,[2,711]),{99:$VZ1,112:$V_1,114:625,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,309:[1,1807],311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,327:637,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2},o($V75,[2,709]),o($Vh4,[2,251]),{40:1808,79:75,89:$V7,184:99,189:$Vb,240:[1,1809]},{40:1810,79:75,89:$V7,184:99,189:$Vb},o($Vh4,[2,253]),{40:1811,79:75,89:$V7,184:99,189:$Vb},o($Vh4,[2,254]),{40:1812,79:75,89:$V7,184:99,189:$Vb},o($VT5,[2,268]),{131:$VV,196:1813},{249:[1,1814]},{249:[2,1100]},o($V_5,[2,243]),o($Vm5,[2,249],{114:625,327:637,99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1660,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,233:1815,235:1656,236:$VU5,237:$VV5,238:$VW5,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{74:$VZ5,78:[1,1816]},{74:$VZ5,78:[1,1817]},o($VN4,[2,1053],{97:1818,104:1819,3:1821,2:$V1,4:$V2,5:$V3,76:$V06}),{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1824,103:1822,105:1823,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1011,4:$V2,5:$V3,100:1825,111:1440},o($VJ5,[2,215]),o($Vn5,[2,173]),{2:$V1,3:1826,4:$V2,5:$V3},o($Vn5,[2,175]),{2:$V1,3:1827,4:$V2,5:$V3},o($Vw3,[2,551]),o($Vw3,[2,1126]),o($Vw3,[2,549]),{78:[1,1828]},o($Vw3,[2,563]),{77:[1,1829]},{77:[2,1118]},{2:$V1,3:1831,4:$V2,5:$V3,132:$V16,372:1830},{77:[1,1833]},{77:[2,1124]},{2:$V1,3:1011,4:$V2,5:$V3,100:1834,111:1440},{2:$V1,3:1011,4:$V2,5:$V3,100:1835,111:1440},o($VK,[2,612]),o($VK,[2,721]),{343:[1,1837],344:[1,1836]},{339:$VS5,462:1838},{335:$VG5,338:$VH5,461:1839},o($Vh4,[2,252]),{40:1840,79:75,89:$V7,184:99,189:$Vb},o($Vh4,[2,255]),o($Vh4,[2,257]),o($Vh4,[2,258]),o($VT5,[2,271]),{131:[2,1101],250:1841,645:[1,1842]},{74:$VZ5,78:[1,1843]},o($V_5,[2,245]),o($V_5,[2,246]),o($VN4,[2,74]),o($VN4,[2,1054]),{2:$V1,3:1844,4:$V2,5:$V3},o($VN4,[2,78]),{74:[1,1846],78:[1,1845]},o($V65,[2,80]),o($V65,[2,81],{114:625,327:637,76:[1,1847],99:$VZ1,112:$V_1,115:$V$1,116:$V02,123:$V12,124:$Vz3,133:$V32,136:$V42,138:$V52,139:$V62,140:$V72,141:$V82,142:$V92,154:$Va2,170:$Vb2,171:$Vc2,179:$Vd2,180:$Ve2,311:$Vf2,312:$Vg2,313:$Vh2,315:$Vi2,316:$Vj2,317:$Vk2,318:$Vl2,319:$Vm2,320:$Vn2,321:$Vo2,322:$Vp2,323:$Vq2,324:$Vr2,325:$Vs2,326:$Vt2,330:$Vu2,331:$Vv2,332:$Vw2,333:$Vx2}),{74:$V35,78:[1,1848]},o($Vn5,[2,174]),o($Vn5,[2,176]),o($Vw3,[2,553]),{2:$V1,3:1831,4:$V2,5:$V3,132:$V16,372:1849},{74:$V26,78:[1,1850]},o($V65,[2,528]),o($V65,[2,529]),{2:$V1,3:1011,4:$V2,5:$V3,100:1852,111:1440},{74:$V35,78:[1,1853]},{74:$V35,78:[1,1854]},{77:$Ve4,143:$VY,144:979,145:$VC1,152:$V$,181:$V31,201:980,302:$Vn1,342:1855,419:190,420:$Vr1,424:$Vs1},{344:[1,1856]},o($V75,[2,710]),o($V75,[2,712]),o($Vh4,[2,256]),{131:$VV,196:1857},{131:[2,1102]},o($V_5,[2,244]),o($VN4,[2,77]),{78:[2,76]},{2:$V1,3:168,4:$V2,5:$V3,56:165,77:$VU,94:1824,105:1858,111:149,113:153,131:$VV,132:$VW,137:$VX,143:$VY,144:161,145:$VZ,149:$V_,152:$V$,154:$V01,156:$VL,158:167,179:$V11,180:$V21,181:$V31,196:151,200:147,201:155,202:156,254:150,255:146,256:148,257:152,258:154,259:157,260:158,261:159,262:162,263:163,265:$V41,266:$Vc,270:$V51,271:$V61,273:$V71,280:$V81,281:$V91,282:$Va1,283:$Vb1,284:$Vc1,285:$Vd1,286:$Ve1,287:$Vf1,288:$Vg1,290:$VM,291:$VN,292:$VO,293:$VP,294:$Vh1,295:$Vi1,296:$Vj1,297:$Vk1,298:$Vl1,299:$Vm1,302:$Vn1,303:$Vo1,312:$Vp1,317:$Vq1,419:190,420:$Vr1,424:$Vs1},{2:$V1,3:1859,4:$V2,5:$V3},{78:[1,1860]},{74:$V26,78:[1,1861]},{374:[1,1862]},{2:$V1,3:1863,4:$V2,5:$V3,132:[1,1864]},{74:$V35,78:[1,1865]},o($VD3,[2,526]),o($VD3,[2,527]),o($V75,[2,714],{74:$VJ4}),o($V75,[2,716]),o($V36,[2,1103],{251:1866,766:[1,1867]}),o($V65,[2,79]),o($V65,[2,82]),o($VN4,[2,1055],{3:1821,101:1868,104:1869,2:$V1,4:$V2,5:$V3,76:$V06}),o($VD3,[2,518]),{2:$V1,3:244,4:$V2,5:$V3,199:1870},o($V65,[2,530]),o($V65,[2,531]),o($VD3,[2,525]),o($VT5,[2,1105],{252:1871,415:[1,1872]}),o($V36,[2,1104]),o($VN4,[2,75]),o($VN4,[2,1056]),o($V46,[2,1119],{375:1873,377:1874,77:[1,1875]}),o($VT5,[2,269]),o($VT5,[2,1106]),o($VD3,[2,521],{376:1876,378:1877,230:[1,1878]}),o($V46,[2,1120]),{2:$V1,3:1831,4:$V2,5:$V3,132:$V16,372:1879},o($VD3,[2,519]),{230:[1,1881],379:1880},{338:[1,1882]},{74:$V26,78:[1,1883]},o($VD3,[2,522]),{335:[1,1884]},{380:[1,1885]},o($V46,[2,520]),{380:[1,1886]},{381:[1,1887]},{381:[1,1888]},{230:[2,523]},o($VD3,[2,524])],\ndefaultActions: {105:[2,6],194:[2,336],195:[2,337],196:[2,338],197:[2,339],198:[2,340],199:[2,341],200:[2,342],201:[2,343],202:[2,344],209:[2,695],591:[2,1142],653:[2,1107],654:[2,1108],710:[2,696],780:[2,1073],781:[2,1074],926:[2,446],927:[2,447],928:[2,448],987:[2,697],1288:[2,1152],1375:[2,1060],1433:[2,1150],1541:[2,507],1732:[2,1052],1777:[2,1100],1797:[2,1118],1800:[2,1124],1842:[2,1102],1845:[2,76],1887:[2,523]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n// from https://www.postgresql.org/docs/current/static/sql-keywords-appendix.html\r\n// JSON.stringify([].slice.call(document.querySelectorAll('tr')).filter(x => x.children.length == 5 && x.children[2].innerText == 'reserved').map(x => x.children[0].innerText))\r\n\nvar nonReserved = [\"A\",\"ABSENT\",\"ABSOLUTE\",\"ACCORDING\",\"ACTION\",\"ADA\",\"ADD\",\"ADMIN\",\"AFTER\",\"ALWAYS\",\"ASC\",\"ASSERTION\",\"ASSIGNMENT\",\"ATTRIBUTE\",\"ATTRIBUTES\",\"BASE64\",\"BEFORE\",\"BERNOULLI\",\"BLOCKED\",\"BOM\",\"BREADTH\",\"C\",\"CASCADE\",\"CATALOG\",\"CATALOG_NAME\",\"CHAIN\",\"CHARACTERISTICS\",\"CHARACTERS\",\"CHARACTER_SET_CATALOG\",\"CHARACTER_SET_NAME\",\"CHARACTER_SET_SCHEMA\",\"CLASS_ORIGIN\",\"COBOL\",\"COLLATION\",\"COLLATION_CATALOG\",\"COLLATION_NAME\",\"COLLATION_SCHEMA\",\"COLUMNS\",\"COLUMN_NAME\",\"COMMAND_FUNCTION\",\"COMMAND_FUNCTION_CODE\",\"COMMITTED\",\"CONDITION_NUMBER\",\"CONNECTION\",\"CONNECTION_NAME\",\"CONSTRAINTS\",\"CONSTRAINT_CATALOG\",\"CONSTRAINT_NAME\",\"CONSTRAINT_SCHEMA\",\"CONSTRUCTOR\",\"CONTENT\",\"CONTINUE\",\"CONTROL\",\"CURSOR_NAME\",\"DATA\",\"DATETIME_INTERVAL_CODE\",\"DATETIME_INTERVAL_PRECISION\",\"DB\",\"DEFAULTS\",\"DEFERRABLE\",\"DEFERRED\",\"DEFINED\",\"DEFINER\",\"DEGREE\",\"DEPTH\",\"DERIVED\",\"DESC\",\"DESCRIPTOR\",\"DIAGNOSTICS\",\"DISPATCH\",\"DOCUMENT\",\"DOMAIN\",\"DYNAMIC_FUNCTION\",\"DYNAMIC_FUNCTION_CODE\",\"EMPTY\",\"ENCODING\",\"ENFORCED\",\"EXCLUDE\",\"EXCLUDING\",\"EXPRESSION\",\"FILE\",\"FINAL\",\"FIRST\",\"FLAG\",\"FOLLOWING\",\"FORTRAN\",\"FOUND\",\"FS\",\"G\",\"GENERAL\",\"GENERATED\",\"GO\",\"GOTO\",\"GRANTED\",\"HEX\",\"HIERARCHY\",\"ID\",\"IGNORE\",\"IMMEDIATE\",\"IMMEDIATELY\",\"IMPLEMENTATION\",\"INCLUDING\",\"INCREMENT\",\"INDENT\",\"INITIALLY\",\"INPUT\",\"INSTANCE\",\"INSTANTIABLE\",\"INSTEAD\",\"INTEGRITY\",\"INVOKER\",\"ISOLATION\",\"K\",\"KEY\",\"KEY_MEMBER\",\"KEY_TYPE\",\"LAST\",\"LENGTH\",\"LEVEL\",\"LIBRARY\",\"LIMIT\",\"LINK\",\"LOCATION\",\"LOCATOR\",\"M\",\"MAP\",\"MAPPING\",\"MATCHED\",\"MAXVALUE\",\"MESSAGE_LENGTH\",\"MESSAGE_OCTET_LENGTH\",\"MESSAGE_TEXT\",\"MINVALUE\",\"MORE\",\"MUMPS\",\"NAME\",\"NAMES\",\"NAMESPACE\",\"NESTING\",\"NEXT\",\"NFC\",\"NFD\",\"NFKC\",\"NFKD\",\"NIL\",\"NORMALIZED\",\"NULLABLE\",\"NULLS\",\"NUMBER\",\"OBJECT\",\"OCTETS\",\"OFF\",\"OPTION\",\"OPTIONS\",\"ORDERING\",\"ORDINALITY\",\"OTHERS\",\"OUTPUT\",\"OVERRIDING\",\"P\",\"PAD\",\"PARAMETER_MODE\",\"PARAMETER_NAME\",\"PARAMETER_ORDINAL_POSITION\",\"PARAMETER_SPECIFIC_CATALOG\",\"PARAMETER_SPECIFIC_NAME\",\"PARAMETER_SPECIFIC_SCHEMA\",\"PARTIAL\",\"PASCAL\",\"PASSING\",\"PASSTHROUGH\",\"PATH\",\"PERMISSION\",\"PLACING\",\"PLI\",\"PRECEDING\",\"PRESERVE\",\"PRIOR\",\"PRIVILEGES\",\"PUBLIC\",\"READ\",\"RECOVERY\",\"RELATIVE\",\"REPEATABLE\",\"REQUIRING\",\"RESPECT\",\"RESTART\",\"RESTORE\",\"RESTRICT\",\"RETURNED_CARDINALITY\",\"RETURNED_LENGTH\",\"RETURNED_OCTET_LENGTH\",\"RETURNED_SQLSTATE\",\"RETURNING\",\"ROLE\",\"ROUTINE\",\"ROUTINE_CATALOG\",\"ROUTINE_NAME\",\"ROUTINE_SCHEMA\",\"ROW_COUNT\",\"SCALE\",\"SCHEMA\",\"SCHEMA_NAME\",\"SCOPE_CATALOG\",\"SCOPE_NAME\",\"SCOPE_SCHEMA\",\"SECTION\",\"SECURITY\",\"SELECTIVE\",\"SELF\",\"SEQUENCE\",\"SERIALIZABLE\",\"SERVER\",\"SERVER_NAME\",\"SESSION\",\"SETS\",\"SIMPLE\",\"SIZE\",\"SOURCE\",\"SPACE\",\"SPECIFIC_NAME\",\"STANDALONE\",\"STATE\",\"STATEMENT\",\"STRIP\",\"STRUCTURE\",\"STYLE\",\"SUBCLASS_ORIGIN\",\"T\",\"TABLE_NAME\",\"TEMPORARY\",\"TIES\",\"TOKEN\",\"TOP_LEVEL_COUNT\",\"TRANSACTION\",\"TRANSACTIONS_COMMITTED\",\"TRANSACTIONS_ROLLED_BACK\",\"TRANSACTION_ACTIVE\",\"TRANSFORM\",\"TRANSFORMS\",\"TRIGGER_CATALOG\",\"TRIGGER_NAME\",\"TRIGGER_SCHEMA\",\"TYPE\",\"UNBOUNDED\",\"UNCOMMITTED\",\"UNDER\",\"UNLINK\",\"UNNAMED\",\"UNTYPED\",\"URI\",\"USAGE\",\"USER_DEFINED_TYPE_CATALOG\",\"USER_DEFINED_TYPE_CODE\",\"USER_DEFINED_TYPE_NAME\",\"USER_DEFINED_TYPE_SCHEMA\",\"VALID\",\"VERSION\",\"VIEW\",\"WHITESPACE\",\"WORK\",\"WRAPPER\",\"WRITE\",\"XMLDECLARATION\",\"XMLSCHEMA\",\"YES\",\"ZONE\"]\r\n\nparser.parseError = function(str, hash) {\r\n\tif (hash.expected && hash.expected.indexOf(\"'LITERAL'\") > -1 && /[a-zA-Z_][a-zA-Z_0-9]*/.test(hash.token) && nonReserved.indexOf(hash.token) > -1) {\r\n\t\treturn\r\n\t}\r\n\tthrow new SyntaxError(str)\r\n}\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 266\nbreak;\ncase 1:return 302\nbreak;\ncase 2:return 420\nbreak;\ncase 3:return 299\nbreak;\ncase 4:return 5\nbreak;\ncase 5:return 5\nbreak;\ncase 6:return 296\nbreak;\ncase 7:return 296\nbreak;\ncase 8:return 132\nbreak;\ncase 9:return 132\nbreak;\ncase 10:return /* its a COMMENT */\nbreak;\ncase 11:/* skip whitespace */\nbreak;\ncase 12:return 316\nbreak;\ncase 13:return 319\nbreak;\ncase 14:yy_.yytext = 'VALUE';return 89\nbreak;\ncase 15:yy_.yytext = 'VALUE';return 189\nbreak;\ncase 16:yy_.yytext = 'ROW';return 189\nbreak;\ncase 17:yy_.yytext = 'COLUMN';return 189\nbreak;\ncase 18:yy_.yytext = 'MATRIX';return 189\nbreak;\ncase 19:yy_.yytext = 'INDEX';return 189\nbreak;\ncase 20:yy_.yytext = 'RECORDSET';return 189\nbreak;\ncase 21:yy_.yytext = 'TEXT';return 189\nbreak;\ncase 22:yy_.yytext = 'SELECT';return 189\nbreak;\ncase 23:return 520\nbreak;\ncase 24:return 381\nbreak;\ncase 25:return 402\nbreak;\ncase 26:return 515\nbreak;\ncase 27:return 287\nbreak;\ncase 28:return 269\nbreak;\ncase 29:return 269\nbreak;\ncase 30:return 164\nbreak;\ncase 31:return 400\nbreak;\ncase 32:return 170\nbreak;\ncase 33:return 229\nbreak;\ncase 34:return 166\nbreak;\ncase 35:return 207\nbreak;\ncase 36:return 288\nbreak;\ncase 37:return 76\nbreak;\ncase 38:return 418\nbreak;\ncase 39:return 242\nbreak;\ncase 40:return 404\nbreak;\ncase 41:return 356\nbreak;\ncase 42:return 284\nbreak;\ncase 43:return 514\nbreak;\ncase 44:return 437\nbreak;\ncase 45:return 330\nbreak;\ncase 46:return 441\nbreak;\ncase 47:return 331\nbreak;\ncase 48:return 315\nbreak;\ncase 49:return 119\nbreak;\ncase 50:return 112\nbreak;\ncase 51:return 315\nbreak;\ncase 52:return 112\nbreak;\ncase 53:return 315\nbreak;\ncase 54:return 112\nbreak;\ncase 55:return 315\nbreak;\ncase 56:return 508\nbreak;\ncase 57:return 303\nbreak;\ncase 58:return 271\nbreak;\ncase 59:return 368\nbreak;\ncase 60:return 130\nbreak;\ncase 61:return 'CLOSE'\nbreak;\ncase 62:return 243\nbreak;\ncase 63:return 190\nbreak;\ncase 64:return 190\nbreak;\ncase 65:return 434\nbreak;\ncase 66:return 367\nbreak;\ncase 67:return 470\nbreak;\ncase 68:return 440\nbreak;\ncase 69:return 273\nbreak;\ncase 70:return 240\nbreak;\ncase 71:return 281\nbreak;\ncase 72:return 267\nbreak;\ncase 73:return 206\nbreak;\ncase 74:return 238\nbreak;\ncase 75:return 265\nbreak;\ncase 76:return 'CURSOR'\nbreak;\ncase 77:return 405\nbreak;\ncase 78:return 291\nbreak;\ncase 79:return 292\nbreak;\ncase 80:return 448\nbreak;\ncase 81:return 343\nbreak;\ncase 82:return 338\nbreak;\ncase 83:return 'DELETED'\nbreak;\ncase 84:return 242\nbreak;\ncase 85:return 406\nbreak;\ncase 86:return 185\nbreak;\ncase 87:return 396\nbreak;\ncase 88:return 447\nbreak;\ncase 89:return 135\nbreak;\ncase 90:return 306\nbreak;\ncase 91:return 389\nbreak;\ncase 92:return 310\nbreak;\ncase 93:return 314\nbreak;\ncase 94:return 169\nbreak;\ncase 95:return 508\nbreak;\ncase 96:return 508\nbreak;\ncase 97:return 298\nbreak;\ncase 98:return 14\nbreak;\ncase 99:return 295\nbreak;\ncase 100:return 249\nbreak;\ncase 101:return 285\nbreak;\ncase 102:return 95\nbreak;\ncase 103:return 373\nbreak;\ncase 104:return 183\nbreak;\ncase 105:return 227\nbreak;\ncase 106:return 268\nbreak;\ncase 107:return 313\nbreak;\ncase 108:return 602\nbreak;\ncase 109:return 472\nbreak;\ncase 110:return 232\nbreak;\ncase 111:return 236\nbreak;\ncase 112:return 239\nbreak;\ncase 113:return 156\nbreak;\ncase 114:return 356\nbreak;\ncase 115:return 332\nbreak;\ncase 116:return 99\nbreak;\ncase 117:return 193\nbreak;\ncase 118:return 212\nbreak;\ncase 119:return 224\nbreak;\ncase 120:return 516\nbreak;\ncase 121:return 339\nbreak;\ncase 122:return 213\nbreak;\ncase 123:return 168\nbreak;\ncase 124:return 293\nbreak;\ncase 125:return 198\nbreak;\ncase 126:return 223\nbreak;\ncase 127:return 370\nbreak;\ncase 128:return 286\nbreak;\ncase 129:return 'LET'\nbreak;\ncase 130:return 225\nbreak;\ncase 131:return 112\nbreak;\ncase 132:return 245\nbreak;\ncase 133:return 460\nbreak;\ncase 134:return 191\nbreak;\ncase 135:return 283\nbreak;\ncase 136:return 390\nbreak;\ncase 137:return 282\nbreak;\ncase 138:return 452\nbreak;\ncase 139:return 169\nbreak;\ncase 140:return 403\nbreak;\ncase 141:return 222\nbreak;\ncase 142:return 645\nbreak;\ncase 143:return 270\nbreak;\ncase 144:return 244\nbreak;\ncase 145:return 380\nbreak;\ncase 146:return 154\nbreak;\ncase 147:return 297\nbreak;\ncase 148:return 433\nbreak;\ncase 149:return 230\nbreak;\ncase 150:return 415\nbreak;\ncase 151:return 129\nbreak;\ncase 152:return 247\nbreak;\ncase 153:return 'OPEN'\nbreak;\ncase 154:return 416\nbreak;\ncase 155:return 171\nbreak;\ncase 156:return 118\nbreak;\ncase 157:return 208\nbreak;\ncase 158:return 276\nbreak;\ncase 159:return 172\nbreak;\ncase 160:return 279\nbreak;\ncase 161:return 765\nbreak;\ncase 162:return 93\nbreak;\ncase 163:return 16\nbreak;\ncase 164:return 369\nbreak;\ncase 165:return 442\nbreak;\ncase 166:return 678\nbreak;\ncase 167:return 15\nbreak;\ncase 168:return 414\nbreak;\ncase 169:return 194\nbreak;\ncase 170:return 'REDUCE'\nbreak;\ncase 171:return 374\nbreak;\ncase 172:return 311\nbreak;\ncase 173:return 517\nbreak;\ncase 174:return 682\nbreak;\ncase 175:return 107\nbreak;\ncase 176:return 401\nbreak;\ncase 177:return 175\nbreak;\ncase 178:return 290\nbreak;\ncase 179:return 443\nbreak;\ncase 180:return 687\nbreak;\ncase 181:return 173\nbreak;\ncase 182:return 173\nbreak;\ncase 183:return 226\nbreak;\ncase 184:return 436\nbreak;\ncase 185:return 237\nbreak;\ncase 186:return 150\nbreak;\ncase 187:return 766\nbreak;\ncase 188:return 405\nbreak;\ncase 189:return 89\nbreak;\ncase 190:return 228\nbreak;\ncase 191:return 146\nbreak;\ncase 192:return 146\nbreak;\ncase 193:return 409\nbreak;\ncase 194:return 334\nbreak;\ncase 195:return 417\nbreak;\ncase 196:return 'STRATEGY'\nbreak;\ncase 197:return 'STORE'\nbreak;\ncase 198:return 280\nbreak;\ncase 199:return 353\nbreak;\ncase 200:return 353\nbreak;\ncase 201:return 463\nbreak;\ncase 202:return 357\nbreak;\ncase 203:return 357\nbreak;\ncase 204:return 192\nbreak;\ncase 205:return 309\nbreak;\ncase 206:return 'TIMEOUT'\nbreak;\ncase 207:return 148\nbreak;\ncase 208:return 195\nbreak;\ncase 209:return 435\nbreak;\ncase 210:return 435\nbreak;\ncase 211:return 509\nbreak;\ncase 212:return 294\nbreak;\ncase 213:return 451\nbreak;\ncase 214:return 162\nbreak;\ncase 215:return 187\nbreak;\ncase 216:return 98\nbreak;\ncase 217:return 335\nbreak;\ncase 218:return 408\nbreak;\ncase 219:return 231\nbreak;\ncase 220:return 149\nbreak;\ncase 221:return 344\nbreak;\ncase 222:return 134\nbreak;\ncase 223:return 410\nbreak;\ncase 224:return 308\nbreak;\ncase 225:return 128\nbreak;\ncase 226:return 439\nbreak;\ncase 227:return 72\nbreak;\ncase 228:return 435  /* Is this keyword required? */\nbreak;\ncase 229:return 131\nbreak;\ncase 230:return 131\nbreak;\ncase 231:return 115\nbreak;\ncase 232:return 137\nbreak;\ncase 233:return 179\nbreak;\ncase 234:return 317\nbreak;\ncase 235:return 180\nbreak;\ncase 236:return 133\nbreak;\ncase 237:return 138\nbreak;\ncase 238:return 326\nbreak;\ncase 239:return 323\nbreak;\ncase 240:return 325\nbreak;\ncase 241:return 322\nbreak;\ncase 242:return 320\nbreak;\ncase 243:return 318\nbreak;\ncase 244:return 319\nbreak;\ncase 245:return 142\nbreak;\ncase 246:return 141\nbreak;\ncase 247:return 139\nbreak;\ncase 248:return 321\nbreak;\ncase 249:return 324\nbreak;\ncase 250:return 140\nbreak;\ncase 251:return 124\nbreak;\ncase 252:return 324\nbreak;\ncase 253:return 77\nbreak;\ncase 254:return 78\nbreak;\ncase 255:return 145\nbreak;\ncase 256:return 424\nbreak;\ncase 257:return 426\nbreak;\ncase 258:return 300\nbreak;\ncase 259:return 505\nbreak;\ncase 260:return 507\nbreak;\ncase 261:return 122\nbreak;\ncase 262:return 116\nbreak;\ncase 263:return 74\nbreak;\ncase 264:return 333\nbreak;\ncase 265:return 152\nbreak;\ncase 266:return 764\nbreak;\ncase 267:return 143\nbreak;\ncase 268:return 181\nbreak;\ncase 269:return 136\nbreak;\ncase 270:return 123\nbreak;\ncase 271:return 312\nbreak;\ncase 272:return 4\nbreak;\ncase 273:return 10\nbreak;\ncase 274:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:``([^\\`])+``)/i,/^(?:\\[\\?\\])/i,/^(?:@\\[)/i,/^(?:ARRAY\\[)/i,/^(?:\\[([^\\]])*?\\])/i,/^(?:`([^\\`])*?`)/i,/^(?:N(['](\\\\.|[^']|\\\\')*?['])+)/i,/^(?:X(['](\\\\.|[^']|\\\\')*?['])+)/i,/^(?:(['](\\\\.|[^']|\\\\')*?['])+)/i,/^(?:([\"](\\\\.|[^\"]|\\\\\")*?[\"])+)/i,/^(?:--(.*?)($|\\r\\n|\\r|\\n))/i,/^(?:\\s+)/i,/^(?:\\|\\|)/i,/^(?:\\|)/i,/^(?:VALUE\\s+OF\\s+SEARCH\\b)/i,/^(?:VALUE\\s+OF\\s+SELECT\\b)/i,/^(?:ROW\\s+OF\\s+SELECT\\b)/i,/^(?:COLUMN\\s+OF\\s+SELECT\\b)/i,/^(?:MATRIX\\s+OF\\s+SELECT\\b)/i,/^(?:INDEX\\s+OF\\s+SELECT\\b)/i,/^(?:RECORDSET\\s+OF\\s+SELECT\\b)/i,/^(?:TEXT\\s+OF\\s+SELECT\\b)/i,/^(?:SELECT\\b)/i,/^(?:ABSOLUTE\\b)/i,/^(?:ACTION\\b)/i,/^(?:ADD\\b)/i,/^(?:AFTER\\b)/i,/^(?:AGGR\\b)/i,/^(?:AGGREGATE\\b)/i,/^(?:AGGREGATOR\\b)/i,/^(?:ALL\\b)/i,/^(?:ALTER\\b)/i,/^(?:AND\\b)/i,/^(?:ANTI\\b)/i,/^(?:ANY\\b)/i,/^(?:APPLY\\b)/i,/^(?:ARRAY\\b)/i,/^(?:AS\\b)/i,/^(?:ASSERT\\b)/i,/^(?:ASC\\b)/i,/^(?:ATTACH\\b)/i,/^(?:AUTO(_)?INCREMENT\\b)/i,/^(?:AVG\\b)/i,/^(?:BEFORE\\b)/i,/^(?:BEGIN\\b)/i,/^(?:BETWEEN\\b)/i,/^(?:BREAK\\b)/i,/^(?:NOT\\s+BETWEEN\\b)/i,/^(?:NOT\\s+LIKE\\b)/i,/^(?:BY\\b)/i,/^(?:~~\\*)/i,/^(?:!~~\\*)/i,/^(?:~~)/i,/^(?:!~~)/i,/^(?:ILIKE\\b)/i,/^(?:NOT\\s+ILIKE\\b)/i,/^(?:CALL\\b)/i,/^(?:CASE\\b)/i,/^(?:CAST\\b)/i,/^(?:CHECK\\b)/i,/^(?:CLASS\\b)/i,/^(?:CLOSE\\b)/i,/^(?:COLLATE\\b)/i,/^(?:COLUMN\\b)/i,/^(?:COLUMNS\\b)/i,/^(?:COMMIT\\b)/i,/^(?:CONSTRAINT\\b)/i,/^(?:CONTENT\\b)/i,/^(?:CONTINUE\\b)/i,/^(?:CONVERT\\b)/i,/^(?:CORRESPONDING\\b)/i,/^(?:COUNT\\b)/i,/^(?:CREATE\\b)/i,/^(?:CROSS\\b)/i,/^(?:CUBE\\b)/i,/^(?:CURRENT_TIMESTAMP\\b)/i,/^(?:CURSOR\\b)/i,/^(?:DATABASE(S)?)/i,/^(?:DATEADD\\b)/i,/^(?:DATEDIFF\\b)/i,/^(?:DECLARE\\b)/i,/^(?:DEFAULT\\b)/i,/^(?:DELETE\\b)/i,/^(?:DELETED\\b)/i,/^(?:DESC\\b)/i,/^(?:DETACH\\b)/i,/^(?:DISTINCT\\b)/i,/^(?:DROP\\b)/i,/^(?:ECHO\\b)/i,/^(?:EDGE\\b)/i,/^(?:END\\b)/i,/^(?:ENUM\\b)/i,/^(?:ELSE\\b)/i,/^(?:ESCAPE\\b)/i,/^(?:EXCEPT\\b)/i,/^(?:EXEC\\b)/i,/^(?:EXECUTE\\b)/i,/^(?:EXISTS\\b)/i,/^(?:EXPLAIN\\b)/i,/^(?:FALSE\\b)/i,/^(?:FETCH\\b)/i,/^(?:FIRST\\b)/i,/^(?:FOR\\b)/i,/^(?:FOREIGN\\b)/i,/^(?:FROM\\b)/i,/^(?:FULL\\b)/i,/^(?:FUNCTION\\b)/i,/^(?:GLOB\\b)/i,/^(?:GO\\b)/i,/^(?:GRAPH\\b)/i,/^(?:GROUP\\b)/i,/^(?:GROUPING\\b)/i,/^(?:HAVING\\b)/i,/^(?:IF\\b)/i,/^(?:IDENTITY\\b)/i,/^(?:IS\\b)/i,/^(?:IN\\b)/i,/^(?:INDEX\\b)/i,/^(?:INDEXED\\b)/i,/^(?:INNER\\b)/i,/^(?:INSTEAD\\b)/i,/^(?:INSERT\\b)/i,/^(?:INSERTED\\b)/i,/^(?:INTERSECT\\b)/i,/^(?:INTERVAL\\b)/i,/^(?:INTO\\b)/i,/^(?:JOIN\\b)/i,/^(?:KEY\\b)/i,/^(?:LAST\\b)/i,/^(?:LET\\b)/i,/^(?:LEFT\\b)/i,/^(?:LIKE\\b)/i,/^(?:LIMIT\\b)/i,/^(?:MATCHED\\b)/i,/^(?:MATRIX\\b)/i,/^(?:MAX(\\s+)?(?=\\())/i,/^(?:MAX(\\s+)?(?=(,|\\))))/i,/^(?:MIN(\\s+)?(?=\\())/i,/^(?:MERGE\\b)/i,/^(?:MINUS\\b)/i,/^(?:MODIFY\\b)/i,/^(?:NATURAL\\b)/i,/^(?:NEXT\\b)/i,/^(?:NEW\\b)/i,/^(?:NOCASE\\b)/i,/^(?:NO\\b)/i,/^(?:NOT\\b)/i,/^(?:NULL\\b)/i,/^(?:OFF\\b)/i,/^(?:ON\\b)/i,/^(?:ONLY\\b)/i,/^(?:OF\\b)/i,/^(?:OFFSET\\b)/i,/^(?:OPEN\\b)/i,/^(?:OPTION\\b)/i,/^(?:OR\\b)/i,/^(?:ORDER\\b)/i,/^(?:OUTER\\b)/i,/^(?:OVER\\b)/i,/^(?:PATH\\b)/i,/^(?:PARTITION\\b)/i,/^(?:PERCENT\\b)/i,/^(?:PIVOT\\b)/i,/^(?:PLAN\\b)/i,/^(?:PRIMARY\\b)/i,/^(?:PRINT\\b)/i,/^(?:PRIOR\\b)/i,/^(?:QUERY\\b)/i,/^(?:READ\\b)/i,/^(?:RECORDSET\\b)/i,/^(?:REDUCE\\b)/i,/^(?:REFERENCES\\b)/i,/^(?:REGEXP\\b)/i,/^(?:REINDEX\\b)/i,/^(?:RELATIVE\\b)/i,/^(?:REMOVE\\b)/i,/^(?:RENAME\\b)/i,/^(?:REPEAT\\b)/i,/^(?:REPLACE\\b)/i,/^(?:REQUIRE\\b)/i,/^(?:RESTORE\\b)/i,/^(?:RETURN\\b)/i,/^(?:RETURNS\\b)/i,/^(?:RIGHT\\b)/i,/^(?:ROLLBACK\\b)/i,/^(?:ROLLUP\\b)/i,/^(?:ROW\\b)/i,/^(?:ROWS\\b)/i,/^(?:SCHEMA(S)?)/i,/^(?:SEARCH\\b)/i,/^(?:SEMI\\b)/i,/^(?:SET\\b)/i,/^(?:SETS\\b)/i,/^(?:SHOW\\b)/i,/^(?:SOME\\b)/i,/^(?:SOURCE\\b)/i,/^(?:STRATEGY\\b)/i,/^(?:STORE\\b)/i,/^(?:SUM\\b)/i,/^(?:TABLE\\b)/i,/^(?:TABLES\\b)/i,/^(?:TARGET\\b)/i,/^(?:TEMP\\b)/i,/^(?:TEMPORARY\\b)/i,/^(?:TEXTSTRING\\b)/i,/^(?:THEN\\b)/i,/^(?:TIMEOUT\\b)/i,/^(?:TO\\b)/i,/^(?:TOP\\b)/i,/^(?:TRAN\\b)/i,/^(?:TRANSACTION\\b)/i,/^(?:TRIGGER\\b)/i,/^(?:TRUE\\b)/i,/^(?:TRUNCATE\\b)/i,/^(?:UNION\\b)/i,/^(?:UNIQUE\\b)/i,/^(?:UNPIVOT\\b)/i,/^(?:UPDATE\\b)/i,/^(?:USE\\b)/i,/^(?:USING\\b)/i,/^(?:VALUE\\b)/i,/^(?:VALUES\\b)/i,/^(?:VERTEX\\b)/i,/^(?:VIEW\\b)/i,/^(?:WHEN\\b)/i,/^(?:WHERE\\b)/i,/^(?:WHILE\\b)/i,/^(?:WITH\\b)/i,/^(?:WORK\\b)/i,/^(?:(\\d*[.])?\\d+[eE]\\d+)/i,/^(?:(\\d*[.])?\\d+)/i,/^(?:->)/i,/^(?:#)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:!===)/i,/^(?:===)/i,/^(?:!==)/i,/^(?:==)/i,/^(?:>=)/i,/^(?:&)/i,/^(?:\\|)/i,/^(?:<<)/i,/^(?:>>)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:@)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:\\])/i,/^(?::-)/i,/^(?:\\?-)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:,)/i,/^(?:::)/i,/^(?::)/i,/^(?:;)/i,/^(?:\\$)/i,/^(?:\\?)/i,/^(?:!)/i,/^(?:\\^)/i,/^(?:~)/i,/^(?:[a-zA-Z_][a-zA-Z_0-9]*)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = alasqlparser;\nexports.Parser = alasqlparser.Parser;\nexports.parse = function () { return alasqlparser.parse.apply(alasqlparser, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n/**\n   12prettyflag.js - prettify\n   @todo move this functionality to plugin\n*/\n\n/**\n \tPretty flag - nice HTML output or standard text without any tags\n\t@type {boolean}\n*/\n\nalasql.prettyflag = false;\n\n/**\n\tPretty output of SQL functions\n\t@function\n\t@param {string} sql SQL statement\n\t@param {boolean} flag value\n\t@return {string} HTML or text string with pretty output \n*/\n\nalasql.pretty = function(sql, flag) {\n\tvar pf = alasql.prettyflag;\n\talasql.prettyflag = !flag;\n\tvar s = alasql.parse(sql).toString();\n\talasql.prettyflag = pf;\n\treturn s;\n};\n\n/*jshint unused:false*/\r\n/*\r\n    Utilities for Alasql.js\r\n\n    @todo Review the list of utilities\r\n    @todo Find more effective utilities\r\n*/\r\n\n/**\r\n    Alasql utility functions\r\n    @type {object}\r\n */\r\nvar utils = alasql.utils = {};\r\n\n/**\r\n    Convert NaN to undefined\r\n    @function\r\n    @param {string} s JavaScript string to be modified\r\n    @return {string} Covered expression\r\n\n    @example\r\n\n    123         => 123\r\n    undefined   => undefined\r\n    NaN         => undefined\r\n\n*/\r\nfunction n2u(s) {\r\n    return '(y='+s+',y===y?y:undefined)';\r\n}\r\n\n/**\r\n    Return undefined if s undefined\r\n    @param {string} s JavaScript string to be modified\r\n    @return {string} Covered expression\r\n\n    @example\r\n\n    123,a       => a\r\n    undefined,a => undefined\r\n    NaN,a       => undefined\r\n\n*/\r\nfunction und(s,r) {\r\n    return '(y='+s+',typeof y==\"undefined\"?undefined:'+r+')';\r\n}\r\n\n/**\r\n    Return always true. Stub for non-ecisting WHERE clause, because is faster then if(whenrfn) whenfn()\r\n    @function\r\n    @return {boolean} Always true\r\n*/\r\nfunction returnTrue () {return true;}\r\n\n/**\r\n    Return undefined. Stub for non-ecisting WHERE clause, because is faster then if(whenrfn) whenfn()\r\n    @function\r\n    @return {undefined} Always undefined\r\n*/\r\nfunction returnUndefined() {}\r\n\n/**\r\n    Escape string\r\n    @function\r\n    @param {string} s Source string\r\n    @return {string} Escaped string\r\n    @example\r\n\n    Pit\\er's => Pit\\\\er\\'s\r\n\n*/\r\n// based on joliss/js-string-escape\r\nvar escapeq = utils.escapeq = function(s) {\r\n\n  return ('' + s).replace(/[\"'\\\\\\n\\r\\u2028\\u2029]/g, function (character) {\r\n    // Escape all characters not included in SingleStringCharacters and\r\n    // DoubleStringCharacters on\r\n    // http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4\r\n    switch (character) {\r\n      case '\"':\r\n      case \"'\":\r\n      case '\\\\':\r\n        return '\\\\' + character\r\n        // Four possible LineTerminator characters need to be escaped:\r\n      case '\\n':\r\n        return '\\\\n'\r\n      case '\\r':\r\n        return '\\\\r'\r\n      case '\\u2028':\r\n        return '\\\\u2028'\r\n      case '\\u2029':\r\n        return '\\\\u2029'\r\n    }\r\n  })\r\n};\r\n\n/**\r\n    Double quotes for SQL statements\r\n    @param {string} s Source string\r\n    @return {string} Escaped string\r\n\n    @example\r\n\n    Piter's => Piter''s\r\n\n */\r\nvar escapeqq = utils.undoubleq = function(s) {\r\n    return s.replace(/(\\')/g,'\\'\\'');\r\n};\r\n\n/**\r\n    Replace double quotes with single quote\r\n    @param {string} s Source string\r\n    @return {string} Replaced string\r\n    @example\r\n\n    Piter''s => Piter's\r\n\n */\r\nvar doubleq = utils.doubleq = function(s) {\r\n    return s.replace(/(\\'\\')/g,'\\\\\\'');\r\n};\r\n\n/**\r\n    Replace sigle quote to escaped single quote\r\n    @param {string} s Source string\r\n    @return {string} Replaced string\r\n\n    @todo Chack this functions\r\n\n*/\r\n var doubleqq = utils.doubleqq = function(s) {\r\n    return s.replace(/\\'/g,\"\\'\");\r\n};\r\n\n/**\r\n    Cut BOM first character for UTF-8 files (for merging two files)\r\n    @param {string} s Source string\r\n    @return {string} Replaced string\r\n*/\r\n\nvar cutbom = function(s) {\r\n    if(s[0] === String.fromCharCode(65279)){\r\n        s = s.substr(1);\r\n    }\r\n    return s;\r\n}\r\n\n/**\r\n    Get the blobal scope\r\n    Inspired by System.global\r\n    @return {object} The global scope\r\n*/\r\nutils.global = (function(){\r\n  try {\r\n    return Function('return this')();\r\n\n  }catch(e){\r\n    //If Content Security Policy\r\n    var global =  self || window || global;\r\n\n    if(global){\r\n    \treturn global;\r\n    } else {\r\n    \tthrow new Error('Unable to locate global object');\r\n    }\r\n  }\r\n})();\r\n\n/**\r\n    Find out if a function is native to the enviroment\r\n    @param {function} Function to check\r\n    @return {boolean} True if function is native\r\n*/\r\nvar isNativeFunction = utils.isNativeFunction = function(fn){\r\n  return typeof fn === \"function\" && !!~(fn.toString().indexOf(\"[native code]\"));\r\n}\r\n\n/**\r\n    Find out if code is running in a web worker enviroment\r\n    @return {boolean} True if code is running in a web worker enviroment\r\n*/\r\nutils.isWebWorker = (function(){\r\n  try{\r\n    var importScripts = utils.global.importScripts;\r\n    return (utils.isNativeFunction(importScripts));\r\n  }catch(e){\r\n    return false;\r\n  }\r\n})();\r\n\n/**\r\n    Find out if code is running in a node enviroment\r\n    @return {boolean} True if code is running in a node enviroment\r\n*/\r\nutils.isNode = (function(){\r\n  try{\r\n    return utils.isNativeFunction(utils.global.process.reallyExit);\r\n  }catch(e){\r\n    return false;\r\n  }\r\n})();\r\n\n/**\r\n    Find out if code is running in a browser enviroment\r\n    @return {boolean} True if code is running in a browser enviroment\r\n*/\r\nutils.isBrowser = (function(){\r\n  try{\r\n    return utils.isNativeFunction(utils.global.location.reload);\r\n  }catch(e){\r\n    return false;\r\n  }\r\n})();\r\n\n/**\r\n    Find out if code is running in a browser with a browserify setup\r\n    @return {boolean} True if code is running in a browser with a browserify setup\r\n*/\r\nutils.isBrowserify = (function(){\r\n\treturn utils.isBrowser && (typeof process !== \"undefined\") && process.browser;\r\n})();\r\n\n/**\r\n    Find out if code is running in a browser with a requireJS setup\r\n    @return {boolean} True if code is running in a browser with a requireJS setup\r\n*/\r\nutils.isRequireJS = (function(){\r\n\treturn utils.isBrowser && (typeof require === \"function\") && (typeof require.specified === \"function\");\r\n})();\r\n\n/**\r\n    Find out if code is running with Meteor in the enviroment\r\n    @return {boolean} True if code is running with Meteor in the enviroment\r\n\n    @todo Find out if this is the best way to do this\r\n*/\r\nutils.isMeteor = (function(){\r\n  return (typeof Meteor !== 'undefined' && Meteor.release)\r\n})();\r\n\n/**\r\n    Find out if code is running on a Meteor client\r\n    @return {boolean} True if code is running on a Meteor client\r\n*/\r\nutils.isMeteorClient = utils.isMeteorClient = (function(){\r\n  return utils.isMeteor && Meteor.isClient;\r\n})();\r\n\n/**\r\n    Find out if code is running on a Meteor server\r\n    @return {boolean} True if code is running on a Meteor server\r\n*/\r\nutils.isMeteorServer = (function(){\r\n  return utils.isMeteor && Meteor.isServer;\r\n})();\r\n\n/**\r\n    Find out code is running in a cordovar enviroment\r\n    @return {boolean} True if code is running in a web worker enviroment\r\n\n    @todo Find out if this is the best way to do this\r\n*/\r\nutils.isCordova = (function(){\r\n  return (typeof cordova === 'object')\r\n})();\r\n\nutils.isReactNative = (function(){\r\n  var isReact = false;\r\n  //*not-for-browser/*\r\n  try{\r\n\tif(typeof require('react-native') === 'object'){\r\n\t\tisReact = true;\r\n\t}\r\n  }catch(e){void 0\t}\r\n  //*/\r\n  return isReact;\r\n})();\r\n\nutils.hasIndexedDB = (function(){\r\n  return !!utils.global.indexedDB;\r\n})();\r\n\nutils.isArray = function(obj){\r\n\treturn \"[object Array]\"===Object.prototype.toString.call(obj);\r\n}\r\n/**\r\n    Load text file from anywhere\r\n    @param {string|object} path File path or HTML event\r\n    @param {boolean} asy True - async call, false - sync call\r\n    @param {function} success Success function\r\n    @param {function} error Error function\r\n    @return {string} Read data\r\n\n    @todo Define Event type\r\n    @todo Smaller if-else structures.\r\n*/\r\nvar loadFile = utils.loadFile = function(path, asy, success, error) {\r\n    var data, fs;\r\n    if(utils.isNode || utils.isMeteorServer) {\r\n    \t//*not-for-browser/*\r\n        if(utils.isMeteor) {\r\n            fs = Npm.require('fs');\r\n        } else {\r\n            fs = require('fs');\r\n        }\r\n\n        // If path is empty, than read data from stdin (for Node) \r\n        if(typeof path === 'undefined') {\r\n            var buff = '';\r\n            process.stdin.setEncoding('utf8');\r\n            process.stdin.on('readable', function() {\r\n                var chunk = process.stdin.read();\r\n                if (chunk !== null) {\r\n                    buff += chunk.toString();\r\n                }\r\n            });\r\n            process.stdin.on('end', function() {\r\n               success(cutbom(buff));\r\n            });\r\n        } else {\r\n            if(/^[a-z]+:\\/\\//i.test(path)) {\r\n                var request = require('request');\r\n                request(path,function(err, response, body) {\r\n                    if(err) {\r\n                        throw err;\r\n                    }\r\n                    success(cutbom(body.toString()));\r\n                });\r\n            } else {\r\n                //If async callthen call async\r\n                if(asy) {\r\n                    fs.readFile(path,function(err,data){\r\n                        if(err) {\r\n                            throw err;\r\n                        }\r\n                        success(cutbom(data.toString()));\r\n                    });\r\n                } else {\r\n                    // Call sync version \r\n                    data = fs.readFileSync(path);\r\n                    success(cutbom(data.toString()));\r\n                }\r\n            }\r\n        }\r\n\t} else if(utils.isReactNative) {\r\n        // If ReactNative\r\n\t\tvar RNFS = require('react-native-fs');\r\n        RNFS.readFile(path,'utf8').then(function(contents){\r\n\t\t\tsuccess(cutbom(contents));\r\n\t\t}).catch(function(err){\r\n\t\t\tthrow err;\r\n\t\t});\r\n\t//*/\r\n    } else if(utils.isCordova) {\r\n        /* If Cordova */\r\n        utils.global.requestFileSystem(LocalFileSystem.PERSISTENT, 0, function (fileSystem) {\r\n            fileSystem.root.getFile(path, {create:false}, function (fileEntry) {\r\n                fileEntry.file(function(file){\r\n                    var fileReader = new FileReader();\r\n                    fileReader.onloadend = function(e){\r\n                        success(cutbom(this.result));\r\n                    };\r\n                    fileReader.readAsText(file);\r\n                });\r\n            });\r\n        });\r\n\n/** @todo Check eliminated code below */\r\n\n    } else {\r\n        /* For string */\r\n        if(typeof path === \"string\") {\r\n            // For browser read from tag\r\n            /*\r\n                SELECT * FROM TXT('#one') -- read data from HTML element with id=\"one\"\r\n            */\r\n            if((path.substr(0,1) === '#') && (typeof document !== 'undefined')) {\r\n                data = document.querySelector(path).textContent;\r\n                success(data);\r\n            } else {\r\n                /*\r\n                    Simply read file from HTTP request, like:\r\n                    SELECT * FROM TXT('http://alasql.org/README.md');\r\n                */\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4) {\r\n                        if (xhr.status === 200) {\r\n                            if (success){\r\n                                success(cutbom(xhr.responseText));\r\n                            }\r\n                        } else if (error){\r\n                            error(xhr);\r\n                        }\r\n                        // Todo: else...?\r\n\n                    }\r\n                };\r\n                xhr.open(\"GET\", path, asy); // Async\r\n                xhr.responseType = \"text\";\r\n                xhr.send();\r\n            }\r\n        } else if(path instanceof Event) {\r\n            /*\r\n                For browser read from files input element\r\n                <input type=\"files\" onchange=\"readFile(event)\">\r\n                <script>\r\n                    function readFile(event) {\r\n                        alasql('SELECT * FROM TXT(?)',[event])\r\n                    }\r\n                <\/script>\r\n            */\r\n            /** @type {array} List of files from <input> element */\r\n            var files = path.target.files;\r\n            /** type {object} */\r\n            var reader = new FileReader();\r\n            /** type {string} */\r\n            var name = files[0].name;\r\n            reader.onload = function(e) {\r\n                var data = e.target.result;\r\n                success(cutbom(data));\r\n            };\r\n            reader.readAsText(files[0]);\r\n        }\r\n    }\r\n};\r\n\n/**\r\n  @function Load binary file from anywhere\r\n  @param {string} path File path\r\n  @param {boolean} asy True - async call, false - sync call\r\n  @param {function} success Success function\r\n  @param {function} error Error function\r\n  @return 1 for Async, data - for sync version\r\n\n  @todo merge functionality from loadFile and LoadBinaryFile\r\n*/\r\n\nvar loadBinaryFile = utils.loadBinaryFile = function(path, asy, success, error) {\r\n    var fs;\r\n    if(utils.isNode || utils.isMeteorServer) {\r\n\t   \t//*not-for-browser/*\r\n        if(utils.isMeteorServer) {\r\n            fs = Npm.require('fs'); // For Meteor\r\n        } else {\r\n            fs = require('fs');\r\n        }\r\n\n        if(/^[a-z]+:\\/\\//i.test(path)) {\r\n            var request = require('request');\r\n            request({url:path,encoding:null},function(err, response, data) {\r\n                if(err) {\r\n                    throw err;\r\n                }\r\n                var arr = [];\r\n                for(var i = 0; i < data.length; ++i){\r\n                    arr[i] = String.fromCharCode(data[i]);\r\n                }\r\n                success(arr.join(\"\"));\r\n            });\r\n        } else {\r\n            if(asy) {\r\n                fs.readFile(path,function(err,data){\r\n                    if(err) {\r\n                        throw err;\r\n                    }\r\n                    var arr = [];\r\n                    for(var i = 0; i < data.length; ++i){\r\n                        arr[i] = String.fromCharCode(data[i]);\r\n                    }\r\n                    success(arr.join(\"\"));\r\n                });\r\n\n            } else {\r\n                var data = fs.readFileSync(path);\r\n                var arr = [];\r\n                for(var i = 0; i < data.length; ++i){\r\n                    arr[i] = String.fromCharCode(data[i]);\r\n                }\r\n                success(arr.join(\"\"));\r\n            }\r\n        }\r\n\t} else if(utils.isReactNative) {\r\n        // If ReactNative\r\n\t\t//var RNFS = require('react-native-fs');\r\n\t\tvar RNFetchBlob = require('react-native-fetch-blob').default\r\n\t\tvar dirs = RNFetchBlob.fs.dirs\r\n\t\t//should use readStream instead if the file is large\r\n\t\tRNFetchBlob.fs.readFile(path, 'base64').then(function(data){\r\n\t\t\t//RNFetchBlob.base64.decode(data) //need more test on excel\r\n\t\t    success(data);\r\n\t\t})\r\n\t//*/\r\n    } else {\r\n        if(typeof path === \"string\") {\r\n            // For browser\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(\"GET\", path, asy); // Async\r\n            xhr.responseType = \"arraybuffer\";\r\n            xhr.onload = function() {\r\n                var data = new Uint8Array(xhr.response);\r\n                var arr = [];\r\n                for(var i = 0; i < data.length; ++i){\r\n                    arr[i] = String.fromCharCode(data[i]);\r\n                }\r\n                success(arr.join(\"\"));\r\n            }\r\n           // xhr.responseType = \"blob\";\r\n            xhr.send();\r\n        } else if(path instanceof Event) {\r\n\n            var files = path.target.files;\r\n            var reader = new FileReader();\r\n            var name = files[0].name;\r\n            reader.onload = function(e) {\r\n                var data = e.target.result;\r\n                success(data);\r\n            };\r\n            reader.readAsArrayBuffer(files[0]);\r\n        } else if(path instanceof Blob) {\r\n        \tsuccess(path);\r\n        }\r\n    }\r\n};\r\n\nvar removeFile = utils.removeFile = function(path,cb) {\r\n    if(utils.isNode) {\r\n        //*not-for-browser/*\r\n        var fs = require('fs');\r\n        fs.remove(path,cb);\r\n    } else if(utils.isCordova) {\r\n        utils.global.requestFileSystem(LocalFileSystem.PERSISTENT, 0, function (fileSystem) {\r\n            fileSystem.root.getFile(path, {create:false}, function (fileEntry) {\r\n                fileEntry.remove(cb);\r\n                cb && cb(); // jshint ignore:line\r\n            }, function(){\r\n                cb && cb(); // jshint ignore:line\r\n            });\r\n        });\r\n\t} else if(utils.isReactNative) {\r\n        // If ReactNative\r\n\t\tvar RNFS = require('react-native-fs');\r\n        RNFS.unlink(path).then(function(){\r\n\t\t\tcb && cb();\r\n\t\t}).catch(function(err){\r\n\t\t\tthrow err;\r\n\t\t});\r\n\t//*/\r\n    } else {\r\n        throw new Error('You can remove files only in Node.js and Apache Cordova');\r\n    }\r\n};\r\n\n// Todo: check if it makes sense to support cordova and Meteor server\r\nvar deleteFile = utils.deleteFile = function(path,cb){\r\n    //*not-for-browser/*\r\n    if(utils.isNode) {\r\n        var fs = require('fs');\r\n        fs.unlink(path, cb);\r\n\t} else if(utils.isReactNative) {\r\n        // If ReactNative\r\n\t\tvar RNFS = require('react-native-fs');\r\n        RNFS.unlink(path).then(function(){\r\n\t\t\tcb && cb();\r\n\t\t}).catch(function(err){\r\n\t\t\tthrow err;\r\n\t\t});\r\n    }\r\n    //*/\r\n\n};\r\n\nutils.autoExtFilename = function(filename,ext,config) {\r\n\tconfig = config || {};\r\n\tif(typeof filename !== 'string' || filename.match(/^[A-z]+:\\/\\/|\\n|\\..{2,4}$/) || config.autoExt === 0 || config.autoExt === false){\r\n\t\treturn filename;\r\n\t}\r\n\treturn filename+'.'+ext\r\n}\r\n\nvar fileExists = utils.fileExists = function(path,cb){\r\n    if(utils.isNode) {\r\n        //*not-for-browser/*\r\n        var fs = require('fs');\r\n        fs.exists(path,cb);\r\n    } else if(utils.isCordova) {\r\n        utils.global.requestFileSystem(LocalFileSystem.PERSISTENT, 0, function (fileSystem) {\r\n            fileSystem.root.getFile(path, {create:false}, function (fileEntry) {\r\n                cb(true);\r\n            }, function(){\r\n                cb(false);\r\n            });\r\n        });\r\n\t} else if(utils.isReactNative) {\r\n        // If ReactNative\r\n\t\tvar RNFS = require('react-native-fs');\r\n        RNFS.exists(path).then(function(yes){\r\n\t\t\tcb && cb(yes);\r\n\t\t}).catch(function(err){\r\n\t\t\tthrow err;\r\n\t\t});\r\n\t//*/\r\n    } else {\r\n        // TODO Cordova, etc.\r\n        throw new Error('You can use exists() only in Node.js or Apach Cordova');\r\n    }\r\n};\r\n\n/**\r\n  Save text file from anywhere\r\n  @param {string} path File path\r\n  @param {array} data Data object\r\n  @param {function} cb Callback\r\n  @param {object=} opts\r\n*/\r\n\nvar saveFile = utils.saveFile = function(path, data, cb, opts) {\r\n    var res = 1;\r\n    if(path === undefined) {\r\n        //\r\n        // Return data into result variable\r\n        // like: alasql('SELECT * INTO TXT() FROM ?',[data]);\r\n        //\r\n        res = data;\r\n        if(cb){\r\n            res = cb(res);\r\n        }\r\n    } else {\r\n        if(utils.isNode) {\r\n            //*not-for-browser/*\r\n            var fs = require('fs');\r\n            data = fs.writeFileSync(path,data);\r\n            if(cb){\r\n                res = cb(res);\r\n            }\r\n        }else if(utils.isReactNative) {\r\n\t\t\tvar RNFS = require('react-native-fs');\r\n\t\t\tRNFS.writeFile(path, data).then(function(success){ //, 'utf8'\r\n\t\t\t\tif(cb) res = cb(res);\r\n\t\t\t}).catch(function(err){\r\n\t\t\t\tconsole.log(err.message);\r\n\t\t\t});\r\n        } else if(utils.isCordova) {\r\n            utils.global.requestFileSystem(LocalFileSystem.PERSISTENT, 0, function (fileSystem) {\r\n\n                    fileSystem.root.getFile(path, {create:true}, function (fileEntry) {\r\n                        fileEntry.createWriter(function(fileWriter) {\r\n                            fileWriter.onwriteend = function(){\r\n                                if(cb){\r\n                                    res = cb(res);\r\n                                }\r\n                            }\r\n                            fileWriter.write(data);\r\n                        });\r\n                    });\r\n\n            });\r\n            //*/\r\n\n        } else {\r\n        \tif(isIE() === 9) {\r\n        \t\t// Solution was taken from\r\n        \t\t// http://megatuto.com/formation-JAVASCRIPT.php?JAVASCRIPT_Example=Javascript+Save+CSV+file+in+IE+8/IE+9+without+using+window.open()+Categorie+javascript+internet-explorer-8&category=&article=7993\r\n\n\t\t\t\t// Prepare data\r\n\t\t\t\tvar ndata = data.replace(/\\r\\n/g,'&#A;&#D;');\r\n\t\t\t\tndata = ndata.replace(/\\n/g,'&#D;');\r\n\t\t\t\tndata = ndata.replace(/\\t/g,'&#9;');\r\n\t\t\t\tvar testlink = utils.global.open(\"about:blank\", \"_blank\");\r\n\t\t\t\ttestlink.document.write(ndata); //fileData has contents for the file\r\n\t\t\t\ttestlink.document.close();\r\n\t\t\t\ttestlink.document.execCommand('SaveAs', false, path);\r\n\t\t\t\ttestlink.close();\r\n        \t} else {\r\n                var opt = {\r\n                    disableAutoBom: false\r\n                };\r\n                alasql.utils.extend(opt, opts);\r\n\t            var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\r\n\t            saveAs(blob, path, opt.disableAutoBom);\r\n\t            if(cb){\r\n                    res = cb(res);\r\n                }\r\n        \t}\r\n        }\r\n    }\r\n\n    return res;\r\n}\r\n\n/**\r\n    @function Is this IE9\r\n    @return {boolean} True for IE9 and false for other browsers\r\n\n    For IE9 compatibility issues\r\n*/\r\nfunction isIE () {\r\n  var myNav = navigator.userAgent.toLowerCase();\r\n  return (myNav.indexOf('msie') !== -1) ? parseInt(myNav.split('msie')[1]) : false;\r\n}\r\n\n/**\r\n  @function Hash a string to signed integer\r\n  @param {string} source string\r\n  @return {integer} hash number\r\n*/\r\n\n// sdbm hash function\r\nvar hash = utils.hash = function(str){\r\n  var hash = 5381,\r\n      i    = str.length\r\n\n  while(i)\r\n    hash = (hash * 33) ^ str.charCodeAt(--i)\r\n\n  return hash;\r\n}\r\n\n/**\r\n    Union arrays\r\n    @function\r\n    @param {array} a\r\n    @param {array} b\r\n    @return {array}\r\n*/\r\nvar arrayUnion = utils.arrayUnion = function (a,b) {\r\n    var r = b.slice(0);\r\n    a.forEach(function(i){\r\n                            if (r.indexOf(i) < 0){\r\n                                r.push(i);\r\n                            }\r\n                        });\r\n    return r;\r\n}\r\n\n/**\r\n Array Difference\r\n */\r\nvar arrayDiff = utils.arrayDiff  = function (a,b) {\r\n    return a.filter(function(i) {return b.indexOf(i) < 0;});\r\n};\r\n\n/**\r\n  Arrays deep intersect (with records)\r\n */\r\nvar arrayIntersect = utils.arrayIntersect  = function(a,b) {\r\n    var r = [];\r\n    a.forEach(function(ai) {\r\n        var found = false;\r\n\n        b.forEach(function(bi){\r\n            found = found || (ai===bi);\r\n        });\r\n\n        if(found) {\r\n            r.push(ai);\r\n        }\r\n    });\r\n    return r;\r\n};\r\n\n/**\r\n  Arrays deep union (with records)\r\n */\r\nvar arrayUnionDeep = utils.arrayUnionDeep = function (a,b) {\r\n    var r = b.slice(0);\r\n    a.forEach(function(ai) {\r\n        var found = false;\r\n\n        r.forEach(function(ri){\r\n\n            found = found || deepEqual(ai, ri);\r\n        });\r\n\n        if(!found) {\r\n            r.push(ai);\r\n        }\r\n    });\r\n    return r;\r\n};\r\n\n/**\r\n  Arrays deep union (with records)\r\n */\r\nvar arrayExceptDeep = utils.arrayExceptDeep = function (a,b) {\r\n    var r = [];\r\n    a.forEach(function(ai) {\r\n        var found = false;\r\n\n        b.forEach(function(bi){\r\n\n            found = found || deepEqual(ai, bi);\r\n        });\r\n\n        if(!found) {\r\n            r.push(ai);\r\n        }\r\n    });\r\n    return r;\r\n};\r\n\n/**\r\n  Arrays deep intersect (with records)\r\n */\r\nvar arrayIntersectDeep = utils.arrayIntersectDeep  = function(a,b) {\r\n    var r = [];\r\n    a.forEach(function(ai) {\r\n        var found = false;\r\n\n        b.forEach(function(bi){\r\n\n            found = found || deepEqual(ai, bi, true);\r\n        });\r\n\n        if(found) {\r\n            r.push(ai);\r\n        }\r\n    });\r\n    return r;\r\n};\r\n\n/**\r\n  Deep clone objects\r\n */\r\nvar cloneDeep = utils.cloneDeep = function cloneDeep(obj) {\r\n    if(null === obj || typeof(obj) !== 'object'){\r\n        return obj;\r\n    }\r\n\n    if(obj instanceof Date) {\r\n\treturn new Date(obj);\r\n    }\r\n\n    var temp = obj.constructor(); // changed\r\n\n    for(var key in obj) {\r\n        if(obj.hasOwnProperty(key)) {\r\n            temp[key] = cloneDeep(obj[key]);\r\n        }\r\n    }\r\n    return temp;\r\n};\r\n\n/**\r\n  Check equality of objects\r\n*/\r\n\n/**\r\n  Compare two objects in deep\r\n */\r\nvar deepEqual = utils.deepEqual = function(x, y) {\r\n\n\tif(x===y){\r\n\t\treturn true;\r\n\t}\r\n\n    if (typeof x === \"object\" && null !== x && (typeof y === \"object\" && null !== y)) {\r\n        if (Object.keys(x).length !== Object.keys(y).length) {\r\n            return false;\r\n        }\r\n        for (var prop in x) {\r\n\t\t\tif (!deepEqual(x[prop], y[prop])) {\r\n\t\t\t\treturn false;\r\n            }\r\n        }\r\n        return true;\r\n    }  \r\n\n    return false;\r\n\n};\r\n/**\r\n    Array with distinct records\r\n    @param {array} data\r\n    @return {array}\r\n*/\r\nvar distinctArray = utils.distinctArray = function(data) {\r\n    var uniq = {};\r\n    // TODO: Speedup, because Object.keys is slow\r\n    for(var i=0,ilen=data.length;i<ilen;i++) {\r\n        var uix;\r\n        if(typeof data[i] === 'object') {\r\n            uix = Object.keys(data[i]).sort().map(function(k){return k+'`'+data[i][k];}).join('`');\r\n        } else {\r\n            uix = data[i];\r\n        }\r\n        uniq[uix] = data[i];\r\n    }\r\n    var res = [];\r\n    for(var key in uniq){\r\n        res.push(uniq[key]);\r\n    }\r\n    return res;\r\n};\r\n\n/**\r\n    Extend object a with properties of b\r\n    @function\r\n    @param {object} a\r\n    @param {object} b\r\n    @return {object}\r\n*/\r\nvar extend = utils.extend = function extend (a,b){\r\n    a = a || {};\r\n    for(var key in b) {\r\n        if(b.hasOwnProperty(key)) {\r\n            a[key] = b[key];\r\n        }\r\n    }\r\n    return a;\r\n};\r\n\n/**\r\n   Flat array by first row\r\n */\r\nvar flatArray = utils.flatArray = function(a) {\r\n\n    if(!a || 0 === a.length){\r\n        return [];\r\n    }\r\n\n    // For recordsets\r\n    if(typeof a === 'object' && a instanceof alasql.Recordset) {\r\n        return a.data.map(function(ai){return ai[a.columns[0].columnid];});\r\n    }\r\n    // Else for other arrays\r\n    var key = Object.keys(a[0])[0];\r\n    if(key === undefined){\r\n        return [];\r\n    }\r\n    return a.map(function(ai) {return ai[key];});\r\n};\r\n\n/**\r\n  Convert array of objects to array of arrays\r\n */\r\nvar arrayOfArrays = utils.arrayOfArrays = function (a) {\r\n    return a.map(function(aa){\r\n        var ar = [];\r\n        for(var key in aa){\r\n            ar.push(aa[key]);\r\n        }\r\n        return ar;\r\n    });\r\n};\r\n\nif (!Array.isArray) {\r\n  Array.isArray = function(arg) {\r\n    return Object.prototype.toString.call(arg) === '[object Array]';\r\n  };\r\n}\r\n\n/**\r\n    Excel:convert number to Excel column, like 1 => 'A'\r\n    @param {integer} i Column number, starting with 0\r\n    @return {string} Column name, starting with 'A'\r\n*/\r\n\nvar xlsnc = utils.xlsnc = function(i) {\r\n    var addr = String.fromCharCode(65+i%26);\r\n    if(i>=26) {\r\n        i=((i/26)|0)-1;\r\n        addr = String.fromCharCode(65+i%26)+addr;\r\n        if(i>26) {\r\n            i=((i/26)|0)-1;\r\n            addr = String.fromCharCode(65+i%26)+addr;\r\n        }\r\n    }\r\n    return addr;\r\n};\r\n\n/**\r\n    Excel:conver Excel column name to number\r\n    @param {string} s Column number, like 'A' or 'BE'\r\n    @return {string} Column name, starting with 0\r\n*/\r\nvar xlscn = utils.xlscn = function(s) {\r\n    var n = s.charCodeAt(0)-65;\r\n    if(s.length>1) {\r\n        n = (n+1)*26+s.charCodeAt(1)-65;\r\n\n        if(s.length>2) {\r\n            n = (n+1)*26+s.charCodeAt(2)-65;\r\n        }\r\n    }\r\n    return n;\r\n};\r\n\nvar domEmptyChildren = utils.domEmptyChildren = function (container){\r\n  var len = container.childNodes.length;\r\n  while (len--) {\r\n    container.removeChild(container.lastChild);\r\n  }\r\n};\r\n\n/**\r\n    SQL LIKE emulation\r\n    @parameter {string} pattern Search pattern\r\n    @parameter {string} value Searched value\r\n    @parameter {string} escape Escape character (optional)\r\n    @return {boolean} If value LIKE pattern ESCAPE escape\r\n*/\r\n\nvar like = utils.like = function (pattern,value,escape) {\r\n    // Verify escape character\r\n    if(!escape) escape = '';\r\n\n    var i=0;\r\n    var s = '^';\r\n\n    while(i<pattern.length) {\r\n      var c = pattern[i], c1 = '';\r\n      if(i<pattern.length-1) c1 = pattern[i+1];\r\n\n      if(c === escape) {\r\n        s += '\\\\'+c1;\r\n        i++;\r\n      } else if(c==='[' && c1 === '^') {\r\n        s += '[^';\r\n        i++;\r\n      } else if(c==='[' || c===']' ) {\r\n        s += c;\r\n      } else if(c==='%') {\r\n        s += '.*';\r\n      } else if(c === '_') {\r\n        s += '.';\r\n      } else if('/.*+?|(){}'.indexOf(c)>-1) {\r\n        s += '\\\\'+c;\r\n      } else {\r\n        s += c;\r\n      }\r\n      i++;\r\n    }\r\n\n    s += '$';\r\n\n    return (''+(value||'')).toUpperCase().search(RegExp(s.toUpperCase()))>-1;\r\n   };\r\n\nutils.glob = function (value,pattern) {\r\n\n    var i=0;\r\n    var s = '^';\r\n\n    while(i<pattern.length) {\r\n      var c = pattern[i], c1 = '';\r\n      if(i<pattern.length-1) c1 = pattern[i+1];\r\n\n      if(c==='[' && c1 === '^') {\r\n        s += '[^';\r\n        i++;\r\n      } else if(c==='[' || c===']' ) {\r\n        s += c;\r\n      } else if(c==='*') {\r\n        s += '.*';\r\n      } else if(c === '?') {\r\n        s += '.';\r\n      } else if('/.*+?|(){}'.indexOf(c)>-1) {\r\n        s += '\\\\'+c;\r\n      } else {\r\n        s += c;\r\n      }\r\n      i++;\r\n    }\r\n\n    s += '$';\r\n    return (''+(value||'')).toUpperCase().search(RegExp(s.toUpperCase()))>-1;\r\n   };\r\n\n/**\r\n\tGet path of alasql.js\r\n\t@todo Rewrite and simplify the code. Review, is this function is required separately\r\n*/\r\nutils.findAlaSQLPath = function() {\r\n\t/** type {string} Path to alasql library and plugins */\r\n\n\tif (utils.isWebWorker) {\r\n\t\treturn '';\r\n\t\t/** @todo Check how to get path in worker */\r\n\n\t} else if(utils.isMeteorClient) {\r\n\t\treturn '/packages/dist/';\r\n\n\t} else if(utils.isMeteorServer) {\r\n\t\treturn 'assets/packages/dist/';\r\n\n\t} else if(utils.isNode) {\r\n\t\treturn __dirname;\r\n\n\t} else if(utils.isBrowser) {\r\n\t\tvar sc = document.getElementsByTagName('script');\r\n\n\t\tfor(var i=0;i<sc.length;i++) {\r\n\t\t\tif (sc[i].src.substr(-16).toLowerCase() === 'alasql-worker.js') {\r\n\t\t\t\treturn sc[i].src.substr(0,sc[i].src.length-16);\r\n\n\t\t\t} else if (sc[i].src.substr(-20).toLowerCase() === 'alasql-worker.min.js') {\r\n\t\t\t\treturn sc[i].src.substr(0,sc[i].src.length-20);\r\n\n\t\t\t} else if (sc[i].src.substr(-9).toLowerCase() === 'alasql.js') {\r\n\t\t\t\treturn sc[i].src.substr(0,sc[i].src.length-9);\r\n\n\t\t\t} else if (sc[i].src.substr(-13).toLowerCase() === 'alasql.min.js') {\r\n\t\t\t\treturn sc[i].src.substr(0,sc[i].src.length-13);\r\n\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn '';\r\n}\r\n\nvar getXLSX = function(){\r\n\tvar XLSX = null;\r\n\t/* If require() shuold be supported else take from global scope */\r\n\tif(utils.isNode || utils.isBrowserify  || utils.isMeteorServer) {\r\n\t\t//*not-for-browser/*\r\n\t\tXLSX = require('xlsx') || null;\r\n\t\t//*/\r\n\t} else {\r\n\t\tXLSX = utils.global.XLSX || null;\r\n\t}\r\n\n\tif(null === XLSX){\r\n        throw new Error('Please include the xlsx.js library');\r\n\t}\r\n\n\treturn XLSX;\r\n}\r\n\nvar getXLS = function(){\r\n\treturn getXLSX();\r\n}\r\n\n// set AlaSQl path\r\nalasql.path = alasql.utils.findAlaSQLPath();\r\n\n/**\n \tStrip all comments.\n \t@function\n \t@param {string} str\n \t@return {string}\n \tBased om the https://github.com/lehni/uncomment.js/blob/master/uncomment.js\n \tI just replaced JavaScript's '//' to SQL's '--' and remove other stuff\n\n \t@todo Fixed [aaa/*bbb] for column names\n \t@todo Bug if -- comments in the last line\n\t@todo Check if it possible to model it with Jison parser\n\t@todo Remove unused code\n */\n\nalasql.utils.uncomment = function uncomment(str) {\n\t// Add some padding so we can always look ahead and behind by two chars\n\tstr = ('__' + str + '__').split('');\n\tvar quote = false,\n\t\tquoteSign,\n\t\t// regularExpression = false,\n\t\t// characterClass = false,\n\t\tblockComment = false,\n\t\tlineComment = false;\n\t\t// preserveComment = false;\n\n\tfor (var i = 0, l = str.length; i < l; i++) {\n\n\t\t// When checking for quote escaping, we also need to check that the\n\t\t// escape sign itself is not escaped, as otherwise '\\\\' would cause\n\t\t// the wrong impression of an unclosed string:\n\t\tvar unescaped = str[i - 1] !== '\\\\' || str[i - 2] === '\\\\';\n\n\t\tif (quote) {\n\t\t\tif (str[i] === quoteSign && unescaped){\n\t\t\t\tquote = false;\n\t\t\t}\n\n\t\t} else if (blockComment) {\n\t\t\t// Is the block comment closing?\n\t\t\tif (str[i] === '*' && str[i + 1] === '/') {\n\t\t\t\t// if (!preserveComment)\n\t\t\t\t\tstr[i] = str[i + 1] = '';\n\t\t\t\tblockComment /* = preserveComment*/ = false;\n\t\t\t\t// Increase by 1 to skip closing '/', as it would be mistaken\n\t\t\t\t// for a regexp otherwise\n\t\t\t\ti++;\n\t\t\t} else { //if (!preserveComment) {\n\t\t\t\tstr[i] = '';\n\t\t\t}\n\t\t} else if (lineComment) {\n\t\t\t// One-line comments end with the line-break\n\t\t\tif (str[i + 1] === '\\n' || str[i + 1] === '\\r'){\n\t\t\t\tlineComment = false;\n\t\t\t}\n\t\t\tstr[i] = '';\n\t\t} else {\n\t\t\tif (str[i] === '\"' || str[i] === \"'\") {\n\t\t\t\tquote = true;\n\t\t\t\tquoteSign = str[i];\n\t\t\t} else if (str[i] === '[' && str[i-1] !== \"@\") {\n\t\t\t\tquote = true;\n\t\t\t\tquoteSign = ']';\n\t\t\t// } else if (str[i] === '-' &&  str[i + 1] === '-') {\n\t\t\t// \tstr[i] = '';\n\t\t\t// \tlineComment = true;\n\t\t\t} else if (str[i] === '/' && str[i + 1] === '*') {\n\t\t\t\t\t// Do not filter out conditional comments /*@ ... */\n\t\t\t\t\t// and comments marked as protected /*! ... */\n\n\t\t\t\t\tstr[i] = '';\n\t\t\t\t\tblockComment = true;\n\n\t\t\t}\n\t\t}\n\t}\n\t// Remove padding again.\n\tstr = str.join('').slice(2, -2);\n\n\treturn str;\n};\n\n/**\r\n\tDatabase class for Alasql.js\r\n*/\r\n\n// Initial parameters\r\n\n/**\r\n\tJison parser\r\n*/\r\nalasql.parser = alasqlparser;\r\n\nalasql.parser.parseError = function(str, hash){\r\n\tthrow new Error(\"Have you used a reserved keyword without `escaping` it?\\n\"+str);\r\n}\r\n\n/**\r\n \tJison parser\r\n \t@param {string} sql SQL statement\r\n \t@return {object} AST (Abstract Syntax Tree)\r\n\n \t@todo Create class AST\r\n \t@todo Add other parsers\r\n\n \t@example\r\n \talasql.parse = function(sql) {\r\n\t\t// My own parser here\r\n \t}\r\n */\r\nalasql.parse = function(sql) {\r\n\treturn alasqlparser.parse(alasql.utils.uncomment(sql));\r\n};\r\n\n/**\r\n \tList of engines of external databases\r\n \t@type {object}\r\n \t@todo Create collection type\r\n */\r\nalasql.engines = {};\r\n\n/**\r\n \tList of databases\r\n \t@type {object}\r\n */\r\nalasql.databases = {};\r\n\n/**\r\n\tNumber of databases\r\n\t@type {number}\r\n*/\r\nalasql.databasenum = 0;\r\n\n/**\r\n \tAlasql options object\r\n */\r\nalasql.options = {};\r\nalasql.options.errorlog = false; // Log or throw error\r\nalasql.options.valueof = false; // Use valueof in orderfn\r\nalasql.options.dropifnotexists = false; // DROP database in any case\r\nalasql.options.datetimeformat = 'sql'; // How to handle DATE and DATETIME types\r\n\t\t\t\t\t\t\t\t// Another value is 'javascript'\r\nalasql.options.casesensitive = true; // Table and column names are case sensitive and converted to lower-case\r\nalasql.options.logtarget = 'output'; // target for log. Values: 'console', 'output', 'id' of html tag\r\nalasql.options.logprompt = true; // Print SQL at log\r\n\nalasql.options.progress = false; // Callback for async queries progress\r\n\n// Default modifier\r\n// values: RECORDSET, VALUE, ROW, COLUMN, MATRIX, TEXTSTRING, INDEX\r\nalasql.options.modifier = undefined;\r\n// How many rows to lookup to define columns\r\nalasql.options.columnlookup = 10;\r\n// Create vertex if not found\r\nalasql.options.autovertex = true;\r\n\n// Use dbo as current database (for partial T-SQL comaptibility)\r\nalasql.options.usedbo = true;\r\n\n// AUTOCOMMIT ON | OFF\r\nalasql.options.autocommit = true;\r\n\n// Use cache\r\nalasql.options.cache = true;\r\n\n// Compatibility flags\r\nalasql.options.tsql = true;\r\nalasql.options.mysql = true;\r\nalasql.options.postgres = true;\r\nalasql.options.oracle = true;\r\nalasql.options.sqlite = true;\r\nalasql.options.orientdb = true;\r\n\n// for SET NOCOUNT OFF\r\nalasql.options.nocount = false;\r\n\n// Check for NaN and convert it to undefined\r\nalasql.options.nan = false;\r\n\nalasql.options.joinstar = 'overwrite'; // Option for SELECT * FROM a,b\r\n\n//alasql.options.worker = false;\r\n// Variables\r\nalasql.vars = {};\r\nalasql.declares = {};\r\n\nalasql.prompthistory = [];\r\n\nalasql.plugins = {}; // If plugin already loaded\r\n\nalasql.from = {}; // FROM functions\r\nalasql.into = {}; // INTO functions\r\n\nalasql.fn = {};\r\nalasql.aggr = {};\r\n\nalasql.busy = 0;\r\n\n// Cache\r\nalasql.MAXSQLCACHESIZE = 10000;\r\nalasql.DEFAULTDATABASEID = 'alasql';\r\n\n/* WebWorker */\r\nalasql.lastid = 0;\r\nalasql.buffer = {};\r\n\n/**\r\n  Select current database\r\n  @param {string} databaseid Selected database identificator\r\n */\r\nalasql.use = function (databaseid) {\r\n\tif(!databaseid){\r\n\t\tdatabaseid = alasql.DEFAULTDATABASEID;\r\n\t}\r\n\tif(alasql.useid === databaseid){\r\n\t\treturn;\r\n\t}\r\n\talasql.useid = databaseid;\r\n\tvar db = alasql.databases[alasql.useid];\r\n\talasql.tables = db.tables;\r\n//\talasql.fn = db.fn;\r\n\tdb.resetSqlCache();\r\n\tif(alasql.options.usedbo) {\r\n\t    alasql.databases.dbo = db; // Operator???\r\n\t}\r\n\n};\r\n\nalasql.autoval = function(tablename, colname, getNext, databaseid){\r\n\n\t\tvar db = databaseid?alasql.databases[databaseid]:alasql.databases[alasql.useid];\r\n\n\t\tif(!db.tables[tablename]){\r\n\t\t\tthrow new Error('Tablename not found: '+tablename);\r\n\t\t}\r\n\n\t\tif(!db.tables[tablename].identities[colname]){\r\n\t\t\tthrow new Error('Colname not found: '+colname);\r\n\t\t}\r\n\n\t\tif(getNext){\r\n\t\t\treturn db.tables[tablename].identities[colname].value || null;\r\n\t\t}\r\n\n\t\treturn (db.tables[tablename].identities[colname].value - db.tables[tablename].identities[colname].step) || null\r\n\n}\r\n\n/**\r\n Run single SQL statement on current database\r\n */\r\nalasql.exec = function (sql, params, cb, scope) {\r\n\n\t// Avoid setting params if not needed even with callback\r\n\tif(typeof params === 'function'){\r\n\t\tscope = cb;\r\n\t\tcb = params;\r\n\t\tparams = {};\r\n\t}\r\n\n\tdelete alasql.error;\r\n\tparams = params || {};\r\n\tif(alasql.options.errorlog){\r\n\t\ttry {\r\n\t\t\treturn alasql.dexec(alasql.useid, sql, params, cb, scope);\r\n\t\t} catch(err){\r\n\t\t\talasql.error = err;\r\n\t\t\tif(cb){\r\n\t\t\t\tcb(null,alasql.error);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn alasql.dexec(alasql.useid, sql, params, cb, scope);\r\n\t}\r\n};\r\n\n/**\r\n Run SQL statement on specific database\r\n */\r\nalasql.dexec = function (databaseid, sql, params, cb, scope) {\r\n\tvar db = alasql.databases[databaseid];\r\n//\tif(db.databaseid != databaseid) console.trace('got!');\r\n\n\tvar hh;\r\n\t// Create hash\r\n\tif(alasql.options.cache) {\r\n\t\thh = hash(sql);\r\n\t\tvar statement = db.sqlCache[hh];\r\n\t\t// If database structure was not changed since last time return cache\r\n\t\tif(statement && db.dbversion === statement.dbversion) {\r\n\t\t\treturn statement(params, cb);\r\n\t\t}\r\n\t}\r\n\n\t// Create AST\r\n\tvar ast = alasql.parse(sql);\r\n\tif(!ast.statements){\r\n\t\treturn;\r\n\t}\r\n\tif(0 === ast.statements.length){\r\n\t\treturn 0;\r\n\t}\r\n\telse if(1 === ast.statements.length) {\r\n\t\tif(ast.statements[0].compile) {\r\n\n\t\t\t// Compile and Execute\r\n\t\t\tvar statement = ast.statements[0].compile(databaseid, params);\r\n\t\t\tif(!statement){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tstatement.sql = sql;\r\n\t\t\tstatement.dbversion = db.dbversion;\r\n\n\t\t\tif(alasql.options.cache) {\r\n\t\t\t\t// Secure sqlCache size\r\n\t\t\t\tif (db.sqlCacheSize > alasql.MAXSQLCACHESIZE) {\r\n\t\t\t\t\tdb.resetSqlCache();\r\n\t\t\t\t}\r\n\t\t\t\tdb.sqlCacheSize++;\r\n\t\t\t\tdb.sqlCache[hh] = statement;\r\n\t\t\t}\r\n\t\t\tvar res = alasql.res = statement(params, cb, scope);\r\n\t\t\treturn res;\r\n\n\t\t} else {\r\n\n\t\t\talasql.precompile(ast.statements[0],alasql.useid,params);\r\n\t\t\tvar res = alasql.res = ast.statements[0].execute(databaseid, params, cb, scope);\r\n\t\t\treturn res;\r\n\t\t}\r\n\t} else {\r\n\t\t// Multiple statements\r\n\t\tif(cb) {\r\n\t\t\talasql.adrun(databaseid, ast, params, cb, scope);\r\n\t\t} else {\r\n\t\t\treturn alasql.drun(databaseid, ast, params, cb, scope);\r\n\t\t}\r\n\t}\r\n};\r\n\n/**\r\n  Run multiple statements and return array of results sync\r\n */\r\nalasql.drun = function (databaseid, ast, params, cb, scope) {\r\n\tvar useid = alasql.useid;\r\n\n\tif(useid !== databaseid){\r\n\t\talasql.use(databaseid);\r\n\t}\r\n\n\tvar res = [];\r\n\tfor (var i=0, ilen=ast.statements.length; i<ilen; i++) {\r\n\t\tif(ast.statements[i]) {\r\n\t\t\tif(ast.statements[i].compile) {\r\n\t\t\t\tvar statement = ast.statements[i].compile(alasql.useid);\r\n\t\t\t\tres.push(alasql.res = statement(params,null,scope));\r\n\t\t\t} else {\r\n\t\t\t\talasql.precompile(ast.statements[i],alasql.useid,params);\r\n\t\t\t\tres.push(alasql.res = ast.statements[i].execute(alasql.useid, params));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(useid !== databaseid){\r\n\t\talasql.use(useid);\r\n\t}\r\n\n\tif(cb){\r\n\t\tcb(res);\r\n\t}\r\n\n\talasql.res = res;\r\n\n\treturn res;\r\n};\r\n\n/**\r\n  Run multiple statements and return array of results async\r\n */\r\nalasql.adrun = function (databaseid, ast, params, cb, scope) {\r\n\n\tvar idx = 0;\r\n\tvar noqueries = ast.statements.length;\r\n\tif (alasql.options.progress !== false) {\r\n\t  alasql.options.progress(noqueries, idx++);\r\n\t}\r\n\n//\talasql.busy++;\r\n\tvar useid = alasql.useid;\r\n\tif(useid !== databaseid) {\r\n\t\talasql.use(databaseid);\r\n\t}\r\n\tvar res = [];\r\n\n\tfunction adrunone(data) {\r\n\t\tif(data !== undefined){\r\n\t\t\tres.push(data);\r\n\t\t}\r\n\t\tvar astatement = ast.statements.shift();\r\n\t\tif(!astatement) {\r\n\t\t\tif(useid !== databaseid){\r\n\t\t\t\talasql.use(useid);\r\n\t\t\t}\r\n\t\t\tcb(res);\r\n\n\t\t} else {\r\n\t\t\tif(astatement.compile) {\r\n\t\t\t\tvar statement = astatement.compile(alasql.useid);\r\n\t\t\t\tstatement(params, adrunone, scope);\r\n\t\t\t\tif (alasql.options.progress !== false) {\r\n\t\t\t\t  alasql.options.progress(noqueries, idx++);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\talasql.precompile(ast.statements[0],alasql.useid,params);\r\n\t\t\t\tastatement.execute(alasql.useid, params, adrunone);\r\n\t\t\t\tif (alasql.options.progress !== false) {\r\n\t\t\t\t  alasql.options.progress(noqueries, idx++);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\n\tadrunone(); /** @todo Check, why data is empty here */\r\n};\r\n\n/**\r\n Compile statement to JavaScript function\r\n @param {string} sql SQL statement\r\n @param {string} databaseid Database identificator\r\n @return {functions} Compiled statement functions\r\n*/\r\nalasql.compile = function(sql, databaseid) {\r\n\n\tdatabaseid = databaseid || alasql.useid;\r\n\n\tvar ast = alasql.parse(sql); // Create AST\r\n\n\tif(1 === ast.statements.length) {\r\n\t\tvar statement = ast.statements[0].compile(databaseid)\r\n\t\tstatement.promise = function(params){\r\n\t\t    return new Promise(function(resolve, reject){\r\n\t\t        statement(params, function(data,err) {\r\n\t\t             if(err) {\r\n\t\t                 reject(err);\r\n\t\t             } else {\r\n\t\t                 resolve(data);\r\n\t\t             }\r\n\t\t        });\r\n\t\t    });\r\n\t\t};\r\n\n\t\treturn statement;\r\n\n\t} else {\r\n\t\tthrow new Error('Cannot compile, because number of statements in SQL is not equal to 1');\r\n\t}\r\n};\r\n\n//\n// Promises for AlaSQL\n//\n\nif(!utils.global.Promise){\n\n\tif(utils.isNode){\n\t\t//*not-for-browser/*\n\t\tutils.global.Promise = require('es6-promise').Promise;\n\t\t//*/\n\t} else {\n\t\t/*!\n\t\t * @overview es6-promise - a tiny implementation of Promises/A+.\n\t\t * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n\t\t * @license   Licensed under MIT license\n\t\t *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n\t\t * @version   3.2.1\n\t\t */\n\t\t(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),Array.isArray(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n\t}\n}\n\nvar promiseExec = function(sql, params, counterStep, counterTotal){\n\t return new utils.global.Promise(function(resolve, reject){\n        alasql(sql, params, function(data,err) {\n             if(err) {\n                 reject(err);\n             } else {\n\t\t\t\tif (counterStep && counterTotal && alasql.options.progress !== false) {\n\t\t\t\t\talasql.options.progress(counterStep, counterTotal);\n\t\t\t\t}\n                resolve(data);\n             }\n        });\n    });\n}\n\nvar promiseAll = function(sqlParamsArray){\n\tif(sqlParamsArray.length<1){\n\t\treturn ;\n\t}\n\n\tvar active, sql, params;\n\n\tvar execArray = []; \n\n\tfor (var i = 0; i < sqlParamsArray.length; i++) {\n\t\tactive = sqlParamsArray[i];\n\n\t\tif(typeof active === 'string'){\n\t\t\tactive = [active];\n\t\t}\n\n\t\tif(!utils.isArray(active) || active.length<1 || 2<active.length){\n\t\t\tthrow new Error('Error in .promise parameter');\n\t\t}\n\n\t\tsql = active[0];\n\t\tparams = active[1]||undefined;\n\n\t\texecArray.push(promiseExec(sql, params, i, sqlParamsArray.length));\n\t}\n\n\treturn utils.global.Promise.all(execArray); \n}\n\nalasql.promise = function(sql, params) {\n\tif(typeof Promise === \"undefined\"){\n\t\tthrow new Error('Please include a Promise/A+ library');\n\t}\n\n\tif(typeof sql === 'string'){\n\t\treturn promiseExec(sql, params);\n\t}\n\n\tif(!utils.isArray(sql) || sql.length<1 || typeof params !== \"undefined\"){\n\t\tthrow new Error('Error in .promise parameters');\n\t}\n\treturn promiseAll(sql);\n};\n\n/*\n//\n// Database class for Alasql.js\n// Date: 03.11.2014\n// (c) 2014, Andrey Gershun\n//\n*/\n\n// Main Database class\n\n/**\n    @class Database \n */\n\nvar Database = alasql.Database = function (databaseid) {\n\tvar self = this;\n\n\tif(self === alasql) {\n\t\tif(databaseid) {\n\n\t\t\t\tself = alasql.databases[databaseid];\n\n\t\t\t\talasql.databases[databaseid] = self;\n\n\t\t\tif(!self) {\n\t\t\t\tthrow new Error('Database \"'+databaseid+'\" not found');\n\t\t\t}\n\t\t} else {\n\t\t\t// Create new database (or get alasql?)\n\t\t\tself = alasql.databases.alasql;\n\t\t\t// For SQL Server examples, USE tempdb\n\t\t\tif(alasql.options.tsql){\n\t\t\t\talasql.databases.tempdb = alasql.databases.alasql;\n\t\t\t}\n\n\t\t}\n\t}\n\tif(!databaseid) {\n\t\tdatabaseid = \"db\"+(alasql.databasenum++); // Random name\n\t}\n\n\t// Step 1\n\tself.databaseid = databaseid;\n\talasql.databases[databaseid] = self;\n\tself.dbversion = 0;\n\n\t//Steps 2-5\n\tself.tables = {};\n\tself.views = {};\n\tself.triggers = {};\n\tself.indices = {};\n\n\t// Step 6: Objects storage\n\tself.objects = {};\n\tself.counter = 0;\n\n\tself.resetSqlCache();\n\treturn self;\n};\n\n/**\n    Reset SQL statements cache\n */\n\nDatabase.prototype.resetSqlCache = function () {\n\tthis.sqlCache = {}; // Cache for compiled SQL statements\n\tthis.sqlCacheSize = 0;\t\n}\n\n// Main SQL function\n\n/**\n    Run SQL statement on database\n    @param {string} sql SQL statement\n    @param [object] params Parameters\n    @param {function} cb callback\n */\n\nDatabase.prototype.exec = function(sql, params, cb) {\n\treturn alasql.dexec(this.databaseid, sql, params, cb);\n};\n\nDatabase.prototype.autoval = function(tablename, colname, getNext) {\n\treturn alasql.autoval(tablename, colname, getNext, this.databaseid);\n};\n\n// Aliases like MS SQL\n\n/*\r\n//\r\n// Transactio class for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nDatabase.prototype.transaction = function(cb) {\r\n\tvar tx = new alasql.Transaction(this.databaseid);\r\n\tvar res = cb(tx);\r\n\treturn res;\r\n};\r\n\n// Transaction class (for WebSQL compatibility)\r\n\n/** \r\n Transaction class\r\n @class Transaction\r\n */\r\n\nvar Transaction = alasql.Transaction = function (databaseid) {\r\n\tthis.transactionid = Date.now();\r\n\tthis.databaseid = databaseid;\r\n\tthis.commited = false; \r\n\tthis.dbversion = alasql.databases[databaseid].dbversion;\r\n//\tthis.bank = cloneDeep(alasql.databases[databaseid]);\r\n\tthis.bank = JSON.stringify(alasql.databases[databaseid]);\r\n\t// TODO CLone Tables with insertfns\r\n\n\treturn this;\r\n};\r\n\n// Main class \r\n\n// Commit\r\n\n/**\r\n Commit transaction\r\n */\r\nTransaction.prototype.commit = function() {\r\n\tthis.commited = true;\r\n\talasql.databases[this.databaseid].dbversion = Date.now();\r\n\tdelete this.bank;\r\n};\r\n\n// Rollback\r\n/**\r\n Rollback transaction\r\n */\r\nTransaction.prototype.rollback = function() {\r\n\tif(!this.commited) {\r\n\t\talasql.databases[this.databaseid] = JSON.parse(this.bank);\r\n\t\t// alasql.databases[this.databaseid].tables = this.bank;\r\n\t\t// alasql.databases[this.databaseid].dbversion = this.dbversion;\r\n\t\tdelete this.bank;\r\n\t} else {\r\n\t\tthrow new Error('Transaction already commited');\r\n\t}\r\n};\r\n\n// Transactions stub\r\n\n/**\r\n Execute SQL statement\r\n @param {string} sql SQL statement\r\n @param {object} params Parameters\r\n @param {function} cb Callback function \r\n @return result\r\n */\r\nTransaction.prototype.exec = function(sql, params, cb) {\r\n\n\treturn alasql.dexec(this.databaseid,sql,params,cb);\r\n};\r\n\nTransaction.prototype.executeSQL = Transaction.prototype.exec;\r\n\n/*\r\n//\r\n// Table class for Alasql.js\r\n// Date: 14.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// Table class\r\nvar Table = alasql.Table = function(params){\r\n\n\t// Step 1: Data array\r\n\tthis.data = [];\r\n\n\t// Step 2: Columns\r\n\tthis.columns = [];\r\n\tthis.xcolumns = {};\r\n\n\t// Step 3: indices\r\n\tthis.inddefs = {};\r\n\tthis.indices = {};\r\n\tthis.uniqs = {};\r\n\tthis.uniqdefs = {};\t\r\n\n\t// Step 4: identities\r\n\tthis.identities = {};\r\n\n\t// Step 5: checkfn...\r\n\tthis.checks = [];\r\n\tthis.checkfns = []; // For restore... to be done...\r\n\n\t// Step 6: INSERT/DELETE/UPDATE\r\n\n\t// Step 7: Triggers...\r\n\t// Create trigger hubs\r\n\tthis.beforeinsert = {};\r\n\tthis.afterinsert = {};\r\n\tthis.insteadofinsert = {};\r\n\n\tthis.beforedelete = {};\r\n\tthis.afterdelete = {};\r\n\tthis.insteadofdelete = {};\r\n\n\tthis.beforeupdate = {};\r\n\tthis.afterupdate = {};\r\n\tthis.insteadofupdate = {};\r\n\n\t// Done\r\n\textend(this,params);\r\n};\r\n\nTable.prototype.indexColumns = function() {\r\n\tvar self = this;\r\n\tself.xcolumns = {};\r\n\tself.columns.forEach(function(col){\r\n\t\tself.xcolumns[col.columnid] = col;\r\n\t});\t\r\n}\r\n\n/*\r\n//\r\n// View class for Alasql.js\r\n// Date: 14.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// Table class\r\nvar View = alasql.View = function(params){\r\n\t// Columns\r\n\tthis.columns = [];\r\n\tthis.xcolumns = {};\r\n\t// Data array\r\n\tthis.query = [];\r\n\n\textend(this,params);\r\n};\r\n\n/*\r\n//\r\n// Query class for Alasql.js\r\n// Date: 14.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// Table class\r\n\n/**\r\n @class Query Main query class\r\n */\r\nvar Query = alasql.Query = function(params){\r\n\tthis.alasql = alasql;\r\n\n\t// Columns\r\n\tthis.columns = [];\r\n\tthis.xcolumns = {};\r\n\tthis.selectGroup = [];\r\n\tthis.groupColumns = {};\r\n\t// Data array\r\n\textend(this,params);\r\n};\r\n\n/**\r\n @class Recordset data object\r\n */\r\nvar Recordset = alasql.Recordset = function(params){\r\n\t// Data array\r\n\textend(this,params);\r\n};\r\n\n/*\r\n//\r\n// Parser helper for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nvar yy = alasqlparser.yy = alasql.yy = {};\r\n\n// Utility\r\nyy.extend = extend;\r\n// Option for case sensitive\r\nyy.casesensitive = alasql.options.casesensitive; \r\n\n// Base class for all yy classes\r\nvar Base = yy.Base = function (params) { return yy.extend(this, params); };\r\n\nBase.prototype.toString = function() {}\r\nBase.prototype.toType = function() {}\r\nBase.prototype.toJS = function() {}\r\n\nBase.prototype.compile = returnUndefined;\r\nBase.prototype.exec = function() {}\r\n\nBase.prototype.compile = returnUndefined;\r\nBase.prototype.exec = function() {}\r\n\n/*\r\n//\r\n// Statements class for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// Statements container\r\nyy.Statements = function(params) { return yy.extend(this, params); };\r\n\nyy.Statements.prototype.toString = function () {\r\n\treturn this.statements.map(function(st){return st.toString()}).join('; ');\r\n};\r\n\n// Compile array of statements into single statement\r\nyy.Statements.prototype.compile = function(db) {\r\n\tvar statements = this.statements.map(function(st){\r\n\t\treturn st.compile(db)\r\n\t});\r\n\tif(statements.length === 1) {\r\n\t\treturn statements[0];\t\r\n\t} else {\r\n\t\treturn function(params, cb){\r\n\t\t\tvar res = statements.map(function(st){ return st(params); });\r\n\t\t\tif(cb){\r\n\t\t\t\tcb(res);\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t}\r\n\t}\r\n};\r\n\n/* global alasql */\r\n/* global yy */\r\n/*\r\n//\r\n// SEARCH for Alasql.js\r\n// Date: 04.05.2015\r\n// (c) 2015, Andrey Gershun\r\n//\r\n*/\r\n\nfunction doSearch(databaseid, params, cb) {\r\n\tvar res;\r\n\tvar stope = {};\r\n\tvar fromdata;\r\n\tvar selectors = cloneDeep(this.selectors);\r\n\n\tfunction processSelector(selectors,sidx,value) {\r\n\n\t\tvar \r\n\t\t\tval,\t// temp values use many places\r\n\t\t\tnest, \t// temp value used many places\r\n\t\t\tr,\t\t// temp value used many places\r\n\t\t\tsel = selectors[sidx];\r\n\n\t\tvar SECURITY_BREAK = 100000;\r\n\n\t\tif(sel.selid) {\r\n\t\t\t// TODO Process Selector\r\n\t\t\tif(sel.selid === 'PATH') {\r\n\t\t\t\tvar queue = [{node:value,stack:[]}];\r\n\t\t\t\tvar visited = {};\r\n\t\t\t\t//var path = [];\r\n\t\t\t\tvar objects = alasql.databases[alasql.useid].objects;\r\n\t\t\t\twhile (queue.length > 0) {\r\n\t\t\t\t\tvar q = queue.shift()\r\n\t\t\t\t\tvar node = q.node;\r\n\t\t\t\t\tvar stack = q.stack;\r\n\t\t\t\t\tvar r = processSelector(sel.args,0,node);\r\n\t\t\t\t\tif(r.length > 0) {\r\n\t\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\t\treturn stack;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar rv = [];\r\n\t\t\t\t\t\t\tif(stack && stack.length > 0) {\r\n\t\t\t\t\t\t\t\tstack.forEach(function(stv){\r\n\t\t\t\t\t\t\t\t\trv = rv.concat(processSelector(selectors,sidx+1,stv));\r\n\t\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn rv;\t\t\t\t\t\t\t\r\n\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(typeof visited[node.$id] !== 'undefined') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t} else {\r\n\n\t\t\t\t\t\t\tvisited[node.$id] = true;\r\n\t\t\t\t\t\t\tif(node.$out && node.$out.length > 0) {\r\n\t\t\t\t\t\t\t\tnode.$out.forEach(function(edgeid){\r\n\t\t\t\t\t\t\t\t\tvar edge = objects[edgeid];\r\n\t\t\t\t\t\t\t\t\tvar stack2 = stack.concat(edge);\r\n\t\t\t\t\t\t\t\t\tstack2.push(objects[edge.$out[0]]);\r\n\t\t\t\t\t\t\t\t\tqueue.push({node:objects[edge.$out[0]],\r\n\t\t\t\t\t\t\t\t\t\tstack:stack2});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Else return fail\r\n\t\t\t\treturn [];\r\n\t\t\t} if(sel.selid === 'NOT') {\r\n\t\t\t\tvar nest = processSelector(sel.args,0,value);\r\n\n\t\t\t\tif(nest.length>0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn [value];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'DISTINCT') {\r\n\t\t\t\tvar nest;\r\n\t\t\t\tif(typeof sel.args === 'undefined' || sel.args.length === 0) {\r\n\t\t\t\t\tnest = distinctArray(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnest = processSelector(sel.args,0,value);\r\n\t\t\t\t}\r\n\t\t\t\tif(nest.length === 0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar res = distinctArray(nest);\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,res);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'AND') {\r\n\t\t\t\tvar res = true;\r\n\t\t\t\tsel.args.forEach(function(se){\r\n\t\t\t\t\tres = res && (processSelector(se,0,value).length>0);\r\n\t\t\t\t});\r\n\t\t\t\tif(!res) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn [value];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'OR') {\r\n\t\t\t\tvar res = false;\r\n\t\t\t\tsel.args.forEach(function(se){\r\n\t\t\t\t\tres = res || (processSelector(se,0,value).length>0);\r\n\t\t\t\t});\r\n\t\t\t\tif(!res) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn [value];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'ALL') {\r\n\t\t\t\tvar nest = processSelector(sel.args[0],0,value);\r\n\t\t\t\tif(nest.length === 0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn nest;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,nest);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'ANY') {\r\n\t\t\t\tvar nest = processSelector(sel.args[0],0,value);\r\n\n\t\t\t\tif(nest.length === 0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn [nest[0]];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,[nest[0]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'UNIONALL') {\r\n\t\t\t\tvar nest = [];\r\n\t\t\t\tsel.args.forEach(function(se){\r\n\t\t\t\t\tnest = nest.concat(processSelector(se,0,value));\r\n\t\t\t\t});\r\n\t\t\t\tif(nest.length === 0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn nest;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,nest);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'UNION') {\r\n\t\t\t\tvar nest = [];\r\n\t\t\t\tsel.args.forEach(function(se){\r\n\t\t\t\t\tnest = nest.concat(processSelector(se,0,value));\r\n\t\t\t\t});\r\n\t\t\t\tvar nest = distinctArray(nest);\r\n\t\t\t\tif(nest.length === 0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn nest;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,nest);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else \tif(sel.selid === 'IF') {\r\n\t\t\t\tvar nest = processSelector(sel.args,0,value);\r\n\n\t\t\t\tif(nest.length===0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\treturn [value];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn processSelector(selectors,sidx+1,value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else \tif(sel.selid === 'REPEAT') {\r\n\n\t\t\t\tvar \r\n\t\t\t\t\tlvar, \r\n\t\t\t\t\tlmax,\r\n\t\t\t\t\tlmin = sel.args[0].value;\r\n\t\t\t\tif(!sel.args[1]) {\r\n\t\t\t\t\tlmax = lmin; // Add security break\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlmax = sel.args[1].value;\r\n\t\t\t\t}\r\n\t\t\t\tif(sel.args[2]) {\r\n\t\t\t\t\tlvar = sel.args[2].variable;\r\n\t\t\t\t} \r\n\t\t\t\t//var lsel = sel.sels;\r\n\n\t\t\t\tvar retval = [];\r\n\n\t\t\t\tif (lmin === 0) {\r\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\tretval = [value];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(lvar){\r\n\t\t\t\t\t\t\talasql.vars[lvar] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tretval = retval.concat(processSelector(selectors,sidx+1,value));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\n\t\t\t\t\t// var nests = processSelector(sel.sels,0,value).slice();\r\n\t\t\t\tif(lmax > 0) {\r\n\t\t\t\t\tvar nests = [{value:value,lvl:1}];\r\n\n\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\twhile (nests.length > 0) {\r\n\n\t\t\t\t\t\tvar nest = nests[0];\r\n\n\t\t\t\t\t\tnests.shift();\r\n\t\t\t\t\t\tif(nest.lvl <= lmax) {\r\n\t\t\t\t\t\t\tif(lvar){\r\n\t\t\t\t\t\t\t\talasql.vars[lvar] = nest.lvl;\r\n\t\t\t\t\t\t\t}\r\n\n\t\t\t\t\t\t\tvar nest1 = processSelector(sel.sels,0,nest.value);\r\n\n\t\t\t\t\t\t\tnest1.forEach(function(n){\r\n\t\t\t\t\t\t\t\tnests.push({value:n,lvl:nest.lvl+1});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(nest.lvl >= lmin) {\r\n\t\t\t\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\t\t\t\tretval = retval.concat(nest1);\r\n\t\t\t\t\t\t\t\t\t//return nests;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnest1.forEach(function(n){\r\n\t\t\t\t\t\t\t\t\t\tretval = retval.concat(processSelector(selectors,sidx+1,n));\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Security brake\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\tif(i>SECURITY_BREAK) {\r\n\t\t\t\t\t\t\tthrow new Error('Security brake. Number of iterations = '+i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\n\t\t\t\t}\r\n\t\t\t\treturn retval;\r\n\t\t\t} else if(sel.selid ==='OF') {\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [value];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar r1 = [];\r\n\t\t\t\t\tObject.keys(value).forEach(function(keyv){\r\n\t\t\t\t\t\talasql.vars[sel.args[0].variable] = keyv;\r\n\t\t\t\t\t\tr1 = r1.concat(processSelector(selectors,sidx+1,value[keyv]));\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn r1;\r\n\t\t\t\t}\r\n\t\t\t} else \tif(sel.selid ==='TO') {\r\n\n\t\t\t\tvar oldv = alasql.vars[sel.args[0]];\r\n\t\t\t\tvar newv = [];\r\n\t\t\t\tif(oldv !== undefined) {\r\n\n\t\t\t\t\tnewv = oldv.slice(0);\r\n\n\t\t\t\t} else {\r\n\t\t\t\t\tnewv = [];\r\n\t\t\t\t}\r\n\t\t\t\tnewv.push(value);\r\n\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [value];\r\n\t\t\t\t} else {\r\n\t\t\t\t\talasql.vars[sel.args[0]] = newv;\r\n\t\t\t\t\tvar r1 = processSelector(selectors,sidx+1,value);\r\n\n\t\t\t\t\talasql.vars[sel.args[0]] = oldv;\r\n\t\t\t\t\treturn r1;\r\n\t\t\t\t}\r\n\n\t\t\t} else if(sel.selid === 'ARRAY') {\r\n\t\t\t\tvar nest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(nest.length > 0) {\r\n\t\t\t\t\tval = nest;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [val];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,val);\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'SUM') {\r\n\t\t\t\tvar nest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(nest.length > 0) {\r\n\t\t\t\t\tvar val = nest.reduce(function(sum, current) {\r\n\t  \t\t\t\t\treturn sum + current;\r\n\t\t\t\t\t}, 0);\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [val];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,val);\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'AVG') {\r\n\t\t\t\tnest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(nest.length > 0) {\r\n\t\t\t\t\tval = nest.reduce(function(sum, current) {\r\n\t  \t\t\t\t\treturn sum + current;\r\n\t\t\t\t\t}, 0)/nest.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [val];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,val);\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'COUNT') {\r\n\t\t\t\tnest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(nest.length > 0) {\r\n\t\t\t\t\tval = nest.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [val];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,val);\r\n\t\t\t\t}\r\n\t\t\t} else \tif(sel.selid === 'FIRST') {\r\n\t\t\t\tnest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(nest.length > 0){\r\n\t\t\t\t\tval = nest[0];\r\n\t\t\t\t} else { \r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [val];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,val);\r\n\t\t\t\t}\r\n\t\t\t} else \tif(sel.selid === 'LAST') {\r\n\t\t\t\tnest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(nest.length > 0) {\r\n\t\t\t\t\tval = nest[nest.length-1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [val];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,val);\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'MIN') {\r\n\t\t\t\tnest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(nest.length === 0){\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tvar val = nest.reduce(function(min, current) {\r\n  \t\t\t\t\treturn Math.min(min,current);\r\n\t\t\t\t}, Infinity);\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [val];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,val);\r\n\t\t\t\t}\r\n\t\t\t} else \tif(sel.selid === 'MAX') {\r\n\t\t\t\tvar nest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(nest.length === 0){\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tvar val = nest.reduce(function(max, current) {\r\n  \t\t\t\t\treturn Math.max(max,current);\r\n\t\t\t\t}, -Infinity);\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [val];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,val);\r\n\t\t\t\t}\r\n\t\t\t} else \tif(sel.selid === 'PLUS') {\r\n\t\t\t\tvar retval = [];\r\n\n\t\t\t\tvar nests = processSelector(sel.args,0,value).slice();\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\tretval = retval.concat(nests);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnests.forEach(function(n){\r\n\t\t\t\t\t\tretval = retval.concat(processSelector(selectors,sidx+1,n));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\n\t\t\t\tvar i = 0;\r\n\t\t\t\twhile (nests.length > 0) {\r\n\n\t\t\t\t\tvar nest = nests.shift();\r\n\n\t\t\t\t\tnest = processSelector(sel.args,0,nest);\r\n\n\t\t\t\t\tnests = nests.concat(nest);\r\n\n\t\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\t\tretval = retval.concat(nest);\r\n\t\t\t\t\t\t//return retval;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnest.forEach(function(n){\r\n\n\t\t\t\t\t\t\tvar rn = processSelector(selectors,sidx+1,n);\r\n\n\t\t\t\t\t\t\tretval = retval.concat(rn);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\n\t\t\t\t\t// Security brake\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tif(i>SECURITY_BREAK) {\r\n\t\t\t\t\t\tthrow new Error('Security brake. Number of iterations = '+i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn retval;\r\n\n\t\t\t} else \tif(sel.selid === 'STAR') {\r\n\t\t\t\tvar retval = [];\r\n\t\t\t\tretval = processSelector(selectors,sidx+1,value);\r\n\t\t\t\tvar nests = processSelector(sel.args,0,value).slice();\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\tretval = retval.concat(nests);\r\n\t\t\t\t\t//return nests;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnests.forEach(function(n){\r\n\t\t\t\t\t\tretval = retval.concat(processSelector(selectors,sidx+1,n));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\twhile (nests.length > 0) {\r\n\t\t\t\t\tvar nest = nests[0];\r\n\t\t\t\t\tnests.shift();\r\n\n\t\t\t\t\tnest = processSelector(sel.args,0,nest);\r\n\n\t\t\t\t\tnests = nests.concat(nest);\r\n\n\t\t\t\t\tif(sidx+1+1 <= selectors.length) {\r\n\t\t\t\t\t\tnest.forEach(function(n){\r\n\t\t\t\t\t\t\tretval = retval.concat(processSelector(selectors,sidx+1,n));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\n\t\t\t\t\t// Security brake\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tif(i>SECURITY_BREAK) {\r\n\t\t\t\t\t\tthrow new Error('Loop brake. Number of iterations = '+i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\n\t\t\t\treturn retval;\r\n\t\t\t} else \tif(sel.selid === 'QUESTION') {\r\n\t\t\t\tvar retval = [];\r\n\t\t\t\tretval = retval.concat(processSelector(selectors,sidx+1,value))\r\n\t\t\t\tvar nest = processSelector(sel.args,0,value);\r\n\t\t\t\tif(sidx+1+1 <= selectors.length) {\r\n\t\t\t\t\tnest.forEach(function(n){\r\n\t\t\t\t\t\tretval = retval.concat(processSelector(selectors,sidx+1,n));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn retval;\r\n\t\t\t} else if(sel.selid === 'WITH') {\r\n\t\t\t\tvar nest = processSelector(sel.args,0,value);\r\n\n\t\t\t\tif(nest.length===0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t} else {\r\n\n\t\t\t\t\tvar r = {status:1,values:nest};\r\n\t\t\t\t}\r\n\t\t\t} else if(sel.selid === 'ROOT') {\r\n\t\t\t\tif(sidx+1+1 > selectors.length) {\r\n\t\t\t\t\treturn [value];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn processSelector(selectors,sidx+1,fromdata);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Wrong selector '+sel.selid);\r\n\t\t\t}\r\n\n\t\t} else if(sel.srchid) {\r\n\t\t\tvar r = alasql.srch[sel.srchid.toUpperCase()](value,sel.args,stope,params);\r\n\n\t\t} else {\r\n\t\t\tthrow new Error('Selector not found');\r\n\t\t}\r\n\n\t\tif(typeof r === 'undefined') {\r\n\t\t\tr = {status: 1, values: [value]};\r\n\t\t}\r\n\n\t\tvar res = [];\r\n\t\tif(r.status === 1) {\r\n\n\t\t\tvar arr = r.values;\r\n\n\t\t\tif(sidx+1+1 > selectors.length) {\r\n\n\t\t\t\tres = arr;\t\t\t\t\t\r\n\n\t\t\t} else {\r\n\t\t\t\tfor(var i=0;i<r.values.length;i++) {\r\n\t\t\t\t\tres = res.concat(processSelector(selectors,sidx+1,arr[i]));\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\n\tif(selectors !== undefined && selectors.length > 0) {\r\n\n\t\tif(selectors && selectors[0] && selectors[0].srchid === 'PROP' && selectors[0].args && selectors[0].args[0]) {\r\n\n\t\t\tif(selectors[0].args[0].toUpperCase() === 'XML') {\r\n\t\t\t\tstope.mode = 'XML';\r\n\t\t\t\tselectors.shift();\r\n\t\t\t} else if(selectors[0].args[0].toUpperCase() === 'HTML') {\r\n\t\t\t\tstope.mode = 'HTML';\r\n\t\t\t\tselectors.shift();\r\n\t\t\t} else if(selectors[0].args[0].toUpperCase() === 'JSON') {\r\n\t\t\t\tstope.mode = 'JSON';\r\n\t\t\t\tselectors.shift();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(selectors.length > 0 && selectors[0].srchid === 'VALUE') {\r\n\t\t\tstope.value = true;\r\n\t\t\tselectors.shift();\r\n\t\t}\r\n\t}\r\n\n\tif(this.from instanceof yy.Column) {\r\n\t\tvar dbid = this.from.databaseid || databaseid;\r\n\t\tfromdata = alasql.databases[dbid].tables[this.from.columnid].data;\r\n\t\t//selectors.unshift({srchid:'CHILD'});\r\n\t} else if(\r\n\t\t\t\tthis.from instanceof yy.FuncValue &&\t\t\t\t \r\n\t\t\t\talasql.from[this.from.funcid.toUpperCase()]\r\n\t\t\t) {\r\n\t\tvar args = this.from.args.map(function(arg){\r\n\t\tvar as = arg.toJS();\r\n\n\t\tvar fn = new Function('params,alasql','var y;return '+as).bind(this);\r\n\t\treturn fn(params,alasql);\r\n\t\t});\r\n\n\t\tfromdata = alasql.from[this.from.funcid.toUpperCase()].apply(this,args);\r\n\n\t} else if(typeof this.from === 'undefined') {\r\n\t\tfromdata = alasql.databases[databaseid].objects;\r\n\t} else {\r\n\t\tvar fromfn = new Function('params,alasql','var y;return '+this.from.toJS());\r\n\t\tfromdata = fromfn(params,alasql);\t\t\t\r\n\t\t// Check for Mogo Collections\r\n\t\tif(\r\n\t\t\ttypeof Mongo === 'object' && typeof Mongo.Collection !== 'object' && \r\n\t\t\tfromdata instanceof Mongo.Collection\r\n\t\t) {\r\n\t\t\tfromdata = fromdata.find().fetch();\r\n\t\t}\r\n\n\t}\r\n\n\t// If source data is array than first step is to run over array\r\n//\tvar selidx = 0;\r\n//\tvar selvalue = fromdata;\r\n\n\tif(selectors !== undefined && selectors.length > 0) {\r\n\t\t// Init variables for TO() selectors\r\n\n\t\tif(false) {\r\n\t\t\tselectors.forEach(function(selector){\r\n\t\t\t\tif(selector.srchid === 'TO') {  //* @todo move to TO selector\r\n\t\t\t\t\talasql.vars[selector.args[0]] = [];\r\n\t\t\t\t\t// TODO - process nested selectors\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\n\t\tres = processSelector(selectors,0,fromdata);\r\n\t} else {\r\n\t\tres = fromdata; \t\r\n\t}\r\n\n\tif(this.into) {\r\n\t\tvar a1,a2;\r\n\t\tif(typeof this.into.args[0] !== 'undefined') {\r\n\t\t\ta1 = \r\n\t\t\t\tnew Function('params,alasql','var y;return ' +\r\n\t\t\t\tthis.into.args[0].toJS())(params,alasql);\r\n\t\t}\r\n\t\tif(typeof this.into.args[1] !== 'undefined') {\r\n\t\t\ta2 =  \r\n\t\t\t\tnew Function('params,alasql','var y;return ' +\r\n\t\t\t\tthis.into.args[1].toJS())(params,alasql);\r\n\t\t}\r\n\t\tres = alasql.into[this.into.funcid.toUpperCase()](a1,a2,res,[],cb);\r\n\t} else {\r\n\t\tif(stope.value && res.length > 0){\r\n\t\t\tres = res[0];\r\n\t\t}\r\n\t\tif (cb){\r\n\t\t\tres = cb(res);\r\n\t\t}\r\n\t}\r\n\treturn res;\r\n\n}\r\n\n/**\t\r\n\tSearch class\r\n\t@class\r\n\t@example\r\n\tSEARCH SUM(/a) FROM ? -- search over parameter object\r\n*/\r\n\nyy.Search = function (params) { return yy.extend(this, params); }\r\n\nyy.Search.prototype.toString = function () {\r\n\tvar s = 'SEARCH' + ' ';\r\n\tif (this.selectors){\r\n\t\ts += this.selectors.toString();\r\n\t}\r\n\tif (this.from){\r\n\t\ts += 'FROM' + ' ' + this.from.toString();\r\n\t}\r\n\n\treturn s;\r\n};\r\n\nyy.Search.prototype.toJS = function(context) {\r\n\n\tvar s = 'this.queriesfn['+(this.queriesidx-1)+'](this.params,null,'+context+')';\r\n\t// var s = '';\r\n\treturn s;\r\n};\r\n\nyy.Search.prototype.compile = function(databaseid) {\r\n\tvar dbid = databaseid;\r\n\tvar self = this;\r\n\n\tvar statement = function(params,cb){\r\n\n\t\tvar res;\r\n\t\tdoSearch.bind(self)(dbid,params,function(data){\r\n\n\t\t\tres = modify(statement.query,data);\r\n\n\t\t\tif(cb){\r\n\t\t\t\tres = cb(res);\r\n\t\t\t}\r\n\t\t});\r\n\n\t\treturn res;\r\n\t};\r\n\tstatement.query = {};\r\n\treturn statement;\r\n};\r\n\n// List of search functions\r\nalasql.srch = {};\r\n\nalasql.srch.PROP = function(val,args,stope) {\r\n\n\tif(stope.mode === 'XML') {\r\n\t\tvar arr = [];\r\n\t\tval.children.forEach(function(v){\r\n\t\t\tif(v.name.toUpperCase() === args[0].toUpperCase()) {\r\n\t\t\t\tarr.push(v)\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(arr.length>0) {\r\n\t\t\treturn {status: 1, values: arr};\r\n\t\t} else {\r\n\t\t\treturn {status: -1, values: []};\r\n\t\t}\t\t\r\n\t} else {\r\n\t\tif(\r\n\t\t\t(typeof val !== 'object') \t|| \r\n\t\t\t(val === null) \t\t\t\t|| \r\n\t\t\t(typeof args !== 'object') \t|| \r\n\t\t\t(typeof val[args[0]] === 'undefined')\r\n\t\t) {\r\n\t\t\treturn {status: -1, values: []};\r\n\t\t} else {\r\n\t\t\treturn {status: 1, values: [val[args[0]]]};\r\n\t\t}\t\t\r\n\t}\r\n};\r\n\nalasql.srch.APROP = function(val, args) {\r\n\tif(\r\n\t\t(typeof val !== 'object') \t|| \r\n\t\t(val === null)\t\t\t\t||\r\n\t\t(typeof args !== 'object')\t|| \r\n\t\t(typeof val[args[0]] === 'undefined')) {\r\n\t\treturn {status: 1, values: [undefined]};\r\n\t} else {\r\n\t\treturn {status: 1, values: [val[args[0]]]};\r\n\t}\t\t\r\n};\r\n\n// Test expression\r\nalasql.srch.EQ = function(val,args,stope,params) {\r\n  var exprs = args[0].toJS('x','');\r\n  var exprfn = new Function('x,alasql,params','return '+exprs);\r\n  if(val === exprfn(val,alasql,params)) {\r\n    return {status: 1, values: [val]};\r\n  } else {\r\n    return {status: -1, values: []};        \r\n  }\r\n};\r\n\n// Test expression\r\nalasql.srch.LIKE = function(val,args,stope,params) {\r\n  var exprs = args[0].toJS('x','');\r\n  var exprfn = new Function('x,alasql,params','return '+exprs);\r\n  if(val.toUpperCase().match(new RegExp('^'+exprfn(val,alasql,params).toUpperCase()\r\n  \t.replace(/%/g,'.*').replace(/\\?|_/g,'.')+'$'),'g')) {\r\n    return {status: 1, values: [val]};\r\n  } else {\r\n    return {status: -1, values: []};        \r\n  }\r\n};\r\n\nalasql.srch.ATTR = function(val,args,stope) {\r\n\tif(stope.mode === 'XML') {\r\n\t\tif(typeof args === 'undefined') {\r\n\t      return {status: 1, values: [val.attributes]};\r\n\t\t} else {\r\n\t\t\tif(\r\n\t\t\t\ttypeof val === 'object' \t\t\t&& \r\n\t\t\t\ttypeof val.attributes === 'object'\t&&\r\n\t\t\t\ttypeof val.attributes[args[0]] !== 'undefined'\r\n\t\t\t){\r\n\t\t\t\treturn {status: 1, values: [val.attributes[args[0]]]};\r\n\t\t\t} else {\r\n\t\t\t\treturn {status: -1, values: []};\t\t\t\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error('ATTR is not using in usual mode');\r\n\t}\r\n};\r\n\nalasql.srch.CONTENT = function(val,args,stope) {\r\n\tif(stope.mode === 'XML') {\r\n\t\treturn {status: 1, values: [val.content]};\r\n\t} else {\r\n\t\tthrow new Error('ATTR is not using in usual mode');\r\n\t}\r\n};\r\n\nalasql.srch.SHARP = function(val,args) {\r\n\tvar obj = alasql.databases[alasql.useid].objects[args[0]];\r\n\tif(typeof val !== 'undefined' && val === obj) {\r\n\t\treturn {status: 1, values: [val]};\r\n\t} else {\r\n\t\treturn {status: -1, values: []};\r\n\t}\r\n};\r\n\nalasql.srch.PARENT = function(/*val,args,stope*/) {\r\n\t// TODO: implement\r\n\tconsole.log('PARENT not implemented', arguments);\r\n\n\treturn {status: -1, values: []};\r\n};\r\n\nalasql.srch.CHILD = function(val,args,stope) {\r\n\n  if(typeof val === 'object') {\r\n    if(Array.isArray(val)){\r\n      return {status: 1, values: val};\r\n    } else {\r\n    \tif(stope.mode === 'XML') {\r\n\t      return {status: 1, values: Object.keys(val.children).map(function(key){return val.children[key];})};          \r\n    \t} else {\r\n\t      return {status: 1, values: Object.keys(val).map(function(key){return val[key];})};          \r\n    \t}\r\n    }\r\n  } else {\r\n    // If primitive value\r\n    return {status: 1, values:[]};\r\n  }\r\n};\r\n\n// Return all keys\r\nalasql.srch.KEYS = function(val) {\r\n  if(typeof val === 'object' && val !== null) {\r\n\t  return {status: 1, values: Object.keys(val)};          \r\n  } else {\r\n    // If primitive value\r\n    return {status: 1, values:[]};\r\n  }\r\n};\r\n\n// Test expression\r\nalasql.srch.WHERE = function(val,args,stope,params) {\r\n  var exprs = args[0].toJS('x','');\r\n  var exprfn = new Function('x,alasql,params','return '+exprs);\r\n  if(exprfn(val,alasql,params)) {\r\n    return {status: 1, values: [val]};\r\n  } else {\r\n    return {status: -1, values: []};        \r\n  }\r\n};\r\n\nalasql.srch.NAME = function(val,args) {\r\n  if(val.name === args[0]) {\r\n    return {status: 1, values: [val]};\r\n  } else {\r\n    return {status: -1, values: []};        \r\n  }\r\n};\r\n\nalasql.srch.CLASS = function(val,args) {\r\n\n  // Please avoid `===` here\r\n  if(val.$class == args) { \t\t\t\t\t// jshint ignore:line\r\n    return {status: 1, values: [val]};\r\n  } else {\r\n    return {status: -1, values: []};        \r\n  }\r\n};\r\n\n// Transform expression\r\nalasql.srch.VERTEX = function(val) {\r\n  if(val.$node === 'VERTEX') {\r\n    return {status: 1, values: [val]};\r\n  } else {\r\n    return {status: -1, values: []};        \r\n  }\r\n};\r\n\n// Transform expression\r\nalasql.srch.INSTANCEOF = function(val,args) {\r\n  if(val instanceof alasql.fn[args[0]]) {\r\n    return {status: 1, values: [val]};\r\n  } else {\r\n    return {status: -1, values: []};        \r\n  }\r\n};\r\n\n// Transform expression\r\nalasql.srch.EDGE = function(val ) {\r\n  if(val.$node === 'EDGE') {\r\n    return {status: 1, values: [val]};\r\n  } else {\r\n    return {status: -1, values: []};        \r\n  }\r\n};\r\n\n// Transform expression\r\nalasql.srch.EX = function(val,args,stope,params) {\r\n  var exprs = args[0].toJS('x','');\r\n  var exprfn = new Function('x,alasql,params','return '+exprs);\r\n  return {status: 1, values: [exprfn(val,alasql,params)]};\r\n};\r\n\n// Transform expression\r\nalasql.srch.RETURN = function(val,args,stope,params) {\r\n\tvar res = {};\r\n\tif(args && args.length > 0) {\r\n\t\targs.forEach(function(arg){\r\n\t\t  \tvar exprs = arg.toJS('x','');\r\n  \t\t\tvar exprfn = new Function('x,alasql,params','return '+exprs);\r\n  \t\t\tif(typeof arg.as === 'undefined'){\r\n  \t\t\t\targ.as = arg.toString();\r\n  \t\t\t}\r\n  \t\t\tres[arg.as] = exprfn(val,alasql,params);\r\n\t\t});\r\n\t}\r\n  return {status: 1, values: [res]};\r\n};\r\n\n// Transform expression\r\nalasql.srch.REF = function(val ) {\r\n  return {status: 1, values: [alasql.databases[alasql.useid].objects[val]]};\r\n};\r\n\n// Transform expression\r\nalasql.srch.OUT = function(val ) {\r\n\tif(val.$out && val.$out.length > 0) {\r\n\t\tvar res = val.$out.map(function(v){ \r\n\t\t\treturn alasql.databases[alasql.useid].objects[v]\r\n\t\t}); \r\n\t\treturn {status: 1, values: res};\r\n\t} else {\r\n\t\treturn {status: -1, values: []};\r\n\t}\r\n};\r\n\nalasql.srch.OUTOUT = function(val ) {\r\n\tif(val.$out && val.$out.length > 0) {\r\n\t\tvar res = [];\r\n\t\tval.$out.forEach(function(v){ \r\n\t\t\tvar av = alasql.databases[alasql.useid].objects[v];\r\n\t\t\tif(av && av.$out && av.$out.length > 0) {\r\n\t\t\t\tav.$out.forEach(function(vv){\r\n\t\t\t\t\tres = res.concat(alasql.databases[alasql.useid].objects[vv]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}); \r\n\t\treturn {status: 1, values: res};\r\n\t} else {\r\n\t\treturn {status: -1, values: []};\r\n\t}\r\n};\r\n\n// Transform expression\r\nalasql.srch.IN = function(val) {\r\n\tif(val.$in && val.$in.length > 0) {\r\n\t\tvar res = val.$in.map(function(v){ \r\n\t\t\treturn alasql.databases[alasql.useid].objects[v]\r\n\t\t}); \r\n\t\treturn {status: 1, values: res};\r\n\t} else {\r\n\t\treturn {status: -1, values: []};\r\n\t}\r\n};\r\n\nalasql.srch.ININ = function(val ) {\r\n\tif(val.$in && val.$in.length > 0) {\r\n\t\tvar res = [];\r\n\t\tval.$in.forEach(function(v){ \r\n\t\t\tvar av = alasql.databases[alasql.useid].objects[v];\r\n\t\t\tif(av && av.$in && av.$in.length > 0) {\r\n\t\t\t\tav.$in.forEach(function(vv){\r\n\t\t\t\t\tres = res.concat(alasql.databases[alasql.useid].objects[vv]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}); \r\n\t\treturn {status: 1, values: res};\r\n\t} else {\r\n\t\treturn {status: -1, values: []};\r\n\t}\r\n};\r\n\n// Transform expression\r\nalasql.srch.AS = function(val,args) {\r\n\talasql.vars[args[0]] = val;\r\n  return {status: 1, values: [val]};\r\n};\r\n\n// Transform expression\r\nalasql.srch.AT = function(val,args) {\r\n\tvar v = alasql.vars[args[0]];\r\n  return {status: 1, values: [v]};\r\n};\r\n\n// Transform expression\r\nalasql.srch.CLONEDEEP = function(val) {\r\n\t// TODO something wrong\r\n\tvar z = cloneDeep(val);\r\n \treturn {status: 1, values: [z]};\r\n};\r\n\n// // Transform expression\r\n// alasql.srch.DELETE = function(val,args) {\r\n\n// };\r\n\n// Transform expression\r\nalasql.srch.SET = function(val,args,stope,params) {\r\n\n\tvar s = args.map(function(st){\r\n\n\t\tif(st.method === '@') {\r\n\t\t\treturn 'alasql.vars[\\''+st.variable+'\\']='+st.expression.toJS('x','');\r\n\t\t} else if(st.method === '$') {\r\n\t\t\treturn 'params[\\''+st.variable+'\\']='+st.expression.toJS('x','');\r\n\t\t} else {\r\n\t\t\treturn 'x[\\''+st.column.columnid+'\\']='+st.expression.toJS('x','');\r\n\t\t}\r\n\t}).join(';');\r\n\tvar setfn = new Function('x,params,alasql',s);\r\n\n\tsetfn(val,params,alasql);\r\n\n  return {status: 1, values: [val]};\r\n};\r\n\nalasql.srch.ROW = function(val,args,stope,params) {\r\n  var s = 'var y;return [';\r\n\n\ts += args.map(function(arg){\r\n\t\treturn arg.toJS('x','');\r\n\t}).join(',');\r\n\ts += ']'\r\n\tvar setfn = new Function('x,params,alasql',s);\r\n\tvar rv = setfn(val,params,alasql);\r\n\n  return {status: 1, values: [rv]};\r\n};\r\n\nalasql.srch.D3 = function(val) {\r\n\tif(val.$node !== 'VERTEX' && val.$node === 'EDGE') {\r\n\t\tval.source = val.$in[0];\r\n\t\tval.target = val.$out[0];\r\n\t}\r\n\n  \treturn {status: 1, values: [val]};\r\n};\r\n\nvar compileSearchOrder = function (order) {\r\n\tif(order) {\r\n\n\t\tif(\r\n\t\t\torder \t\t\t\t&& \r\n\t\t\torder.length === 1 \t&& \r\n\t\t\torder[0].expression &&\r\n\t\t\ttypeof order[0].expression === \"function\"\r\n\t\t){\r\n\n\t\t\tvar func = order[0].expression;\r\n\n\t\t\treturn function(a,b){\r\n\t\t\t\tvar ra = func(a),rb = func(b);\r\n\t\t\t\tif(ra>rb){\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ra===rb){\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\n\t\tvar s = '';\r\n\t\tvar sk = '';\r\n\t\torder.forEach(function(ord){\r\n\n\t\t\t// Date conversion\r\n\t\t\tvar dg = ''; \r\n\n\t\t\tif(ord.expression instanceof yy.NumValue) {\r\n\t\t\t\tord.expression = self.columns[ord.expression.value-1];\r\n\t\t\t}\r\n\n\t\t\tif(ord.expression instanceof yy.Column) {\r\n\t\t\t\tvar columnid = ord.expression.columnid; \r\n\n\t\t\t\tif(alasql.options.valueof){\r\n\t\t\t\t\tdg = '.valueOf()'; // TODO Check\r\n\t\t\t\t}\r\n\t\t\t\t// COLLATE NOCASE\r\n\t\t\t\tif(ord.nocase){\r\n\t\t\t\t\tdg += '.toUpperCase()';\r\n\t\t\t\t}\r\n\n\t\t\t\tif(columnid === '_') {\r\n\t\t\t\t\ts += 'if(a'+dg+(ord.direction === 'ASC'?'>':'<')+'b'+dg+')return 1;';\r\n\t\t\t\t\ts += 'if(a'+dg+'==b'+dg+'){';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts += 'if((a[\\''+columnid+\"']||'')\"+dg+(ord.direction === 'ASC'?'>':'<')+'(b[\\''+columnid+\"']||'')\"+dg+')return 1;';\r\n\t\t\t\t\ts += 'if((a[\\''+columnid+\"']||'')\"+dg+'==(b[\\''+columnid+\"']||'')\"+dg+'){';\r\n\t\t\t\t}\r\n\n\t\t\t} else {\r\n\t\t\t\tdg = '.valueOf()';\r\n\t\t\t\t// COLLATE NOCASE\r\n\t\t\t\tif(ord.nocase){\r\n\t\t\t\t\tdg += '.toUpperCase()';\r\n\t\t\t\t}\r\n\t\t\t\ts += 'if(('+ord.toJS('a','')+\"||'')\"+dg+(ord.direction === 'ASC'?'>(':'<(')+ord.toJS('b','')+\"||'')\"+dg+')return 1;';\r\n\t\t\t\ts += 'if(('+ord.toJS('a','')+\"||'')\"+dg+'==('+ord.toJS('b','')+\"||'')\"+dg+'){';\r\n\t\t\t}\t\t\t\r\n\n\t\t\t// TODO Add date comparision\r\n\t\t\t\t// s += 'if(a[\\''+columnid+\"']\"+dg+(ord.direction == 'ASC'?'>':'<')+'b[\\''+columnid+\"']\"+dg+')return 1;';\r\n\t\t\t\t// s += 'if(a[\\''+columnid+\"']\"+dg+'==b[\\''+columnid+\"']\"+dg+'){';\r\n\n\t\t\tsk += '}';\r\n\t\t});\r\n\t\ts += 'return 0;';\r\n\t\ts += sk+'return -1';\r\n\n\t\treturn new Function('a,b',s);\r\n\t}\r\n};\r\n\nalasql.srch.ORDERBY = function(val,args /*,stope*/) {\r\n\n\tvar res = val.sort(compileSearchOrder(args));\r\n\treturn {status: 1, values: res};\r\n};\r\n\n// Main query procedure\r\nfunction queryfn(query,oldscope,cb, A,B) {\r\n\n\tvar aaa = query.sources.length;\r\n\n\tvar ms;\r\n\tquery.sourceslen = query.sources.length;\r\n\tvar slen = query.sourceslen;\r\n\tquery.query = query; // TODO Remove to prevent memory leaks\r\n\tquery.A = A;\r\n\tquery.B = B;\r\n\tquery.cb = cb;\r\n\tquery.oldscope = oldscope;\r\n\n\t// Run all subqueries before main statement\r\n\tif(query.queriesfn) {\r\n\t\tquery.sourceslen += query.queriesfn.length;\r\n\t\tslen += query.queriesfn.length;\r\n\n\t\tquery.queriesdata = [];\r\n\n\t\tquery.queriesfn.forEach(function(q,idx){\r\n\n\t\t\tq.query.params = query.params;\r\n\n//\tif(false) {\r\n\n//\t} else {\r\n\t\t\tqueryfn2([],(-idx-1),query);\r\n//\t}\r\n\n\t\t});\r\n\n\t}\r\n\n\tvar scope;\r\n\tif(!oldscope) scope = {};\r\n\telse scope = cloneDeep(oldscope);\r\n\tquery.scope = scope;\r\n\n\t// First - refresh data sources\r\n\n\tvar result;\r\n\tquery.sources.forEach(function(source, idx){\r\n\n\t\tsource.query = query;\r\n\t\tvar rs = source.datafn(query, query.params, queryfn2, idx, alasql); \r\n\n\t\tif(typeof rs !== 'undefined') {\r\n\t\t\t// TODO - this is a hack: check if result is array - check all cases and\r\n\t\t\t// make it more logical\r\n\t\t\tif((query.intofn || query.intoallfn) && Array.isArray(rs)) rs = rs.length;\r\n\t\t\tresult = rs;\r\n\t\t}\r\n//\r\n// Ugly hack to use in query.wherefn and source.srcwherefns functions\r\n// constructions like this.queriesdata['test'].\r\n// I can elimite it with source.srcwherefn.bind(this)()\r\n// but it may be slow.\r\n// \r\n\t\tsource.queriesdata = query.queriesdata;  \r\n\t});\r\n\tif(query.sources.length==0 || 0 === slen ) \r\n\t\tresult = queryfn3(query);\r\n\n\treturn result;\r\n}\r\n\nfunction queryfn2(data,idx,query) {\r\n\n//console.trace();\r\n\n\tif(idx>=0) {\r\n\t\tvar source = query.sources[idx];\r\n\t\tsource.data = data;\r\n\t\tif(typeof source.data == 'function') {\r\n\t\t\tsource.getfn = source.data;\r\n\t\t\tsource.dontcache = source.getfn.dontcache;\r\n\n\t//\t\t\tvar prevsource = query.sources[h-1];\r\n\t\t\tif(source.joinmode == 'OUTER' || source.joinmode == 'RIGHT' || source.joinmode == 'ANTI') {\r\n\t\t\t\tsource.dontcache = false;\r\n\t\t\t}\r\n\t\t\tsource.data = {};\r\n\t\t}\r\n\t} else {\r\n\t\t// subqueries\r\n\n\t\tquery.queriesdata[-idx-1] = flatArray(data);\r\n\n\t}\r\n\n\tquery.sourceslen--;\r\n\tif(query.sourceslen>0) return;\r\n\n\treturn queryfn3(query);\r\n}\r\n\nfunction queryfn3(query) {\r\n\n\tvar scope = query.scope,\r\n        jlen;\r\n\n\t// Preindexation of data sources\r\n//\tif(!oldscope) {\r\n\t\tpreIndex(query);\r\n//\t}\r\n\n\t// query.sources.forEach(function(source) {\r\n\n\t// });\r\n\n\t// Prepare variables\r\n\tquery.data = [];\r\n\tquery.xgroups = {};\r\n\tquery.groups = [];\r\n\n\t// Level of Joins\r\n\tvar h = 0;\r\n\n\t// Start walking over data\r\n\n\tdoJoin(query, scope, h);\r\n\n\t// If groupping, then filter groups with HAVING function\r\n\n\tif(query.groupfn) {\r\n\t\tquery.data = [];\r\n\t\tif(0 === query.groups.length) {\r\n\t\t\tvar g = {};\r\n\t\t\tif(query.selectGroup.length>0) {\r\n\n\t\t\t\tquery.selectGroup.forEach(function(sg){\r\n\t\t\t\t\tif(sg.aggregatorid == \"COUNT\" || sg.aggregatorid == \"SUM\") {\r\n\t\t\t\t\t\tg[sg.nick] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tg[sg.nick] = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tquery.groups = [g];\r\n\n\t\t}\r\n\n\t\t// ******\r\n\n\t\tif(query.aggrKeys.length > 0) {\r\n\t\t\tvar gfns = '';\r\n\t\t\tquery.aggrKeys.forEach(function(col){\r\n\t\t\t\tgfns += 'g[\\''+col.nick+'\\']=alasql.aggr[\\''+col.funcid+'\\'](undefined,g[\\''+col.nick+'\\'],3);'; \r\n\n\t\t\t});\r\n\n\t\t\tvar gfn = new Function('g,params,alasql','var y;'+gfns); \r\n\n\t\t}\r\n\n\t\t// *******\r\n\n\t\t// \tdebugger;\r\n\t\t// if(false && (query.groups.length == 1) && (Object.keys(query.groups[0]).length == 0)) {\r\n\n\t\t// } else {\r\n\t\t\tfor(var i=0,ilen=query.groups.length;i<ilen;i++) {\r\n\t\t\t\tvar g = query.groups[i];\r\n\n\t\t\t\tif(gfn) gfn(g,query.params,alasql);\r\n\n\t\t\t\tif((!query.havingfn) || query.havingfn(g,query.params,alasql)) {\r\n\n\t\t\t\t\tvar d = query.selectgfn(g,query.params,alasql);\r\n\t\t\t\t\tquery.data.push(d);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t// }\r\n\n\t}\r\n\t// Remove distinct values\t\r\n\tdoDistinct(query);\r\n\n\t// UNION / UNION ALL\r\n\tif(query.unionallfn) {\r\n// TODO Simplify this part of program\r\n\t\tvar ud, nd;\r\n\t\tif(query.corresponding) {\r\n\t\t\tif(!query.unionallfn.query.modifier) query.unionallfn.query.modifier = undefined;\r\n\t\t\tud = query.unionallfn(query.params);\r\n\t\t} else {\r\n\t\t\tif(!query.unionallfn.query.modifier) query.unionallfn.query.modifier = 'RECORDSET';\r\n\t\t\tnd = query.unionallfn(query.params);\r\n\t\t\tud = [];\r\n\t\t\tilen=nd.data.length\r\n\t\t\tfor(var i=0;i<ilen;i++) {\r\n\t\t\t\tvar r = {};\r\n\t\t\t\tfor(var j=Math.min(query.columns.length,nd.columns.length)-1;0<=j;j--) {\r\n\t\t\t\t\tr[query.columns[j].columnid] = nd.data[i][nd.columns[j].columnid];\r\n\t\t\t\t}\r\n\t\t\t\tud.push(r);\r\n\t\t\t}\r\n\t\t}\r\n\t\tquery.data = query.data.concat(ud);\r\n\t} else if(query.unionfn) {\r\n\n\t\tif(query.corresponding) {\r\n\t\t\tif(!query.unionfn.query.modifier) query.unionfn.query.modifier = 'ARRAY';\r\n\t\t\tud = query.unionfn(query.params);\r\n\t\t} else {\r\n\t\t\tif(!query.unionfn.query.modifier) query.unionfn.query.modifier = 'RECORDSET';\r\n\t\t\tnd = query.unionfn(query.params);\r\n\t\t\tud = [];\r\n\t\t\tilen=nd.data.length\r\n\t\t\tfor(var i=0;i<ilen;i++) {\r\n\t\t\t\tr = {};\r\n\t\t\t\tjlen=Math.min(query.columns.length,nd.columns.length);\r\n\t\t\t\tfor(var j=0;j<jlen;j++) {\r\n\t\t\t\t\tr[query.columns[j].columnid] = nd.data[i][nd.columns[j].columnid];\r\n\t\t\t\t}\r\n\t\t\t\tud.push(r);\r\n\t\t\t}\r\n\t\t}\r\n\n\t\tquery.data = arrayUnionDeep(query.data, ud);\r\n\n\t} else if(query.exceptfn) {\r\n\t\tif(query.corresponding) {\r\n\t\t\tif(!query.exceptfn.query.modifier) query.exceptfn.query.modifier = 'ARRAY';\r\n\t\t\tvar ud = query.exceptfn(query.params);\r\n\t\t} else {\r\n\t\t\tif(!query.exceptfn.query.modifier) query.exceptfn.query.modifier = 'RECORDSET';\r\n\t\t\tvar nd = query.exceptfn(query.params);\r\n\t\t\tvar ud = [];\r\n\t\t\tfor(var i=0,ilen=nd.data.length;i<ilen;i++) {\r\n\t\t\t\tvar r = {};\r\n\t\t\t\tfor(var j=Math.min(query.columns.length,nd.columns.length)-1;0<=j;j--) {\r\n\t\t\t\t\tr[query.columns[j].columnid] = nd.data[i][nd.columns[j].columnid];\r\n\t\t\t\t}\r\n\t\t\t\tud.push(r);\r\n\t\t\t}\r\n\t\t}\r\n\n\t\tquery.data = arrayExceptDeep(query.data, ud);\r\n\t} else if(query.intersectfn) {\r\n\t\tif(query.corresponding) {\r\n\t\t\tif(!query.intersectfn.query.modifier) \r\n\t\t\t\tquery.intersectfn.query.modifier = undefined;\r\n\t\t\tud = query.intersectfn(query.params);\r\n\t\t} else {\r\n\t\t\tif(!query.intersectfn.query.modifier) \r\n\t\t\t\tquery.intersectfn.query.modifier = 'RECORDSET';\r\n\t\t\tnd = query.intersectfn(query.params);\r\n\t\t\tud = [];\r\n\t\t\tilen=nd.data.length;\r\n\t\t\tfor(i=0;i<ilen;i++) {\r\n\t\t\t\tr = {};\r\n\t\t\t\tjlen=Math.min(query.columns.length,nd.columns.length);\r\n\t\t\t\tfor(j=0;j<jlen;j++) {\r\n\t\t\t\t\tr[query.columns[j].columnid] = nd.data[i][nd.columns[j].columnid];\r\n\t\t\t\t}\r\n\t\t\t\tud.push(r);\r\n\t\t\t}\r\n\t\t}\r\n\n\t\tquery.data = arrayIntersectDeep(query.data, ud);\r\n\t}\r\n\n\t// Ordering\r\n\tif(query.orderfn) {\r\n\t\tif(query.explain) var ms = Date.now();\r\n\t\tquery.data = query.data.sort(query.orderfn);\r\n\t\tif(query.explain) { \r\n\t\t\tquery.explaination.push({explid: query.explid++, description:'QUERY BY',ms:Date.now()-ms});\r\n\t\t}\r\n\t}\r\n\n\t// Reduce to limit and offset\r\n\tdoLimit(query);\r\n\n\t// Remove Angular.js artifacts and other unnecessary columns\r\n\t// Issue #25\r\n\n    // TODO: Check what artefacts rest from Angular.js\r\n    if(typeof angular != \"undefined\") {\r\n    \tquery.removeKeys.push('$$hashKey');\r\n    }\r\n\n\tif(query.removeKeys.length > 0) {\r\n\t    var removeKeys = query.removeKeys;\r\n\n\t    // Remove from data\r\n\t\tjlen = removeKeys.length;\r\n\t\tif(jlen > 0) {\r\n\t\t\tilen=query.data.length;\t\r\n\t\t\tfor(i=0;i<ilen;i++) {\r\n\t\t\t\tfor(j=0; j<jlen;j++) {\r\n\t\t\t\t\tdelete query.data[i][removeKeys[j]];\r\n\t\t\t\t}\r\n\t\t\t}    \r\n\t\t}\r\n\n\t    // Remove from columns list\r\n\t\tif(query.columns.length > 0) {\r\n\t\t\tquery.columns = query.columns.filter(function(column){\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tremoveKeys.forEach(function(key){\r\n\t\t\t\t\tif(column.columnid == key) found = true;\r\n\t\t\t\t});\r\n\t\t\t\treturn !found;\r\n\t\t\t});\r\n\t\t}\r\n\n\t}\r\n\n\tif(typeof query.removeLikeKeys != 'undefined' && query.removeLikeKeys.length > 0) {\r\n\n\t    var removeLikeKeys = query.removeLikeKeys;\r\n\n\t\t// Remove unused columns\r\n\t\t// SELECT * REMOVE COLUMNS LIKE \"%b\"\r\n\t\tfor(var i=0,ilen=query.data.length;i<ilen;i++) {\r\n\t\t\tr = query.data[i];\r\n\t\t\tfor(var k in r) {\r\n\t\t\t\tfor(j=0;j<query.removeLikeKeys.length;j++) {\r\n\t\t\t\t\tif(alasql.utils.like(query.removeLikeKeys[j],k)) {\r\n\n\t\t\t\t\t\tdelete r[k];\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t}\r\n\n\t\tif(query.columns.length > 0) {\r\n\t\t\tquery.columns = query.columns.filter(function(column){\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tremoveLikeKeys.forEach(function(key){\r\n\n\t\t\t\t\tif(alasql.utils.like(key,column.columnid)) {\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn !found;\r\n\t\t\t});\r\n\t\t}\r\n\n\t}\r\n\n\tif(query.pivotfn) query.pivotfn();\r\n\tif(query.unpivotfn) query.unpivotfn();\r\n\n\tif(query.intoallfn) {\r\n\n\t\tvar res = query.intoallfn(query.columns,query.cb,query.params,query.alasql); \r\n\n\t\treturn res;\t\r\n\t} else if(query.intofn) {\r\n\t\tilen=query.data.length;\r\n\t\tfor(i=0;i<ilen;i++){\r\n\t\t\tquery.intofn(query.data[i],i,query.params,query.alasql);\r\n\t\t}\r\n\n\t\tif(query.cb) \r\n\t\t\tquery.cb(query.data.length,query.A, query.B);\r\n\t\treturn query.data.length;\r\n\t} else {\r\n\n\t\tres = query.data;\r\n\t\tif(query.cb) \r\n\t\t\tres = query.cb(query.data,query.A, query.B);\r\n\t\treturn res;\r\n\t}\r\n\n}\r\n\n// Limiting\r\nfunction doLimit (query) {\r\n\n\tif(query.limit) {\r\n\t\tvar offset = 0;\r\n\t\tif(query.offset){\r\n\t\t\toffset = (query.offset|0)||0;\r\n\t\t\toffset = offset<0 ? 0 : offset;\r\n\t\t}\r\n\t\tvar limit;\r\n\t\tif(query.percent) {\r\n\t\t\tlimit = ((query.data.length*query.limit/100)|0)+offset;\t\t\t\r\n\t\t} else {\r\n\t\t\tlimit = (query.limit|0) + offset;\r\n\t\t}\r\n\t\tquery.data = query.data.slice(offset,limit);\r\n\t}\r\n}\r\n\n// Distinct\r\nfunction doDistinct (query) {\r\n\tif(query.distinct) {\r\n\t\tvar uniq = {};\r\n\t\t// TODO: Speedup, because Object.keys is slow\r\n\t\t// TODO: Problem with DISTINCT on objects\r\n\t\tfor(var i=0,ilen=query.data.length;i<ilen;i++) {\r\n\t\t\tvar uix = Object.keys(query.data[i]).map(function(k){return query.data[i][k];}).join('`');\r\n\t\t\tuniq[uix] = query.data[i];\r\n\t\t}\r\n\t\tquery.data = [];\r\n\t\tfor(var key in uniq){\r\n\t\t\tquery.data.push(uniq[key]);\r\n\t\t}\r\n\t}\r\n}\r\n\n// Optimization: preliminary indexation of joins\r\nvar preIndex = function(query) {\r\n\n\t// Loop over all sources\r\n\t// Todo: make this loop smaller and more graspable\r\n\tfor(var k=0, klen = query.sources.length;k<klen;k++) {\r\n\t\tvar source = query.sources[k];\r\n\t\tdelete source.ix;\r\n\t\t// If there is indexation rule\r\n\n\t\tif(k > 0 && source.optimization == 'ix' && source.onleftfn && source.onrightfn) {\r\n\t\t\t// If there is no table.indices - create it\r\n\t\t\tif(source.databaseid && alasql.databases[source.databaseid].tables[source.tableid]) {\r\n\t\t\t\tif(!alasql.databases[source.databaseid].tables[source.tableid].indices) query.database.tables[source.tableid].indices = {};\r\n\t\t\t\t\t// Check if index already exists\r\n\t\t\t\tvar ixx = alasql.databases[source.databaseid].tables[source.tableid].indices[hash(source.onrightfns+'`'+source.srcwherefns)];\r\n\t\t\t\tif( !alasql.databases[source.databaseid].tables[source.tableid].dirty && ixx) {\r\n\t\t\t\t\tsource.ix = ixx; \r\n\t\t\t\t}\r\n\t\t\t}\r\n\n\t\t\tif(!source.ix) {\r\n\t\t\t\tsource.ix = {};\r\n\t\t\t\t// Walking over source data\r\n\t\t\t\tvar scope = {};\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\tvar ilen = source.data.length;\r\n\t\t\t\tvar dataw;\r\n\n\t\t\t\twhile((dataw = source.data[i]) || (source.getfn && (dataw = source.getfn(i))) || (i<ilen)) {\r\n\t\t\t\t\tif(source.getfn && !source.dontcache) source.data[i] = dataw;\r\n\n\t\t\t\t\t// Prepare scope for indexation\r\n\t\t\t\t\tscope[source.alias || source.tableid] = dataw;\r\n\n\t\t\t\t\t// Check if it apply to where function \r\n\t\t\t\t\tif(source.srcwherefn(scope, query.params, alasql)) {\r\n\t\t\t\t\t\t// Create index entry for each address\r\n\t\t\t\t\t\tvar addr = source.onrightfn(scope, query.params, alasql);\r\n\t\t\t\t\t\tvar group = source.ix [addr]; \r\n\t\t\t\t\t\tif(!group) {\r\n\t\t\t\t\t\t\tgroup = source.ix [addr] = []; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgroup.push(dataw);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\n\t\t\t\tif(source.databaseid && alasql.databases[source.databaseid].tables[source.tableid]){\r\n\t\t\t\t\t// Save index to original table\t\t\t\t\r\n\t\t\t\t\talasql.databases[source.databaseid].tables[source.tableid].indices[hash(source.onrightfns+'`'+source.srcwherefns)] = source.ix;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\n\t\t\t// Optimization for WHERE column = expression\r\n\t\t} else if (source.wxleftfn) {\r\n\t\t\t\tif(!alasql.databases[source.databaseid].engineid) {\r\n\t\t\t\t\t// Check if index exists\r\n\t\t\t\t\tixx = alasql.databases[source.databaseid].tables[source.tableid].indices[hash(source.wxleftfns+'`')];\r\n\t\t\t\t}\r\n\t\t\t\tif( !alasql.databases[source.databaseid].tables[source.tableid].dirty && ixx) {\r\n\t\t\t\t\t// Use old index if exists\r\n\t\t\t\t\tsource.ix = ixx;\r\n\t\t\t\t\t// Reduce data (apply filter)\r\n\t\t\t\t\tsource.data = source.ix[source.wxrightfn(null, query.params, alasql)]; \r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Create new index\r\n\t\t\t\t\tsource.ix = {};\r\n\t\t\t\t\t// Prepare scope\r\n\t\t\t\t\tscope = {};\r\n\t\t\t\t\t// Walking on each source line\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tilen = source.data.length;\r\n\t\t\t\t\tdataw;\r\n\t//\t\t\t\twhile(source.getfn i<ilen) {\r\n\n\t\t\t\t\twhile((dataw = source.data[i]) || (source.getfn && (dataw = source.getfn(i))) || (i<ilen)) {\r\n\t\t\t\t\t\tif(source.getfn && !source.dontcache) \r\n\t\t\t\t\t\t\tsource.data[i] = dataw;\r\n\t//\t\t\t\t\tfor(var i=0, ilen=source.data.length; i<ilen; i++) {\r\n\t\t\t\t\t\tscope[source.alias || source.tableid] = source.data[i];\r\n\t\t\t\t\t\t// Create index entry\r\n\t\t\t\t\t\taddr = source.wxleftfn(scope, query.params, alasql);\r\n\t\t\t\t\t\tgroup = source.ix[addr]; \r\n\t\t\t\t\t\tif(!group) {\r\n\t\t\t\t\t\t\tgroup = source.ix[addr] = []; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgroup.push(source.data[i]);\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t//\t\t\t\t\tquery.database.tables[source.tableid].indices[hash(source.wxleftfns+'`'+source.onwherefns)] = source.ix;\r\n\t\t\t\t\tif(!alasql.databases[source.databaseid].engineid) {\r\n\t\t\t\t\t\talasql.databases[source.databaseid].tables[source.tableid].indices[hash(source.wxleftfns+'`')] = source.ix;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Apply where filter to reduces rows\r\n\t\t\t\tif(source.srcwherefns) {\r\n\t\t\t\t\tif(source.data) {\r\n\t\t\t\t\t\tscope = {};\r\n\t\t\t\t\t\tsource.data = source.data.filter(function(r) {\r\n\t\t\t\t\t\t\tscope[source.alias] = r;\r\n\t\t\t\t\t\t\treturn source.srcwherefn(scope, query.params, alasql);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsource.data = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\r\n\n\t\t// If there is no any optimization than apply srcwhere filter\r\n\t\t} else if(source.srcwherefns && !source.dontcache) {\r\n\t\t\tif(source.data) {\r\n\t\t\t\tvar scope = {};\r\n\t\t\t\t// TODO!!!!! Data as Function\r\n\n\t\t\t\tsource.data = source.data.filter(function(r) {\r\n\t\t\t\t\tscope[source.alias] = r;\r\n\n\t\t\t\t\treturn source.srcwherefn(scope, query.params, alasql);\r\n\t\t\t\t});\r\n\n\t\t\t\tscope = {};\r\n\t\t\t\ti = 0;\r\n\t\t\t\tilen = source.data.length;\r\n\t\t\t\t//var dataw;\r\n\t\t\t\tvar res = [];\r\n\n\t\t\t\twhile((dataw = source.data[i]) || (source.getfn && (dataw = source.getfn(i))) || (i<ilen)) {\r\n\t\t\t\t\tif(source.getfn && !source.dontcache) source.data[i] = dataw;\r\n\t\t\t\t\tscope[source.alias] = dataw;\r\n\t\t\t\t\tif(source.srcwherefn(scope, query.params, alasql)) res.push(dataw);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tsource.data = res;\r\n\n\t\t\t} else {\r\n\t\t\t\tsource.data = [];\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t\t// Change this to another place (this is a wrong)\r\n\t\tif(source.databaseid && alasql.databases[source.databaseid].tables[source.tableid]) {\r\n\t\t\t//query.database.tables[source.tableid].dirty = false;\r\n\t\t} else {\r\n\t\t\t// this is a subquery?\r\n\t\t}\r\n\t}\r\n};\r\n\n//\r\n// Join all lines over sources \r\n//\r\n\nfunction doJoin (query, scope, h) {\r\n\n\t// Check, if this is a last join?\r\n\tif(h>=query.sources.length) { // Todo: check if this runs once too many\r\n\n\t\t// Then apply where and select\r\n\n\t\tif(query.wherefn(scope,query.params, alasql)) {\r\n\n\t\t\t// If there is a GROUP BY then pipe to groupping function\r\n\t\t\tif(query.groupfn) {\r\n\t\t\t\tquery.groupfn(scope, query.params, alasql)\r\n\t\t\t} else {\r\n\n\t\t\t\tquery.data.push(query.selectfn(scope, query.params, alasql));\r\n\t\t\t}\t\r\n\t\t}\r\n\t} else if(query.sources[h].applyselect) {\r\n\n\t\tvar source = query.sources[h];\r\n\t\tsource.applyselect(query.params, function(data){\r\n\t\t\tif(data.length > 0) {\r\n\n\t\t\t\tfor(var i=0;i<data.length;i++) {\r\n\t\t\t\t\tscope[source.alias] = data[i];\r\n\t\t\t\t\tdoJoin(query, scope, h+1);\r\n\t\t\t\t};\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tif (source.applymode == 'OUTER') {\r\n\t\t\t\t\tscope[source.alias] = {};\r\n\t\t\t\t\tdoJoin(query, scope, h+1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},scope);\r\n\n\t} else {\r\n\n// STEP 1\r\n\n\t\tvar source = query.sources[h];\r\n\t\tvar nextsource = query.sources[h+1];\r\n\n\t\t// Todo: check if this is smart\r\n\t\tif(true) {//source.joinmode != \"ANTI\") {\r\n\n\t\t\tvar tableid = source.alias || source.tableid; \r\n\t\t\tvar pass = false; // For LEFT JOIN\r\n\t\t\tvar data = source.data;\r\n\t\t\tvar opt = false;\r\n\n\t\t\t// Reduce data for looping if there is optimization hint\r\n\t\t\tif(!source.getfn || (source.getfn && !source.dontcache)) {\r\n\t\t\t\tif(source.joinmode != \"RIGHT\" && source.joinmode != \"OUTER\" && source.joinmode != \"ANTI\" && source.optimization == 'ix') {\r\n\t\t\t\t\tdata = source.ix[ source.onleftfn(scope, query.params, alasql) ] || [];\r\n\t\t\t\t\topt = true;\r\n\n\t\t\t\t}\r\n\t\t\t}\r\n\n\t\t\t// Main cycle\r\n\t\t\tvar i = 0;\r\n\t\t\tif(typeof data == 'undefined') {\r\n\t\t\t\tthrow new Error('Data source number '+h+' in undefined')\r\n\t\t\t}\r\n\t\t\tvar ilen=data.length;\r\n\t\t\tvar dataw;\r\n\n\t\t\twhile((dataw = data[i]) || (!opt && (source.getfn && (dataw = source.getfn(i)))) || (i<ilen) ) {\r\n\t\t\t\tif(!opt && source.getfn && !source.dontcache) data[i] = dataw;\r\n\n\t\t\t\tscope[tableid] = dataw;\r\n\t\t\t\t// Reduce with ON and USING clause\r\n\t\t\t\tif(!source.onleftfn || (source.onleftfn(scope, query.params, alasql) == source.onrightfn(scope, query.params, alasql))) {\r\n\t\t\t\t\t// For all non-standard JOINs like a-b=0\r\n\t\t\t\t\tif(source.onmiddlefn(scope, query.params, alasql)) {\r\n\t\t\t\t\t\t// Recursively call new join\r\n\n\t\t\t\t\t\tif(source.joinmode != \"SEMI\" && source.joinmode != \"ANTI\") { \r\n\n\t\t\t\t\t\t\tdoJoin(query, scope, h+1);\r\n\t\t\t\t\t\t}\r\n\n\t\t\t\t\t\t// if(source.data[i].f = 200) debugger;\r\n\n\t\t\t\t\t\tif(source.joinmode != \"LEFT\" && source.joinmode != \"INNER\") {\r\n\t\t\t\t\t\t\tdataw._rightjoin = true;\r\n\t\t\t\t\t\t}\r\n\n\t\t\t\t\t\t// for LEFT JOIN\r\n\t\t\t\t\t\tpass = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\ti++;\r\n\t\t\t};\r\n\n\t\t\t// Additional join for LEFT JOINS\r\n\t\t\tif((source.joinmode == 'LEFT' || source.joinmode == 'OUTER' || source.joinmode == 'SEMI' ) && !pass) {\r\n\t\t\t// Clear the scope after the loop\r\n\t\t\t\tscope[tableid] = {};\r\n\t\t\t\tdoJoin(query,scope,h+1);\r\n\t\t\t}\t\r\n\n\t\t}\r\n\n\t\t// When there is no records\r\n\n// STEP 2\r\n\n\t\tif(h+1 < query.sources.length) {\r\n\n\t\t\tif(nextsource.joinmode == \"OUTER\" || nextsource.joinmode == \"RIGHT\" \r\n\t\t\t\t|| nextsource.joinmode == \"ANTI\") {\r\n\n\t\t\t\tscope[source.alias] = {};\r\n\n\t\t\t\tvar j = 0;\r\n\t\t\t\tvar jlen = nextsource.data.length;\r\n\t\t\t\tvar dataw;\r\n\n\t\t\t\twhile((dataw = nextsource.data[j]) || (nextsource.getfn && (dataw = nextsource.getfn(j))) || (j<jlen)) {\r\n\t\t\t\t\tif(nextsource.getfn && !nextsource.dontcache) {\r\n\t\t\t\t\t\tnextsource.data[j] = dataw;\r\n\t\t\t\t\t}\r\n\n\t\t\t\t\tif(dataw._rightjoin) {\r\n\t\t\t\t\t\tdelete dataw._rightjoin;\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\n\t\t\t\t\t\tif(h==0) {\r\n\t\t\t\t\t\t\tscope[nextsource.alias] = dataw;\r\n\t\t\t\t\t\t\tdoJoin(query, scope, h+2);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//scope[nextsource.alias] = dataw;\r\n\t\t\t\t\t\t\t//doJoin(query, scope, h+2);\r\n\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\n\t\t\t} else {\r\n\n\t\t\t};\r\n\t\t} else {\r\n\n\t\t};\r\n\n\t\tscope[tableid] = undefined;\r\n\n\t}\r\n\n};\r\n\nfunction swapSources(query, h) {\r\n\tvar source = query.sources[h];\r\n\tvar nextsource = query.sources[h+1];\r\n\n\tvar onleftfn = source.onleftfn;\r\n\tvar onleftfns = source.onleftfns;\r\n\tvar onrightfn = source.onrightfn;\r\n\tvar onrightfns = source.onrightfns;\r\n\tvar optimization = source.optimization;\r\n\n\tsource.onleftfn = nextsource.onrightfn;\r\n\tsource.onleftfns = nextsource.onrightfns;\r\n\tsource.onrightfn = nextsource.onleftfn;\r\n\tsource.onrightfns = nextsource.onleftfns;\r\n\tsource.optimization = nextsource.optimization;\r\n\n\tnextsource.onleftfn = onleftfn;\r\n\tnextsource.onleftfns = onleftfns;\r\n\tnextsource.onrightfn = onrightfn;\r\n\tnextsource.onrightfns = onrightfns;\r\n\tnextsource.optimization = optimization;\r\n\n\tquery.sources[h] = nextsource;\r\n\tquery.sources[h+1] = source;\r\n}\r\n\n/*\r\n//\r\n// Select run-time part for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n//\r\n// Main part of SELECT procedure\r\n//\r\n\nyy.Select = function (params) { return yy.extend(this, params); }\r\nyy.Select.prototype.toString = function() {\r\n\tvar s;\r\n\ts = '';\r\n\tif (this.explain) {\r\n\t\ts += 'EXPLAIN ';\r\n\t}\r\n\ts += 'SELECT ';\r\n\tif (this.modifier) {\r\n\t\ts += this.modifier + ' ';\r\n\t}\r\n\tif (this.distinct) {\r\n\t\ts += 'DISTINCT ';\r\n\t}\r\n\tif (this.top) {\r\n\t\ts += 'TOP ' + this.top.value + ' ';\r\n\t\tif (this.percent) {\r\n\t\t\ts += 'PERCENT ';\r\n\t\t}\r\n\t}\r\n\ts += this.columns.map(function(col) {\r\n\t\tvar s;\r\n\t\ts = col.toString();\r\n\t\tif (typeof col.as !== 'undefined') {\r\n\t\t\ts += ' AS ' + col.as;\r\n\t\t}\r\n\t\treturn s;\r\n\t}).join(', ');\r\n\tif (this.from) {\r\n\t\ts += ' FROM ' + this.from.map(function(f) {\r\n\t\t\tvar ss;\r\n\t\t\tss = f.toString();\r\n\t\t\tif (f.as) {\r\n\t\t\t\tss += ' AS ' + f.as;\r\n\t\t\t}\r\n\t\t\treturn ss;\r\n\t\t}).join(',');\r\n\t}\r\n\tif (this.joins) {\r\n\t\ts += this.joins.map(function(jn) {\r\n\t\t\tvar ss;\r\n\t\t\tss = ' ';\r\n\t\t\tif (jn.joinmode) {\r\n\t\t\t\tss += jn.joinmode + ' ';\r\n\t\t\t}\r\n\t\t\tif (jn.table) {\r\n\t\t\t\tss += 'JOIN ' + jn.table.toString();\r\n\t\t\t} else if (jn.select) {\r\n\t\t\t\tss += 'JOIN (' + jn.select.toString() + ')';\r\n\t\t\t} else if (jn instanceof alasql.yy.Apply) {\r\n\t\t\t\tss += jn.toString();\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Wrong type in JOIN mode');\r\n\t\t\t}\r\n\t\t\tif (jn.as) {\r\n\t\t\t\tss += ' AS ' + jn.as;\r\n\t\t\t}\r\n\t\t\tif (jn.using) {\r\n\t\t\t\tss += ' USING ' + jn.using.toString();\r\n\t\t\t}\r\n\t\t\tif (jn.on) {\r\n\t\t\t\tss += ' ON ' + jn.on.toString();\r\n\t\t\t}\r\n\t\t\treturn ss;\r\n\t\t});\r\n\t}\r\n\tif (this.where) {\r\n\t\ts += ' WHERE ' + this.where.toString();\r\n\t}\r\n\tif (this.group && this.group.length > 0) {\r\n\t\ts += ' GROUP BY ' + this.group.map(function(grp) {\r\n\t\t\treturn grp.toString();\r\n\t\t}).join(', ');\r\n\t}\r\n\tif (this.having) {\r\n\t\ts += ' HAVING ' + this.having.toString();\r\n\t}\r\n\tif (this.order && this.order.length > 0) {\r\n\t\ts += ' ORDER BY ' + this.order.map(function(ord) {\r\n\t\t\treturn ord.toString();\r\n\t\t}).join(', ');\r\n\t}\r\n\tif (this.limit) {\r\n\t\ts += ' LIMIT ' + this.limit.value;\r\n\t}\r\n\tif (this.offset) {\r\n\t\ts += ' OFFSET ' + this.offset.value;\r\n\t}\r\n\tif (this.union) {\r\n\t\ts += ' UNION ' + (this.corresponding ? 'CORRESPONDING ' : '') + this.union.toString();\r\n\t}\r\n\tif (this.unionall) {\r\n\t\ts += ' UNION ALL ' + (this.corresponding ? 'CORRESPONDING ' : '') + this.unionall.toString();\r\n\t}\r\n\tif (this.except) {\r\n\t\ts += ' EXCEPT ' + (this.corresponding ? 'CORRESPONDING ' : '') + this.except.toString();\r\n\t}\r\n\tif (this.intersect) {\r\n\t\ts += ' INTERSECT ' + (this.corresponding ? 'CORRESPONDING ' : '') + this.intersect.toString();\r\n\t}\r\n\treturn s;\r\n};\r\n\n/**\r\n Select statement in expression\r\n */\r\nyy.Select.prototype.toJS = function(context) {\r\n\n//\tif(this.expression.reduced) return 'true';\r\n//\treturn this.expression.toJS(context, tableid, defcols);\r\n\n//\tvar s = 'this.queriesdata['+(this.queriesidx-1)+'][0]';\r\n\n\tvar s = 'alasql.utils.flatArray(this.queriesfn['+(this.queriesidx-1)+'](this.params,null,'+context+'))[0]';\r\n\n\treturn s;\r\n};\r\n\n// Compile SELECT statement\r\nyy.Select.prototype.compile = function(databaseid, params) {\r\n\tvar db = alasql.databases[databaseid];\r\n\t// Create variable for query\r\n\tvar query = new Query();\r\n\n\t// Array with columns to be removed\r\n    query.removeKeys = [];\r\n    query.aggrKeys = [];\r\n\n\tquery.explain = this.explain; // Explain\r\n\tquery.explaination = [];\r\n\tquery.explid = 1;\r\n\n\tquery.modifier = this.modifier;\r\n\n\tquery.database = db;\r\n\t// 0. Precompile whereexists\r\n\tthis.compileWhereExists(query);\r\n\n\t// 0. Precompile queries for IN, NOT IN, ANY and ALL operators\r\n\tthis.compileQueries(query);\r\n\n\tquery.defcols = this.compileDefCols(query, databaseid);\r\n\n\t// 1. Compile FROM clause\r\n\tquery.fromfn = this.compileFrom(query);\r\n\n\t// 2. Compile JOIN clauses\r\n\tif(this.joins){\r\n\t\tthis.compileJoins(query);\r\n\t}\r\n\n\t// todo?: 3. Compile SELECT clause\r\n\n\t// For ROWNUM()\r\n\tquery.rownums = [];\r\n\n\tthis.compileSelectGroup0(query);\r\n\n\tif(this.group || query.selectGroup.length>0) {\r\n\t\tquery.selectgfns = this.compileSelectGroup1(query);\r\n\t} else {\r\n\t\tquery.selectfns = this.compileSelect1(query, params);\r\n\t}\r\n\n\t// Remove columns clause\r\n\tthis.compileRemoveColumns(query);\r\n\n\t// 5. Optimize WHERE and JOINS\r\n\tif(this.where){\r\n\t\tthis.compileWhereJoins(query);\r\n\t}\r\n\n\t// 4. Compile WHERE clause\r\n\tquery.wherefn = this.compileWhere(query);\r\n\n\t// 6. Compile GROUP BY\r\n\tif(this.group || query.selectGroup.length>0){\r\n\t\tquery.groupfn = this.compileGroup(query);\r\n\t}\r\n\n\t// 6. Compile HAVING\r\n\tif(this.having){\r\n\t\tquery.havingfn = this.compileHaving(query);\r\n\t}\r\n\n\t// 8. Compile ORDER BY clause\r\n\tif(this.order){\r\n\t\tquery.orderfn = this.compileOrder(query);\r\n\t}\r\n\n\tif(this.group || query.selectGroup.length>0) {\r\n\t\tquery.selectgfn = this.compileSelectGroup2(query);\r\n\t} else {\r\n\t\tquery.selectfn = this.compileSelect2(query);\r\n\t}\r\n\n\t// 7. Compile DISTINCT, LIMIT and OFFSET\r\n\tquery.distinct = this.distinct;\r\n\n\t// 9. Compile PIVOT clause\r\n\tif(this.pivot) query.pivotfn = this.compilePivot(query);\r\n\tif(this.unpivot) query.pivotfn = this.compileUnpivot(query);\r\n\n\t// 10. Compile TOP/LIMIT/OFFSET/FETCH cleuse\r\n\tif(this.top) {\r\n\t\tquery.limit = this.top.value;\r\n\t} else if(this.limit) {\r\n\t\tquery.limit = this.limit.value;\r\n\t\tif(this.offset) {\r\n\t\t\tquery.offset = this.offset.value;\r\n\t\t}\r\n\t}\r\n\n\tquery.percent = this.percent;\r\n\n\t// 9. Compile ordering function for UNION and UNIONALL\r\n\tquery.corresponding = this.corresponding; // If CORRESPONDING flag exists\r\n\tif(this.union) {\r\n\t\tquery.unionfn = this.union.compile(databaseid);\r\n\t\tif(this.union.order) {\r\n\t\t\tquery.orderfn = this.union.compileOrder(query);\r\n\t\t} else {\r\n\t\t\tquery.orderfn = null;\r\n\t\t}\r\n\t} else if(this.unionall) {\r\n\t\tquery.unionallfn = this.unionall.compile(databaseid);\r\n\t\tif(this.unionall.order) {\r\n\t\t\tquery.orderfn = this.unionall.compileOrder(query);\r\n\t\t} else {\r\n\t\t\tquery.orderfn = null;\r\n\t\t}\r\n\t} else if(this.except) {\r\n\t\tquery.exceptfn = this.except.compile(databaseid);\r\n\t\tif(this.except.order) {\r\n\t\t\tquery.orderfn = this.except.compileOrder(query);\r\n\t\t} else {\r\n\t\t\tquery.orderfn = null;\r\n\t\t}\r\n\t} else if(this.intersect) {\r\n\t\tquery.intersectfn = this.intersect.compile(databaseid);\r\n\t\tif(this.intersect.order) {\r\n\t\t\tquery.intersectfn = this.intersect.compileOrder(query);\r\n\t\t} else {\r\n\t\t\tquery.orderfn = null;\r\n\t\t}\r\n\t}\r\n\n\t// SELECT INTO\r\n\tif(this.into) {\r\n\t\tif(this.into instanceof yy.Table) {\r\n\t\t\t//\r\n\t\t\t// Save into the table in database\r\n\t\t\t//\r\n\t\t\tif(alasql.options.autocommit && alasql.databases[this.into.databaseid||databaseid].engineid) {\r\n\t\t\t\t// For external database when AUTOCOMMIT is ONs\r\n\t\t\t\tquery.intoallfns = 'return alasql.engines[\"'+alasql.databases[this.into.databaseid||databaseid].engineid+'\"]'+\r\n\t\t\t\t\t'.intoTable(\"'+(this.into.databaseid||databaseid)+'\",\"'+this.into.tableid+'\",this.data, columns, cb);';\r\n\t\t\t} else {\r\n\t\t\t\t// Into AlaSQL tables\r\n\t\t\t\tquery.intofns = \r\n\t\t\t\t'alasql.databases[\\''+(this.into.databaseid||databaseid)+'\\'].tables'+\r\n\t\t\t\t'[\\''+this.into.tableid+'\\'].data.push(r);';\r\n\t\t\t}\r\n\t\t} else if(this.into instanceof yy.VarValue) {\r\n\t\t\t//\r\n\t\t\t// Save into local variable\r\n\t\t\t// SELECT * INTO @VAR1 FROM ?\r\n\t\t\t//\r\n\t\t\tquery.intoallfns = 'alasql.vars[\"'+this.into.variable+'\"]=this.data;res=this.data.length;if(cb)res=cb(res);return res;';\r\n\t\t} else if (this.into instanceof yy.FuncValue) {\r\n\t\t\t//\r\n\t\t\t// If this is INTO() function, then call it\r\n\t\t\t// with one or two parameters\r\n\t\t\t//\r\n\t\t\tvar qs = 'return alasql.into[\\''+this.into.funcid.toUpperCase()+'\\'](';\r\n\t\t\tif(this.into.args && this.into.args.length>0 ) {\r\n\t\t\t\tqs += this.into.args[0].toJS()+',';\r\n\t\t\t\tif(this.into.args.length > 1) {\r\n\t\t\t\t\tqs += this.into.args[1].toJS()+',';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqs += 'undefined,';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tqs += 'undefined, undefined,'\r\n\t\t\t}\r\n\t\t\tquery.intoallfns = qs+'this.data,columns,cb)';\r\n\n\t\t} else if (this.into instanceof yy.ParamValue) {\r\n\t\t\t//\r\n\t\t\t// Save data into parameters array\r\n\t\t\t// like alasql('SELECT * INTO ? FROM ?',[outdata,srcdata]);\r\n\t\t\t//\r\n\t\t\tquery.intofns = \"params['\"+this.into.param+\"'].push(r)\";\r\n\t\t}\r\n\n\t\tif(query.intofns) {\r\n\t\t\t// Create intofn function\r\n\t\t\tquery.intofn = new Function(\"r,i,params,alasql\",'var y;'+query.intofns); \r\n\t\t} else if(query.intoallfns) {\r\n\t\t\t// Create intoallfn function\r\n\t\t\tquery.intoallfn = new Function(\"columns,cb,params,alasql\",'var y;'+query.intoallfns); \r\n\t\t}\r\n\n\t}\r\n\n\t// Now, compile all togeather into one function with query object in scope\r\n\tvar statement = function(params, cb, oldscope) {\r\n\t\tquery.params = params;\r\n\t\tvar res1 = queryfn(query,oldscope,function(res){\r\n\n\t\t\tif(query.rownums.length>0) {\r\n\t\t\t\tfor(var i=0,ilen=res.length;i<ilen;i++) {\r\n\t\t\t\t\tfor(var j=0,jlen=query.rownums.length;j<jlen;j++) {\r\n\t\t\t\t\t\tres[i][query.rownums[j]] = i+1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\n\t\t\tvar res2 = modify(query, res);\r\n\n\t\t\tif(cb){\r\n\t\t\t\tcb(res2);\r\n\t\t\t}\r\n\n\t\t\treturn res2;\r\n\n\t\t}); \r\n\n\t\treturn res1;\r\n\n\t};\r\n\n//\tstatement.dbversion = ;\r\n\n\tstatement.query = query;\r\n\treturn statement;\r\n};\r\n\n/**\r\n\tModify res according modifier\r\n\t@function\r\n\t@param {object} query Query object\r\n\t@param res {object|number|string|boolean} res Data to be converted \r\n*/\r\nfunction modify(query, res) { // jshint ignore:line\r\n\n\t/* If source is a primitive value then return it */\r\n\tif(\t\ttypeof res === 'undefined' \r\n\t\t|| \ttypeof res === 'number' \r\n\t\t|| \ttypeof res === 'string' \r\n\t\t|| \ttypeof res == 'boolean'\r\n\t){\r\n\t\treturn res;\r\n\t}\r\n\n\tvar modifier = query.modifier || alasql.options.modifier;\r\n\tvar columns = query.columns;\r\n\tif(typeof columns === 'undefined' || columns.length == 0) {\r\n\t\t// Try to create columns\r\n\t\tif(res.length > 0) {\r\n\t\t\tvar allcol = {};\r\n\t\t\tfor(var i=Math.min(res.length,alasql.options.columnlookup||10)-1;0<=i;i--) {\r\n\t\t\t\tfor(var key in res[i]) {\r\n\t\t\t\t\tallcol[key] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\n\t\t\tcolumns = Object.keys(allcol).map(function(columnid){\r\n\t\t\t\treturn {columnid:columnid};\r\n\t\t\t});\t\t\t\r\n\t\t} else {\r\n\t\t\t// Cannot recognize columns\r\n\t\t\tcolumns = [];\r\n\t\t}\r\n\t}\r\n\n\tif(modifier === 'VALUE') {\r\n\n\t\tif(res.length > 0) {\r\n\t\t\tvar key;\r\n\t\t\tif(columns && columns.length > 0){\r\n\t\t\t\tkey = columns[0].columnid;\r\n\t\t\t} else {\r\n\t\t\t\tkey = Object.keys(res[0])[0];\r\n\t\t\t}\r\n\t\t\tres = res[0][key];\r\n\t\t} else {\r\n\t\t\tres = undefined;\r\n\t\t}\r\n\t} else if(modifier === 'ROW') {\r\n\t\tif(res.length > 0) {\r\n\t\t\tvar key;\r\n\t\t\tvar a = [];\r\n\t\t\tfor(var key in res[0]) {\r\n\t\t\t\ta.push(res[0][key]);\r\n\t\t\t}\r\n\t\t\tres = a;\r\n\t\t} else {\r\n\t\t\tres = undefined;\r\n\t\t}\r\n\t} else if(modifier === 'COLUMN') {\r\n\t\tvar ar = [];\r\n\t\tif(res.length > 0) {\r\n\t\t\tvar key;\r\n\t\t\tif(columns && columns.length > 0){\r\n\t\t\t\tkey = columns[0].columnid;\r\n\t\t\t} else {\r\n\t\t\t\tkey = Object.keys(res[0])[0];\r\n\t\t\t}\r\n\n\t\t\tfor(var i=0, ilen=res.length; i<ilen; i++){\r\n\t\t\t\tar.push(res[i][key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tres = ar;\r\n\t} else if(modifier === 'MATRIX') {\r\n\t\t// Returns square matrix of rows\r\n\t\tvar ar = [];\r\n\t\tfor(var i=0;i<res.length;i++) {\t\t\r\n\t\t\tvar a = [];\r\n\t\t\tvar r = res[i];\r\n\t\t\tfor(var j=0;j<columns.length;j++) {\r\n\t\t\t\ta.push(r[columns[j].columnid]);\r\n\t\t\t}\r\n\t\t\tar.push(a);\r\n\t\t}\r\n\t\tres = ar;\r\n\n\t}else if(modifier === 'INDEX') {\r\n\t\tvar ar = {};\r\n\t\tvar key,val;\r\n\t\tif(columns && columns.length > 0) {\r\n\t\t\tkey = columns[0].columnid;\r\n\t\t\tval = columns[1].columnid;\r\n\t\t} else {\r\n\t\t\tvar okeys = Object.keys(res[0]);\r\n\t\t\tkey = okeys[0];\r\n\t\t\tval = okeys[1];\r\n\t\t}\r\n\t\tfor(var i=0, ilen=res.length; i<ilen; i++){\r\n\t\t\tar[res[i][key]] = res[i][val];\r\n\t\t}\r\n\t\tres = ar;\r\n\n\t}else if(modifier === 'RECORDSET') {\r\n\t\tres = new alasql.Recordset({columns:columns, data:res});\r\n\n\t}else if(modifier === 'TEXTSTRING') {\r\n\t\tvar key;\r\n\t\tif(columns && columns.length > 0){\r\n\t\t\tkey = columns[0].columnid;\r\n\t\t} else{\r\n\t\t\tkey = Object.keys(res[0])[0];\r\n\t\t}\r\n\n\t\tfor(var i=0, ilen=res.length; i<ilen; i++){\r\n\t\t\tres[i] = res[i][key];\r\n\t\t}\r\n\t\tres = res.join('\\n');\r\n\n\t}\r\n\treturn res;\r\n}\r\n\nyy.Select.prototype.execute = function (databaseid, params, cb) {\r\n\treturn this.compile(databaseid)(params,cb);\r\n//\tthrow new Error('Insert statement is should be compiled')\r\n}\r\n\n/*\r\n//\r\n// EXISTS and other subqueries functions  functions for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.ExistsValue = function(params) { return yy.extend(this, params); }\r\nyy.ExistsValue.prototype.toString = function() {\r\n\treturn 'EXISTS('+this.value.toString()+')';\r\n};\r\n\nyy.ExistsValue.prototype.toType = function() {\r\n\treturn 'boolean';\r\n};\r\n\nyy.ExistsValue.prototype.toJS = function(context,tableid,defcols) {\r\n\n\treturn 'this.existsfn['+this.existsidx+'](params,null,'+context+').data.length';\r\n};\r\n\nyy.Select.prototype.compileWhereExists = function(query) {\r\n\tif(!this.exists) return;\r\n\tquery.existsfn = this.exists.map(function(ex) {\r\n\t\tvar nq = ex.compile(query.database.databaseid);\r\n\n\t\t nq.query.modifier = 'RECORDSET';\r\n\t\t return nq;\r\n\t});\r\n};\r\n\nyy.Select.prototype.compileQueries = function(query) {\r\n\tif(!this.queries) return;\r\n\tquery.queriesfn = this.queries.map(function(q) {\r\n\t\t var nq = q.compile(query.database.databaseid);\r\n\n//\tif(!nq.query) nq.query = {};\r\n\t\t nq.query.modifier = 'RECORDSET';\r\n\n\t\t return nq;\r\n\t});\r\n};\r\n\n//\r\n// Prepare subqueries and exists\r\n//\r\nalasql.precompile = function(statement,databaseid,params){\r\n\n\tif(!statement) return;\r\n\tstatement.params = params;\r\n\tif(statement.queries) {\t\r\n\n\t\tstatement.queriesfn = statement.queries.map(function(q) {\r\n\t\t\tvar nq = q.compile(databaseid || statement.database.databaseid);\r\n\n\t\t nq.query.modifier = 'RECORDSET';\r\n\t\t\t return nq;\r\n\n\t\t});\r\n\t}\r\n\tif(statement.exists) {\r\n\n\t\tstatement.existsfn = statement.exists.map(function(ex) {\r\n\t\t\tvar nq = ex.compile(databaseid || statement.database.databaseid);\r\n\n\t\t nq.query.modifier = 'RECORDSET';\r\n\t\t\t return nq;\r\n\n\t\t});\r\n\t};\r\n}\n/*\r\n//\r\n// Select compiler part for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Select.prototype.compileFrom = function(query) {\r\n\n\tvar self = this;\r\n\tquery.sources = [];\r\n//\tvar tableid = this.from[0].tableid;\r\n//\tvar as = '';\r\n//\tif(self.from[0].as) as = this.from[0].as;\r\n\n\tquery.aliases = {};\r\n\tif(!self.from) return;\r\n\n\tself.from.forEach(function(tq){\r\n\n\t\tvar alias = tq.as || tq.tableid;\r\n\n\t\tif(tq instanceof yy.Table) {\r\n\n\t\t\tquery.aliases[alias] = {tableid: tq.tableid, databaseid: tq.databaseid || query.database.databaseid, type:'table'};\r\n\t\t} else if(tq instanceof yy.Select) {\r\n\t\t\tquery.aliases[alias] = {type:'subquery'};\r\n\t\t} else if(tq instanceof yy.Search) {\r\n\t\t\tquery.aliases[alias] = {type:'subsearch'};\r\n\t\t} else if(tq instanceof yy.ParamValue) {\r\n\t\t\tquery.aliases[alias] = {type:'paramvalue'};\r\n\t\t} else if(tq instanceof yy.FuncValue) {\r\n\t\t\tquery.aliases[alias] = {type:'funcvalue'};\r\n\t\t} else if(tq instanceof yy.VarValue) {\r\n\t\t\tquery.aliases[alias] = {type:'varvalue'};\r\n\t\t} else if(tq instanceof yy.FromData) {\r\n\t\t\tquery.aliases[alias] = {type:'fromdata'};\r\n\t\t} else if(tq instanceof yy.Json) {\r\n\t\t\tquery.aliases[alias] = {type:'json'};\r\n\t\t} else if(tq.inserted) {\r\n\t\t\tquery.aliases[alias] = {type:'inserted'};\r\n\t\t} else {\r\n\t\t\tthrow new Error('Wrong table at FROM');\r\n\t\t}\r\n\n\t\tvar source = {\r\n\t\t\talias: alias,\r\n\t\t\tdatabaseid: tq.databaseid || query.database.databaseid,\r\n\t\t\ttableid: tq.tableid,\r\n\t\t\tjoinmode: 'INNER',\r\n\t\t\tonmiddlefn: returnTrue,\t\t\t\r\n\t\t\tsrcwherefns: '',\t// for optimization\r\n\t\t\tsrcwherefn: returnTrue,\r\n\n\t\t};\r\n\n\t    if(tq instanceof yy.Table) {\r\n\t\t// Get columns from table\r\n\t\t\tsource.columns = alasql.databases[source.databaseid].tables[source.tableid].columns;\r\n\n\t\tif(alasql.options.autocommit && alasql.databases[source.databaseid].engineid &&\r\n\t\t   !alasql.databases[source.databaseid].tables[source.tableid].view\r\n\t\t  ) {\r\n\n// TODO -- make view for external engine\r\n\t\t    source.datafn = function(query,params,cb,idx, alasql) {\r\n\t\t\t\t\treturn alasql.engines[alasql.databases[source.databaseid].engineid].fromTable(\r\n\t\t\t\t\t\tsource.databaseid, source.tableid,cb,idx,query);\r\n\t\t\t\t}\t\t\t\t\r\n\t    } else if(alasql.databases[source.databaseid].tables[source.tableid].view){\r\n\t\t    source.datafn = function(query,params,cb,idx, alasql) {\r\n\t\t\tvar res = alasql.databases[source.databaseid].tables[source.tableid].select(params);\r\n\t\t\tif(cb) res = cb(res,idx,query);\r\n\t\t\treturn res;\r\n\t\t    }\r\n\t\t\t} else {\r\n\n\t\t\t\tsource.datafn = function(query,params,cb,idx, alasql) {\r\n/*\r\n\n*/\r\n\t\t\t\t\tvar res = alasql.databases[source.databaseid].tables[source.tableid].data;\r\n\n\t\t\t\t\tif(cb) res = cb(res,idx,query);\r\n\n\t\t\t\t\treturn res;\r\n\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} else if(tq instanceof yy.Select) {\r\n\n\t\t\tsource.subquery = tq.compile(query.database.databaseid);\r\n\t\t\tif(typeof source.subquery.query.modifier == 'undefined') {\r\n\t\t\t\tsource.subquery.query.modifier = 'RECORDSET'; // Subqueries always return recordsets\r\n\t\t\t}\r\n\t\t\tsource.columns = source.subquery.query.columns;\r\n\n\t\t\tsource.datafn = function(query, params, cb, idx, alasql) {\r\n\n\t\t\t\tvar res;\r\n\t\t\t\tsource.subquery(query.params, function(data){\r\n\t\t\t\t\tres = data.data;\r\n\t\t\t\t\tif(cb) res = cb(res,idx,query);\r\n\t\t\t\t\treturn res;\r\n\n\t\t\t\t});\r\n\n\t\t\t\treturn res;\r\n\t\t\t}\t\t\t\t\t\t\r\n\t\t} else if(tq instanceof yy.Search) {\r\n\n\t\t\t source.subsearch = tq;\r\n\t\t\t source.columns = [];\r\n\n\t\t\tsource.datafn = function(query, params, cb, idx, alasql) {\r\n\n\t\t\t\tvar res;\r\n\t\t\t\tsource.subsearch.execute(query.database.databaseid,query.params,function(data){\r\n\t\t\t\t\tres = data;\r\n\t\t\t\t\tif(cb) res = cb(res,idx,query);\r\n\t\t\t\t\treturn res;\r\n\n\t\t\t\t});\r\n\n\t\t\t\treturn res;\r\n\t\t\t}\t\t\t\t\t\t\r\n\t\t} else if(tq instanceof yy.ParamValue) {\r\n\n\t\t\tvar ps = \"var res = alasql.prepareFromData(params['\"+tq.param+\"']\";\r\n\n\t\t\tif(tq.array) ps+=\",true\";\r\n\t\t\tps += \");if(cb)res=cb(res,idx,query);return res\"\r\n\t\t\tsource.datafn = new Function('query,params,cb,idx,alasql',ps);\r\n\n\t\t} else if(tq.inserted) {\r\n\t\t\tvar ps = \"var res = alasql.prepareFromData(alasql.inserted\";\r\n\t\t\tif(tq.array) ps+=\",true\";\r\n\t\t\tps += \");if(cb)res=cb(res,idx,query);return res\"\r\n\t\t\tsource.datafn = new Function('query,params,cb,idx,alasql',ps);\r\n\t\t} else if(tq instanceof yy.Json) {\r\n\t\t\tvar ps = \"var res = alasql.prepareFromData(\"+tq.toJS();\r\n\n\t\t\tif(tq.array) ps+=\",true\";\r\n\t\t\tps += \");if(cb)res=cb(res,idx,query);return res\"\r\n\t\t\tsource.datafn = new Function('query,params,cb,idx,alasql',ps);\r\n\t\t} else if(tq instanceof yy.VarValue) {\r\n\t\t\tvar ps = \"var res = alasql.prepareFromData(alasql.vars['\"+tq.variable+\"']\";\r\n\n\t\t\tif(tq.array) ps+=\",true\";\r\n\t\t\tps += \");if(cb)res=cb(res,idx,query);return res\"\r\n\t\t\tsource.datafn = new Function('query,params,cb,idx,alasql',ps);\r\n\t\t} else if(tq instanceof yy.FuncValue) {\r\n\t\t\tvar s = \"var res=alasql.from['\"+tq.funcid.toUpperCase()+\"'](\";\r\n\n\t\t\tif(tq.args && tq.args.length>0) {\r\n\t\t\t\tif(tq.args[0]) {\r\n\t\t\t\t\ts += tq.args[0].toJS('query.oldscope')+',';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts += 'null,';\r\n\t\t\t\t};\r\n\t\t\t\tif(tq.args[1]) {\r\n\t\t\t\t\ts += tq.args[1].toJS('query.oldscope')+',';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts += 'null,';\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\ts += 'null,null,'\r\n\t\t\t}\r\n\t\t\ts += 'cb,idx,query';\r\n\t\t\ts += ');/*if(cb)res=cb(res,idx,query);*/return res';\r\n\n\t\t\tsource.datafn = new Function('query, params, cb, idx, alasql',s);\r\n\n\t\t} else if(tq instanceof yy.FromData) {\r\n\t\t\t\tsource.datafn = function(query,params,cb,idx, alasql) {\r\n\t\t\t\t\tvar res = tq.data;\r\n\t\t\t\t\tif(cb) res = cb(res,idx,query);\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow new Error('Wrong table at FROM');\r\n\t\t}\r\n\n\t\tquery.sources.push(source);\r\n\n\t});\r\n\t// TODO Add joins\r\n\tquery.defaultTableid = query.sources[0].alias;\r\n\n};\r\n\nalasql.prepareFromData = function(data,array) {\r\n\n\tvar res = data;\r\n\tif(typeof data == \"string\") {\r\n\t\tres = data.split(/\\r?\\n/);\r\n\t\tif(array) {\r\n\t\t\tfor(var i=0, ilen=res.length; i<ilen;i++) {\r\n\t\t\t\tres[i] = [res[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t} else if(array) {\r\n\t\tres = [];\r\n\t\tfor(var i=0, ilen=data.length; i<ilen;i++) {\r\n\t\t\tres.push([data[i]]);\r\n\t\t}\r\n\n\t} else if(typeof data == 'object' && !(Array.isArray(data) )) {\r\n//\t} else if(typeof data == 'object' && !(typeof data.length == 'undefined')) {\r\n\t\tif(typeof Mongo != 'undefined' && typeof Mongo.Collection != 'undefined'\r\n\t\t\t&& data instanceof Mongo.Collection) {\r\n\t\t\tres = data.find().fetch();\r\n\t\t} else {\r\n\t\t\tres = [];\r\n\t\t\tfor(var key in data) {\r\n\t\t\t\tif(data.hasOwnProperty(key)) res.push([key,data[key]]);\r\n\t\t\t};\t\t\t\r\n\t\t}\r\n\n\t};\r\n\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// Select compiler part for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// SELECT Compile functions\r\n\n// Compile JOIN caluese\r\nyy.Select.prototype.compileJoins = function(query) {\r\n\n//\tdebugger;\r\n\tvar self = this;\r\n\n\tthis.joins.forEach(function(jn){\r\n\n\t\t// Test CROSS-JOIN\r\n\t\tif(jn.joinmode == \"CROSS\") {\r\n\t\t\tif(jn.using || jn.on) {\r\n\t\t\t\tthrow new Error('CROSS JOIN cannot have USING or ON clauses');\r\n\t\t\t} else {\r\n\t\t\t\tjn.joinmode == \"INNER\";\r\n\t\t\t}\r\n\t\t}\r\n\n\t\tvar source;\r\n\t\tvar tq;\r\n\n\t\tif(jn instanceof yy.Apply) {\r\n\n\t\t\tsource = {\r\n\t\t\t\talias: jn.as,\r\n\t\t\t\tapplymode: jn.applymode,\r\n\t\t\t\tonmiddlefn: returnTrue,\r\n\t\t\t\tsrcwherefns: '',\t// for optimization\r\n\t\t\t\tsrcwherefn: returnTrue,\r\n\t\t\t\tcolumns: [] // TODO check this\r\n\t\t\t};\r\n\t\t\tsource.applyselect = jn.select.compile(query.database.databaseid);\r\n\t\t\tsource.columns = source.applyselect.query.columns;\r\n\n\t\t\tsource.datafn = function(query,params,cb,idx, alasql) {\r\n\t\t\t\tvar res;\r\n\t\t\t\tif(cb) res = cb(res,idx,query);\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\n\t\t\tquery.sources.push(source);\r\n\t\t} else {\r\n\n\t\tif(jn.table) {\r\n\t\t\ttq = jn.table;\r\n\t\t\tsource = {\r\n\t\t\t\talias: jn.as||tq.tableid,\r\n\t\t\t\tdatabaseid: tq.databaseid || query.database.databaseid,\r\n\t\t\t\ttableid: tq.tableid,\r\n\t\t\t\tjoinmode: jn.joinmode,\r\n\t\t\t\tonmiddlefn: returnTrue,\r\n\t\t\t\tsrcwherefns: '',\t// for optimization\r\n\t\t\t\tsrcwherefn: returnTrue,\r\n\t\t\t\tcolumns: []\t\t\t\t\r\n\t\t\t};\r\n\t\t\t//\r\n\n\t\t\tif(!alasql.databases[source.databaseid].tables[source.tableid]) {\r\n\t\t\t\tthrow new Error('Table \\''+source.tableid+\r\n\t\t\t\t'\\' is not exists in database \\''+source.databaseid)+'\\'';\r\n\t\t\t};\r\n\n\t\t\tsource.columns = alasql.databases[source.databaseid].tables[source.tableid].columns;\r\n\n\t\t\t// source.data = query.database.tables[source.tableid].data;\r\n\t\t\tif(alasql.options.autocommit && alasql.databases[source.databaseid].engineid) {\r\n\n\t\t\t\tsource.datafn = function(query,params, cb, idx, alasql) {\r\n\n\t\t\t\t\treturn alasql.engines[alasql.databases[source.databaseid].engineid].fromTable(\r\n\t\t\t\t\t\tsource.databaseid, source.tableid, cb, idx,query);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t} else if(alasql.databases[source.databaseid].tables[source.tableid].view){\r\n\t\t\t\tsource.datafn = function(query,params,cb,idx, alasql) {\r\n\t\t\t\t\tvar res = alasql.databases[source.databaseid].tables[source.tableid].select(params);\r\n\t\t\t\t\tif(cb) res = cb(res,idx,query);\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsource.datafn = function(query,params,cb, idx, alasql) {\r\n\t\t\t\t\tvar res = alasql.databases[source.databaseid].tables[source.tableid].data;\r\n\t\t\t\t\tif(cb) res = cb(res,idx,query);\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\n\t\t\tquery.aliases[source.alias] = {tableid: tq.tableid, databaseid: tq.databaseid || query.database.databaseid};\r\n\n\t\t} else if(jn.select) {\r\n\t\t\tvar tq = jn.select;\r\n\t\t\tsource = {\r\n\t\t\t\talias: jn.as,\r\n\n\t\t\t\tjoinmode: jn.joinmode,\r\n\t\t\t\tonmiddlefn: returnTrue,\r\n\t\t\t\tsrcwherefns: '',\t// for optimization\r\n\t\t\t\tsrcwherefn: returnTrue,\r\n\t\t\t\tcolumns: []\r\n\t\t\t};\r\n\n\t\t\tsource.subquery = tq.compile(query.database.databaseid);\r\n\t\t\tif(typeof source.subquery.query.modifier == 'undefined') {\r\n\t\t\t\tsource.subquery.query.modifier = 'RECORDSET'; // Subqueries always return recordsets\r\n\t\t\t}\r\n\t\t\tsource.columns = source.subquery.query.columns;\r\n\n\t\t\t\tsource.datafn = function(query, params, cb, idx, alasql) {\r\n\n\t\t\t\t\treturn source.subquery(query.params, null, cb, idx).data;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t// } else {\r\n\t\t\t// \tsource.datafn = function(query, params, cb, idx, alasql) {\r\n\t\t\t// \t\treturn source.subquery(query.params, null, cb, idx);\r\n\t\t\t// \t}\t\t\t\t\r\n\t\t\t// }\r\n\t\t\tquery.aliases[source.alias] = {type:'subquery'};\r\n\t\t} else if(jn.param) {\r\n\t\t\tsource = {\r\n\t\t\t\talias: jn.as,\r\n\n\t\t\t\tjoinmode: jn.joinmode,\r\n\t\t\t\tonmiddlefn: returnTrue,\r\n\t\t\t\tsrcwherefns: '',\t// for optimization\r\n\t\t\t\tsrcwherefn: returnTrue\r\n\t\t\t};\r\n\t\t\t// source.data = ;\r\n\t\t\tvar jnparam = jn.param.param;\r\n\n\t\t\tvar ps = \"var res=alasql.prepareFromData(params['\"+jnparam+\"']\";\r\n\t\t\tif(jn.array) ps += \",true\";\r\n\t\t\tps += \");if(cb)res=cb(res, idx, query);return res\";\r\n\n\t\t\tsource.datafn = new Function('query,params,cb,idx, alasql',ps);\r\n\t\t\tquery.aliases[source.alias] = {type:'paramvalue'};\r\n\t\t} else if(jn.variable) {\r\n\t\t\tsource = {\r\n\t\t\t\talias: jn.as,\r\n\n\t\t\t\tjoinmode: jn.joinmode,\r\n\t\t\t\tonmiddlefn: returnTrue,\r\n\t\t\t\tsrcwherefns: '',\t// for optimization\r\n\t\t\t\tsrcwherefn: returnTrue\r\n\t\t\t};\r\n\t\t\t// source.data = ;\r\n\n\t\t\tvar ps = \"var res=alasql.prepareFromData(alasql.vars['\"+jn.variable+\"']\";\r\n\t\t\tif(jn.array) ps += \",true\";\r\n\t\t\tps += \");if(cb)res=cb(res, idx, query);return res\";\r\n\n\t\t\tsource.datafn = new Function('query,params,cb,idx, alasql',ps);\r\n\t\t\tquery.aliases[source.alias] = {type:'varvalue'};\r\n\t\t} else if(jn.funcid) {\r\n\t\t\tsource = {\r\n\t\t\t\talias: jn.as,\r\n\n\t\t\t\tjoinmode: jn.joinmode,\r\n\t\t\t\tonmiddlefn: returnTrue,\r\n\t\t\t\tsrcwherefns: '',\t// for optimization\r\n\t\t\t\tsrcwherefn: returnTrue\r\n\t\t\t};\r\n\t\t\t// source.data = ;\r\n\n\t\t\tvar s = \"var res=alasql.from['\"+js.funcid.toUpperCase()+\"'](\";\r\n\n\t\t\tif(jn.args && jn.args.length>0) {\r\n\t\t\t\tif(jn.args[0]) {\r\n\t\t\t\t\ts += jn.args[0].toJS('query.oldscope')+',';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts += 'null,';\r\n\t\t\t\t};\r\n\t\t\t\tif(jn.args[1]) {\r\n\t\t\t\t\ts += jn.args[1].toJS('query.oldscope')+',';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts += 'null,';\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\ts += 'null,null,'\r\n\t\t\t}\r\n\t\t\ts += 'cb,idx,query';\r\n\t\t\ts += ');/*if(cb)res=cb(res,idx,query);*/return res';\r\n\n\t\t\tsource.datafn = new Function('query, params, cb, idx, alasql',s);\r\n\n\t\t\tquery.aliases[source.alias] = {type:'funcvalue'};\r\n\t\t}\r\n\n\t\tvar alias = source.alias;\r\n\n\t\t// Test NATURAL-JOIN\r\n\t\tif(jn.natural) {\r\n\t\t\tif(jn.using || jn.on) {\r\n\t\t\t\tthrow new Error('NATURAL JOIN cannot have USING or ON clauses');\r\n\t\t\t} else {\r\n\n\t\t\t\tif(query.sources.length > 0) {\r\n\t\t\t\t\tvar prevSource = query.sources[query.sources.length-1];\r\n\t\t\t\t\tvar prevTable = alasql.databases[prevSource.databaseid].tables[prevSource.tableid];\r\n\t\t\t\t\tvar table = alasql.databases[source.databaseid].tables[source.tableid];\r\n\n\t\t\t\t\tif(prevTable && table) {\r\n\t\t\t\t\t\tvar c1 = prevTable.columns.map(function(col){return col.columnid});\r\n\t\t\t\t\t\tvar c2 = table.columns.map(function(col){return col.columnid});\r\n\t\t\t\t\t\tjn.using = arrayIntersect(c1,c2).map(function(colid){return {columnid:colid}});\r\n\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('In this version of Alasql NATURAL JOIN '+\r\n\t\t\t\t\t\t\t'works for tables with predefined columns only');\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\n\t\tif(jn.using) {\r\n\t\t\tvar prevSource = query.sources[query.sources.length-1];\r\n\n\t\t\tsource.onleftfns = jn.using.map(function(col){\r\n\n\t\t\t\treturn \"p['\"+(prevSource.alias||prevSource.tableid)+\"']['\"+col.columnid+\"']\";\r\n\t\t\t}).join('+\"`\"+');\r\n\n\t\t\tsource.onleftfn = new Function('p,params,alasql','var y;return '+source.onleftfns);\r\n\n\t\t\tsource.onrightfns = jn.using.map(function(col){\r\n\t\t\t\treturn \"p['\"+(source.alias||source.tableid)+\"']['\"+col.columnid+\"']\";\r\n\t\t\t}).join('+\"`\"+');\r\n\t\t\tsource.onrightfn = new Function('p,params,alasql','var y;return '+source.onrightfns);\r\n\t\t\tsource.optimization = 'ix';\r\n\n\t\t} else if(jn.on) {\r\n\n\t\t\tif(jn.on instanceof yy.Op && jn.on.op == '=' && !jn.on.allsome) {\r\n\n\t\t\t\tsource.optimization = 'ix';\r\n\n\t\t\t\tvar lefts = '';\r\n\t\t\t\tvar rights = '';\r\n\t\t\t\tvar middles = '';\r\n\t\t\t\tvar middlef = false;\r\n\t\t\t\t// Test right and left sides\r\n\t\t\t\tvar ls = jn.on.left.toJS('p',query.defaultTableid,query.defcols);\r\n\t\t\t\tvar rs = jn.on.right.toJS('p',query.defaultTableid,query.defcols);\r\n\n\t\t\t\tif((ls.indexOf(\"p['\"+alias+\"']\")>-1) && !(rs.indexOf(\"p['\"+alias+\"']\")>-1)){\r\n\t\t\t\t\tif((ls.match(/p\\[\\'.*?\\'\\]/g)||[]).every(function(s){ \r\n\t\t\t\t\t\treturn s == \"p['\"+alias+\"']\"})) { rights = ls; } \r\n\t\t\t\t\t\telse { middlef = true };\r\n\n\t\t\t\t} else \tif(!(ls.indexOf(\"p['\"+alias+\"']\")>-1) && (rs.indexOf(\"p['\"+alias+\"']\")>-1)){\r\n\t\t\t\t\tif((rs.match(/p\\[\\'.*?\\'\\]/g)||[]).every(function(s){ \r\n\t\t\t\t\t\treturn s == \"p['\"+alias+\"']\"})) { lefts = ls; } \r\n\t\t\t\t\t\telse { middlef = true };\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmiddlef = true;\r\n\t\t\t\t}\r\n\n\t\t\t\tif((rs.indexOf(\"p['\"+alias+\"']\")>-1) && !(ls.indexOf(\"p['\"+alias+\"']\")>-1)){\r\n\t\t\t\t\tif((rs.match(/p\\[\\'.*?\\'\\]/g)||[]).every(function(s){ \r\n\t\t\t\t\t\treturn s == \"p['\"+alias+\"']\"})) { rights = rs; } \r\n\t\t\t\t\t\telse { middlef = true };\r\n\t\t\t\t} else if(!(rs.indexOf(\"p['\"+alias+\"']\")>-1) && (ls.indexOf(\"p['\"+alias+\"']\")>-1)){\r\n\t\t\t\t\tif((ls.match(/p\\[\\'.*?\\'\\]/g)||[]).every(function(s){ \r\n\t\t\t\t\t\treturn s == \"p['\"+alias+\"']\"})) { lefts = rs; } \r\n\t\t\t\t\t\telse { middlef = true };\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmiddlef = true;\r\n\t\t\t\t}\r\n\n\t\t\t\tif(middlef) {\r\n\n\t\t\t\t\trights = '';\r\n\t\t\t\t\tlefts = '';\r\n\t\t\t\t\tmiddles = jn.on.toJS('p',query.defaultTableid,query.defcols);\r\n\t\t\t\t\tsource.optimization = 'no';\r\n\t\t\t\t\t// What to here?\r\n\t\t\t\t} \r\n\n\t\t\t\tsource.onleftfns = lefts;\r\n\t\t\t\tsource.onrightfns = rights;\r\n\t\t\t\tsource.onmiddlefns = middles || 'true';\r\n\n\t\t\t\tsource.onleftfn = new Function('p,params,alasql', 'var y;return '+source.onleftfns);\r\n\t\t\t\tsource.onrightfn = new Function('p,params,alasql', 'var y;return '+source.onrightfns);\r\n\t\t\t\tsource.onmiddlefn = new Function('p,params,alasql', 'var y;return '+source.onmiddlefns);\r\n\n\t\t\t} else {\r\n\n\t\t\t\tsource.optimization = 'no';\r\n\n\t\t\t\tsource.onmiddlefns = jn.on.toJS('p',query.defaultTableid,query.defcols);\r\n\t\t\t\tsource.onmiddlefn = new Function('p,params,alasql','var y;return '+jn.on.toJS('p',query.defaultTableid,query.defcols));\r\n\t\t\t};\r\n\n\t\t\t// Optimization function\r\n\t\t};\r\n\n\t\t// TODO SubQueries\r\n\n\t\tquery.sources.push(source);\r\n\t\t};\r\n\t});\r\n\n}\r\n\nyy.Select.prototype.compileWhere = function(query) {\n\tif(this.where) {\n\t\tif(typeof this.where == \"function\") {\n\t\t\treturn this.where;\n\t\t} else {\n\t\t\tvar s = this.where.toJS('p',query.defaultTableid,query.defcols);\n\t\t\tquery.wherefns = s;\n\n\t\t\treturn new Function('p,params,alasql','var y;return '+s);\n\t\t}\n\t} else return function(){return true};\n};\n\nyy.Select.prototype.compileWhereJoins = function(query) {\n\treturn;\n\n\t// TODO Fix Where optimization\n\n\toptimizeWhereJoin(query, this.where.expression);\n\n\t//for sources compile wherefs\n\tquery.sources.forEach(function(source) {\n\t\tif(source.srcwherefns) {\n\t\t\tsource.srcwherefn = new Function('p,params,alasql','var y;return '+source.srcwherefns);\n\t\t};\n\t\tif(source.wxleftfns) {\n\t\t\tsource.wxleftfn = new Function('p,params,alasql','var y;return '+source.wxleftfns);\n\t\t};\n\t\tif(source.wxrightfns) {\n\t\t\tsource.wxrightfn = new Function('p,params,alasql','var y;return '+source.wxrightfns);\n\t\t};\n\n\t});\n};\n\nfunction optimizeWhereJoin (query, ast) {\n\tif(!ast) return false;\n\tif(!(ast instanceof yy.Op)) return;\n\tif(ast.op != '=' && ast.op != 'AND') return;\n\tif(ast.allsome) return;\n\n\tvar s = ast.toJS('p',query.defaultTableid,query.defcols);\n\tvar fsrc = [];\n\tquery.sources.forEach(function(source,idx) {\n\t\t// Optimization allowed only for tables only\n\t\tif(source.tableid) {\n\t\t\t// This is a good place to remove all unnecessary optimizations\n\t\t\tif(s.indexOf('p[\\''+source.alias+'\\']')>-1) fsrc.push(source);\n\t\t};\n\t});\n\n//\tif(fsrc.length < query.sources.length) return;\n\n\tif(fsrc.length == 0) {\n\n\t\treturn;\n\t} else if (fsrc.length == 1) {\n\n\t\tif(!(s.match(/p\\[\\'.*?\\'\\]/g)||[])\n\t\t\t.every(function(s){ \n\t\t\t\t\t\treturn s == \"p['\"+fsrc[0].alias+\"']\"})) { \n\t\t\treturn; \n\t\t\t// This is means, that we have column from parent query\n\t\t\t// So we return without optimization\n\t\t} \n\n\t\tvar src = fsrc[0]; // optmiization source\n\t\tsrc.srcwherefns = src.srcwherefns ? src.srcwherefns+'&&'+s : s;\n\n\t\tif((ast instanceof yy.Op) && (ast.op == '=' && !ast.allsome)) {\n\t\t\tif(ast.left instanceof yy.Column) {\n\t\t\t\tvar ls = ast.left.toJS('p',query.defaultTableid,query.defcols);\n\t\t\t\tvar rs = ast.right.toJS('p',query.defaultTableid,query.defcols);\n\t\t\t\tif(rs.indexOf('p[\\''+fsrc[0].alias+'\\']') == -1) {\n\t\t\t\t\tfsrc[0].wxleftfns = ls; \n\t\t\t\t\tfsrc[0].wxrightfns = rs; \n\t\t\t\t} \n\t\t\t} if(ast.right instanceof yy.Column) {\n\t\t\t\tvar ls = ast.left.toJS('p',query.defaultTableid,query.defcols);\n\t\t\t\tvar rs = ast.right.toJS('p',query.defaultTableid,query.defcols);\n\t\t\t\tif(ls.indexOf('p[\\''+fsrc[0].alias+'\\']') == -1) {\n\t\t\t\t\tfsrc[0].wxleftfns = rs; \n\t\t\t\t\tfsrc[0].wxrightfns = ls; \n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t\tast.reduced = true;  // To do not duplicate wherefn and srcwherefn\n\t\treturn;\n\t} else {\n\t\tif(ast.op = 'AND') {\n\t\t\toptimizeWhereJoin(query,ast.left);\n\t\t\toptimizeWhereJoin(query,ast.right);\n\t\t} \n\t}\n\n};\n\n/*\r\n//\r\n// Select compiler part for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n/**\r\n Compile group of statements\r\n */\r\nyy.Select.prototype.compileGroup = function(query) {\r\n\n\tif(query.sources.length > 0) {\r\n\t\tvar tableid = query.sources[0].alias;\r\n\t} else {\r\n\t\t// If SELECT contains group aggregators without source tables\r\n\t\tvar tableid = '';\r\n\t}\r\n\tvar defcols = query.defcols;\r\n\n\tvar allgroup = [[]];\r\n\tif(this.group) {\r\n\t\tallgroup = decartes(this.group,query);\r\n\t}\r\n\n\t// Prepare groups\r\n\t//var allgroup = [['a'], ['a','b'], ['a', 'b', 'c']];\r\n\n\t// Union all arrays to get a maximum\r\n\tvar allgroups = [];\r\n\tallgroup.forEach(function(a){\r\n\t\tallgroups = arrayUnion(allgroups, a);\r\n\t});\r\n\n\tquery.allgroups = allgroups;\r\n\n\tquery.ingroup = [];\r\n\n\t// Create negative array\r\n\n\tvar s = '';\r\n//\ts+= query.selectfns;\r\n\tallgroup.forEach(function(agroup) {\r\n\n\t\t// Start of group function\r\n\t\ts += 'var g=this.xgroups[';\r\n\n\t//\tvar gcols = this.group.map(function(col){return col.columnid}); // Group fields with r\r\n\t\t// Array with group columns from record\r\n\t\tvar rg = agroup.map(function(col2){\r\n\t\t\tvar columnid = col2.split('\\t')[0];\r\n\t\t\tvar coljs = col2.split('\\t')[1];\r\n\t\t\t// Check, if aggregator exists but GROUP BY is not exists\r\n\t\t\tif(columnid === ''){\r\n\t\t\t\treturn '1'; // Create fictive groupping column for fictive GROUP BY\r\n\t\t\t}\r\n\n\t\t\tquery.ingroup.push(columnid);\r\n\n\t\t\treturn coljs;\r\n\t\t});\r\n\n\t\tif(rg.length === 0){\r\n\t\t\trg = [\"''\"];\r\n\t\t}\r\n\n\t\ts += rg.join('+\"`\"+');\r\n\t\ts += '];if(!g) {this.groups.push((g=this.xgroups[';\r\n\t\ts += rg.join('+\"`\"+');\r\n\t\ts += '] = {';\r\n\n\t\ts += agroup.map(function(col2){\r\n\t\t\tvar columnid = col2.split('\\t')[0];\r\n\t\t\tvar coljs = col2.split('\\t')[1];\r\n\n\t\t\tif(columnid === ''){\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\treturn \"'\"+columnid+\"':\"+coljs+\",\";\r\n\t\t}).join('');\r\n\n\t\tvar neggroup = arrayDiff(allgroups,agroup);\r\n\n\t\ts += neggroup.map(function(col2){\t\t\t\r\n\t\t\tvar columnid = col2.split('\\t')[0];\r\n\t\t//\tvar coljs = col2.split('\\t')[1]\r\n\t\t\treturn \"'\"+columnid+\"':null,\";\r\n\t\t}).join('');\r\n\n\t\tvar aft = '', aft2='';\r\n\n\t\tif(typeof query.groupStar !== 'undefined') {\r\n\t\t\taft2 += 'for(var f in p[\\''+query.groupStar+'\\']) {g[f]=p[\\''+query.groupStar+'\\'][f];};';\r\n\t\t};\r\n\n\t\t/*\r\n\t\t*/\r\n\n\t\ts += query.selectGroup.map(function(col){\r\n\n\t\t\tvar colexp = col.expression.toJS(\"p\",tableid,defcols);\r\n\t\t\tvar colas = col.nick;\r\n\t\t\t// if(typeof colas == 'undefined') {\r\n\t\t\t// \tif(col instanceof yy.Column) colas = col.columnid;\r\n\t\t\t// \telse colas = col.toString();\r\n\t\t\t// };\r\n\t\t\tif (col instanceof yy.AggrValue) { \r\n\t\t\t\tif(col.distinct) {\r\n\t\t\t\t\taft += ',g[\\'$$_VALUES_'+colas+'\\']={},g[\\'$$_VALUES_'+colas+'\\']['+colexp+']=true';\r\n\t\t\t\t}\r\n\t\t\t\tif (col.aggregatorid === 'SUM') { \r\n\t\t\t\t\treturn \"'\"+colas+'\\':('+colexp+')||0,'; \r\n\t\t\t\t} else if (\r\n\t\t\t\t\t\t\tcol.aggregatorid === 'MIN'\r\n\t\t\t\t\t\t\t|| col.aggregatorid === 'MAX'\r\n\t\t\t\t\t\t\t|| col.aggregatorid === 'FIRST'\r\n\t\t\t\t\t\t\t|| col.aggregatorid === 'LAST'\r\n\t\t//\t\t\t\t\t|| col.aggregatorid == 'AVG'\r\n\n\t\t\t\t){ \r\n\t\t\t\t\treturn \"'\"+colas+'\\':'+colexp+','; //f.field.arguments[0].toJS(); \t\r\n\n\t\t\t\t} else if(col.aggregatorid === 'ARRAY') {\r\n\t\t\t\t \treturn \"'\"+colas+'\\':['+colexp+'],';\r\n\n\t\t\t\t} else if(col.aggregatorid === 'COUNT') { \r\n\t\t\t\t\tif(col.expression.columnid === '*') {\r\n\t\t\t\t\t\treturn \"'\"+colas+'\\':1,';\r\n\t\t\t\t\t} else {\r\n\n\t\t\t\t\t\treturn \"'\"+colas+'\\':(typeof '+colexp+' != \"undefined\")?1:0,'; \r\n\t\t\t\t\t}\r\n\n\t\t\t\t} else if(col.aggregatorid === 'AVG') { \r\n\t\t\t\t\tquery.removeKeys.push('_SUM_'+colas);\r\n\t\t\t\t\tquery.removeKeys.push('_COUNT_'+colas);\r\n\n\t\t\t\t\treturn\t''\r\n\t\t\t\t\t\t\t+ \"'\" + colas + '\\':' + colexp + ',\\'_SUM_'\r\n\t\t\t\t\t\t\t+ colas+'\\':(' + colexp + ')||0,\\'_COUNT_'\r\n\t\t\t\t\t\t\t+ colas + '\\':(typeof '\r\n\t\t\t\t\t\t\t+ colexp+' != \"undefined\")?1:0,'; \r\n\t\t\t\t} else if(col.aggregatorid === 'AGGR') {\r\n\t\t\t\t\taft += ',g[\\''+colas+'\\']='+col.expression.toJS('g',-1); \r\n\t\t\t\t\treturn '';\r\n\t\t\t\t} else if(col.aggregatorid === 'REDUCE') {\r\n\n\t\t\t\t\tquery.aggrKeys.push(col);\r\n\n\t\t\t\t\treturn '\\''+colas+'\\':alasql.aggr[\\''+col.funcid+'\\']('+colexp+',undefined,1),'; \r\n\t\t\t\t}\r\n\t\t\t\treturn '';\r\n\t\t\t} \r\n\n\t\t\treturn '';\r\n\n\t\t}).join('');\r\n\n\t\ts += '}'+aft+',g));'+aft2+'} else {';\r\n\n/*\r\n\t// var neggroup = arrayDiff(allgroups,agroup);\r\n\n\t// s += neggroup.map(function(columnid){\r\n\t// \treturn \"g['\"+columnid+\"']=null;\";\r\n\t// }).join('');\r\n*/\r\n\n\t\ts += query.selectGroup.map(function(col){\r\n\t\t\tvar colas = col.nick;\r\n\n\t\t\tvar colexp = col.expression.toJS(\"p\",tableid,defcols);\r\n\n\t\t\tif (col instanceof yy.AggrValue) { \r\n\t\t\t\tvar pre = '', post = '';\r\n\t\t\t\tif(col.distinct) {\r\n\t\t\t \t\tvar pre = 'if(typeof '+colexp+'!=\"undefined\" && (!g[\\'$$_VALUES_'+colas+'\\']['+colexp+'])) \\\r\n\t\t\t\t \t\t {';\r\n\t\t\t\t \tvar post = 'g[\\'$$_VALUES_'+colas+'\\']['+colexp+']=true;}';\r\n\t\t\t\t} \r\n\t\t\t\tif (col.aggregatorid === 'SUM') { \r\n\t\t\t\t\treturn pre+'g[\\''+colas+'\\']+=('+colexp+'||0);'+post; //f.field.arguments[0].toJS(); \r\n\t\t\t\t} else if(col.aggregatorid === 'COUNT') {\r\n\n\t\t\t\t\tif(col.expression.columnid === '*'){\r\n\t\t\t\t\t\treturn pre+'g[\\''+colas+'\\']++;'+post; \r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn pre+'if(typeof '+colexp+'!=\"undefined\") g[\\''+colas+'\\']++;'+post;\r\n\t\t\t\t\t}\r\n\n\t\t\t\t} else if(col.aggregatorid === 'ARRAY') { \r\n\t\t\t\t\treturn pre+'g[\\''+colas+'\\'].push('+colexp+');'+post; \r\n\n\t\t\t\t} else if(col.aggregatorid === 'MIN') { \r\n\t\t\t\t\treturn pre+'g[\\''+colas+'\\']=Math.min(g[\\''+colas+'\\'],'+colexp+');'+post; \r\n\n\t\t\t\t} else if(col.aggregatorid === 'MAX') { \r\n\t\t\t\t\treturn pre+'g[\\''+colas+'\\']=Math.max(g[\\''+colas+'\\'],'+colexp+');'+post; \r\n\n\t\t\t\t} else if(col.aggregatorid === 'FIRST') { \r\n\t\t\t\t\treturn ''; \r\n\n\t\t\t\t} else if(col.aggregatorid === 'LAST') { \r\n\t\t\t\t\treturn pre+'g[\\''+colas+'\\']='+colexp+';'+post; \r\n\n\t\t\t\t} else if(col.aggregatorid === 'AVG') { \r\n\t\t\t\t\t\treturn \t''\r\n\t\t\t\t\t\t\t\t+ pre+'g[\\'_SUM_'+colas+'\\']+=(y='+colexp+')||0;'\r\n\t\t\t\t\t\t\t\t+ 'g[\\'_COUNT_'+colas+'\\']+=(typeof y!=\"undefined\")?1:0;'\r\n\t\t\t\t\t\t\t\t+ 'g[\\''+colas+'\\']=g[\\'_SUM_'+colas+'\\']/g[\\'_COUNT_'+colas+'\\'];'\r\n\t\t\t\t\t\t\t\t+ post; \r\n\n\t//\t\t\telse if(col.aggregatorid == 'AVG') { srg.push(colas+':0'); }\r\n\t\t\t\t} else if(col.aggregatorid === 'AGGR') {\r\n\t\t\t\t\treturn \t''\r\n\t\t\t\t\t\t\t+ pre+'g[\\''+colas+'\\']='\r\n\t\t\t\t\t     \t+ col.expression.toJS('g',-1)+';'\r\n\t\t\t\t\t     \t+ post; \r\n\n\t\t\t\t} else if(col.aggregatorid === 'REDUCE') {\r\n\t\t\t\t\treturn \t''\r\n\t\t\t\t\t\t\t+ pre+'g[\\''+colas+'\\']=alasql.aggr.'\r\n\t\t\t\t\t\t\t+ col.funcid+'('+colexp+',g[\\''+colas+'\\'],2);'\r\n\t\t\t\t\t\t\t+ post; \r\n\t\t\t\t}\r\n\n\t\t\t\treturn '';\r\n\t\t\t} \r\n\n\t\t\treturn '';\r\n\t\t}).join('');\r\n\n\t\ts += '}';\r\n\n\t});\r\n\n\treturn new Function('p,params,alasql','var y;'+s);\r\n\n}\r\n\n/*\r\n//\r\n// Select compiler part for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// yy.Select.prototype.compileSources = function(query) {\r\n\n// };\r\n\nfunction compileSelectStar (query, alias, joinstar) {\r\n\n\tvar sp = '', ss=[];\r\n//\tif(!alias) {\r\n\n//\t} else \t{\r\n\n\t\t// TODO move this out of this function \r\n\t\tquery.ixsources = {};\r\n\t\tquery.sources.forEach(function(source){\r\n\t\t\tquery.ixsources[source.alias] = source;\r\n\t\t});\r\n\n\t\t// Fixed\r\n\t\tvar columns;\r\n\t\tif(query.ixsources[alias]) {\r\n\t\t\tvar columns = query.ixsources[alias].columns;\r\n\t\t}\r\n\n\t\t// Check if this is a Table or other\r\n\t\tif(joinstar && alasql.options.joinstar == 'json') {\t\r\n\t\t\tsp += 'r[\\''+alias+'\\']={};';\r\n\t\t};\r\n\n\t\tif(columns && columns.length > 0) {\r\n\t\t\tcolumns.forEach(function(tcol){\r\n\n\t\t\tif(joinstar && alasql.options.joinstar == 'underscore') {\r\n\t\t\t\tss.push('\\''+alias+'_'+tcol.columnid+'\\':p[\\''+alias+'\\'][\\''+tcol.columnid+'\\']');\r\n\t\t\t} else if(joinstar && alasql.options.joinstar == 'json') {\r\n\n\t\t\t\tsp += 'r[\\''+alias+'\\'][\\''+tcol.columnid+'\\']=p[\\''+alias+'\\'][\\''+tcol.columnid+'\\'];';\r\n\t\t\t} else { \r\n\t\t\t\tss.push('\\''+tcol.columnid+'\\':p[\\''+alias+'\\'][\\''+tcol.columnid+'\\']');\r\n\t\t\t}\r\n\n\t\t\t\tquery.selectColumns[escapeq(tcol.columnid)] = true;\r\n\n\t\t\t\tvar coldef = {\r\n\t\t\t\t\tcolumnid:tcol.columnid, \r\n\t\t\t\t\tdbtypeid:tcol.dbtypeid, \r\n\t\t\t\t\tdbsize:tcol.dbsize, \r\n\t\t\t\t\tdbprecision:tcol.dbprecision,\r\n\t\t\t\t\tdbenum: tcol.dbenum\r\n\t\t\t\t};\r\n\t\t\t\tquery.columns.push(coldef);\r\n\t\t\t\tquery.xcolumns[coldef.columnid]=coldef;\r\n\n\t\t\t});\r\n\n\t\t} else {\r\n\n\t\t\t// if column not exists, then copy all\r\n\t\t\tsp += 'var w=p[\"'+alias+'\"];for(var k in w){r[k]=w[k]};';\r\n\n\t\t\tquery.dirtyColumns = true;\r\n\t\t}\r\n//\t}\r\n\n\treturn {s:ss.join(','),sp:sp};\r\n}\r\n\nyy.Select.prototype.compileSelect1 = function(query, params) {\r\n\n\tvar self = this;\r\n\tquery.columns = [];\r\n\tquery.xcolumns = {};\r\n\tquery.selectColumns = {};\r\n\tquery.dirtyColumns = false;\r\n\tvar s = 'var r={';\r\n\tvar sp = '';\r\n\tvar ss = [];\r\n\n\tthis.columns.forEach(function(col){\r\n\n\t\tif(col instanceof yy.Column) {\r\n\t\t\tif(col.columnid === '*') {\r\n\t\t\t\tif(col.func) {\r\n\t\t\t\t\tsp += 'r=params[\\''+col.param+'\\'](p[\\''+query.sources[0].alias+'\\'],p,params,alasql);';\r\n\t\t\t\t} else if(col.tableid) {\r\n\t\t\t\t\t//Copy all\r\n\t\t\t\t\tvar ret = compileSelectStar(query, col.tableid, false);\r\n\t\t\t\t\tif(ret.s){\r\n\t\t\t\t\t\tss = ss.concat(ret.s);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsp += ret.sp;\r\n\n\t\t\t\t} else {\r\n\n\t\t\t\t\tfor(var alias in query.aliases) {\r\n\t\t\t\t\t\tvar ret = compileSelectStar(query, alias, true); //query.aliases[alias].tableid);\r\n\t\t\t\t\t\tif(ret.s) {\r\n\t\t\t\t\t\t\tss = ss.concat(ret.s);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsp += ret.sp;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// TODO Remove these lines\r\n\t\t\t\t\t// In case of no information \r\n\t\t\t\t\t// sp += 'for(var k1 in p){var w=p[k1];'+\r\n\t\t\t\t\t// \t\t\t'for(k2 in w) {r[k2]=w[k2]}}'\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If field, otherwise - expression\r\n\t\t\t\tvar tbid = col.tableid;\r\n\n\t\t\t\tvar dbid = col.databaseid || query.sources[0].databaseid || query.database.databaseid;\r\n\t\t\t\tif(!tbid) tbid = query.defcols[col.columnid];\r\n\t\t\t\tif(!tbid) tbid = query.defaultTableid;\r\n\t\t\t\tif(col.columnid !== '_') {\r\n\t\t\t\t\tif(false && tbid && !query.defcols['.'][col.tableid] && !query.defcols[col.columnid]) {\r\n\t\t\t\t\t\tss.push('\\''+escapeq(col.as || col.columnid)+'\\':p[\\''+(query.defaultTableid)+'\\'][\\''+(col.tableid)+'\\'][\\''+col.columnid+'\\']');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// workaround for multisheet xlsx export with custom COLUMNS\r\n\t\t\t\t\t\tvar isMultisheetParam = params && params.length > 1 &&\r\n\t\t\t\t\t\t                        Array.isArray(params[0]) && params[0].length >= 1 && \r\n\t\t\t\t\t\t                        params[0][0].hasOwnProperty('sheetid');\r\n\t\t\t\t\t\tif (isMultisheetParam) {\r\n\t\t\t\t\t\t\tsp = 'var r={};var w=p[\\\"' + tbid + '\\\"];'\r\n\t\t\t\t\t\t\t   + 'var cols=[' + self.columns.map(function(col) {\r\n\t\t\t\t\t\t\t\t    return \"'\" + col.columnid + \"'\";\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.join(',') + '];var colas=['+\r\n\t\t\t\t\t\t\t\tself.columns.map(function(col) {\r\n\t\t\t\t\t\t\t\t    return \"'\" + (col.as || col.columnid) + \"'\";\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.join(',')\r\n\n\t\t\t\t\t\t\t+ '];' +\r\n\t\t\t\t\t\t\t\"for (var i=0;i<Object.keys(p['\" + tbid + \"']).length;i++)\" +\r\n\t\t\t\t\t\t\t\" for(var k=0;k<cols.length;k++){if (!r.hasOwnProperty(i)) r[i]={}; r[i][colas[k]]=w[i][cols[k]];}\";\r\n\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tss.push('\\''+escapeq(col.as || col.columnid)+'\\':p[\\''+(tbid)+'\\'][\\''+col.columnid+'\\']');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tss.push('\\''+escapeq(col.as || col.columnid)+'\\':p[\\''+(tbid)+'\\']');\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tquery.selectColumns[escapeq(col.as || col.columnid)] = true;\r\n\n\t\t\t\tif(query.aliases[tbid] && query.aliases[tbid].type === 'table') {\r\n\n\t\t\t\t\tif(!alasql.databases[dbid].tables[query.aliases[tbid].tableid]) {\r\n\n\t\t\t\t\t\tthrow new Error('Table \\''+(tbid)+'\\' does not exists in database');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar columns = alasql.databases[dbid].tables[query.aliases[tbid].tableid].columns;\t\t\t\t\t\r\n\t\t\t\t\tvar xcolumns = alasql.databases[dbid].tables[query.aliases[tbid].tableid].xcolumns;\r\n\n\t\t\t\t\tif(xcolumns && columns.length > 0) {\r\n\n\t\t\t\t\t\tvar tcol = xcolumns[col.columnid];\r\n\n\t\t\t\t\t\tif(undefined === tcol){\r\n\t\t\t\t\t\t\tthrow new Error(\"Column does not exists: \"+col.columnid);;\r\n\t\t\t\t\t\t}\r\n\n\t\t\t\t\t\tvar coldef = {\r\n\t\t\t\t\t\t\tcolumnid:col.as || col.columnid, \r\n\t\t\t\t\t\t\tdbtypeid:tcol.dbtypeid, \r\n\t\t\t\t\t\t\tdbsize:tcol.dbsize, \r\n\t\t\t\t\t\t\tdbpecision:tcol.dbprecision,\r\n\t\t\t\t\t\t\tdbenum: tcol.dbenum,\r\n\t\t\t\t\t\t};\r\n\n\t\t\t\t\t\tquery.columns.push(coldef);\r\n\t\t\t\t\t\tquery.xcolumns[coldef.columnid]=coldef;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar coldef = {\r\n\t\t\t\t\t\t\tcolumnid:col.as || col.columnid, \r\n\n\t\t\t\t\t\t};\r\n\n\t\t\t\t\t\tquery.columns.push(coldef);\r\n\t\t\t\t\t\tquery.xcolumns[coldef.columnid]=coldef;\r\n\n\t\t\t\t\t\tquery.dirtyColumns = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\tvar coldef = {\r\n\t\t\t\t\t\t\tcolumnid:col.as || col.columnid, \r\n\n\t\t\t\t\t\t};\r\n\n\t\t\t\t\t\tquery.columns.push(coldef);\r\n\t\t\t\t\t\tquery.xcolumns[coldef.columnid]=coldef;\r\n\t\t\t\t\t// This is a subquery? \r\n\t\t\t\t\t// throw new Error('There is now such table \\''+col.tableid+'\\'');\r\n\t\t\t\t}\r\n\n\t\t\t}\r\n\t\t} else if(col instanceof yy.AggrValue) {\r\n\t\t\tif(!self.group) {\r\n\n\t\t\t\tself.group = [''];\r\n\t\t\t}\r\n\t\t\tif(!col.as){\r\n\t\t\t\tcol.as = escapeq(col.toString());\r\n\t\t\t}\r\n\n\t\t\tif(\r\n\t\t\t\t\tcol.aggregatorid === 'SUM' \r\n\t\t\t\t|| \tcol.aggregatorid === 'MAX' \r\n\t\t\t\t||  col.aggregatorid === 'MIN' \r\n\t\t\t\t||\tcol.aggregatorid === 'FIRST' \r\n\t\t\t\t||\tcol.aggregatorid === 'LAST' \r\n\t\t\t\t||\tcol.aggregatorid === 'AVG' \r\n\t\t\t\t|| \tcol.aggregatorid === 'ARRAY' \r\n\t\t\t\t|| \tcol.aggregatorid === 'REDUCE'\r\n\t\t\t){\r\n\t\t\t\tss.push(\"'\"+escapeq(col.as)+\"':\"+n2u(col.expression.toJS(\"p\",query.defaultTableid,query.defcols)))\t\r\n\n\t\t\t}else if(col.aggregatorid === 'COUNT') {\r\n\t\t\t\tss.push(\"'\"+escapeq(col.as)+\"':1\");\r\n\t\t\t\t// Nothing\r\n\t\t\t}\r\n\t\t\t// todo: confirm that no default action must be implemented\r\n\n\t\t\t\t\t\tvar coldef = {\r\n\t\t\t\t\t\t\tcolumnid:col.as || col.columnid || col.toString(), \r\n\n\t\t\t\t\t\t};\r\n\n\t\t\t\t\t\tquery.columns.push(coldef);\r\n\t\t\t\t\t\tquery.xcolumns[coldef.columnid]=coldef;\r\n\n\t\t} else {\r\n\n\t\t\tss.push('\\''+escapeq(col.as || col.columnid || col.toString())+'\\':'+n2u(col.toJS(\"p\",query.defaultTableid,query.defcols)));\r\n\n\t\t\t//if(col instanceof yy.Expression) {\r\n\t\t\tquery.selectColumns[escapeq(col.as || col.columnid || col.toString())] = true;\r\n\n\t\t\t\t\t\tvar coldef = {\r\n\t\t\t\t\t\t\tcolumnid:col.as || col.columnid || col.toString(), \r\n\n\t\t\t\t\t\t};\r\n\n\t\t\t\t\t\tquery.columns.push(coldef);\r\n\t\t\t\t\t\tquery.xcolumns[coldef.columnid]=coldef;\r\n\t\t}\r\n\t});\r\n\ts += ss.join(',')+'};'+sp;\r\n\treturn s;\r\n\n}\r\nyy.Select.prototype.compileSelect2 = function(query) {\r\n\n\tvar s = query.selectfns;\r\n\tif(this.orderColumns && this.orderColumns.length>0) {\r\n\t\tthis.orderColumns.forEach(function(v,idx) {\r\n\t\t\tvar key = '$$$'+idx;\r\n\t\t\tif(v instanceof yy.Column && query.xcolumns[v.columnid]) {\r\n\t\t\t\ts += 'r[\\''+key+'\\']=r[\\''+v.columnid+'\\'];';\r\n\t\t\t} else {\r\n\t\t\t\ts += 'r[\\''+key+'\\']='+v.toJS('p',query.defaultTableid,query.defcols)+';';\r\n\t\t\t}\r\n\t\t\tquery.removeKeys.push(key);\r\n\t\t});\r\n\t}\r\n\n\treturn new Function('p,params,alasql','var y;'+s+'return r');\r\n};\r\n\nyy.Select.prototype.compileSelectGroup0 = function(query) {\r\n\tvar self = this;\r\n\tself.columns.forEach(function(col,idx){\r\n\t\tif(!(col instanceof yy.Column && col.columnid === '*')){\r\n\n\t\t\tvar colas;\r\n\t\t\t//  = col.as;\r\n\t\t\tif(col instanceof yy.Column) {\r\n\t\t\t\tcolas = escapeq(col.columnid);\r\n\t\t\t} else {\r\n\t\t\t\tcolas = escapeq(col.toString(true));\r\n\n\t\t\t}\r\n\t\t\tfor(var i=0;i<idx;i++) {\r\n\t\t\t\tif(colas === self.columns[i].nick) {\r\n\t\t\t\t\tcolas = self.columns[i].nick+':'+idx;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// }\r\n\t\t\tcol.nick = colas;\r\n\t\t\tif(\r\n\t\t\t\tcol.funcid \r\n\t\t\t\t&& (col.funcid.toUpperCase() === 'ROWNUM'|| col.funcid.toUpperCase() === 'ROW_NUMBER')) {\r\n\t\t\t\tquery.rownums.push(col.as);\r\n\t\t\t}\r\n\n\t\t\t// }\r\n\t\t} else {\r\n\t\t\tquery.groupStar = col.tableid || 'default';\r\n\t\t}\r\n\n\t});\r\n\n\tthis.columns.forEach(function(col){\r\n\t\tif(col.findAggregator){\r\n\t\t\tcol.findAggregator(query);\r\n\t\t}\r\n\t});\r\n\n\tif(this.having) {\r\n\t\tif(this.having.findAggregator){\r\n\t\t\tthis.having.findAggregator(query);\r\n\t\t}\r\n\t}\r\n\n};\r\n\nyy.Select.prototype.compileSelectGroup1 = function(query) {\r\n\tvar self = this;\r\n\tvar s = 'var r = {};';\r\n\n\tself.columns.forEach(function(col){\r\n\n\t\tif(col instanceof yy.Column && col.columnid === '*') {\r\n\n\t\t\ts += 'for(var k in g) {r[k]=g[k]};';\r\n\t\t\treturn '';\r\n\n\t\t} else {\r\n\t\t\t// var colas = col.as;\r\n\t\t\tvar colas = col.as;\r\n\t\t\tif(colas === undefined) {\r\n\t\t\t \tif(col instanceof yy.Column){\r\n\t\t\t \t\tcolas = escapeq(col.columnid);\r\n\t\t\t \t} else {\r\n\t\t\t \t\tcolas = col.nick;\r\n\t\t\t \t}\r\n\t\t\t}\r\n\t\t\tquery.groupColumns[colas]=col.nick;\r\n\n\t\t\ts += 'r[\\''+colas+'\\']=';\r\n\n \t\t\ts += n2u(col.toJS('g',''))+';';\t\t\t\t\r\n\n\t\t\tfor(var i=0;i<query.removeKeys.length;i++) {\r\n\t\t\t\t// THis part should be intellectual\r\n\t\t\t\tif(query.removeKeys[i] === colas) {\r\n\t\t\t\t\tquery.removeKeys.splice(i,1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t// return new Function('g,params,alasql',s+'return r');\r\n\treturn s;\r\n}\r\n\nyy.Select.prototype.compileSelectGroup2 = function(query) {\r\n\tvar self = this;\r\n\tvar s = query.selectgfns;\r\n\tself.columns.forEach(function(col){\r\n\n\t\tif(query.ingroup.indexOf(col.nick)>-1) {\r\n\t\t\ts += 'r[\\''+(col.as||col.nick)+'\\']=g[\\''+col.nick+'\\'];'\r\n\t\t};\r\n\t});\r\n\n\tif(this.orderColumns && this.orderColumns.length>0) {\r\n\t\tthis.orderColumns.forEach(function(v,idx) {\r\n\n\t\t\tvar key = '$$$'+idx;\r\n\n\t\t\tif(v instanceof yy.Column && query.groupColumns[v.columnid]) {\r\n\t\t\t\ts += 'r[\\''+key+'\\']=r[\\''+v.columnid+'\\'];';\r\n\t\t\t} else {\r\n\t\t\t\ts += 'r[\\''+key+'\\']='+v.toJS('g','')+';';\r\n\t\t\t}\r\n\t\t\tquery.removeKeys.push(key);\r\n\t\t});\r\n\t}\r\n\n\treturn new Function('g,params,alasql','var y;'+s+'return r');\r\n};\r\n\n// SELECY * REMOVE [COLUMNS] col-list, LIKE ''\r\nyy.Select.prototype.compileRemoveColumns = function(query) {\r\n\tvar self = this;\r\n\tif(typeof this.removecolumns !== 'undefined') {\r\n\t\tquery.removeKeys = query.removeKeys.concat(\r\n\t\t\tthis.removecolumns.filter(function (column) {\r\n\t\t\t\treturn (typeof column.like === 'undefined');\r\n\t\t\t}).map(function(column){return column.columnid}));\r\n\n\t\tquery.removeLikeKeys = this.removecolumns.filter(function (column) {\r\n\t\t\t\treturn (typeof column.like !== 'undefined');\r\n\t\t\t}).map(function(column){\r\n\n\t\t\t\treturn column.like.value;\r\n\t\t\t});\r\n\t}\r\n};\r\n\nyy.Select.prototype.compileHaving = function(query) {\n\tif(this.having) {\n\t\ts = this.having.toJS('g',-1);\n\t\tquery.havingfns = s;\n\n\t\treturn new Function('g,params,alasql','var y;return '+s);\n\t} else return function(){return true};\n};\n\nyy.Select.prototype.compileOrder = function (query) {\n\tvar self = this;\n\tself.orderColumns = [];\n\tif(this.order) {\n\n\t\tif(this.order && this.order.length == 1 && this.order[0].expression \n\t\t\t && typeof this.order[0].expression == \"function\") {\n\n\t\t\tvar func = this.order[0].expression;\n\n\t\t\treturn function(a,b){\n\t\t\t\tvar ra = func(a),rb = func(b);\n\t\t\t\tif(ra>rb) return 1;\n\t\t\t\tif(ra==rb) return 0;\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t};\n\n\t\tvar s = '';\n\t\tvar sk = '';\n\t\tthis.order.forEach(function(ord,idx){\n\n\t\t\tif(ord.expression instanceof yy.NumValue) {\n\t\t\t\tvar v = self.columns[ord.expression.value-1];\n\t\t\t} else {\n\t\t\t\tvar v = ord.expression;\n\t\t\t}\n\t\t\tself.orderColumns.push(v);\n\n\t\t\tvar key = '$$$'+idx;\n\n\t\t\t// Date conversion\n\t\t\tvar dg = ''; \n\t\t\t\t//if(alasql.options.valueof) \n\t\t\tif(ord.expression instanceof yy.Column) {\n\t\t\t\tvar columnid = ord.expression.columnid; \n\t\t\t\tif(query.xcolumns[columnid]) {\n\t\t\t\t\tvar dbtypeid = query.xcolumns[columnid].dbtypeid;\n\t\t\t\t\tif( dbtypeid == 'DATE' || dbtypeid == 'DATETIME' || dbtypeid == 'DATETIME2') dg = '.valueOf()';\n\t\t\t\t\t// TODO Add other types mapping\n\t\t\t\t} else {\n\t\t\t\t\tif(alasql.options.valueof) dg = '.valueOf()'; // TODO Check\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// COLLATE NOCASE\n\t\t\tif(ord.nocase) dg += '.toUpperCase()';\n\t\t\ts += \"if((a['\"+key+\"']||'')\"+dg+(ord.direction == 'ASC'?'>':\"<\")+\"(b['\"+key+\"']||'')\"+dg+')return 1;';\n\t\t\ts += \"if((a['\"+key+\"']||'')\"+dg+\"==(b['\"+key+\"']||'')\"+dg+'){';\n\n/*\nif(false) {\t\t\t\n\n\t\t\tif(ord.expression instanceof yy.NumValue) {\n\t\t\t\tord.expression = self.columns[ord.expression.value-1];\n\n\t\t\t\tord.expression = new yy.Column({columnid:ord.expression.nick});\n\t\t\t};\n\n\t\t\tif(ord.expression instanceof yy.Column) {\n\t\t\t\tvar columnid = ord.expression.columnid; \n\t\t\t\tif(query.xcolumns[columnid]) {\n\t\t\t\t\tvar dbtypeid = query.xcolumns[columnid].dbtypeid;\n\t\t\t\t\tif( dbtypeid == 'DATE' || dbtypeid == 'DATETIME' || dbtypeid == 'DATETIME2') dg = '.valueOf()';\n\t\t\t\t\t// TODO Add other types mapping\n\t\t\t\t} else {\n\t\t\t\t\tif(alasql.options.valueof) dg = '.valueOf()'; // TODO Check\n\t\t\t\t}\n\t\t\t\t// COLLATE NOCASE\n\t\t\t\tif(ord.nocase) dg += '.toUpperCase()';\n\n\t\t\t\ts += 'if((a[\\''+columnid+\"']||'')\"+dg+(ord.direction == 'ASC'?'>':'<')+'(b[\\''+columnid+\"']||'')\"+dg+')return 1;';\n\t\t\t\ts += 'if((a[\\''+columnid+\"']||'')\"+dg+'==(b[\\''+columnid+\"']||'')\"+dg+'){';\n\n\t\t\t} else {\n\t\t\t\tdg = '.valueOf()';\n\t\t\t\t// COLLATE NOCASE\n\t\t\t\tif(ord.nocase) dg += '.toUpperCase()';\n\t\t\t\ts += 'if(('+ord.toJS('a','')+\"||'')\"+dg+(ord.direction == 'ASC'?'>(':'<(')+ord.toJS('b','')+\"||'')\"+dg+')return 1;';\n\t\t\t\ts += 'if(('+ord.toJS('a','')+\"||'')\"+dg+'==('+ord.toJS('b','')+\"||'')\"+dg+'){';\n\t\t\t}\t\t\t\n\n\t\t\t// TODO Add date comparision\n\n}\n*/\n\t\t\tsk += '}';\n\t\t});\n\t\ts += 'return 0;';\n\t\ts += sk+'return -1';\n\t\tquery.orderfns = s;\n\n\t\treturn new Function('a,b','var y;'+s);\n\t};\n};\n\n// Pivot functions\n/**\n\tCompile Pivot functions\n\t@param {object} query Source query\n\t@return {function} Pivoting functions\n*/\nyy.Select.prototype.compilePivot = function (query) {\n\tvar self = this;\n\t/** @type {string} Main pivoting column */\n\n\tvar columnid = self.pivot.columnid;\n\tvar exprcolid = self.pivot.expr.expression.columnid;\n\tvar aggr = self.pivot.expr.aggregatorid;\n\tvar inlist =  self.pivot.inlist;\n\n\tif(inlist) {\n\t\tinlist = inlist.map(function(l){return l.expr.columnid});\n\t}\n\n\t// Function for PIVOT post production\n\treturn function() {\n\t\tvar query = this;\n\t\tvar cols = query.columns.filter(function(col){\n\t\t\treturn (col.columnid != columnid) && (col.columnid != exprcolid);\n\t\t}).map(function(col){\n\t\t\treturn col.columnid;\n\t\t});\n\n\t\tvar newcols = [];\n\t\tvar gnewcols = {};\n\t\tvar gr = {};\n\t\tvar ga = {};\n\t\tvar data = [];\n\t\tquery.data.forEach(function(d){\n\t\t\tif(!inlist || inlist.indexOf(d[columnid])>-1 ) {\n\t\t\t\tvar gx = cols.map(function(colid){return d[colid]}).join('`');\n\t\t\t\tvar g = gr[gx];\n\t\t\t\tif(!g) {\n\t\t\t\t\tg = {};\n\t\t\t\t\tgr[gx] = g;\n\t\t\t\t\tdata.push(g);\n\t\t\t\t\tcols.forEach(function(colid){\n\t\t\t\t\t\tg[colid] = d[colid];\n\t\t\t\t\t});\t\t\t\n\t\t\t\t};\n\n\t\t\t\tif(!ga[gx]) {\n\t\t\t\t\tga[gx] = {};\n\t\t\t\t}\n\n\t\t\t\tif(ga[gx][d[columnid]]) {\n\t\t\t\t\tga[gx][d[columnid]]++;\n\t\t\t\t} else {\n\t\t\t\t\tga[gx][d[columnid]] = 1;\n\t\t\t\t}\n\n\t\t\t\tif(!gnewcols[d[columnid]]) {\n\t\t\t\t\tgnewcols[d[columnid]] = true;\n\t\t\t\t\tnewcols.push(d[columnid]);\n\t\t\t\t};\n\n\t\t\t\tif(aggr=='SUM' || aggr=='AVG' ) {\n\t\t\t\t\tif(typeof g[d[columnid]] == 'undefined') g[d[columnid]] = 0;\n\t\t\t\t\tg[d[columnid]] += d[exprcolid];\n\t\t\t\t} else if(aggr=='COUNT') {\n\t\t\t\t\tif(typeof g[d[columnid]] == 'undefined') g[d[columnid]] = 0;\n\t\t\t\t\tg[d[columnid]]++;\n\t\t\t\t} else if(aggr=='MIN') {\n\t\t\t\t\tif(typeof g[d[columnid]] == 'undefined') g[d[columnid]] = Infinity;\n\t\t\t\t\tif(d[exprcolid] < g[d[columnid]]) g[d[columnid]] = d[exprcolid];\n\t\t\t\t} else if(aggr=='MAX') {\n\t\t\t\t\tif(typeof g[d[columnid]] == 'undefined') g[d[columnid]] = -Infinity;\n\t\t\t\t\tif(d[exprcolid] > g[d[columnid]]) g[d[columnid]] = d[exprcolid];\n\t\t\t\t} else if(aggr=='FIRST') {\n\t\t\t\t\tif(typeof g[d[columnid]] == 'undefined') g[d[columnid]] = d[exprcolid];\n\t\t\t\t} else if(aggr=='LAST') {\n\t\t\t\t\tg[d[columnid]] = d[exprcolid];\n\t\t\t\t} else if(alasql.aggr[aggr]) { // Custom aggregator\n\t\t\t\t\talasql.aggr[aggr](g[d[columnid]],d[exprcolid]);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Wrong aggregator in PIVOT clause');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif(aggr=='AVG') {\n\t\t\tfor(var gx in gr){\n\t\t\t\tvar d = gr[gx];\n\t\t\t\tfor(var colid in d) {\n\t\t\t\t\tif((cols.indexOf(colid) == -1) && (colid != exprcolid)) {\n\t\t\t\t\t\td[colid] = d[colid]/ga[gx][colid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n// columns\n\t\tquery.data = data;\n\n\t\tif(inlist) newcols = inlist;\n\n\t\tvar ncol = query.columns.filter(function(col){return col.columnid == exprcolid})[0];\n\t\tquery.columns = query.columns.filter(function(col){\n\t\t\treturn !(col.columnid == columnid || col.columnid == exprcolid); \n\t\t});\n\t\tnewcols.forEach(function(colid){\n\t\t\tvar nc = cloneDeep(ncol);\n\t\t\tnc.columnid = colid;\n\t\t\tquery.columns.push(nc);\n\t\t});\n\t};\n};\n\n\t// var columnid = this.pivot.columnid;\n\n\t// return function(data){\n\t// \t* @type {object} Collection of grouped records \n\t// \tvar gx = {};\n\t// \t/** @type {array} Array of grouped records */\n\t// \tvar gr = [];\n\n// if(false) {\n\n// }\n\n// if(false) {\n\n// }\n// };\n\n/**\n\tCompile UNPIVOT clause\n\t@param {object} query Query object\n\t@return {function} Function for unpivoting\n*/\nyy.Select.prototype.compileUnpivot = function (query) {\n\tvar self = this;\n\tvar tocolumnid = self.unpivot.tocolumnid;\n\tvar forcolumnid = self.unpivot.forcolumnid;\n\tvar inlist = self.unpivot.inlist.map(function(l){return l.columnid});\n\n\treturn function() {\n\t\tvar data = [];\n\n\t\tvar xcols = query.columns\n\t\t.map(function(col){return col.columnid})\n\t\t.filter(function(colid){\n\t\t\treturn inlist.indexOf(colid)==-1 && colid != forcolumnid && colid != tocolumnid; \n\t\t});\n\n\t\tquery.data.forEach(function(d){\n\t\t\tinlist.forEach(function(colid){ \n\t\t\t\tvar nd = {};\n\t\t\t\txcols.forEach(function(xcolid){ nd[xcolid] = d[xcolid]});\n\t\t\t\tnd[forcolumnid] = colid;\n\t\t\t\tnd[tocolumnid] = d[colid];\n\t\t\t\tdata.push(nd);\n\t\t\t});\n\t\t});\n\n\t\tquery.data = data;\n\n\t};\n\n};\n\n/*\r\n//\r\n// ROLLUP(), CUBE(), GROUPING SETS() for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n/** \r\n Calculate ROLLUP() combination\r\n */\r\n\nvar rollup = function (a,query) {\r\n\tvar rr = [];\r\n\tvar mask = 0;\r\n\tvar glen = a.length;\r\n\tfor(var g=0;g<glen+1;g++) {\r\n\t\tvar ss = [];\r\n\t\tfor(var i=0;i<glen;i++) {\r\n\t\t \tif(a[i] instanceof yy.Column) {\r\n\t\t\t\ta[i].nick = escapeq(a[i].columnid);\r\n\n\t\t \t\tquery.groupColumns[escapeq(a[i].columnid)] = a[i].nick;\r\n\t\t\t\tvar aaa = a[i].nick+'\\t'\r\n\t\t\t\t\t+a[i].toJS('p',query.sources[0].alias,query.defcols);\r\n\t\t \t} else {\r\n\t\t \t\tquery.groupColumns[escapeq(a[i].toString())] = escapeq(a[i].toString());\r\n\t\t\t\tvar aaa = escapeq(a[i].toString())+'\\t'\r\n\t\t\t\t\t+a[i].toJS('p',query.sources[0].alias,query.defcols);\r\n\t\t\t}\r\n\n\t\t\tif(mask&(1<<i)) ss.push(aaa);\r\n\t\t}\r\n\t\trr.push(ss);\r\n\t\tmask = (mask<<1)+1; \r\n\t};\r\n\treturn rr;\r\n};\r\n\n/**\r\n Calculate CUBE()\r\n */\r\nvar cube = function (a,query) {\r\n\tvar rr = [];\r\n\tvar glen = a.length;\r\n\tvar glenCube = 1<<glen;\r\n\tfor(var g=0;g<(glenCube);g++) {\r\n\t\tvar ss = [];\r\n\t\tfor(var i=0;i<glen;i++) {\r\n\t\t\tif(g&(1<<i)) //ss.push(a[i]);\r\n\t\t\t\t//ss = cartes(ss,decartes(a[i]));\r\n\n\t\t\t\tss = ss.concat(decartes(a[i],query));\r\n\t\t\t\t//\r\n\t\t}\r\n\t\trr.push(ss);\r\n\t}\r\n\treturn rr;\r\n}\r\n\n/**\r\n GROUPING SETS()\r\n */\r\nvar groupingsets = function(a,query) {\r\n\treturn a.reduce(function(acc,d){\r\n\t\tacc = acc.concat(decartes(d,query));\r\n\t\treturn acc;\r\n\t}, []);\r\n}\r\n\n/**\r\n Cartesian production\r\n */\r\nvar cartes = function(a1,a2){\r\n\tvar rrr =[];\r\n\tfor(var i1=0;i1<a1.length;i1++) {\r\n\t\tfor(var i2=0;i2<a2.length;i2++) {\r\n\t\t\trrr.push(a1[i1].concat(a2[i2]));\r\n\t\t}\r\n\t};\r\n\treturn rrr;\r\n}\r\n\n/**\r\n Prepare groups function\r\n */\r\nfunction decartes(gv,query) {\r\n\n\tif(Array.isArray(gv)) {\r\n\t\tvar res = [[]];\r\n\t\tfor(var t=0; t<gv.length; t++) {\r\n\t\t\tif(gv[t] instanceof yy.Column) {\r\n\n\t\t\t\tgv[t].nick = escapeq(gv[t].columnid);\r\n\t\t\t \tquery.groupColumns[gv[t].nick] = gv[t].nick;\r\n\t\t \t\tres = res.map(function(r){return r.concat(gv[t].nick+'\\t'+gv[t].toJS('p',query.sources[0].alias,query.defcols))}); \t\r\n\n\t\t\t} else if(gv[t] instanceof yy.FuncValue) {\r\n\t\t\t\tquery.groupColumns[escapeq(gv[t].toString())] = escapeq(gv[t].toString());\r\n\t\t \t\tres = res.map(function(r){return r.concat(escapeq(gv[t].toString())+'\\t'+gv[t].toJS('p',query.sources[0].alias,query.defcols))}); \t\r\n\t\t \t\t// to be defined\r\n\t\t\t} else if(gv[t] instanceof yy.GroupExpression) {\r\n\t\t\t\tif(gv[t].type == 'ROLLUP') res = cartes(res,rollup(gv[t].group,query));\r\n\t\t\t\telse if(gv[t].type == 'CUBE') res = cartes(res,cube(gv[t].group,query));\r\n\t\t\t\telse if(gv[t].type == 'GROUPING SETS') res = cartes(res,groupingsets(gv[t].group,query));\r\n\t\t\t\telse throw new Error('Unknown grouping function');\r\n\t\t\t} else if(gv[t] === '') {\r\n\n\t\t\t\tres = [['1\\t1']];\r\n\t\t\t} else {\r\n\n\t\t \t\tres = res.map(function(r){\r\n \t\t\t\t\tquery.groupColumns[escapeq(gv[t].toString())] = escapeq(gv[t].toString());\r\n\t\t \t\t\treturn r.concat(escapeq(gv[t].toString())\r\n\t\t \t\t\t\t+'\\t'\r\n\t\t \t\t\t\t+gv[t].toJS('p',query.sources[0].alias,query.defcols)) \r\n\t\t \t\t}); \t\r\n\n\t\t\t};\r\n\n\t\t};\r\n\t\treturn res;\r\n\t} else if(gv instanceof yy.FuncValue) {\r\n\n\t\tquery.groupColumns[escapeq(gv.toString())] = escapeq(gv.toString());\r\n\t\treturn [gv.toString()+'\\t'+gv.toJS('p',query.sources[0].alias,query.defcols)];\r\n\t} else if(gv instanceof yy.Column) {\r\n\t\t\tgv.nick = escapeq(gv.columnid);\r\n\t\t \tquery.groupColumns[gv.nick] = gv.nick;\r\n\t\t\treturn [gv.nick+'\\t'+gv.toJS('p',query.sources[0].alias,query.defcols)]; // Is this ever happened?\r\n\t\t// } else if(gv instanceof yy.Expression) {\r\n\t\t// \treturn [gv.columnid]; // Is this ever happened?\r\n\t} else {\r\n\t\tquery.groupColumns[escapeq(gv.toString())] = escapeq(gv.toString());\r\n\t\treturn [escapeq(gv.toString())+'\\t'+gv.toJS('p',query.sources[0].alias,query.defcols)];\r\n\n\t};\r\n\n};\r\n\n/*\r\n//\r\n// Select run-time part for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Select.prototype.compileDefCols = function(query, databaseid) {\r\n\n\tvar defcols = {'.':{}};\r\n\tif(this.from) {\r\n\t\tthis.from.forEach(function(fr){\r\n\t\t\tdefcols['.'][fr.as || fr.tableid] = true;\r\n\t\t\tif(fr instanceof yy.Table) {\r\n\t\t\t\tvar alias = fr.as || fr.tableid;\r\n\n\t\t\t\tvar table = alasql.databases[fr.databaseid || databaseid].tables[fr.tableid];\r\n\n\t\t\t\tif(undefined === table){\r\n\t\t\t\t\tthrow new Error(\"Table does not exists: \"+fr.tableid);;\r\n\t\t\t\t}\r\n\n\t\t\t\tif(table.columns) {\r\n\t\t\t\t\ttable.columns.forEach(function(col){\r\n\t\t\t\t\t\tif(defcols[col.columnid]) {\r\n\t\t\t\t\t\t\tdefcols[col.columnid] = '-'; // Ambigous\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdefcols[col.columnid] = alias;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if(fr instanceof yy.Select) {\r\n\n\t\t\t} else if(fr instanceof yy.Search) {\r\n\n\t\t\t} else if(fr instanceof yy.ParamValue) {\r\n\n\t\t\t} else if(fr instanceof yy.VarValue) {\r\n\n\t\t\t} else if(fr instanceof yy.FuncValue) {\r\n\n\t\t\t} else if(fr instanceof yy.FromData) {\r\n\n\t\t\t} else if(fr instanceof yy.Json) {\r\n\n\t\t\t} else if(fr.inserted) {\r\n\n\t\t\t} else {\r\n\n\t\t\t\tthrow new Error('Unknown type of FROM clause');\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\n\tif(this.joins) {\r\n\t\tthis.joins.forEach(function(jn){\r\n\t\t\tdefcols['.'][jn.as || jn.table.tableid] = true;\r\n\n\t\t\tif(jn.table) {\r\n\t\t\t\tvar alias = jn.table.tableid;\r\n\t\t\t\tif(jn.as) alias = jn.as;\r\n\t\t\t\tvar alias = jn.as || jn.table.tableid;\r\n\t\t\t\tvar table = alasql.databases[jn.table.databaseid || databaseid].tables[jn.table.tableid];\r\n\n\t\t\t\tif(table.columns) {\r\n\t\t\t\t\ttable.columns.forEach(function(col){\r\n\t\t\t\t\t\tif(defcols[col.columnid]) {\r\n\t\t\t\t\t\t\tdefcols[col.columnid] = '-'; // Ambigous\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdefcols[col.columnid] = alias;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if(jn.select) {\r\n\n\t\t\t} else if(jn.param) {\r\n\n\t\t\t} else if(jn.func) {\r\n\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Unknown type of FROM clause');\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\t// for(var k in defcols) {\r\n\t// \tif(defcols[k] == '-') defcols[k] = undefined;\r\n\t// }\r\n\n\treturn defcols;\r\n}\n/*\r\n//\r\n// UNION for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// SELECT UNION statement\r\n\nyy.Union = function (params) { return yy.extend(this, params); }\r\nyy.Union.prototype.toString = function () {\r\n\treturn 'UNION';\r\n};\r\n\nyy.Union.prototype.compile = function (tableid) {\r\n\treturn null;\r\n};\n/*\r\n//\r\n// CROSS AND OUTER APPLY for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Apply = function (params) { \r\n\treturn yy.extend(this, params); \r\n}\r\n\nyy.Apply.prototype.toString = function () {\r\n\tvar s = this.applymode+' APPLY ('+this.select.toString()+')';\r\n\n\tif(this.as) \r\n\t\ts += ' AS '+this.as;\r\n\n\treturn s;\r\n};\r\n\n/*\r\n//\r\n// CROSS AND OUTER APPLY for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Over = function (params) { return yy.extend(this, params); }\r\nyy.Over.prototype.toString = function () {\r\n\tvar s = 'OVER (';\r\n\tif(this.partition) {\r\n\t\ts += 'PARTITION BY '+this.partition.toString();\r\n\t\tif(this.order) s+=' ';\r\n\t}\r\n\tif(this.order) {\r\n\t\ts += 'ORDER BY '+this.order.toString();\r\n\t}\r\n\ts += ')';\r\n\treturn s;\r\n};\r\n\n/*\r\n//\r\n// Expressions for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n/**\r\n  \tExpression statement ( = 2*2; )\r\n  \t@class \r\n\t@param {object} params Initial parameters\r\n*/\r\nyy.ExpressionStatement = function(params) { return yy.extend(this, params); };\r\n\n/**\r\n\tConvert AST to string\r\n\t@this ExpressionStatement\r\n\t@return {string}\r\n*/\r\nyy.ExpressionStatement.prototype.toString = function() {\r\n\treturn this.expression.toString();\r\n};\r\n/**\r\n\tExecute statement\r\n\t@param {string} databaseid Database identificatro\r\n\t@param {object} params Statement parameters\r\n\t@param {statement-callback} cb Callback\r\n\t@return {object} Result value\r\n*/\r\nyy.ExpressionStatement.prototype.execute = function (databaseid, params, cb) {\r\n\tif(this.expression) {\r\n\n\t\talasql.precompile(this,databaseid,params); // Precompile queries\r\n\t\tvar exprfn =  new Function(\"params,alasql,p\",'var y;return '+this.expression.toJS('({})','', null)).bind(this);\r\n\t\tvar res = exprfn(params,alasql);\r\n\t\tif(cb) {\r\n\t\t\tres = cb(res);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n};\r\n\n/**\r\n\tExpression class\r\n\t@class\r\n\t@param {object} params Initial parameters\r\n*/\r\n\nyy.Expression = function(params) { return yy.extend(this, params); };\r\n\n/**\r\n\tConvert AST to string\r\n\t@this ExpressionStatement\r\n\t@return {string}\r\n*/\r\nyy.Expression.prototype.toString = function(dontas) {\r\n\tvar s = this.expression.toString(dontas);\r\n\tif(this.order) {\r\n\t\ts += ' '+this.order.toString();\r\n\t}\r\n\tif(this.nocase) {\r\n\t\ts += ' COLLATE NOCASE';\r\n\t}\r\n\treturn s;\r\n};\r\n\n/**\r\n\tFind aggregator in AST subtree\r\n\t@this ExpressionStatement\r\n\t@param {object} query Query object\r\n*/\r\nyy.Expression.prototype.findAggregator = function (query){\r\n\tif(this.expression.findAggregator) {\r\n\t\tthis.expression.findAggregator(query);\r\n\t}\r\n};\r\n\n/**\r\n\tConvert AST to JavaScript expression\r\n\t@this ExpressionStatement\r\n\t@param {string} context Context string, e.g. 'p','g', or 'x'\r\n\t@param {string} tableid Default table name\r\n\t@param {object} defcols Default columns dictionary\r\n\t@return {string} JavaScript expression\r\n*/\r\n\nyy.Expression.prototype.toJS = function(context, tableid, defcols) {\r\n\n\tif(this.expression.reduced) {\r\n\t\treturn 'true';\r\n\t}\r\n\treturn this.expression.toJS(context, tableid, defcols);\r\n};\r\n\n/**\r\n\tCompile AST to JavaScript expression\r\n\t@this ExpressionStatement\r\n\t@param {string} context Context string, e.g. 'p','g', or 'x'\r\n\t@param {string} tableid Default table name\r\n\t@param {object} defcols Default columns dictionary\r\n\t@return {string} JavaScript expression\r\n*/\r\n\nyy.Expression.prototype.compile = function(context, tableid, defcols){\r\n\n\tif(this.reduced) {\r\n\t\treturn returnTrue();\r\n\t}\r\n\treturn new Function('p','var y;return '+this.toJS(context, tableid, defcols));\r\n};\r\n\n/**\r\n\tJavaScript class\r\n\t@class\r\n*/\r\nyy.JavaScript = function(params) { return yy.extend(this, params); };\r\nyy.JavaScript.prototype.toString = function() {\r\n\tvar s = '``'+this.value+'``';\r\n\treturn s;\r\n};\r\n\nyy.JavaScript.prototype.toJS = function( /* context, tableid, defcols*/ ) {\r\n\n\treturn '('+this.value+')';\r\n};\r\nyy.JavaScript.prototype.execute = function (databaseid, params, cb) {\r\n\tvar res = 1;\r\n\tvar expr =  new Function(\"params,alasql,p\",this.value);\r\n\texpr(params,alasql);\r\n\tif(cb){\r\n\t\tres = cb(res);\r\n\t}\r\n\treturn res;\r\n};\r\n\n/**\r\n\tLiteral class\r\n\t@class\r\n\t@example\r\n\tMyVar, [My vairable], `MySQL variable`\r\n*/\r\n\nyy.Literal = function (params) { return yy.extend(this, params); };\r\nyy.Literal.prototype.toString = function(dontas) {\r\n\tvar s = this.value;\r\n\tif(this.value1){\r\n\t\ts = this.value1+'.'+s; \r\n\t}\r\n\tif(this.alias && !dontas) s += ' AS '+this.alias;\r\n//\telse s = tableid+'.'+s;\r\n\treturn s;\r\n};\r\n\n/**\r\n\tJoin class\r\n\t@class\r\n*/\r\n\nyy.Join = function (params) { return yy.extend(this, params); };\r\nyy.Join.prototype.toString = function() {\r\n\tvar s = ' ';\r\n\tif(this.joinmode){\r\n\t\ts += this.joinmode+' ';\r\n\t}\r\n\ts += 'JOIN ' + this.table.toString();\r\n\treturn s;\r\n};\r\n\n// }\r\n\n/**\r\n\tTable class\r\n\t@class\r\n*/\r\n\nyy.Table = function (params) { return yy.extend(this, params); };\r\nyy.Table.prototype.toString = function() {\r\n\tvar s = this.tableid;\r\n//\tif(this.joinmode)\r\n\tif(this.databaseid){\r\n\t\ts = this.databaseid+'.'+s;\r\n\t}\r\n\treturn s;\r\n};\r\n\n/**\r\n\tView class\r\n\t@class\r\n*/\r\n\nyy.View = function (params) { return yy.extend(this, params); };\r\nyy.View.prototype.toString = function() {\r\n\tvar s = this.viewid;\r\n//\tif(this.joinmode)\r\n\tif(this.databaseid){\r\n\t\ts = this.databaseid+'.'+s;\r\n\t}\r\n\treturn s;\r\n};\r\n\n/**\r\n\tBinary operation class\r\n\t@class\r\n*/\r\nyy.Op = function (params) { return yy.extend(this, params); };\r\nyy.Op.prototype.toString = function() {\r\n\tif(this.op === 'IN' || this.op === 'NOT IN') {\r\n\t\treturn this.left.toString()+\" \"+this.op+\" (\"+this.right.toString()+\")\";\r\n\t}\r\n\tif(this.allsome) {\r\n\t\treturn this.left.toString()+\" \"+this.op+\" \"+this.allsome+' ('+this.right.toString()+')';\r\n\t}\r\n\tif(this.op === '->' || this.op === '!') {\r\n\t\tvar s = this.left.toString()+this.op;\r\n\n\t\tif(typeof this.right !== 'string' && typeof this.right !== 'number' ){\r\n\t\t\ts += '(';\r\n\t\t}\r\n\n\t\ts += this.right.toString();\r\n\n\t\tif(typeof this.right !== 'string' && typeof this.right !== 'number' ){\r\n\t\t\ts += ')';\r\n\t\t}\r\n\n\t\treturn s;\r\n\t}\r\n\treturn \tthis.left.toString() + \" \" + this.op + \" \" +\r\n\t\t\t(this.allsome ? this.allsome+' ' : '') +\r\n\t\t\tthis.right.toString();\r\n};\r\n\nyy.Op.prototype.findAggregator = function (query){\r\n\n\tif(this.left && this.left.findAggregator){\r\n\t\tthis.left.findAggregator(query);\r\n\t}\r\n\t// Do not go in > ALL\r\n\tif(this.right && this.right.findAggregator && (!this.allsome)) {\r\n\t\tthis.right.findAggregator(query);\r\n\t}\r\n};\r\n\nyy.Op.prototype.toType = function(tableid) {\r\n\tif(['-','*','/','%','^'].indexOf(this.op) >-1){\r\n\t\treturn 'number';\r\n\t}\r\n\tif(['||'].indexOf(this.op) >-1){\r\n\t\treturn 'string';\r\n\t}\r\n\tif(this.op === '+') {\r\n\t\tif(this.left.toType(tableid) === 'string' || this.right.toType(tableid) === 'string'){\r\n\t\t\treturn 'string';\r\n\t\t}\r\n\t\tif(this.left.toType(tableid) === 'number' || this.right.toType(tableid) === 'number'){ \r\n\t\t\treturn 'number';\r\n\t\t}\r\n\t}\r\n\n\tif(['AND','OR','NOT','=','==','===', '!=','!==','!===','>','>=','<','<=', 'IN', 'NOT IN', 'LIKE', 'NOT LIKE', 'REGEXP', 'GLOB'].indexOf(this.op) >-1 ){\r\n\t\treturn 'boolean';\r\n\t}\r\n\n\tif(this.op === 'BETWEEN' || this.op === 'NOT BETWEEN' || this.op === 'IS NULL' || this.op === 'IS NOT NULL'){\r\n\t\treturn 'boolean';\r\n\t}\r\n\n\tif(this.allsome){\r\n\t\treturn 'boolean';\r\n\t}\r\n\n\tif(!this.op){\r\n\t\treturn this.left.toType();\r\n\t}\r\n\n\treturn 'unknown';\r\n};\r\n\nyy.Op.prototype.toJS = function(context,tableid,defcols) {\r\n\n\tvar s;\r\n\tvar refs = [];\r\n\tvar op = this.op;\r\n\tvar _this = this;\r\n\t//var leftJS = function(){return _this.left.toJS(context,tableid, defcols)};\r\n\t//var rightJS = function(){return _this.right.toJS(context,tableid, defcols)};\r\n\tvar accessedLeft = false, accessedRight = false\r\n\tvar ref = function(expr) {\r\n\t\tif (expr.toJS) {\r\n\t\t\texpr = expr.toJS(context, tableid, defcols)\r\n\t\t}\r\n\t\tvar i = refs.push(expr) - 1\r\n\t\treturn 'y[' + i + ']'\r\n\t}\r\n\tvar leftJS = function() {\r\n\t\treturn ref(_this.left)\r\n\t}\r\n\tvar rightJS = function() {\r\n\t\treturn ref(_this.right)\r\n\t}\r\n\n\tif(this.op === '='){\r\n\t\top = '===';\r\n\t} else if(this.op === '<>'){\r\n\t\top = '!=';\r\n\t} else if(this.op === 'OR'){\r\n\t\top = '||';\r\n\t}\r\n\n\t// Arrow operator\r\n\tif(this.op === '->') {\r\n\t\t// Expression to prevent error if object is empty (#344)\r\n\t\tvar ljs = '('+leftJS()+'||{})';\r\n\n\t\tif(typeof this.right === \"string\") {\r\n\t\t\ts = ljs +'[\"'+this.right+'\"]';\r\n\n\t\t} else if(typeof this.right === \"number\") {\r\n\t\t\ts = ljs+'['+this.right+']';\r\n\n\t\t} else if(this.right instanceof yy.FuncValue) {\r\n\t\t\tvar ss = [];\r\n\t\t\tif(!(!this.right.args || 0 === this.right.args.length)) {\r\n\t\t\t\tvar ss = this.right.args.map(ref);\r\n\t\t\t}\r\n\t\t\ts = \t''\r\n\t\t\t\t\t+ ljs\r\n\t\t\t\t\t+ \"['\"\r\n\t\t\t\t\t+ \tthis.right.funcid\r\n\t\t\t\t\t+ \"'](\"\r\n\t\t\t\t\t+ \tss.join(',')\r\n\t\t\t\t\t+ ')'; \r\n\t\t} else {\r\n\n\t\t\ts = \t''\r\n\t\t\t\t\t+ ljs\r\n\t\t\t\t\t+ '['\r\n\t\t\t\t\t+\trightJS()\r\n\t\t\t\t\t+ ']';\r\n\t\t}\r\n\t}\r\n\n\tif(this.op === '!') {\r\n\t\tif(typeof this.right === \"string\") {\r\n\t\t\ts = \t''\r\n\t\t\t\t\t+ 'alasql.databases[alasql.useid].objects['\r\n\t\t\t\t\t+ \tleftJS()\r\n\t\t\t\t\t+ '][\"'\r\n\t\t\t\t\t+\tthis.right\r\n\t\t\t\t\t+ '\"]';\r\n\t\t}\t\t\r\n\t\t// TODO - add other cases\r\n\t}\r\n\n\tif(this.op === 'IS') {\r\n\t\ts = \t''\r\n\t\t\t\t+ '('\r\n\t\t\t\t+\t'(' + leftJS()  + \"==null)\"\t// Cant be ===\r\n\t\t\t\t+\t\" === \"\r\n\t\t\t\t+\t'(' + rightJS() + \"==null)\"\t// Cant be ===\r\n\t\t\t\t+ ')';\r\n\t}\r\n\n\tif(this.op === '==') {\r\n\t\ts = \t''\r\n\t\t\t\t+ 'alasql.utils.deepEqual('\r\n\t\t\t\t+\tleftJS()\r\n\t\t\t\t+ \t','\r\n\t\t\t\t+ \trightJS()\r\n\t\t\t\t+ ')';\r\n\t}\r\n\n\tif(this.op === '===' || this.op === '!===') {\r\n\t\ts = \t''\r\n\t\t\t\t+ '('\r\n\t\t\t\t+ \t( (this.op === '!===') ? '!' : '')\r\n\t\t\t\t+\t'('\r\n\t\t\t\t+\t\t'(' + leftJS() + \").valueOf()\"\r\n\t\t\t\t+ \t\t'==='\r\n\t\t\t\t+ \t\t'(' + rightJS() + \").valueOf()\"\r\n\t\t\t\t+ \t')'\r\n\t\t\t\t+ ')';\r\n\n\t}\r\n\n\tif(this.op === '!==') {\r\n\t\ts = \t''\r\n\t\t\t\t+ '(!alasql.utils.deepEqual('\r\n\t\t\t\t+ \tleftJS()\r\n\t\t\t\t+ \t\",\"\r\n\t\t\t\t+ \trightJS()\r\n\t\t\t\t+ '))';\r\n\t}\r\n\tif(this.op === '||') {\r\n\t\ts = \t''\r\n\t\t\t\t+ \"(''+(\"\r\n\t\t\t\t+ \tleftJS()\r\n\t\t\t\t+ \t\"||'')+(\"\r\n\t\t\t\t+ \trightJS()\r\n\t\t\t\t+ '||\"\"))';\r\n\t}\r\n\tif(this.op === 'LIKE' || this.op === 'NOT LIKE') {\r\n\t\tvar s = '('\r\n\t\t\t\t+ \t( (this.op === 'NOT LIKE') ? '!' : '')\r\n\t\t\t\t+ \t'alasql.utils.like(' + rightJS()+ \",\" + leftJS();\r\n\t\tif(this.escape) {\r\n\t\t\ts += ','+ref(this.escape);\r\n\t\t}\r\n\t\ts += '))';\r\n\t}\r\n\tif(this.op === 'REGEXP') {\r\n\t\ts = 'alasql.stdfn.REGEXP_LIKE(' \r\n\t\t\t+ leftJS()\r\n\t\t\t+ ','\r\n\t\t\t+ rightJS()\r\n\t\t\t+ ')';\r\n\t}\r\n\tif(this.op === 'GLOB') {\r\n\t\ts = 'alasql.utils.glob(' \r\n\t\t\t+ leftJS()\r\n\t\t\t+ ','\r\n\t\t\t+ rightJS()\r\n\t\t\t+ ')';\r\n\t}\r\n\n\tif(this.op === 'BETWEEN' || this.op === 'NOT BETWEEN') {\r\n\t\tvar left = leftJS()\r\n\t\ts = \t''\r\n\t\t\t\t+ '('\r\n\t\t\t\t+ \t( (this.op === 'NOT BETWEEN') ? '!' : '')\r\n\t\t\t\t+ \t'('\r\n\t\t\t\t+ \t\t'('\r\n\t\t\t\t+ \t\t\tref(this.right1)\r\n\t\t\t\t+\t\t\t'<='\r\n\t\t\t\t+\t\t\tleft\r\n\t\t\t\t+\t\t') && ('\r\n\t\t\t\t+\t\t\tleft\r\n\t\t\t\t+\t\t\t'<='\r\n\t\t\t\t+\t\t\tref(this.right2)\r\n\t\t\t\t+\t\t')'\r\n\t\t\t\t+ \t')'\t\t\r\n\t\t\t\t+ ')';\t\t\r\n\n\t}\r\n\n\tif(this.op === 'IN') {\r\n\t\tif(this.right instanceof yy.Select ) {\r\n\t\t\ts = '(';\r\n\n\t\t\ts += 'alasql.utils.flatArray(this.queriesfn['+(this.queriesidx)+'](params,null,'+context+'))';\r\n\t\t\ts += '.indexOf(';\r\n\t\t\ts += leftJS()+')>-1)';\r\n\t\t} else if(Array.isArray(this.right)) {\r\n\n\t\t\ts \t= '(['\r\n\t\t\t\t+ this.right.map(ref).join(',')\r\n\t\t\t\t+ '].indexOf('\r\n\t\t\t\t+ leftJS()\r\n\t\t\t\t+ ')>-1)';\r\n\n\t\t} else {\r\n\t\t\ts = '('+rightJS()+'.indexOf('\r\n\t\t\t  \t+ leftJS()+')>-1)';\r\n\n\t\t}\r\n\t}\r\n\n\tif(this.op === 'NOT IN') {\r\n\t\tif(this.right instanceof yy.Select ) {\r\n\t\t\ts = '(';\r\n\t\t\t\t//this.query.queriesdata['+this.queriesidx+']\r\n\n\t\t\ts += 'alasql.utils.flatArray(this.queriesfn['+(this.queriesidx)+'](params,null,p))';\r\n\t\t\ts +='.indexOf(';\r\n\t\t\ts += leftJS()+')<0)';\r\n\t\t} else if(Array.isArray(this.right)) {\r\n\n\t\t\ts = '(['+this.right.map(ref).join(',')+'].indexOf(';\r\n\t\t\ts += leftJS()+')<0)';\r\n\t\t} else {\r\n\t\t\ts = '('+rightJS()+'.indexOf(';\r\n\t\t\ts += leftJS()+')==-1)';\r\n\n\t\t}\r\n\t}\r\n\n\tif(this.allsome === 'ALL') {\r\n\t\tvar s;\r\n\t\tif(this.right instanceof yy.Select ) {\r\n\n\t\t \ts = 'alasql.utils.flatArray(this.query.queriesfn['+(this.queriesidx)+'](params,null,p))';\r\n\n\t\t\ts +='.every(function(b){return (';\r\n\t\t\ts += leftJS()+')'+op+'b})';\r\n\t\t} else if(Array.isArray(this.right) ) {\r\n\t\t\ts = '' + (this.right.length == 1 ? ref(this.right[0]) : '['+this.right.map(ref).join(',')+']')\r\n\t\t\ts += '.every(function(b){return (';\r\n\t\t\ts += leftJS()+')'+op+'b})';\r\n\t\t} else {\r\n\t\t\tthrow new Error('NOT IN operator without SELECT');\r\n\t\t}\t\t\r\n\t}\r\n\n\tif(this.allsome === 'SOME' || this.allsome === 'ANY') {\r\n\t\tvar s;\r\n\t\tif(this.right instanceof yy.Select ) {\r\n\n\t\t\ts = 'alasql.utils.flatArray(this.query.queriesfn['+(this.queriesidx)+'](params,null,p))';\r\n\t\t\ts +='.some(function(b){return (';\r\n\t\t\ts += leftJS()+')'+op+'b})';\r\n\t\t} else if(Array.isArray(this.right) ) {\r\n\t\t\ts = '' + (this.right.length == 1 ? ref(this.right[0]) : '['+this.right.map(ref).join(',')+']')\r\n\t\t\ts += '.some(function(b){return (';\r\n\t\t\ts += leftJS()+')'+op+'b})';\r\n\t\t} else {\r\n\t\t\tthrow new Error('SOME/ANY operator without SELECT');\r\n\t\t}\t\t\r\n\t}\r\n\n// Special case for AND optimization (if reduced)\r\n\tif(this.op === 'AND') {\r\n\t\tif(this.left.reduced) {\r\n\t\t\tif(this.right.reduced) {\r\n\t\t\t\treturn 'true';\r\n\t\t\t} else {\r\n\t\t\t\ts = rightJS();\r\n\t\t\t}\r\n\t\t} else if(this.right.reduced) {\r\n\t\t\ts = leftJS();\r\n\t\t}\t\t\t\r\n\n\t\t// Otherwise process as regular operation (see below)\r\n\t\top = '&&';\r\n\n\t}\r\n\n\t// if(this.op === '^') {\r\n\t// \t// return \t'Math.pow('\r\n\t// \t// \t\t+ leftJS()\r\n\t// \t// \t\t+ ','\r\n\t// \t// \t\t+ rightJS()\r\n\t// \t// \t\t+ ')';\r\n\t// }\r\n\n\t// Change names\r\n\n\tvar expr = s || '(' + leftJS() + op + rightJS() + ')'\r\n\n\tvar declareRefs = 'y=[(' + refs.join('), (') + ')]'\r\n\n\tif (op == '&&' || op == '||' || op == 'IS' || op == 'IS NULL' || op == 'IS NOT NULL') {\r\n\t\treturn '(' + declareRefs + ', ' + expr + ')'\r\n\t}\r\n\telse {\r\n\t\treturn '(' + declareRefs + ', '\r\n\t\t\t+ 'y.some(function(e){return e == null}) ? void 0 : ' + expr + ')' \r\n\t}\r\n}\r\n\nyy.VarValue = function (params) { return yy.extend(this, params); }\r\nyy.VarValue.prototype.toString = function() {\r\n\treturn '@'+this.variable;\r\n};\r\n\nyy.VarValue.prototype.toType = function() {\r\n\treturn 'unknown';\r\n};\r\n\nyy.VarValue.prototype.toJS = function() {\r\n\treturn \"alasql.vars['\"+this.variable+\"']\";\r\n}\r\n\nyy.NumValue = function (params) { return yy.extend(this, params); }\r\nyy.NumValue.prototype.toString = function() {\r\n\treturn this.value.toString();\r\n};\r\n\nyy.NumValue.prototype.toType = function() {\r\n\treturn 'number';\r\n};\r\n\nyy.NumValue.prototype.toJS = function() {\r\n\treturn \"\"+this.value;\r\n}\r\n\nyy.StringValue = function (params) { return yy.extend(this, params); }\r\nyy.StringValue.prototype.toString = function() {\r\n\treturn \"'\"+this.value.toString()+\"'\";\r\n}\r\n\nyy.StringValue.prototype.toType = function() {\r\n\treturn 'string';\r\n}\r\n\nyy.StringValue.prototype.toJS = function() {\r\n\n//\treturn \"'\"+doubleqq(this.value)+\"'\";\r\n\treturn \"'\"+escapeq(this.value)+\"'\";\r\n\n}\r\n\nyy.DomainValueValue = function (params) { return yy.extend(this, params); }\r\nyy.DomainValueValue.prototype.toString = function() {\r\n\treturn 'VALUE'\r\n}\r\n\nyy.DomainValueValue.prototype.toType = function() {\r\n\treturn 'object';\r\n}\r\n\nyy.DomainValueValue.prototype.toJS = function(context, tableid, defcols) {\r\n\n//\treturn \"'\"+doubleqq(this.value)+\"'\";\r\n\treturn context;\r\n}\r\n\nyy.ArrayValue = function (params) { return yy.extend(this, params); }\r\nyy.ArrayValue.prototype.toString = function() {\r\n\treturn 'ARRAY[]'\r\n}\r\n\nyy.ArrayValue.prototype.toType = function() {\r\n\treturn 'object';\r\n}\r\n\nyy.ArrayValue.prototype.toJS = function(context, tableid, defcols) {\r\n\n//\treturn \"'\"+doubleqq(this.value)+\"'\";\r\n\treturn '[(' + this.value.map(function(el) {\r\n\t\treturn el.toJS(context, tableid, defcols)\r\n\t}).join('), (') + ')]'\r\n\n}\r\n\nyy.LogicValue = function (params) { return yy.extend(this, params); }\r\nyy.LogicValue.prototype.toString = function() {\r\n\treturn this.value?'TRUE':'FALSE';\r\n}\r\n\nyy.LogicValue.prototype.toType = function() {\r\n\treturn 'boolean';\r\n}\r\n\nyy.LogicValue.prototype.toJS = function() {\r\n\treturn this.value?'true':'false';\r\n}\r\n\nyy.NullValue = function (params) { return yy.extend(this, params); }\r\nyy.NullValue.prototype.toString = function() {\r\n\treturn 'NULL';\r\n}\r\nyy.NullValue.prototype.toJS = function() {\r\n\treturn 'undefined';\r\n//\treturn 'undefined';\r\n}\r\n\nyy.ParamValue = function (params) { return yy.extend(this, params); }\r\nyy.ParamValue.prototype.toString = function() {\r\n\treturn '$'+this.param;\r\n}\r\nyy.ParamValue.prototype.toJS = function() {\r\n\tif(typeof this.param === \"string\"){\r\n\t\treturn \"params['\"+this.param+\"']\";\r\n\t}\r\n\n\treturn \"params[\"+this.param+\"]\";\r\n}\r\n\nyy.UniOp = function (params) { return yy.extend(this, params); }\r\nyy.UniOp.prototype.toString = function() {\r\n\tvar s;\r\n\ts = void 0;\r\n\tif (this.op === '~') {\r\n\t\ts = this.op + this.right.toString();\r\n\t}\r\n\tif (this.op === '-') {\r\n\t\ts = this.op + this.right.toString();\r\n\t}\r\n\tif (this.op === '+') {\r\n\t\ts = this.op + this.right.toString();\r\n\t}\r\n\tif (this.op === '#') {\r\n\t\ts = this.op + this.right.toString();\r\n\t}\r\n\tif (this.op === 'NOT') {\r\n\t\ts = this.op + '(' + this.right.toString() + ')';\r\n\t}\r\n\tif (this.op === null) {\r\n\t\ts = '(' + this.right.toString() + ')';\r\n\t}\r\n\tif (!s) {\r\n\t\ts = '(' + this.right.toString() + ')';\r\n\t}\r\n\treturn s;\r\n};\r\n\nyy.UniOp.prototype.findAggregator = function (query){\r\n\tif(this.right.findAggregator){\r\n\t\tthis.right.findAggregator(query);\r\n\t}\r\n};\r\n\nyy.UniOp.prototype.toType = function() {\r\n\tif(this.op === '-'){\r\n\t\treturn 'number';\r\n\t}\r\n\n\tif(this.op === '+'){\r\n\t\treturn 'number';\r\n\t}\r\n\n\tif(this.op === 'NOT'){ \r\n\t\treturn 'boolean';\r\n\t}\r\n\n\t// Todo: implement default case\r\n};\r\n\nyy.UniOp.prototype.toJS = function(context, tableid, defcols) {\r\n\tif(this.op === '~'){\r\n\t\treturn \"(~(\"+this.right.toJS(context, tableid, defcols)+\"))\";\r\n\t}\r\n\n\tif(this.op === '-'){\r\n\t\treturn \"(-(\"+this.right.toJS(context, tableid, defcols)+\"))\";\r\n\t}\r\n\n\tif(this.op === '+'){\r\n\t\treturn \"(\"+this.right.toJS(context, tableid, defcols)+\")\";\r\n\t}\r\n\n\tif(this.op === 'NOT'){\r\n\t\treturn '!('+this.right.toJS(context, tableid, defcols)+')';\r\n\t}\r\n\n\tif(this.op === '#') {\r\n\t\tif(this.right instanceof yy.Column) {\r\n\t\t\treturn \"(alasql.databases[alasql.useid].objects[\\'\"+this.right.columnid+\"\\'])\";\r\n\t\t} else {\r\n\t\t\treturn \"(alasql.databases[alasql.useid].objects[\"\r\n\t\t\t\t+this.right.toJS(context, tableid, defcols)+\"])\";\r\n\t\t}\r\n\t}\r\n\n\t// Please avoid === here\t\r\n\tif(this.op == null){ \t\t// jshint ignore:line\r\n\t\treturn '('+this.right.toJS(context, tableid, defcols)+')';\r\n\t}\r\n\n\t// Todo: implement default case.\r\n};\r\n\nyy.Column = function(params) { return yy.extend(this, params); }\r\nyy.Column.prototype.toString = function(dontas) {\r\n\tvar s;\r\n\tif(this.columnid == +this.columnid) { // jshint ignore:line\r\n\t\ts = '['+this.columnid+']';\r\n\t} else {\r\n\t\ts = this.columnid;\r\n\t}\r\n\tif(this.tableid) {\r\n\t\tif(+this.columnid === this.columnid) {\r\n\t\t\ts = this.tableid+s;\r\n\t\t} else {\r\n\t\t\ts = this.tableid+'.'+s;\r\n\t\t}\r\n\t\tif(this.databaseid) {\r\n\t\t\ts = this.databaseid+'.'+s;\r\n\t\t}\r\n\t}\r\n\tif(this.alias && !dontas) s += ' AS '+this.alias;\r\n\treturn s;\r\n};\r\n\nyy.Column.prototype.toJS = function(context, tableid, defcols) {\r\n\n\tvar s = '';\r\n\tif(!this.tableid && tableid === '' && !defcols) {\r\n\t\tif(this.columnid !== '_') {\r\n\t\t\ts = context+'[\\''+this.columnid+'\\']';\r\n\t\t} else {\r\n\t\t\tif(context === 'g') {\r\n\t\t\t\ts = 'g[\\'_\\']';\t\t\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\ts = context;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tif(context === 'g') {\r\n\t\t\t// if(this.columnid == '_') {\r\n\t\t\t// } else {\r\n\t\t\t\ts = 'g[\\''+this.nick+'\\']';\t\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t} else if(this.tableid) {\r\n\t\t\tif(this.columnid !== '_') {\r\n\t\t\t\t// if() {\r\n\t\t\t\t\t// s = context+'[\\''+tableid + '\\'][\\''+this.tableid+'\\'][\\''+this.columnid+'\\']';\r\n\t\t\t\t// } else {\r\n\t\t\t\t\ts = context+'[\\''+(this.tableid) + '\\'][\\''+this.columnid+'\\']';\t\t\t\r\n\t\t\t\t// }\r\n\t\t\t} else {\r\n\t\t\t\tif(context === 'g') {\r\n\t\t\t\t\ts = 'g[\\'_\\']';\t\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = context+'[\\''+(this.tableid) + '\\']';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if(defcols) {\r\n\t\t\tvar tbid = defcols[this.columnid];\r\n\t\t\tif(tbid === '-') {\r\n\t\t\t\tthrow new Error('Cannot resolve column \"'+this.columnid+'\" because it exists in two source tables');\r\n\t\t\t} else if(tbid) {\r\n\t\t\t\tif(this.columnid !== '_') {\r\n\t\t\t\t\ts = context+'[\\''+(tbid) + '\\'][\\''+this.columnid+'\\']';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = context+'[\\''+(tbid) + '\\']';\r\n\t\t\t\t}\r\n\n\t\t\t} else {\r\n\t\t\t\tif(this.columnid !== '_') {\r\n\t\t\t\t\t// if(defcols['.'][this.tableid]) {\r\n\n\t\t\t\t\t// \ts = context+'[\\''+tableid + '\\'][\\''+this.tableid + '\\'][\\''+this.columnid+'\\']';\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\ts = context+'[\\''+(this.tableid || tableid) + '\\'][\\''+this.columnid+'\\']';\r\n\t\t\t\t\t// }\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = context+'[\\''+(this.tableid || tableid) + '\\']';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if(tableid === -1) {\r\n\n\t\t\t\ts = context+'[\\''+this.columnid+'\\']';\r\n\n\t\t} else {\r\n\t\t\tif(this.columnid !== '_') {\r\n\t\t\t\ts = context+'[\\''+(this.tableid || tableid) + '\\'][\\''+this.columnid+'\\']';\r\n\t\t\t} else {\r\n\t\t\t\ts = context+'[\\''+(this.tableid || tableid) + '\\']';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\n//\tconsole.trace(new Error());\r\n\n\treturn s;\r\n}\r\n\nyy.AggrValue = function(params){ return yy.extend(this, params); }\r\nyy.AggrValue.prototype.toString = function(dontas) {\r\n\tvar s = '';\r\n\tif(this.aggregatorid === 'REDUCE'){\r\n\t\ts += this.funcid+'(';\r\n\t} else{\r\n\t\ts += this.aggregatorid+'(';\r\n\t}\r\n\n\tif(this.distinct){\r\n\t\ts+= 'DISTINCT ';\r\n\t}\r\n\n\tif(this.expression){\r\n\t\ts += this.expression.toString();\r\n\t}\r\n\n\ts += ')';\r\n\n\tif(this.over){\r\n\t\ts += ' '+this.over.toString();\r\n\t} \r\n\n\tif(this.alias && !dontas) s += ' AS '+this.alias;\r\n//\tif(this.alias) s += ' AS '+this.alias;\r\n\treturn s;\r\n};\r\n\nyy.AggrValue.prototype.findAggregator = function (query){\r\n\n//\tvar colas = this.as || this.toString();\r\n\n\tvar colas = escapeq(this.toString())+':'+query.selectGroup.length;\r\n\n\tvar found = false;\r\n\n\tif(!found) {\r\n\t\tif(!this.nick) {\r\n\t\t\tthis.nick = colas;\r\n\t\t\tvar found = false;\r\n\t\t\tfor(var i=0;i<query.removeKeys.length;i++){\r\n\t\t\t\tif(query.removeKeys[i]===colas) {\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!found){\r\n\t\t\t\tquery.removeKeys.push(colas);\r\n\t\t\t}\r\n\t\t}\r\n\t\tquery.selectGroup.push(this);\r\n\t}\r\n\n\treturn;\r\n};\r\n\nyy.AggrValue.prototype.toType = function() {\r\n\tif(['SUM','COUNT','AVG','MIN', 'MAX','AGGR','VAR','STDDEV'].indexOf(this.aggregatorid)>-1){\r\n\t\treturn 'number';\r\n\t}\r\n\n\tif(['ARRAY'].indexOf(this.aggregatorid)>-1){\r\n\t\treturn 'array';\r\n\t}\r\n\n\tif(['FIRST','LAST' ].indexOf(this.aggregatorid)>-1){\r\n\t\treturn this.expression.toType();\r\n\t}\r\n\n\t// todo: implement default;\r\n}\r\n\nyy.AggrValue.prototype.toJS = function(/*context, tableid, defcols*/) {\r\n\n\tvar colas = this.nick;\r\n\tif(colas === undefined){ \r\n\t\tcolas = this.toString();\r\n\t}\r\n\treturn 'g[\\''+colas+'\\']';\r\n}\r\n\nyy.OrderExpression = function(params){ return yy.extend(this, params); }\r\nyy.OrderExpression.prototype.toString = yy.Expression.prototype.toString\r\n\nyy.GroupExpression = function(params){ return yy.extend(this, params); }\r\nyy.GroupExpression.prototype.toString = function() {\r\n\treturn this.type+'('+this.group.toString()+')';\r\n}\r\n\n// Alasql Linq library\r\n\nyy.FromData = function(params) { return yy.extend(this, params); };\r\nyy.FromData.prototype.toString = function() {\r\n\tif(this.data) return 'DATA('+((Math.random()*10e15)|0)+')';\r\n\telse return '?';\r\n};\r\nyy.FromData.prototype.toJS = function(){\r\n\n};\r\n\nyy.Select.prototype.exec = function(params,cb) {\r\n\n\tif(this.preparams) params = this.preparams.concat(params);\r\n\n\tvar databaseid = alasql.useid;\r\n\tdb = alasql.databases[databaseid];\r\n\tvar sql = this.toString();\r\n\tvar hh = hash(sql);\r\n\n\tvar statement = this.compile(databaseid);\r\n\tif(!statement) return;\r\n\tstatement.sql = sql;\r\n\tstatement.dbversion = db.dbversion;\r\n\n\t// Secure sqlCache size\r\n\tif (db.sqlCacheSize > alasql.MAXSQLCACHESIZE) {\r\n\t\tdb.resetSqlCache();\r\n\t}\r\n\tdb.sqlCacheSize++;\r\n\tdb.sqlCache[hh] = statement;\r\n\tvar res = alasql.res = statement(params, cb);\r\n\treturn res;\r\n};\r\n\nyy.Select.prototype.Select = function(){\r\n\tvar self = this;\r\n\tvar agrs = [];\r\n\tif(arguments.length > 1) {\r\n\t\targs = Array.prototype.slice.call(arguments);;\r\n\t} else if(arguments.length == 1) {\r\n\t\tif(Array.isArray(arguments[0])) {\r\n\t\t\targs = arguments[0];\r\n\t\t} else {\r\n\t\t\targs = [arguments[0]];\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error('Wrong number of arguments of Select() function');\r\n\t}\r\n\n\tself.columns = [];\r\n\n\targs.forEach(function(arg){\r\n\t\tif(typeof arg == \"string\") {\r\n\t\t\tself.columns.push(new yy.Column({columnid: arg}));\r\n\t\t} else if(typeof arg == \"function\") {\r\n\t\t\tvar pari = 0;\r\n\t\t\tif(self.preparams) {\r\n\t\t\t\tpari = self.preparams.length;\r\n\t\t\t} else {\r\n\t\t\t\tself.preparams = [];\r\n\t\t\t}\r\n\t\t\tself.preparams.push(arg);\r\n\t\t\tself.columns.push(new yy.Column({columnid: \"*\", func:arg, param:pari}));\r\n\t\t} else {\r\n\t\t\t// Unknown type\r\n\t\t}\r\n\t});\r\n\n\treturn self;\r\n};\r\n\nyy.Select.prototype.From = function(tableid){\r\n\tvar self = this;\r\n\tif(!self.from) self.from = [];\r\n\tif(Array.isArray(tableid)) {\r\n\t\tvar pari = 0;\r\n\t\tif(self.preparams) {\r\n\t\t\tpari = self.preparams.length;\r\n\t\t} else {\r\n\t\t\tself.preparams = [];\r\n\t\t}\r\n\t\tself.preparams.push(tableid); \r\n\t\tself.from.push(new yy.ParamValue({param:pari}));\r\n\t} else if(typeof tableid ==\"string\") {\r\n\t\tself.from.push(new yy.Table({tableid:tableid}));\r\n\t} else {\r\n\t\tthrow new Error('Unknown arguments in From() function')\r\n\t}\r\n\treturn self;\r\n}\r\n\nyy.Select.prototype.OrderBy = function(){\r\n\tvar self = this;\r\n\tvar agrs = [];\r\n\n\tself.order = [];\r\n\n\tif(arguments.length == 0) {\r\n\n\t\targs = [\"_\"];\r\n\t} else if(arguments.length > 1) {\r\n\t\targs = Array.prototype.slice.call(arguments);;\r\n\t} else if(arguments.length == 1) {\r\n\t\tif(Array.isArray(arguments[0])) {\r\n\t\t\targs = arguments[0];\r\n\t\t} else {\r\n\t\t\targs = [arguments[0]];\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error('Wrong number of arguments of Select() function');\r\n\t}\r\n\n\tif(args.length > 0) {\r\n\t\targs.forEach(function(arg){\r\n\t\t\tvar expr = new yy.Column({columnid:arg});\r\n\t\t\tif(typeof arg == 'function'){\r\n\t\t\t\texpr = arg;\r\n\t\t\t}\r\n\t\t\tself.order.push(new yy.OrderExpression({expression: expr, direction:'ASC'}));\r\n\t\t});\r\n\t}\r\n\treturn self;\r\n}\r\n\nyy.Select.prototype.Top = function(topnum){\r\n\tvar self = this;\r\n\tself.top = new yy.NumValue({value:topnum});\r\n\treturn self;\r\n};\r\n\nyy.Select.prototype.GroupBy = function(){\r\n\tvar self = this;\r\n\tvar agrs = [];\r\n\n\tif(arguments.length > 1) {\r\n\t\targs = Array.prototype.slice.call(arguments);;\r\n\t} else if(arguments.length == 1) {\r\n\t\tif(Array.isArray(arguments[0])) {\r\n\t\t\targs = arguments[0];\r\n\t\t} else {\r\n\t\t\targs = [arguments[0]];\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error('Wrong number of arguments of Select() function');\r\n\t}\r\n\n\tself.group = [];\r\n\n\targs.forEach(function(arg){\r\n\t\tvar expr = new yy.Column({columnid:arg});\r\n\t\tself.group.push(expr);\r\n\t});\r\n\n\treturn self;\r\n};\r\n\nyy.Select.prototype.Where = function(expr){\r\n\tvar self = this;\r\n\tif(typeof expr == 'function' ) {\r\n\t\tself.where = expr;\r\n\t}\r\n\treturn self;\r\n};\r\n\n/*\r\n//\r\n// Functions for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.FuncValue = function(params){ return yy.extend(this, params); }\r\nyy.FuncValue.prototype.toString = function(dontas) {\r\n\tvar s = '';\r\n\n    if(alasql.fn[this.funcid]) s += this.funcid;\r\n    else if(alasql.aggr[this.funcid]) s += this.funcid;\r\n    else if(alasql.stdlib[this.funcid.toUpperCase()] || alasql.stdfn[this.funcid.toUpperCase()]) s += this.funcid.toUpperCase();\r\n\n    s += '(';\r\n\tif(this.args && this.args.length > 0) {\r\n\t\ts += this.args.map(function(arg){\r\n\t\t\treturn arg.toString();\r\n\t\t}).join(',');\r\n\t};\r\n\ts += ')';\r\n\tif(this.as && !dontas) s += ' AS '+this.as.toString();\r\n//\tif(this.alias) s += ' AS '+this.alias;\r\n\treturn s;\r\n}\r\n\nyy.FuncValue.prototype.execute = function (databaseid, params, cb) {\r\n\tvar res = 1;\r\n\talasql.precompile(this,databaseid,params); // Precompile queries\r\n\n\tvar expr =  new Function('params,alasql','var y;return '+this.toJS('','',null));\r\n\texpr(params,alasql);\r\n\tif(cb) res = cb(res);\r\n\treturn res;\r\n}\r\n\nyy.FuncValue.prototype.findAggregator = function(query) {\r\n\tif(this.args && this.args.length > 0) {\r\n\t\tthis.args.forEach(function(arg){ \r\n\t\t\tif(arg.findAggregator) arg.findAggregator(query); \r\n\t\t});\r\n\t}\r\n};\r\n\nyy.FuncValue.prototype.toJS = function(context, tableid, defcols) {\r\n\tvar s = '';\r\n    var funcid = this.funcid;\r\n\t// IF this is standard compile functions\r\n\tif(!alasql.fn[funcid] && alasql.stdlib[funcid.toUpperCase()]) {\r\n\t\tif(this.args && this.args.length > 0) {\r\n\t\t\ts += alasql.stdlib[funcid.toUpperCase()].apply(this, this.args.map(function(arg) {return arg.toJS(context, tableid)}));\r\n\t\t} else {\r\n\t\t\ts += alasql.stdlib[funcid.toUpperCase()]();\r\n\t\t}\r\n\t} else if(!alasql.fn[funcid] && alasql.stdfn[funcid.toUpperCase()]) {\r\n\t\tif(this.newid) s+= 'new ';\r\n\t\ts += 'alasql.stdfn.'+this.funcid.toUpperCase()+'(';\r\n\n\t\tif(this.args && this.args.length > 0) {\r\n\t\t\ts += this.args.map(function(arg){\r\n\t\t\t\treturn arg.toJS(context, tableid, defcols);\r\n\t\t\t}).join(',');\r\n\t\t};\r\n\t\ts += ')';\t\t\r\n\t} else {\r\n\t// This is user-defined run-time function\r\n\t// TODO arguments!!!\r\n\n\t\tif(this.newid) s+= 'new ';\r\n\t\ts += 'alasql.fn.'+this.funcid+'(';\r\n\n\t\tif(this.args && this.args.length > 0) {\r\n\t\t\ts += this.args.map(function(arg){\r\n\t\t\t\treturn arg.toJS(context, tableid, defcols);\r\n\t\t\t}).join(',');\r\n\t\t};\r\n\t\ts += ')';\r\n\t}\r\n\n//\tif(this.alias) s += ' AS '+this.alias;\r\n\treturn s;\r\n}\r\n\nvar stdlib = alasql.stdlib = {}\r\nvar stdfn = alasql.stdfn = {}\r\n\nstdlib.ABS = function(a) {return 'Math.abs('+a+')'};\r\nstdlib.CLONEDEEP = function(a) {return 'alasql.utils.cloneDeep('+a+')'};\r\n\nstdfn.CONCAT = function(){\r\n\treturn Array.prototype.slice.call(arguments).join('');\r\n};\r\nstdlib.EXP = function(a) {return 'Math.pow(Math.E,'+a+')'};\r\n\nstdlib.IIF = function(a,b,c) {\r\n\tif(arguments.length == 3) {\r\n\t\treturn  '(('+a+')?('+b+'):('+c+'))';\r\n\t} else {\r\n\t\tthrow new Error('Number of arguments of IFF is not equals to 3');\r\n\t};\r\n};\r\nstdlib.IFNULL = function(a,b) {return '('+a+'||'+b+')'};\r\nstdlib.INSTR = function(s,p) {return '(('+s+').indexOf('+p+')+1)'};\r\n\n//stdlib.LEN = stdlib.LENGTH = function(s) {return '('+s+'+\"\").length';};\r\n\nstdlib.LEN = stdlib.LENGTH = function(s) {return und(s,'y.length');}\r\n//stdlib.LENGTH = function(s) {return '('+s+').length'};\r\n\nstdlib.LOWER = stdlib.LCASE = function(s) {return und(s,'String(y).toLowerCase()');}\r\n//stdlib.LCASE = function(s) {return '('+s+').toLowerCase()';}\r\n\n// LTRIM\r\n\nstdlib.MAX = stdlib.GREATEST = function(){\r\n      return 'Math.max('+Array.prototype.join.call(arguments, ',')+')'\r\n};\r\n\nstdlib.MIN = stdlib.LEAST = function(){\r\n      return 'Math.min('+Array.prototype.join.call(arguments, ',')+')'\r\n};\r\n\nstdlib.SUBSTRING = stdlib.SUBSTR = stdlib.MID = function(a,b,c){\r\n\tif(arguments.length == 2) return und(a,'y.substr('+b+'-1)');\r\n\telse if(arguments.length == 3) return und(a,'y.substr('+b+'-1,'+c+')');\r\n};\r\n\nstdfn.REGEXP_LIKE = function(a,b,c) {\r\n\n\treturn (a||'').search(RegExp(b,c))>-1;\r\n}\r\n\n// Here we uses undefined instead of null\r\nstdlib.ISNULL = stdlib.NULLIF = function(a,b){return '('+a+'=='+b+'?undefined:'+a+')'};\r\n\nstdlib.POWER = function(a,b) {return 'Math.pow('+a+','+b+')'};\r\n\nstdlib.RANDOM = function(r) {\r\n\tif(arguments.length == 0) {\r\n\t\treturn 'Math.random()';\r\n\t} else {\r\n\t\treturn '(Math.random()*('+r+')|0)';\r\n\t}\r\n};\r\nstdlib.ROUND = function(s,d) {\r\n\tif(arguments.length == 2) {\r\n\t\treturn 'Math.round(('+s+')*Math.pow(10,('+d+')))/Math.pow(10,('+d+'))';\r\n\t} else {\r\n\t\treturn 'Math.round('+s+')';\r\n\t}\r\n};\r\nstdlib.CEIL = stdlib.CEILING = function(s) {return 'Math.ceil('+s+')'};\r\nstdlib.FLOOR = function(s) {return 'Math.floor('+s+')'};\r\n\nstdlib.ROWNUM = function() {return '1'};\r\nstdlib.ROW_NUMBER = function() {return '1'};\r\n\nstdlib.SQRT = function(s) {return 'Math.sqrt('+s+')'};\r\n\nstdlib.TRIM = function(s) {return und(s,'y.trim()');}\r\n\nstdlib.UPPER = stdlib.UCASE = function(s) {return und(s,'String(y).toUpperCase()');}\r\n\n// Concatination of strings\r\nstdfn.CONCAT_WS = function() {\r\n    args = Array.prototype.slice.call(arguments);\r\n    return args.slice(1, args.length).join(args[0]);\r\n};\r\n\n//stdlib.UCASE = function(s) {return '('+s+').toUpperCase()';}\r\n//REPLACE\r\n// RTRIM\r\n// SUBSTR\r\n// TRIM\r\n//REPLACE\r\n// RTRIM\r\n// SUBSTR\r\n// TRIM\r\n\n// Aggregator for joining strings\r\nalasql.aggr.GROUP_CONCAT = function(v,s,stage){\r\n    if(stage == 1) {\r\n    \treturn v; \r\n    } else if(stage == 2) {\r\n    \treturn s+','+v;\r\n    }\r\n};\r\n\nalasql.aggr.MEDIAN = function(v,s,stage){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\tif(stage === 2) {\r\n\t\tif(v !== null) {\r\n\t\t\ts.push(v);\r\n\t\t}\r\n\t\treturn s;\r\n\t} else if(stage === 1) {\r\n\t\tif(v === null) {\r\n\t\t\treturn [];\r\n\t\t} \r\n\t\treturn [v];\r\n\t} else {\r\n\t\tif(!s.length) {\r\n\t\t\treturn s;\r\n\t\t}\r\n\n\t\tvar r = s.sort();\r\n\t\tvar p = (r.length+1)/2;\r\n\t\tif(Number.isInteger(p)) {\r\n\t\t\treturn r[p-1]; \r\n\t\t} \r\n\n\t\treturn (r[Math.floor(p-1)] + r[Math.ceil(p-1)])/2;\r\n\t}\r\n};\r\n\nalasql.aggr.QUART = function(v,s,stage,nth){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Quartile (first quartile per default or input param)\r\n\tif(stage === 2) {\r\n\t\tif(v !== null) {\r\n\t\t\ts.push(v);\t\r\n\t\t} \r\n\t\treturn s;\r\n\t} else if(stage === 1) {\r\n\t\tif(v === null) {\r\n\t\t\treturn [];\r\n\t\t} \r\n\t\treturn [v];\t\t\r\n\t} else {\r\n\t\tif(!s.length) {\r\n\t\t\treturn s;\r\n\t\t} \r\n\n\t\tnth = !nth ? 1 : nth;\r\n\t\tvar r = s.sort();\r\n\t\tvar p = nth*(r.length+1)/4;\r\n\t\tif(Number.isInteger(p)) {\r\n\t\t\treturn r[p-1];\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Integer value\r\n\t\t} \r\n\t\treturn r[Math.floor(p)];\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Math.ceil -1 or Math.floor\t\t\r\n\t}\r\n};\r\n\nalasql.aggr.QUART2 = function(v,s,stage){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Second Quartile\r\n\treturn alasql.aggr.QUART(v,s,stage,2);\t\r\n};\r\nalasql.aggr.QUART3 = function(v,s,stage){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Third Quartile\r\n\treturn alasql.aggr.QUART(v,s,stage,3);\r\n};\r\n\n// Standard deviation\r\nalasql.aggr.VAR = function(v,s,stage){\r\n\tif(stage === 1) {\r\n\t\tif(v === null){\r\n\t\t\treturn {arr:[],sum:0};\r\n\t\t} \r\n\t\treturn {arr:[v],sum:v};\r\n\t} else if(stage === 2) {\r\n\t\tif(v === null){\r\n\t\t\treturn s;\r\n\t\t} \r\n\t\ts.arr.push(v);\r\n\t\ts.sum += v;\r\n\t\treturn s;\r\n\t} else {\r\n\t\tvar N = s.arr.length;\r\n\t\tvar avg = s.sum / N;\r\n\t\tvar std = 0;\r\n\t\tfor(var i=0;i<N;i++) {\r\n\t\t\tstd += (s.arr[i]-avg)*(s.arr[i]-avg);\r\n\t\t}\r\n\t\tstd = std/(N-1);\r\n\t\treturn std;\r\n\t}\r\n};\r\n\nalasql.aggr.STDEV = function(v,s,stage){\r\n\tif(stage === 1 || stage === 2 ) {\r\n\t\treturn alasql.aggr.VAR(v,s,stage);\r\n\t} else {\r\n\t\treturn Math.sqrt(alasql.aggr.VAR(v,s,stage));\r\n\t}\r\n};\r\n\n// Standard deviation\r\n// alasql.aggr.VARP = function(v,s,acc){\r\n\n// };\r\n\nalasql.aggr.VARP = function(v,s,stage){\r\n\tif(stage == 1) {\r\n\t\treturn {arr:[v],sum:v};\r\n\t} else if(stage == 2) {\r\n\t\ts.arr.push(v);\r\n\t\ts.sum += v;\r\n\t\treturn s;\r\n\t} else {\r\n\t\tvar N = s.arr.length;\r\n\t\tvar avg = s.sum / N;\r\n\t\tvar std = 0;\r\n\t\tfor(var i=0;i<N;i++) {\r\n\t\t\tstd += (s.arr[i]-avg)*(s.arr[i]-avg);\r\n\t\t}\r\n\t\tstd = std/N;\r\n\t\treturn std;\r\n\t}\r\n};\r\n\nalasql.aggr.STD = alasql.aggr.STDDEV = alasql.aggr.STDEVP = function(v,s,stage){\r\n\tif(stage == 1 || stage == 2 ) {\r\n\t\treturn alasql.aggr.VARP(v,s,stage);\r\n\t} else {\r\n\t\treturn Math.sqrt(alasql.aggr.VARP(v,s,stage));\r\n\t}\r\n};\r\n\n// String functions\r\nstdfn.REPLACE = function (target,pattern,replacement) {\r\n    return (target||'').split(pattern).join(replacement);\r\n};\r\n\n// This array is required for fast GUID generation\r\nvar lut = []; for (var i=0; i<256; i++) { lut[i] = (i<16?'0':'')+(i).toString(16); }\r\n\nstdfn.NEWID = stdfn.UUID = stdfn.GEN_RANDOM_UUID = function() {\r\n    var d0 = Math.random()*0xffffffff|0;\r\n    var d1 = Math.random()*0xffffffff|0;\r\n    var d2 = Math.random()*0xffffffff|0;\r\n    var d3 = Math.random()*0xffffffff|0;\r\n    return lut[d0&0xff]+lut[d0>>8&0xff]+lut[d0>>16&0xff]+lut[d0>>24&0xff]+'-'+\r\n      lut[d1&0xff]+lut[d1>>8&0xff]+'-'+lut[d1>>16&0x0f|0x40]+lut[d1>>24&0xff]+'-'+\r\n      lut[d2&0x3f|0x80]+lut[d2>>8&0xff]+'-'+lut[d2>>16&0xff]+lut[d2>>24&0xff]+\r\n      lut[d3&0xff]+lut[d3>>8&0xff]+lut[d3>>16&0xff]+lut[d3>>24&0xff];\r\n};\r\n\n/*\r\n//\r\n// CASE for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.CaseValue = function(params) { return yy.extend(this, params); };\r\nyy.CaseValue.prototype.toString = function() {\r\n\tvar s = 'CASE ';\r\n\tif(this.expression) s += this.expression.toString();\r\n\tif(this.whens) {\r\n\t\ts += this.whens.map(function(w) { return ' WHEN '+\r\n\t\t\tw.when.toString() + ' THEN '+w.then.toString()}).join();\r\n\t}\r\n\ts += ' END';\r\n\treturn s;\r\n};\r\n\nyy.CaseValue.prototype.findAggregator = function (query){\r\n\n\tif(this.expression && this.expression.findAggregator) this.expression.findAggregator(query);\r\n\tif(this.whens && this.whens.length > 0) {\r\n\t\tthis.whens.forEach(function(w) { \r\n\t\t\tif(w.when.findAggregator) w.when.findAggregator(query);\r\n\t\t\tif(w.then.findAggregator) w.then.findAggregator(query);\r\n\t\t});\r\n\t};\r\n\tif(this.elses && this.elses.findAggregator) this.elses.findAggregator(query);\r\n};\r\n\nyy.CaseValue.prototype.toJS = function(context, tableid, defcols) {\r\n\n\tvar s = '((function('+context+',params,alasql){var y,r;';\r\n\tif(this.expression) {\r\n\n\t\ts += 'v='+this.expression.toJS(context, tableid, defcols)+';';\r\n\t\ts += (this.whens||[]).map(function(w) { return ' if(v=='+w.when.toJS(context,tableid, defcols)\r\n\t\t\t+') {r='+w.then.toJS(context,tableid, defcols)+'}'; }).join(' else ');\r\n\t\tif(this.elses) s += ' else {r='+this.elses.toJS(context,tableid, defcols)+'}';\r\n\t} else {\r\n\t\ts += (this.whens||[]).map(function(w) { return ' if('+w.when.toJS(context,tableid, defcols)\r\n\t\t\t+') {r='+w.then.toJS(context,tableid, defcols)+'}'; }).join(' else ');\r\n\t\tif(this.elses) s += ' else {r='+this.elses.toJS(context,tableid,defcols)+'}';\r\n\t}\r\n\t// TODO remove bind from CASE\r\n\ts += ';return r;}).bind(this))('+context+',params,alasql)';\r\n\n\treturn s;\r\n};\r\n\n/*\r\n//\r\n// JSON for Alasql.js\r\n// Date: 19.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Json = function (params) { return yy.extend(this, params); }\r\nyy.Json.prototype.toString = function() {\r\n\tvar s = ''; // '@'\r\n\ts += JSONtoString(this.value);\r\n\ts += '';\r\n\treturn s;\r\n};\r\n\nvar JSONtoString = alasql.utils.JSONtoString = function (obj) {\r\n\tvar s = '';\r\n\tif(typeof obj == \"string\") s = '\"'+obj+'\"';\r\n\telse if(typeof obj == \"number\") s = obj;\r\n\telse if(typeof obj == \"boolean\") s = obj;\r\n\telse if(typeof obj == \"object\") {\r\n\t\tif(Array.isArray(obj)) {\r\n\t\t\ts += '['+obj.map(function(b){\r\n\t\t\t\treturn JSONtoString(b);\r\n\t\t\t}).join(',')+']';\r\n\t\t} else if(!obj.toJS || obj instanceof yy.Json) {\r\n\t\t\t// to prevent recursion\r\n\t\t\ts = '{';\r\n\t\t\tvar ss = [];\r\n\t\t\tfor(var k in obj) {\r\n\t\t\t\tvar s1 = ''; \r\n\t\t\t\tif(typeof k == \"string\") s1 += '\"'+k+'\"';\r\n\t\t\t\telse if(typeof k == \"number\") s1 += k;\r\n\t\t\t\telse if(typeof k == \"boolean\") s1 += k;\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error('THis is not ES6... no expressions on left side yet');\r\n\t\t\t\t}\r\n\t\t\t\ts1 += ':'+JSONtoString(obj[k]);\r\n\t\t\t\tss.push(s1);\r\n\t\t\t};\r\n\t\t\ts += ss.join(',')+'}';\r\n\t\t} else if(obj.toString)\t{\r\n\t\t\ts = obj.toString();\r\n\t\t} else {\r\n\t\t\tthrow new Error('1Can not show JSON object '+JSON.stringify(obj));\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error('2Can not show JSON object '+JSON.stringify(obj));\t\t\r\n\t}\r\n\n\treturn s;\r\n}\r\n\nfunction JSONtoJS(obj, context, tableid, defcols) {\r\n\tvar s = '';\r\n\tif(typeof obj == \"string\") s = '\"'+obj+'\"';\r\n\telse if(typeof obj == \"number\") s = '('+obj+')';\r\n\telse if(typeof obj == \"boolean\") s = obj;\r\n\telse if(typeof obj == \"object\") {\r\n\t\tif(Array.isArray(obj)) {\r\n\t\t\ts += '['+obj.map(function(b){\r\n\t\t\t\treturn JSONtoJS(b, context, tableid, defcols);\r\n\t\t\t}).join(',')+']';\r\n\t\t} else if(!obj.toJS || obj instanceof yy.Json) {\r\n\t\t\t// to prevent recursion\r\n\t\t\ts = '{';\r\n\t\t\tvar ss = [];\r\n\t\t\tfor(var k in obj) {\r\n\t\t\t\tvar s1 = ''; \r\n\t\t\t\tif(typeof k == \"string\") s1 += '\"'+k+'\"';\r\n\t\t\t\telse if(typeof k == \"number\") s1 += k;\r\n\t\t\t\telse if(typeof k == \"boolean\") s1 += k;\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error('THis is not ES6... no expressions on left side yet');\r\n\t\t\t\t}\r\n\t\t\t\ts1 += ':'+JSONtoJS(obj[k], context, tableid, defcols);\r\n\t\t\t\tss.push(s1);\r\n\t\t\t};\r\n\t\t\ts += ss.join(',')+'}';\r\n\t\t} else if(obj.toJS)\t{\r\n\t\t\ts = obj.toJS(context, tableid, defcols);\r\n\t\t} else {\r\n\t\t\tthrow new Error('1Can not parse JSON object '+JSON.stringify(obj));\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error('2Can not parse JSON object '+JSON.stringify(obj));\t\t\r\n\t}\r\n\n\treturn s;\r\n}\r\n\nyy.Json.prototype.toJS = function(context, tableid, defcols) {\r\n\t// TODO redo\r\n\treturn JSONtoJS(this.value,context, tableid, defcols);\r\n}\r\n\n/*\r\n//\r\n// CAST and CONVERT functions\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Convert = function(params) { return yy.extend(this, params); };\r\nyy.Convert.prototype.toString = function() {\r\n\tvar s = 'CONVERT(';\r\n\ts += this.dbtypeid;\r\n\tif(typeof this.dbsize != 'undefined') {\r\n\t\ts += '('+this.dbsize;\r\n\t\tif(this.dbprecision) s += ','+dbprecision;\r\n\t\ts += ')';\r\n\t}\r\n\ts += ','+this.expression.toString();\r\n\tif(this.style) s += ','+this.style;\r\n\ts += ')';\r\n\treturn s;\r\n};\r\nyy.Convert.prototype.toJS = function(context, tableid, defcols) {\r\n\n//\tif(this.style) {\r\n\treturn 'alasql.stdfn.CONVERT('+this.expression.toJS(context, tableid, defcols)\r\n\t\t+',{dbtypeid:\"'+this.dbtypeid+'\",dbsize:'+this.dbsize+',style:'+\r\n\t\tthis.style+'})';\t\t\r\n//\t}\r\n\n\tthrow new Error('There is not such type conversion for '+this.toString());\r\n};\r\n\n/**\r\n Convert one type to another\r\n */\r\nalasql.stdfn.CONVERT = function(value, args) {\r\n\tvar val = value;\r\n\n\tif(args.style) {\r\n\t\t// TODO 9,109, 20,120,21,121,126,130,131 conversions\r\n\t\tvar t;\r\n\t\tif(/\\d{8}/.test(val)){\r\n\t\t\tt = new Date(+val.substr(0,4),+val.substr(4,2)-1,+val.substr(6,2));\t\t\r\n\t\t} else{\r\n\t\t\tt = new Date(val);\r\n\t\t}\r\n\t\tswitch(args.style){\r\n\t\t\tcase 1: // mm/dd/yy\r\n\t\t\t\tval =  (\"0\"+(t.getMonth()+1)).substr(-2)+'/'+(\"0\"+t.getDate()).substr(-2)+'/'+(\"0\"+t.getYear()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2: \t// yy.mm.dd\r\n\t\t\t\tval =  (\"0\"+t.getYear()).substr(-2)+'.'+(\"0\"+(t.getMonth()+1)).substr(-2)+'.'+(\"0\"+t.getDate()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3: \t// dd/mm/yy\r\n\t\t\t\tval =  (\"0\"+t.getDate()).substr(-2)+'/'+(\"0\"+(t.getMonth()+1)).substr(-2)+'/'+(\"0\"+t.getYear()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4: \t// dd.mm.yy\r\n\t\t\t\tval =  (\"0\"+t.getDate()).substr(-2)+'.'+(\"0\"+(t.getMonth()+1)).substr(-2)+'.'+(\"0\"+t.getYear()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5: \t// dd-mm-yy\r\n\t\t\t\tval =  (\"0\"+t.getDate()).substr(-2)+'-'+(\"0\"+(t.getMonth()+1)).substr(-2)+'-'+(\"0\"+t.getYear()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6: \t// dd mon yy\r\n\t\t\t\tval =  (\"0\"+t.getDate()).substr(-2)+' '+t.toString().substr(4,3).toLowerCase()+' '+(\"0\"+t.getYear()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7: \t// Mon dd,yy\r\n\t\t\t\tval =  t.toString().substr(4,3)+' '+(\"0\"+t.getDate()).substr(-2)+','+(\"0\"+t.getYear()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8 : \t// hh:mm:ss\r\n\t\t\tcase 108 : \t// hh:mm:ss\r\n\t\t\t\tval =  (\"0\"+t.getHours()).substr(-2)+':'+(\"0\"+(t.getMinutes())).substr(-2)+':'+(\"0\"+t.getSeconds()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10: \t// mm-dd-yy\r\n\t\t\t\tval =  (\"0\"+(t.getMonth()+1)).substr(-2)+'-'+(\"0\"+t.getDate()).substr(-2)+'-'+(\"0\"+t.getYear()).substr(-2);\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 11: \t// yy/mm/dd\r\n\t\t\t\tval =  (\"0\"+t.getYear()).substr(-2)+'/'+(\"0\"+(t.getMonth()+1)).substr(-2)+'/'+(\"0\"+t.getDate()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 12: \t// yymmdd\r\n\t\t\t\tval =  (\"0\"+t.getYear()).substr(-2)+(\"0\"+(t.getMonth()+1)).substr(-2)+(\"0\"+t.getDate()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 101: \t// mm/dd/yyyy\r\n\t\t\t\tval =  (\"0\"+(t.getMonth()+1)).substr(-2)+'/'+(\"0\"+t.getDate()).substr(-2)+'/'+t.getFullYear();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 102: \t// yyyy.mm.dd\r\n\t\t\t\tval =  t.getFullYear()+'.'+(\"0\"+(t.getMonth()+1)).substr(-2)+'.'+(\"0\"+t.getDate()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 103: \t// dd/mm/yyyy\r\n\t\t\t\tval =  (\"0\"+t.getDate()).substr(-2)+'/'+(\"0\"+(t.getMonth()+1)).substr(-2)+'/'+t.getFullYear();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 104: \t// dd.mm.yyyy\r\n\t\t\t\tval =  (\"0\"+t.getDate()).substr(-2)+'.'+(\"0\"+(t.getMonth()+1)).substr(-2)+'.'+t.getFullYear();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 105: \t// dd-mm-yyyy\r\n\t\t\t\tval =  (\"0\"+t.getDate()).substr(-2)+'-'+(\"0\"+(t.getMonth()+1)).substr(-2)+'-'+t.getFullYear();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 106: \t// dd mon yyyy\r\n\t\t\t\tval =  (\"0\"+t.getDate()).substr(-2)+' '+t.toString().substr(4,3).toLowerCase()+' '+t.getFullYear();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 107: \t// Mon dd,yyyy\r\n\t\t\t\tval =  t.toString().substr(4,3)+' '+(\"0\"+t.getDate()).substr(-2)+','+t.getFullYear();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 110: \t// mm-dd-yyyy\r\n\t\t\t\tval =  (\"0\"+(t.getMonth()+1)).substr(-2)+'-'+(\"0\"+t.getDate()).substr(-2)+'-'+t.getFullYear();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 111: \t// yyyy/mm/dd\r\n\t\t\t\tval =  t.getFullYear()+'/'+(\"0\"+(t.getMonth()+1)).substr(-2)+'/'+(\"0\"+t.getDate()).substr(-2);\r\n\t\t\t\tbreak;\r\n\n\t\t\tcase 112: \t// yyyymmdd\r\n\t\t\t\tval =  t.getFullYear()+(\"0\"+(t.getMonth()+1)).substr(-2)+(\"0\"+t.getDate()).substr(-2);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('The CONVERT style '+args.style+' is not realized yet.');\r\n\t\t}\r\n\t};\r\n\n\tvar udbtypeid = args.dbtypeid.toUpperCase();\r\n\n\tif(args.dbtypeid == 'Date') {\r\n\t\treturn new Date(val);\r\n\t} else if(udbtypeid == 'DATE') {\r\n\t\tvar d = new Date(val);\r\n\t\tvar s = d.getFullYear()+\".\"+(\"0\"+(d.getMonth()+1)).substr(-2)+\".\"+(\"0\"+d.getDate()).substr(-2);\r\n\t\treturn s;\r\n\t} else if(udbtypeid == 'DATETIME' || udbtypeid == 'DATETIME2') {\r\n\t\tvar d = new Date(val);\r\n\t\tvar s = d.getFullYear()+\".\"+(\"0\"+(d.getMonth()+1)).substr(-2)+\".\"+(\"0\"+d.getDate()).substr(-2);\r\n\t\ts += \" \"+(\"0\"+d.getHours()).substr(-2)+\":\"+(\"0\"+d.getMinutes()).substr(-2)+\":\"+(\"0\"+d.getSeconds()).substr(-2);\r\n\t\ts += '.'+(\"00\"+d.getMilliseconds()).substr(-3)\r\n\t\treturn s;\r\n\t} else if(['MONEY'].indexOf(udbtypeid)>-1) {\r\n\t\tvar m = +val;\r\n\t\treturn (m|0)+((m*100)%100)/100;\r\n\t} else if(['BOOLEAN'].indexOf(udbtypeid)>-1) {\r\n\t\treturn !!val;\r\n\t} else if(['INT','INTEGER','SMALLINT','BIGINT','SERIAL','SMALLSERIAL','BIGSERIAL'].indexOf(args.dbtypeid.toUpperCase())>-1) {\r\n\t\treturn val|0;\r\n\t} else if(['STRING','VARCHAR','NVARCHAR', 'CHARACTER VARIABLE'].indexOf(args.dbtypeid.toUpperCase())>-1) {\r\n\t\tif(args.dbsize) return (\"\"+val).substr(0,args.dbsize);\r\n\t\telse return \"\"+val;\r\n\t} else if(['CHAR','CHARACTER', 'NCHAR'].indexOf(udbtypeid)>-1) {\r\n\t\treturn (val+(new Array(args.dbsize+1).join(\" \"))).substr(0,args.dbsize);\r\n\t\t//else return \"\"+val.substr(0,1);\r\n\t} else if(['NUMBER','FLOAT'].indexOf(udbtypeid)>-1) {\r\n\t\tif(typeof args.dbprecision != 'undefined') {\r\n\t\t\tvar m = +val;\r\n\t\t\tvar fxd = Math.pow(10,args.dbprecision);\r\n\t\t\treturn (m|0)+((m*fxd)%fxd)/fxd;\r\n\t\t} else {\r\n\t\t\treturn +val;\r\n\t\t}\r\n\t} else if((['DECIMAL','NUMERIC'].indexOf(udbtypeid)>-1)) {\r\n\t\tvar m = +val;\r\n\t\tvar fxd = Math.pow(10,args.dbprecision);\r\n\t\treturn (m|0)+((m*fxd)%fxd)/fxd;\r\n\t} else if(['JSON'].indexOf(udbtypeid)>-1) {\r\n\t\tif(typeof val == 'object') return val;\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(val);\r\n\t\t} catch(err) { throw new Error('Cannot convert string to JSON');};\r\n\t}\r\n\treturn val;\r\n};\r\n\n/*\r\n//\r\n// CREATE TABLE for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.ColumnDef = function (params) { return yy.extend(this, params); }\r\nyy.ColumnDef.prototype.toString = function() {\r\n\tvar s =  this.columnid;\r\n\tif(this.dbtypeid){\r\n\t\ts += ' '+this.dbtypeid;\r\n\t}\r\n\n\tif(this.dbsize) {\r\n\t\ts += '('+this.dbsize;\r\n\t\tif(this.dbprecision){\r\n\t\t\ts += ','+this.dbprecision;\r\n\t\t}\r\n\t\ts += ')';\r\n\t}\r\n\n\tif(this.primarykey){\r\n\t\ts += ' PRIMARY KEY';\r\n\t}\r\n\n\tif(this.notnull){\r\n\t\ts += ' NOT NULL';\r\n\t}\r\n\n\treturn s;\r\n}\r\n\nyy.CreateTable = function (params) { return yy.extend(this, params); }\r\nyy.CreateTable.prototype.toString = function() {\r\n\tvar s = 'CREATE';\r\n\tif(this.temporary){\r\n\t\ts+=' TEMPORARY';\r\n\t}\r\n\n\tif(this.view){\r\n\t\ts += ' VIEW';\r\n\t} else{\r\n\t\ts += ' '+(this.class?'CLASS':'TABLE');\r\n\t}\r\n\tif(this.ifnotexists){\r\n\t\ts += ' IF  NOT EXISTS';\r\n\t}\r\n\ts += ' '+this.table.toString();\r\n\tif(this.viewcolumns) {\r\n\t\ts += '('+this.viewcolumns.map(function(vcol){\r\n\t\t\treturn vcol.toString();\r\n\t\t}).join(',')+')';\r\n\t}\r\n\tif(this.as){\r\n\t\ts += ' AS '+this.as;\r\n\t} else { \r\n\t\tvar ss = this.columns.map(function(col){\r\n\t\t\treturn col.toString();\r\n\t\t});\r\n\t\ts += ' ('+ss.join(',')+')';\r\n\t}\r\n\n\tif(this.view && this.select) {\r\n\t\ts += ' AS '+this.select.toString();\r\n\t}\r\n\n\treturn s;\r\n}\r\n\n// CREATE TABLE\r\n//yy.CreateTable.prototype.compile = returnUndefined;\r\nyy.CreateTable.prototype.execute = function (databaseid, params, cb) {\r\n    //\tvar self = this;\r\n\tvar db = alasql.databases[this.table.databaseid || databaseid];\r\n\n\tvar tableid = this.table.tableid;\r\n\tif(!tableid) {\r\n\t\tthrow new Error('Table name is not defined');\r\n\t}\r\n\n//\tvar ifnotexists = this.ifnotexists;\r\n\tvar columns = this.columns;\r\n\t// if(false) {\r\n\t// \tif(!columns) {\r\n\t// \t\tthrow new Error('Columns are not defined');\r\n\t// \t}\r\n\t// }\r\n\tvar constraints = this.constraints||[];\r\n\n\t// IF NOT EXISTS\r\n\tif(this.ifnotexists && db.tables[tableid]){\r\n\t\treturn cb?cb(0):0;\r\n\t}\r\n\n\tif(db.tables[tableid]) {\r\n\t\tthrow new Error('Can not create table \\''+tableid\r\n\t\t\t+'\\', because it already exists in the database \\''+db.databaseid+'\\'');\r\n\t}\r\n\n\tvar table = db.tables[tableid] = new alasql.Table(); // TODO Can use special object?\r\n\t// If this is a class\r\n\tif(this.class) {\r\n\t\ttable.isclass = true;\r\n\t}\r\n\n\tvar ss = [];  // DEFAULT function components\r\n\tvar uss = []; // ON UPDATE function components\r\n\tif(columns) {\r\n\t\tcolumns.forEach(function(col) {\r\n\t\t\tvar dbtypeid = col.dbtypeid;\r\n\t\t\tif(!alasql.fn[dbtypeid]){\r\n\t\t\t\tdbtypeid = dbtypeid.toUpperCase();\r\n\t\t\t}\r\n\n\t\t\t// Process SERIAL data type like Postgress\r\n\t\t\tif(['SERIAL','SMALLSERIAL','BIGSERIAL'].indexOf(dbtypeid)>-1){\r\n\t\t\t\tcol.identity = {value:1,step:1};\r\n\t\t\t}\r\n\n\t\t\tvar newcol = {\r\n\t\t\t\tcolumnid: col.columnid,\r\n\t\t\t\tdbtypeid: dbtypeid, \r\n\t\t\t\tdbsize: col.dbsize, \t\t\t// Fixed issue #150\r\n\t\t\t\tdbprecision: col.dbprecision, \t// Fixed issue #150\r\n\t\t\t\tnotnull: col.notnull,\r\n\t\t\t\tidentity: col.identity\r\n\t\t\t};\r\n\t\t\tif(col.identity) {\r\n\t\t\t\ttable.identities[col.columnid]={value:+col.identity.value,step:+col.identity.step};\r\n\n\t\t\t}\r\n\t\t\tif(col.check) {\r\n\t\t\t\ttable.checks.push({id: col.check.constrantid, fn: new Function(\"r\",'var y;return '+col.check.expression.toJS('r',''))});\r\n\t\t\t}\r\n\n\t\t\tif(col.default) {\r\n\t\t\t\tss.push('\\''+col.columnid+'\\':'+col.default.toJS('r',''));\r\n\t\t\t}\r\n\n\t\t\t// Check for primary key\r\n\t\t\tif(col.primarykey) {\r\n\t\t\t\tvar pk = table.pk = {};\r\n\t\t\t\tpk.columns = [col.columnid];\r\n\t\t\t\tpk.onrightfns = 'r[\\''+col.columnid+'\\']';\r\n\t\t\t\tpk.onrightfn = new Function(\"r\",'var y;return '+pk.onrightfns);\r\n\t\t\t\tpk.hh = hash(pk.onrightfns);\r\n\t\t\t\ttable.uniqs[pk.hh] = {};\r\n\t\t\t}\r\n\n\t\t\t// UNIQUE clause\r\n\t\t\tif(col.unique) {\r\n\t\t\t\tvar uk = {};\r\n\t\t\t\ttable.uk = table.uk||[];\r\n\t\t\t\ttable.uk.push(uk);\r\n\t\t\t\tuk.columns = [col.columnid];\r\n\t\t\t\tuk.onrightfns = 'r[\\''+col.columnid+'\\']';\r\n\t\t\t\tuk.onrightfn = new Function(\"r\",'var y;return '+uk.onrightfns);\r\n\t\t\t\tuk.hh = hash(uk.onrightfns);\r\n\t\t\t\ttable.uniqs[uk.hh] = {};\r\n\t\t\t}\r\n\n\t\t\t// UNIQUE clause\r\n\t\t\tif(col.foreignkey) {\r\n\n\t\t\t\tvar fk = col.foreignkey.table;\r\n\t\t\t\tvar fktable = alasql.databases[fk.databaseid||alasql.useid].tables[fk.tableid];\r\n\t\t\t\tif(typeof fk.columnid === 'undefined') {\r\n\t\t\t\t\tif(fktable.pk.columns && fktable.pk.columns.length >0 ){\r\n\t\t\t\t\t\tfk.columnid = fktable.pk.columns[0];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('FOREIGN KEY allowed only to tables with PRIMARY KEYs');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\n\t\t\t\tvar fkfn = function(r) {\r\n\t\t\t\t\tvar rr = {};\r\n\t\t\t\t\tif(typeof r[col.columnid] === 'undefined'){\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trr[fk.columnid] = r[col.columnid];\r\n\t\t\t\t\tvar addr = fktable.pk.onrightfn(rr);\r\n\n\t\t\t\t\tif(!fktable.uniqs[fktable.pk.hh][addr]) {\r\n\t\t\t\t\t\tthrow new Error('Foreign key \"'+r[col.columnid]+'\" is not found in table '+fktable.tableid);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t};\r\n\t\t\t\ttable.checks.push({fn: fkfn});\r\n\t\t\t}\r\n\n\t\t\tif(col.onupdate) {\r\n\t\t\t\tuss.push('r[\\''+col.columnid+'\\']='+col.onupdate.toJS('r',''));\r\n\t\t\t}\r\n\n\t\t\ttable.columns.push(newcol);\r\n\t\t\ttable.xcolumns[newcol.columnid] = newcol;\r\n\n\t\t});\r\n\t}\r\n\ttable.defaultfns = ss.join(',');\r\n\ttable.onupdatefns = uss.join(';');\r\n\n//\tif(constraints) {\r\n\tconstraints.forEach(function(con) {\r\n\n\t\tvar checkfn;\r\n\n\t\tif(con.type === 'PRIMARY KEY') {\r\n\t\t\tif(table.pk) {\r\n\t\t\t\tthrow new Error('Primary key already exists');\r\n\t\t\t}\r\n\t\t\tvar pk = table.pk = {};\r\n\t\t\tpk.columns = con.columns;\r\n\t\t\tpk.onrightfns = pk.columns.map(function(columnid){\r\n\t\t\t\treturn 'r[\\''+columnid+'\\']'\r\n\t\t\t}).join(\"+'`'+\");\r\n\t\t\tpk.onrightfn = new Function(\"r\",'var y;return '+pk.onrightfns);\r\n\t\t\tpk.hh = hash(pk.onrightfns);\r\n\t\t\ttable.uniqs[pk.hh] = {};\t\t\t\t\t\r\n\t\t} else if(con.type === 'CHECK') {\r\n\n\t\t\tcheckfn = new Function(\"r\",'var y;return '+con.expression.toJS('r',''))\r\n\t\t} else if(con.type === 'UNIQUE') {\r\n\n\t\t\tvar uk = {};\r\n\t\t\ttable.uk = table.uk||[];\r\n\t\t\ttable.uk.push(uk);\r\n\t\t\tuk.columns = con.columns;\r\n\t\t\tuk.onrightfns = uk.columns.map(function(columnid){\r\n\t\t\t\treturn 'r[\\''+columnid+'\\']'\r\n\t\t\t}).join(\"+'`'+\");\r\n\t\t\tuk.onrightfn = new Function(\"r\",'var y;return '+uk.onrightfns);\r\n\t\t\tuk.hh = hash(uk.onrightfns);\r\n\t\t\ttable.uniqs[uk.hh] = {};\t\t\t\t\t\r\n\t\t} else if(con.type === 'FOREIGN KEY') {\r\n\n\t\t\tvar col = table.xcolumns[con.columns[0]];\r\n\t\t\tvar fk = con.fktable;\r\n\t\t\tif(con.fkcolumns && con.fkcolumns.length>0){\r\n\t\t\t\tfk.columnid = con.fkcolumns[0];\r\n \t\t\t}\r\n \t\t\tvar fktable = alasql.databases[fk.databaseid||alasql.useid].tables[fk.tableid];\r\n\t\t\tif(typeof fk.columnid === 'undefined') {\r\n\t\t\t\tfk.columnid = fktable.pk.columns[0];\r\n\t\t\t}\r\n\n\t\t\tcheckfn = function(r) {\r\n\t\t\t\tvar rr = {};\r\n\t\t\t\tif(typeof r[col.columnid] === 'undefined'){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\trr[fk.columnid] = r[col.columnid];\r\n\t\t\t\tvar addr = fktable.pk.onrightfn(rr);\r\n\n\t\t\t\tif(!fktable.uniqs[fktable.pk.hh][addr]) {\r\n\n\t\t\t\t\tthrow new Error('Foreign key \"'+r[col.columnid]+'\" is not found in table '+fktable.tableid);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (checkfn) table.checks.push({fn: checkfn, id: con.constraintid, fk: con.type === 'FOREIGN KEY'});\r\n\t});\r\n\n\tif(this.view && this.viewcolumns) {\r\n\t\tvar self = this;\r\n\t\tthis.viewcolumns.forEach(function(vcol,idx){\r\n\t\t\tself.select.columns[idx].as = vcol.columnid;\r\n\t\t});\r\n\t}\r\n\n    //Used in 420from queryfn when table.view = true!\r\n    if(this.view && this.select) {\r\n\ttable.view = true;\r\n\n\ttable.select = this.select.compile(this.table.databaseid||databaseid);\r\n    }\r\n\n\tif(db.engineid) {\r\n\n\t\treturn alasql.engines[db.engineid].createTable(this.table.databaseid || databaseid, tableid, this.ifnotexists, cb);\r\n\n\t}\r\n\n//\t}\r\n\n    table.insert = function(r,orreplace) {\r\n\t\tvar oldinserted = alasql.inserted;\r\n\t\talasql.inserted = [r];\r\n\n\t\tvar table = this;\r\n\n\t\tvar toreplace = false; // For INSERT OR REPLACE\r\n\n/*\r\n\t\t// IDENTINY or AUTO_INCREMENT\r\n\t\t// if(table.identities && table.identities.length>0) {\r\n\t\t// \ttable.identities.forEach(function(ident){\r\n\t\t// \t\tr[ident.columnid] = ident.value;\r\n\t\t// \t});\r\n\t\t// }\r\n*/\r\n\t\t// Trigger prevent functionality\r\n\t\tvar prevent = false;\r\n\t\tfor(var tr in table.beforeinsert) {\r\n\t\t\tvar trigger = table.beforeinsert[tr];\r\n\t\t\tif(trigger) {\r\n\t\t\t\tif(trigger.funcid) {\r\n\t\t\t\t\tif(alasql.fn[trigger.funcid](r) === false) prevent = prevent || true;\r\n\t\t\t\t} else if(trigger.statement) {\r\n\t\t\t\t\tif(trigger.statement.execute(databaseid) === false) prevent = prevent || true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tif(prevent) return; \r\n\n\t\t// Trigger prevent functionality\r\n\t\tvar escape = false;\r\n\t\tfor(var tr in table.insteadofinsert) {\r\n\t\t\tescape = true;\r\n\t\t\tvar trigger = table.insteadofinsert[tr];\r\n\t\t\tif(trigger) {\r\n\t\t\t\tif(trigger.funcid) {\r\n\t\t\t\t\talasql.fn[trigger.funcid](r);\r\n\t\t\t\t} else if(trigger.statement) {\r\n\t\t\t\t\ttrigger.statement.execute(databaseid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tif(escape) return;\r\n\n\t\tfor(var columnid in table.identities){\r\n\t\t\tvar ident = table.identities[columnid];\r\n\n\t\t\tr[columnid] = ident.value;\r\n\n\t\t}\r\n\n\t\tif(table.checks && table.checks.length>0) {\r\n\t\t\ttable.checks.forEach(function(check){\r\n\t\t\t\tif(!check.fn(r)) {\r\n\n\t\t\t\t\tthrow new Error('Violation of CHECK constraint ' + (check.id || ''));\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\n\t\ttable.columns.forEach(function(column){\r\n\t\t\tif(column.notnull && typeof r[column.columnid] === 'undefined') {\r\n\t\t\t\tthrow new Error('Wrong NULL value in NOT NULL column '+column.columnid);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(table.pk) {\r\n\t\t\tvar pk = table.pk;\r\n\t\t\tvar addr = pk.onrightfn(r);\r\n\n\t\t\tif(typeof table.uniqs[pk.hh][addr] !== 'undefined') {\r\n\n\t\t\t\tif(orreplace) toreplace=table.uniqs[pk.hh][addr]; else\r\n\t\t\t\tthrow new Error('Cannot insert record, because it already exists in primary key index');\r\n\t\t\t} \r\n\n\t\t}\r\n\n\t\tif(table.uk && table.uk.length) {\r\n\t\t\ttable.uk.forEach(function(uk){\r\n\t\t\t\tvar ukaddr = uk.onrightfn(r);\r\n\t\t\t\tif(typeof table.uniqs[uk.hh][ukaddr] !== 'undefined') {\r\n\t\t\t\t\tif(orreplace) toreplace=table.uniqs[uk.hh][ukaddr]; else\r\n\t\t\t\t\tthrow new Error('Cannot insert record, because it already exists in unique index');\r\n\t\t\t\t} \t\t\t\t\r\n\n\t\t\t});\r\n\t\t}\r\n\n\t\tif(toreplace) {\r\n\t\t\t// Do UPDATE!!!\r\n\n\t\t\ttable.update(function(t){\r\n\t\t\t\tfor(var f in r) t[f] = r[f];\r\n\t\t\t},table.data.indexOf(toreplace),params);\r\n\t\t} else {\r\n\t\t\ttable.data.push(r);\r\n\n\t\t// Final change before insert\r\n\n\t\t// Update indices\r\n\n\t\t\tfor(var columnid in table.identities){\r\n\t\t\t\tvar ident = table.identities[columnid];\r\n\n\t\t\t\tident.value += ident.step;\r\n\n\t\t\t}\r\n\n\t\t\tif(table.pk) {\r\n\t\t\t\tvar pk = table.pk;\r\n\t\t\t\tvar addr = pk.onrightfn(r);\r\n\t\t\t\ttable.uniqs[pk.hh][addr]=r;\r\n\t\t\t}\r\n\t\t\tif(table.uk && table.uk.length) {\r\n\t\t\t\ttable.uk.forEach(function(uk){\r\n\t\t\t\t\tvar ukaddr = uk.onrightfn(r);\r\n\t\t\t\t\ttable.uniqs[uk.hh][ukaddr]=r;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\n\t\t// Trigger prevent functionality\r\n\t\tfor(var tr in table.afterinsert) {\r\n\t\t\tvar trigger = table.afterinsert[tr];\r\n\t\t\tif(trigger) {\r\n\t\t\t\tif(trigger.funcid) {\r\n\t\t\t\t\talasql.fn[trigger.funcid](r);\r\n\t\t\t\t} else if(trigger.statement) {\r\n\t\t\t\t\ttrigger.statement.execute(databaseid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\talasql.inserted = oldinserted;\r\n\t};\r\n\n\ttable.delete = function(index) {\r\n\t\tvar table = this;\r\n\t\tvar r = table.data[index];\r\n\n\t\t// Prevent trigger\r\n\t\tvar prevent = false;\r\n\t\tfor(var tr in table.beforedelete) {\r\n\t\t\tvar trigger = table.beforedelete[tr];\r\n\t\t\tif(trigger) {\r\n\t\t\t\tif(trigger.funcid) {\r\n\t\t\t\t\tif(alasql.fn[trigger.funcid](r) === false) prevent = prevent || true;\r\n\t\t\t\t} else if(trigger.statement) {\r\n\t\t\t\t\tif(trigger.statement.execute(databaseid) === false) prevent = prevent || true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tif(prevent) return false; \r\n\n\t\t// Trigger prevent functionality\r\n\t\tvar escape = false;\r\n\t\tfor(var tr in table.insteadofdelete) {\r\n\t\t\tescape = true;\r\n\t\t\tvar trigger = table.insteadofdelete[tr];\r\n\t\t\tif(trigger) {\r\n\t\t\t\tif(trigger.funcid) {\r\n\t\t\t\t\talasql.fn[trigger.funcid](r);\r\n\t\t\t\t} else if(trigger.statement) {\r\n\t\t\t\t\ttrigger.statement.execute(databaseid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tif(escape) return;\r\n\n\t\tif(this.pk) {\r\n\t\t\tvar pk = this.pk;\r\n\t\t\tvar addr = pk.onrightfn(r);\r\n\t\t\tif(typeof this.uniqs[pk.hh][addr] === 'undefined') {\r\n\t\t\t\tthrow new Error('Something wrong with primary key index on table');\r\n\t\t\t} else {\r\n\t\t\t\tthis.uniqs[pk.hh][addr]=undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(table.uk && table.uk.length) {\r\n\t\t\ttable.uk.forEach(function(uk){\r\n\t\t\t\tvar ukaddr = uk.onrightfn(r);\r\n\t\t\t\tif(typeof table.uniqs[uk.hh][ukaddr] === 'undefined') {\r\n\t\t\t\t\tthrow new Error('Something wrong with unique index on table');\r\n\t\t\t\t} \t\t\t\t\r\n\t\t\t\ttable.uniqs[uk.hh][ukaddr]=undefined;\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\n\ttable.deleteall = function() {\r\n\t\tthis.data.length = 0;\r\n\t\tif(this.pk) {\r\n\n\t\t\tthis.uniqs[this.pk.hh] = {};\r\n\t\t}\r\n\t\tif(table.uk && table.uk.length) {\r\n\t\t\ttable.uk.forEach(function(uk){\r\n\t\t\t\ttable.uniqs[uk.hh]={};\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\n\ttable.update = function(assignfn, i, params) {\r\n\t\t// TODO: Analyze the speed\r\n\t\tvar r = cloneDeep(this.data[i]);\r\n\n\t\tvar pk;\r\n\t\t// PART 1 - PRECHECK\r\n\t\tif(this.pk) {\r\n\t\t\tpk = this.pk;\r\n\t\t\tpk.pkaddr = pk.onrightfn(r,params);\r\n\t\t\tif(typeof this.uniqs[pk.hh][pk.pkaddr] === 'undefined') {\r\n\t\t\t\tthrow new Error('Something wrong with index on table');\r\n\t\t\t} \r\n\t\t}\r\n\t\tif(table.uk && table.uk.length) {\r\n\t\t\ttable.uk.forEach(function(uk){\r\n\t\t\t\tuk.ukaddr = uk.onrightfn(r);\r\n\t\t\t\tif(typeof table.uniqs[uk.hh][uk.ukaddr] === 'undefined') {\r\n\t\t\t\t\tthrow new Error('Something wrong with unique index on table');\r\n\t\t\t\t} \t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\n\t\tassignfn(r,params,alasql);\r\n\n\t\t// Prevent trigger\r\n\t\tvar prevent = false;\r\n\t\tfor(var tr in table.beforeupdate) {\r\n\t\t\tvar trigger = table.beforeupdate[tr];\r\n\t\t\tif(trigger) {\r\n\t\t\t\tif(trigger.funcid) {\r\n\t\t\t\t\tif(alasql.fn[trigger.funcid](this.data[i],r) === false) prevent = prevent || true;\r\n\t\t\t\t} else if(trigger.statement) {\r\n\t\t\t\t\tif(trigger.statement.execute(databaseid) === false) prevent = prevent || true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tif(prevent) return false; \r\n\n\t\t// Trigger prevent functionality\r\n\t\tvar escape = false;\r\n\t\tfor(var tr in table.insteadofupdate) {\r\n\t\t\tescape = true;\r\n\t\t\tvar trigger = table.insteadofupdate[tr];\r\n\t\t\tif(trigger) {\r\n\t\t\t\tif(trigger.funcid) {\r\n\t\t\t\t\talasql.fn[trigger.funcid](this.data[i],r);\r\n\t\t\t\t} else if(trigger.statement) {\r\n\t\t\t\t\ttrigger.statement.execute(databaseid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tif(escape) return;\r\n\n\t\t// PART 2 - POST CHECK\r\n\t\tif(table.checks && table.checks.length>0) {\r\n\t\t\ttable.checks.forEach(function(check){\r\n\t\t\t\tif(!check.fn(r)) {\r\n\t\t\t\t\tthrow new Error('Violation of CHECK constraint ' + (check.id || ''));\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\n\t\ttable.columns.forEach(function(column){\r\n\t\t\tif(column.notnull && typeof r[column.columnid] === 'undefined') {\r\n\t\t\t\tthrow new Error('Wrong NULL value in NOT NULL column '+column.columnid);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.pk) {\r\n\t\t\t\tpk.newpkaddr = pk.onrightfn(r);\r\n\t\t\t\tif(typeof this.uniqs[pk.hh][pk.newpkaddr] !== 'undefined'\r\n\t\t\t\t\t&& pk.newpkaddr !== pk.pkaddr) {\r\n\t\t\t\t\tthrow new Error('Record already exists');\r\n\t\t\t\t} \r\n\t\t}\r\n\n\t\tif(table.uk && table.uk.length) {\r\n\t\t\ttable.uk.forEach(function(uk){\r\n\t\t\t\tuk.newukaddr = uk.onrightfn(r);\r\n\t\t\t\tif(typeof table.uniqs[uk.hh][uk.newukaddr] !== 'undefined'\r\n\t\t\t\t\t&& uk.newukaddr !== uk.ukaddr) {\r\n\t\t\t\t\tthrow new Error('Record already exists');\r\n\t\t\t\t} \t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\n\t\t// PART 3 UPDATE\r\n\t\tif(this.pk) {\r\n\t\t\tthis.uniqs[pk.hh][pk.pkaddr]=undefined;\r\n\t\t\tthis.uniqs[pk.hh][pk.newpkaddr] = r;\t\t\t\r\n\t\t}\r\n\t\tif(table.uk && table.uk.length) {\r\n\t\t\ttable.uk.forEach(function(uk){\r\n\t\t\t\ttable.uniqs[uk.hh][uk.ukaddr]=undefined;\r\n\t\t\t\ttable.uniqs[uk.hh][uk.newukaddr]=r;\r\n\t\t\t});\r\n\t\t}\r\n\n\t\tthis.data[i] = r;\r\n\n\t\t// Trigger prevent functionality\r\n\t\tfor(var tr in table.afterupdate) {\r\n\t\t\tvar trigger = table.afterupdate[tr];\r\n\t\t\tif(trigger) {\r\n\t\t\t\tif(trigger.funcid) {\r\n\t\t\t\t\talasql.fn[trigger.funcid](this.data[i],r);\r\n\t\t\t\t} else if(trigger.statement) {\r\n\t\t\t\t\ttrigger.statement.execute(databaseid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\n\t};\r\n\n\tvar res;\r\n\n\tif(!alasql.options.nocount){\r\n\t\tres = 1;\r\n\t}\r\n\n\tif(cb) res = cb(res);\r\n\treturn res;\r\n};\r\n\n//\n// Date functions\n// \n// (c) 2014, Andrey Gershun\n//\n\n/** Standard JavaScript data types */\n\nalasql.fn.Date = Object;\nalasql.fn.Date = Date;\nalasql.fn.Number = Number;\nalasql.fn.String = String;\nalasql.fn.Boolean = Boolean;\n\n/** Extend Object with properties */\nstdfn.EXTEND = alasql.utils.extend;\n\nstdfn.CHAR = String.fromCharCode.bind(String);\nstdfn.ASCII = function(a) {\n    return a.charCodeAt(0);\n};\n\n/** \n Return first non-null argument\n See https://msdn.microsoft.com/en-us/library/ms190349.aspx\n*/\nstdfn.COALESCE = function() {\n\tfor(var i=0;i<arguments.length;i++) {\n\t\tif(typeof arguments[i] == 'undefined') continue;\n\t\tif(typeof arguments[i] == \"number\" && isNaN(arguments[i]) ) continue;\n\t\treturn arguments[i];\n\t}\n\treturn undefined;\n}\n\nstdfn.USER = function(){\n\treturn 'alasql';\n}\n\nstdfn.OBJECT_ID = function(objid){\n\treturn !!alasql.tables[objid];\n};\n\nstdfn.DATE = function (d) {\n\tif(/\\d{8}/.test(d)) return new Date(+d.substr(0,4),+d.substr(4,2)-1,+d.substr(6,2));\n\treturn new Date(d);\n};\n\nstdfn.NOW = function(){\n\tvar d = new Date();\n\tvar s = d.getFullYear()+\".\"+(\"0\"+(d.getMonth()+1)).substr(-2)+\".\"+(\"0\"+d.getDate()).substr(-2);\n\ts += \" \"+(\"0\"+d.getHours()).substr(-2)+\":\"+(\"0\"+d.getMinutes()).substr(-2)+\":\"+(\"0\"+d.getSeconds()).substr(-2);\n\ts += '.'+(\"00\"+d.getMilliseconds()).substr(-3)\n\treturn s;\n};\n\nstdfn.GETDATE = stdfn.NOW;\nstdfn.CURRENT_TIMESTAMP = stdfn.NOW;\n\nstdfn.SECOND = function(d){\n\tvar d = new Date(d);\n\treturn d.getSeconds();\n};\n\nstdfn.MINUTE = function(d){\n\tvar d = new Date(d);\n\treturn d.getMinutes();\n};\n\nstdfn.HOUR = function(d){\n\tvar d = new Date(d);\n\treturn d.getHours();\n};\n\nstdfn.DAYOFWEEK = stdfn.WEEKDAY = function(d){\n\tvar d = new Date(d);\n\treturn d.getDay();\n};\n\nstdfn.DAY = stdfn.DAYOFMONTH = function(d){\n\tvar d = new Date(d);\n\treturn d.getDate();\n};\n\nstdfn.MONTH = function(d){\n\tvar d = new Date(d);\n\treturn d.getMonth()+1;\n};\n\nstdfn.YEAR = function(d){\n\tvar d = new Date(d);\n\treturn d.getFullYear();\n};\n\nvar PERIODS = {\n  'year': 1000*3600*24*365,\n  'quarter':1000*3600*24*365/4,\n  'month':1000*3600*24*30,\n  'week': 1000*3600*24*7,\n  'day': 1000*3600*24,\n  'dayofyear': 1000*3600*24,\n  'weekday': 1000*3600*24,\n  'hour': 1000*3600,\n  'minute': 1000*60,\n  'second': 1000,\n  'millisecond': 1,\n  'microsecond': 0.001\n};\n\nalasql.stdfn.DATEDIFF = function(period, d1, d2) {\n  var interval = (new Date(d2)).getTime() - (new Date(d1)).getTime();\n  return interval / PERIODS[period.toLowerCase()];\n};\n\nalasql.stdfn.DATEADD = function(period, interval, d) {\n  var nd = (new Date(d)).getTime() + interval*PERIODS[period.toLowerCase()];\n  return new Date(nd);\n};\n\nalasql.stdfn.INTERVAL = function(interval, period) {\n  return interval*PERIODS[period.toLowerCase()];\n};\n\nalasql.stdfn.DATE_ADD = alasql.stdfn.ADDDATE = function(d, interval) {\n  var nd = (new Date(d)).getTime() + interval;\n  return new Date(nd);\n};\n\nalasql.stdfn.DATE_SUB = alasql.stdfn.SUBDATE = function(d,interval) {\n  var nd = (new Date(d)).getTime() - interval;\n  return new Date(nd);\n};\n\n/*\r\n//\r\n// DROP TABLE for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.DropTable = function (params) { return yy.extend(this, params); };\r\nyy.DropTable.prototype.toString = function() {\r\n\tvar s = 'DROP'+' ';\r\n\tif(this.view) s += 'VIEW';\r\n\telse s += 'TABLE';\r\n\tif(this.ifexists) s += ' IF EXISTS';\r\n\ts += ' '+this.tables.toString();\r\n\treturn s;\r\n};\r\n\n// DROP TABLE\r\n/**\r\n\tDrop tables\r\n\t@param {string} databaseid Database id\r\n\t@param {object} params Parameters\r\n\t@param {callback} cb Callback function\r\n\t@return Number of dropped tables\r\n\t@example\r\n\tDROP TABLE one;\r\n\tDROP TABLE IF NOT EXISTS two, three;\r\n*/\r\nyy.DropTable.prototype.execute = function (databaseid, params, cb) {\r\n\tvar ifexists = this.ifexists;\r\n\tvar res = 0; // No tables removed\r\n\tvar count = 0;\r\n\tvar tlen = this.tables.length;\r\n\n\t// For each table in the list\r\n\tthis.tables.forEach(function(table){\r\n\t\tvar db = alasql.databases[table.databaseid || databaseid];\r\n\t\tvar tableid = table.tableid;\r\n\n\t\t/** @todo Test with AUTOCOMMIT flag is ON */\r\n\t\t/** @todo Test with IndexedDB and multiple tables */\r\n\n\t\tif(!ifexists || ifexists && db.tables[tableid]) {\r\n\t\t\tif(!db.tables[tableid]) {\r\n\t\t\t\tif(!alasql.options.dropifnotexists) {\r\n\t\t\t\t\tthrow new Error('Can not drop table \\''+table.tableid+'\\', because it does not exist in the database.');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif(db.engineid /*&& alasql.options.autocommit*/) {\r\n\t\t\t\t\talasql.engines[db.engineid].dropTable(table.databaseid || databaseid, tableid, ifexists, function(res1){\r\n\t\t\t\t\t\tdelete db.tables[tableid];\r\n\t\t\t\t\t\tres+=res1;\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\tif(count == tlen && cb) cb(res);\t\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdelete db.tables[tableid];\r\n\t\t\t\t\tres++;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif(count == tlen && cb) cb(res);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tcount++;\r\n\t\t\tif(count == tlen && cb) cb(res);\t\r\n\t\t}\r\n\t});\r\n\t// if(cb) res = cb(res);\r\n\treturn res;\r\n};\r\n\nyy.TruncateTable = function (params) { return yy.extend(this, params); };\r\nyy.TruncateTable.prototype.toString = function() {\r\n\tvar s = 'TRUNCATE TABLE';\r\n\ts += ' '+this.table.toString();\r\n\treturn s;\r\n};\r\n\nyy.TruncateTable.prototype.execute = function (databaseid, params, cb) {\r\n\tvar db = alasql.databases[this.table.databaseid || databaseid];\r\n\tvar tableid = this.table.tableid;\r\n\tif(db.engineid) {\r\n\t\treturn alasql.engines[db.engineid].truncateTable(this.table.databaseid || databaseid,tableid, this.ifexists, cb);\r\n\t}\r\n\tif(db.tables[tableid]) {\r\n\t\tdb.tables[tableid].data = [];\r\n\t} else {\r\n\t\tthrow new Error('Cannot truncate table becaues it does not exist');\r\n\t}\r\n\treturn cb?cb(0):0;\r\n};\r\n\n/*\r\n//\r\n// CREATE VERTEX for AlaSQL\r\n// Date: 21.04.2015\r\n// (c) 2015, Andrey Gershun\r\n//\r\n*/\r\n\nyy.CreateVertex = function (params) { return yy.extend(this, params); }\r\nyy.CreateVertex.prototype.toString = function() {\r\n\tvar s = 'CREATE VERTEX ';\r\n\tif(this.class){\r\n\t\ts += this.class+' ';\r\n\t}\r\n\tif(this.sharp){\r\n\t\ts += '#'+this.sharp+' ';\r\n\t}\r\n\tif(this.sets) {\r\n\t\ts += this.sets.toString();\r\n\t} else if(this.content) {\r\n\t\ts += this.content.toString();\r\n\t} else if(this.select) {\r\n\t\ts += this.select.toString();\r\n\t}\r\n\n\treturn s;\r\n}\r\n\nyy.CreateVertex.prototype.toJS = function(context) {\r\n\n\tvar s = 'this.queriesfn['+(this.queriesidx-1)+'](this.params,null,'+context+')';\r\n\t// var s = '';\r\n\treturn s;\r\n};\r\n\n// CREATE TABLE\r\n\nyy.CreateVertex.prototype.compile = function (databaseid) {\r\n\tvar dbid = databaseid;\r\n\n\t// CREATE VERTEX #id\r\n\tvar sharp = this.sharp; \r\n\n\t// CREATE VERTEX \"Name\"\r\n\tif(typeof this.name !== 'undefined') {\r\n\t\tvar s = 'x.name='+this.name.toJS();\r\n\t\tvar namefn = new Function('x',s);\r\n\t}\r\n\n\tif(this.sets && this.sets.length > 0) {\r\n\t\tvar s = this.sets.map(function(st){\r\n\t\t\treturn 'x[\\''+st.column.columnid+'\\']='+st.expression.toJS('x','');\r\n\t\t}).join(';');\r\n\t\tvar setfn = new Function('x,params,alasql',s);\r\n\t} \r\n\n\t// Todo: check for content, select and default\r\n\n\tvar statement = function(params,cb){\r\n\t\tvar res;\r\n\n\t\t// CREATE VERTEX without parameters\r\n\t\tvar db = alasql.databases[dbid];\r\n\t\tvar id;\r\n\t\tif(typeof sharp !== 'undefined') {\r\n\t\t\tid = sharp;\r\n\t\t} else {\r\n\t\t\tid = db.counter++;\r\n\t\t}\r\n\t\tvar vertex = {$id: id, $node:'VERTEX'};\r\n\t\tdb.objects[vertex.$id] = vertex;\r\n\t\tres = vertex;\r\n\t\tif(namefn){\r\n\t\t\tnamefn(vertex);\r\n\t\t}\r\n\t\tif(setfn){\r\n\t\t\tsetfn(vertex,params,alasql);\r\n\t\t}\r\n\n\t\tif(cb){\r\n\t\t\tres = cb(res);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\treturn statement;\r\n};\r\n\nyy.CreateEdge = function (params) { return yy.extend(this, params); }\r\nyy.CreateEdge.prototype.toString = function() {\r\n\n\tvar s = 'CREATE EDGE'+' ';\r\n\tif(this.class){\r\n\t\ts += this.class+' ';\r\n\t}\r\n\t// todo: SET\r\n\t// todo: CONTENT\r\n\t// todo: SELECT\r\n\treturn s;\r\n}\r\n\nyy.CreateEdge.prototype.toJS = function(context) {\r\n\tvar s = 'this.queriesfn['+(this.queriesidx-1)+'](this.params,null,'+context+')';\r\n\treturn s;\r\n};\r\n\n// CREATE TABLE\r\n\nyy.CreateEdge.prototype.compile = function (databaseid) {\r\n\tvar dbid = databaseid;\r\n\tvar fromfn = new Function('params,alasql','var y;return '+this.from.toJS());\r\n\tvar tofn = new Function('params,alasql','var y;return '+this.to.toJS());\r\n\n\t// CREATE VERTEX \"Name\"\r\n\tif(typeof this.name !== 'undefined') {\r\n\t\tvar s = 'x.name='+this.name.toJS();\r\n\t\tvar namefn = new Function('x',s);\r\n\t}\r\n\n\tif(this.sets && this.sets.length > 0) {\r\n\t\tvar s = this.sets.map(function(st){\r\n\t\t\treturn 'x[\\''+st.column.columnid+'\\']='+st.expression.toJS('x','');\r\n\t\t}).join(';');\r\n\t\tvar setfn = new Function('x,params,alasql','var y;'+s);\r\n\t} \r\n\n\t/*\r\n\ttodo: handle content, select and default\r\n\telse if(this.content) {\r\n\n\t} else if(this.select) {\r\n\n\t} else {\r\n\t}\r\n\t*/\r\n\n\tvar statement = function(params,cb){\r\n\t\tvar res = 0;\r\n\t\t\t// CREATE VERTEX without parameters\r\n\t\tvar db = alasql.databases[dbid];\r\n\t\tvar edge = {$id: db.counter++, $node:'EDGE'};\r\n\t\tvar v1 = fromfn(params,alasql);\r\n\t\tvar v2 = tofn(params,alasql);\r\n\t\t// Set link\r\n\t\tedge.$in = [v1.$id];\r\n\t\tedge.$out = [v2.$id];\r\n\t\t// Set sides\r\n\t\tif(v1.$out === undefined){\r\n\t\t\tv1.$out = [];\r\n\t\t}\r\n\t\tv1.$out.push(edge.$id);\r\n\n\t\tif(typeof v2.$in === undefined){\r\n\t\t\tv2.$in = [];\r\n\t\t}\r\n\t\tv2.$in.push(edge.$id);\r\n\n\t\t// Save in objects\r\n\t\tdb.objects[edge.$id] = edge;\r\n\t\tres = edge;\r\n\t\tif(namefn){\r\n\t\t\tnamefn(edge);\r\n\t\t}\r\n\n\t\tif(setfn){\r\n\t\t\tsetfn(edge,params,alasql);\r\n\t\t}\r\n\n\t\tif(cb){\r\n\t\t\tres = cb(res);\r\n\t\t}\r\n\n\t\treturn res;\r\n\t};\r\n\treturn statement;\r\n\n};\r\n\nyy.CreateGraph = function (params) { return yy.extend(this, params); }\r\nyy.CreateGraph.prototype.toString = function() {\r\n\tvar s = 'CREATE GRAPH'+' ';\r\n\tif(this.class){\r\n\t\ts += this.class+' ';\r\n\t}\r\n\treturn s;\r\n}\r\n\nyy.CreateGraph.prototype.execute = function (databaseid,params,cb) {\r\n\tvar res = [];\r\n\tif(this.from) {\r\n\t\tif(alasql.from[this.from.funcid]) {\r\n\t\t\tthis.graph = alasql.from[this.from.funcid.toUpperCase()]\r\n\t\t}\r\n\t}\r\n\n//\tstop;\r\n\t\tthis.graph.forEach(function(g){\r\n\t\t\tif(g.source) {\r\n\t\t\t\t// GREATE EDGE\r\n\t\t\t\tvar e = {};\r\n\t\t\t\tif(typeof g.as !== 'undefined'){\r\n\t\t\t\t\talasql.vars[g.as] = e;\r\n\t\t\t\t}\r\n\n\t\t\t\tif(typeof g.prop !== 'undefined') {\r\n\t//\t\t\t\te[g.prop] = e;\r\n\t//\t\t\t\tv.$id = g.prop; // We do not create $id for edge automatically\r\n\t\t\t\t\te.name = g.prop;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof g.sharp !== 'undefined'){\r\n\t\t\t\t\te.$id = g.sharp;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof g.name !== 'undefined'){\r\n\t\t\t\t\te.name = g.name;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof g.class !== 'undefined'){\r\n\t\t\t\t\te.$class = g.class;\r\n\t\t\t\t}\r\n\n\t\t\t\tvar db = alasql.databases[databaseid];\r\n\t\t\t\tif(typeof e.$id === 'undefined') {\r\n\t\t\t\t\te.$id = db.counter++;\r\n\t\t\t\t}\r\n\t\t\t\te.$node='EDGE';\r\n\t\t\t\tif(typeof g.json !== 'undefined') {\r\n\t\t\t\t\textend(e,(new Function('params,alasql','var y;return '+\r\n\t\t\t\t\tg.json.toJS()))(params,alasql));\r\n\t\t\t\t}\r\n\n\t\t\t\tvar v1;\r\n\t\t\t\tif(g.source.vars) {\r\n\t\t\t\t\tvar vo = alasql.vars[g.source.vars];\r\n\t\t\t\t\tif(typeof vo === 'object'){\r\n\t\t\t\t\t\tv1 = vo;\r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\tv1 = db.objects[vo];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar av1 = g.source.sharp; \r\n\t\t\t\t\tif(typeof av1 === 'undefined'){\r\n\t\t\t\t\t\tav1 = g.source.prop;\r\n\t\t\t\t\t} \r\n\t\t\t\t\tv1 = alasql.databases[databaseid].objects[av1];\r\n\t\t\t\t\tif( \r\n\t\t\t\t\t\ttypeof v1 === 'undefined' && \r\n\t\t\t\t\t\talasql.options.autovertex && \r\n\t\t\t\t\t\t((typeof g.source.prop !== 'undefined') || (typeof g.source.name !== 'undefined'))\r\n\t\t\t\t\t){\r\n\t\t\t\t\t\tv1 = findVertex(g.source.prop || g.source.name);\r\n\t\t\t\t\t\tif(typeof v1 === 'undefined') {\r\n\t\t\t\t\t\t\tv1 = createVertex(g.source);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\n\t\t\t\t}\r\n\n\t\t\t\tvar v2;\r\n\t\t\t\tif(g.source.vars) {\r\n\t\t\t\t\tvar vo = alasql.vars[g.target.vars];\r\n\t\t\t\t\tif(typeof vo === 'object'){\r\n\t\t\t\t\t\tv2 = vo;\r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\tv2 = db.objects[vo];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar av2 = g.target.sharp; \r\n\t\t\t\t\tif(typeof av2 === 'undefined'){\r\n\t\t\t\t\t\tav2 = g.target.prop; \r\n\t\t\t\t\t}\r\n\t\t\t\t\tv2 = alasql.databases[databaseid].objects[av2];\r\n\t\t\t\t\tif(\r\n\t\t\t\t\t\ttypeof v2 === 'undefined' && \r\n\t\t\t\t\t\talasql.options.autovertex && \r\n\t\t\t\t\t\t((typeof g.target.prop !== 'undefined') || (typeof g.target.name !== 'undefined'))\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tv2 = findVertex(g.target.prop || g.target.name);\r\n\t\t\t\t\t\tif(typeof v2 === 'undefined') {\r\n\t\t\t\t\t\t\tv2 = createVertex(g.target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\n\t\t\t\t// Set link\r\n\t\t\t\te.$in = [v1.$id];\r\n\t\t\t\te.$out = [v2.$id];\r\n\t\t\t\t// Set sides\r\n\t\t\t\tif(typeof v1.$out === 'undefined'){\r\n\t\t\t\t\tv1.$out = [];\r\n\t\t\t\t}\r\n\t\t\t\tv1.$out.push(e.$id);\r\n\t\t\t\tif(typeof v2.$in === 'undefined'){\r\n\t\t\t\t\tv2.$in = [];\r\n\t\t\t\t}\r\n\t\t\t\tv2.$in.push(e.$id);\r\n\n\t\t\t\tdb.objects[e.$id] = e;\r\n\t\t\t\tif(typeof e.$class !== 'undefined') {\r\n\t\t\t\t\tif(typeof alasql.databases[databaseid].tables[e.$class] === 'undefined') {\r\n\t\t\t\t\t\tthrow new Error('No such class. Pleace use CREATE CLASS');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO - add insert()\r\n\t\t\t\t\t\talasql.databases[databaseid].tables[e.$class].data.push(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\n\t\t\t\tres.push(e.$id);\r\n\n\t\t\t} else {\r\n\t\t\t\tcreateVertex(g);\r\n\t\t\t}\r\n\t\t});\r\n\n\tif(cb){\r\n\t\tres = cb(res);\r\n\t}\r\n\treturn res;\r\n\n\t// Find vertex by name\r\n\tfunction findVertex(name) {\r\n\t\tvar objects = alasql.databases[alasql.useid].objects;\r\n\t\tfor(var k in objects) {\r\n\t\t\tif(objects[k].name === name) {\r\n\t\t\t\treturn objects[k];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\n\tfunction createVertex(g) {\r\n\t\t// GREATE VERTEX\r\n\t\tvar v = {};\r\n\t\tif(typeof g.as !== 'undefined'){\r\n\t\t\talasql.vars[g.as] = v;\r\n\t\t}\r\n\n\t\tif(typeof g.prop !== 'undefined') {\r\n\t//\t\t\t\tv[g.prop] = true;\r\n\t\t\tv.$id = g.prop;\r\n\t\t\tv.name = g.prop;\t\t\t\t\r\n\t\t}\r\n\n\t\tif(typeof g.sharp !== 'undefined'){\r\n\t\t\tv.$id = g.sharp;\r\n\t\t}\r\n\t\tif(typeof g.name !== 'undefined'){\r\n\t\t\tv.name = g.name;\r\n\t\t}\r\n\t\tif(typeof g.class !== 'undefined'){\r\n\t\t\tv.$class = g.class;\r\n\t\t}\r\n\n\t\tvar db = alasql.databases[databaseid];\r\n\t\tif(typeof v.$id === 'undefined') {\r\n\t\t\tv.$id = db.counter++;\r\n\t\t}\r\n\t\tv.$node='VERTEX';\r\n\t\tif(typeof g.json !== 'undefined') {\r\n\t\t\textend(v,(new Function('params,alasql','var y;return '+\r\n\t\t\tg.json.toJS()))(params,alasql));\r\n\t\t}\r\n\t\tdb.objects[v.$id] = v;\r\n\t\tif(typeof v.$class !== 'undefined') {\r\n\t\t\tif(typeof alasql.databases[databaseid].tables[v.$class] === 'undefined') {\r\n\t\t\t\tthrow new Error('No such class. Pleace use CREATE CLASS');\r\n\t\t\t} else {\r\n\t\t\t\t// TODO - add insert()\r\n\t\t\t\talasql.databases[databaseid].tables[v.$class].data.push(v);\r\n\t\t\t}\r\n\t\t}\r\n\n\t\tres.push(v.$id);\r\n\t\treturn v;\r\n\t}\r\n\n};\r\n\nyy.CreateGraph.prototype.compile1 = function (databaseid) {\r\n\tvar dbid = databaseid;\r\n\tvar fromfn = new Function('params,alasql','var y;return '+this.from.toJS());\r\n\tvar tofn = new Function('params,alasql','var y;return '+this.to.toJS());\r\n\n\t// CREATE VERTEX \"Name\"\r\n\tif(typeof this.name !== 'undefined') {\r\n\t\tvar s = 'x.name='+this.name.toJS();\r\n\t\tvar namefn = new Function('x',s);\r\n\t}\r\n\n\tif(this.sets && this.sets.length > 0) {\r\n\t\tvar s = this.sets.map(function(st){\r\n\t\t\treturn 'x[\\''+st.column.columnid+'\\']='+st.expression.toJS('x','');\r\n\t\t}).join(';');\r\n\t\tvar setfn = new Function('x,params,alasql','var y;'+s);\r\n\t} \r\n\n\t// Todo: handle content, select and default\r\n\n\tvar statement = function(params,cb){\r\n\t\tvar res = 0;\r\n\t\t\t// CREATE VERTEX without parameters\r\n\t\tvar db = alasql.databases[dbid];\r\n\t\tvar edge = {$id: db.counter++, $node:'EDGE'};\r\n\t\tvar v1 = fromfn(params,alasql);\r\n\t\tvar v2 = tofn(params,alasql);\r\n\t\t// Set link\r\n\t\tedge.$in = [v1.$id];\r\n\t\tedge.$out = [v2.$id];\r\n\t\t// Set sides\r\n\t\tif(typeof v1.$out === 'undefined'){\r\n\t\t\tv1.$out = [];\r\n\t\t}\r\n\t\tv1.$out.push(edge.$id);\r\n\n\t\tif(typeof v2.$in === 'undefined'){\r\n\t\t\tv2.$in = [];\r\n\t\t}\r\n\t\tv2.$in.push(edge.$id);\r\n\t\t// Save in objects\r\n\t\tdb.objects[edge.$id] = edge;\r\n\t\tres = edge;\r\n\t\tif(namefn){\r\n\t\t\tnamefn(edge);\r\n\t\t}\r\n\t\tif(setfn){\r\n\t\t\tsetfn(edge,params,alasql);\r\n\t\t}\r\n\n\t\tif(cb){\r\n\t\t\tres = cb(res);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\treturn statement;\r\n\n};\r\n\n/*\r\n//\r\n// ALTER TABLE for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// ALTER TABLE table1 RENAME TO table2\r\nyy.AlterTable = function (params) { return yy.extend(this, params); }\r\nyy.AlterTable.prototype.toString = function() {\r\n\tvar s = 'ALTER TABLE '+this.table.toString(); \r\n\tif(this.renameto) s += ' RENAME TO '+this.renameto;\r\n\treturn s;\r\n}\r\n\nyy.AlterTable.prototype.execute = function (databaseid, params, cb) {\r\n\tvar db = alasql.databases[databaseid];\r\n\tdb.dbversion = Date.now();\r\n\n\tif(this.renameto) {\r\n\t\tvar oldtableid = this.table.tableid;\r\n\t\tvar newtableid = this.renameto;\r\n\t\t\tvar res = 1;\r\n\t\t\tif(db.tables[newtableid]) {\r\n\t\t\t\tthrow new Error(\"Can not rename a table '\"+oldtableid+\"' to '\"\r\n\t\t\t\t\t+newtableid+\"', because the table with this name already exists\");\r\n\t\t\t} else if(newtableid == oldtableid) {\r\n\t\t\t\tthrow new Error(\"Can not rename a table '\"+oldtableid+\"' to itself\");\r\n\t\t\t} else {\r\n\t\t\t\tdb.tables[newtableid] = db.tables[oldtableid];\r\n\t\t\t\tdelete db.tables[oldtableid];\r\n\t\t\t\tres = 1;\r\n\t\t\t};\r\n\t\t\tif(cb) cb(res)\r\n\t\t\treturn res;\r\n\t} else if(this.addcolumn) {\r\n\t\tvar db = alasql.databases[this.table.databaseid || databaseid];\r\n\t\tdb.dbversion++;\r\n\t\tvar tableid = this.table.tableid;\r\n\t\tvar table = db.tables[tableid];\r\n\t\tvar columnid = this.addcolumn.columnid;\r\n\t\tif(table.xcolumns[columnid]) {\r\n\t\t\tthrow new Error('Cannot add column \"'+columnid+'\", because it already exists in the table \"'+tableid+'\"');\r\n\t\t}\r\n\n\t\tvar col = {\r\n\t\t\tcolumnid:columnid,\r\n\t\t\tdbtypeid:this.dbtypeid,\r\n\t\t\tdbsize:this.dbsize,\r\n\t\t\tdbprecision:this.dbprecision,\r\n\t\t\tdbenum:this.dbenum,\r\n\t\t\tdefaultfns: null // TODO defaultfns!!!\r\n\t\t};\r\n\n\t\tvar defaultfn = function(){};\r\n\n\t\ttable.columns.push(col);\r\n\t\ttable.xcolumns[columnid] = col;\r\n\n\t\tfor(var i=0, ilen=table.data.length; i<ilen; i++) {\r\n\n\t\t\ttable.data[i][columnid] = defaultfn();\r\n\t\t}\r\n\n\t\t// TODO\r\n\t\treturn cb?cb(1):1;\r\n\t} else if(this.modifycolumn) {\r\n\t\tvar db = alasql.databases[this.table.databaseid || databaseid];\r\n\t\tdb.dbversion++;\r\n\t\tvar tableid = this.table.tableid;\r\n\t\tvar table = db.tables[tableid];\r\n\t\tvar columnid = this.modifycolumn.columnid;\r\n\n\t\tif(!table.xcolumns[columnid]) {\r\n\t\t\tthrow new Error('Cannot modify column \"'+columnid+'\", because it was not found in the table \"'+tableid+'\"');\r\n\t\t}\r\n\n\t\tvar col = table.xcolumns[columnid];\r\n\t\tcol.dbtypeid = this.dbtypeid;\r\n\t\tcol.dbsize = this.dbsize;\r\n\t\tcol.dbprecision = this.dbprecision;\r\n\t\tcol.dbenum = this.dbenum;\r\n\n\t\t// TODO\r\n\t\treturn cb?cb(1):1;\r\n\t} else if(this.renamecolumn) {\r\n\t\tvar db = alasql.databases[this.table.databaseid || databaseid];\r\n\t\tdb.dbversion++;\r\n\n\t\tvar tableid = this.table.tableid;\r\n\t\tvar table = db.tables[tableid];\r\n\t\tvar columnid = this.renamecolumn;\r\n\t\tvar tocolumnid = this.to;\r\n\n\t\tvar col;\r\n\t\tif(!table.xcolumns[columnid]) {\r\n\t\t\tthrow new Error('Column \"'+columnid+'\" is not found in the table \"'+tableid+'\"');\r\n\t\t}\r\n\t\tif(table.xcolumns[tocolumnid]) {\r\n\t\t\tthrow new Error('Column \"'+tocolumnid+'\" already exists in the table \"'+tableid+'\"');\r\n\t\t}\r\n\n\t\tif(columnid != tocolumnid) {\r\n\t\t\tfor(var j=0; j<table.columns.length; j++) {\r\n\t\t\t\tif(table.columns[j].columnid == columnid) {\r\n\t\t\t\t\ttable.columns[j].columnid = tocolumnid;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\n\t\t\ttable.xcolumns[tocolumnid]=table.xcolumns[columnid];\r\n\t\t\tdelete table.xcolumns[columnid];\r\n\n\t\t\tfor(var i=0, ilen=table.data.length; i<ilen; i++) {\r\n\n\t\t\t\ttable.data[i][tocolumnid] = table.data[i][columnid];\r\n\t\t\t\tdelete table.data[i][columnid];\r\n\t\t\t}\r\n\t\t\treturn table.data.length;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn cb?cb(0):0;\r\n\t\t}\r\n\t} else if(this.dropcolumn) {\r\n\t\tvar db = alasql.databases[this.table.databaseid || databaseid];\r\n\t\tdb.dbversion++;\r\n\t\tvar tableid = this.table.tableid;\r\n\t\tvar table = db.tables[tableid];\r\n\t\tvar columnid = this.dropcolumn;\r\n\n\t\tvar found = false;\r\n\t\tfor(var j=0; j<table.columns.length; j++) {\r\n\t\t\tif(table.columns[j].columnid == columnid) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\ttable.columns.splice(j,1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\n\t\tif(!found) {\r\n\t\t\tthrow new Error('Cannot drop column \"'+columnid+'\", because it was not found in the table \"'+tableid+'\"');\r\n\t\t}\r\n\n\t\tdelete table.xcolumns[columnid];\r\n\n\t\tfor(var i=0, ilen=table.data.length; i<ilen; i++) {\r\n\t\t\tdelete table.data[i][columnid];\r\n\t\t}\r\n\t\treturn cb?cb(table.data.length):table.data.length;\r\n\t} else {\r\n\t\tthrow Error('Unknown ALTER TABLE method');\r\n\t}\r\n\n};\r\n\n/*\r\n//\r\n// CREATE TABLE for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.CreateIndex = function (params) { return yy.extend(this, params); }\r\nyy.CreateIndex.prototype.toString = function() {\r\n\tvar s = 'CREATE';\r\n\tif(this.unique) s+=' UNIQUE';\r\n\ts += ' INDEX ' + this.indexid + \" ON \"+this.table.toString();\r\n\ts += \"(\"+this.columns.toString()+\")\";\r\n\treturn s;\r\n}\r\n\n// CREATE TABLE\r\nyy.CreateIndex.prototype.execute = function (databaseid,params,cb) {\r\n//\tvar self = this;\r\n\tvar db = alasql.databases[databaseid];\r\n\tvar tableid = this.table.tableid;\r\n\tvar table = db.tables[tableid];\r\n\tvar indexid = this.indexid;\r\n\tdb.indices[indexid] = tableid;\r\n\n\t\tvar rightfns = this.columns.map(function(expr){\r\n\t\t\treturn expr.expression.toJS('r','')\r\n\t\t}).join(\"+'`'+\");\r\n\n\t\tvar rightfn = new Function('r,params,alasql','return '+rightfns);\r\n\n\tif(this.unique) {\r\n\t\ttable.uniqdefs[indexid] = {\r\n\t\t\trightfns: rightfns\r\n\t\t};\r\n\t\tvar ux = table.uniqs[indexid] = {};\r\n\t\tif(table.data.length > 0) {\r\n\t\t\tfor(var i=0, ilen=table.data.length; i<ilen;i++) {\r\n\t\t\t\tvar addr = rightfns(table.data[i]);\r\n\t\t\t\tif(!ux[addr]) {\r\n\t\t\t\t\tux[addr] = {num:0};\r\n\t\t\t\t};\r\n\t\t\t\tux[addr].num++;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tvar hh = hash(rightfns);\r\n\t\ttable.inddefs[indexid] = {rightfns:rightfns, hh:hh};\r\n\t\ttable.indices[hh] = {};\r\n\n\t\tvar ix = table.indices[hh] = {};\r\n\t\tif(table.data.length > 0) {\r\n\t\t\tfor(var i=0, ilen=table.data.length; i<ilen;i++) {\r\n\t\t\t\tvar addr = rightfn(table.data[i],params,alasql);\r\n\t\t\t\tif(!ix[addr]) {\r\n\t\t\t\t\tix[addr] = [];\r\n\t\t\t\t};\r\n\t\t\t\tix[addr].push(table.data[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tvar res = 1;\r\n\tif(cb) res = cb(res);\r\n\treturn res;\r\n};\r\n\nyy.Reindex = function (params) { return yy.extend(this, params); };\r\nyy.Reindex.prototype.toString = function() {\r\n\tvar s = 'REINDEX '+this.indexid;\r\n\treturn s;\r\n};\r\n\n// CREATE TABLE\r\nyy.Reindex.prototype.execute = function (databaseid,params,cb) {\r\n//\tvar self = this;\r\n\tvar db = alasql.databases[databaseid];\r\n\tvar indexid = this.indexid;\r\n\n\tvar tableid = db.indices[indexid];\r\n\tvar table = db.tables[tableid];\r\n\ttable.indexColumns();\r\n\tvar res = 1;\r\n\tif(cb) res = cb(res);\r\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// DROP TABLE for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.DropIndex = function (params) { return yy.extend(this, params); }\r\nyy.DropIndex.prototype.toString = function() {\r\n\treturn 'DROP INDEX' + this.indexid;\r\n}\r\n\n// DROP TABLE\r\nyy.DropIndex.prototype.compile = function (db) {\r\n\tvar indexid = this.indexid;\r\n\treturn function() {\r\n\t\treturn 1;\r\n\t}\r\n};\r\n\n/*\r\n//\r\n// WITH SELECT for Alasql.js\r\n// Date: 11.01.2015\r\n// (c) 2015, Andrey Gershun\r\n//\r\n*/\r\n\nyy.WithSelect = function (params) { return yy.extend(this, params); }\r\nyy.WithSelect.prototype.toString = function() {\r\n\tvar s = 'WITH ';\r\n\ts += this.withs.map(function(w){\r\n\t\treturn w.name+' AS ('+w.select.toString()+')';\r\n\t}).join(',')+' ';\r\n\ts += this.select.toString();\r\n\treturn s;\r\n};\r\n\nyy.WithSelect.prototype.execute = function (databaseid,params,cb) {\r\n\tvar self = this;\r\n\t// Create temporary tables\r\n\tvar savedTables = [];\r\n\tself.withs.forEach(function(w){\r\n\t\tsavedTables.push(alasql.databases[databaseid].tables[w.name]);\r\n\t\tvar tb = alasql.databases[databaseid].tables[w.name] = new Table({tableid:w.name});\r\n\t\ttb.data = w.select.execute(databaseid,params);\r\n\t});\r\n\n\tvar res = 1;\r\n\tres = this.select.execute(databaseid,params,function(data){\r\n\t\t// Clear temporary tables\r\n\n\t\t\tself.withs.forEach(function(w,idx){\r\n\t\t\t\tif(savedTables[idx]) alasql.databases[databaseid].tables[w.name] = savedTables[idx] ;\r\n\t\t\t\telse delete alasql.databases[databaseid].tables[w.name];\r\n\t\t\t});\t\t\t\r\n\n\t\tif(cb) data = cb(data);\r\n\t\treturn data;\r\n\t});\r\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// IF for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.If = function (params) { return yy.extend(this, params); }\r\nyy.If.prototype.toString = function() {\r\n\tvar s = 'IF'+' ';\r\n\ts += this.expression.toString();\r\n\ts += ' '+this.thenstat.toString();\r\n\tif(this.elsestat) s += ' ELSE '+this.thenstat.toString();\r\n\treturn s;\r\n};\r\n\n// CREATE TABLE\r\n\nyy.If.prototype.execute = function (databaseid,params,cb){\r\n\tvar res;\r\n\n\tvar fn = new Function('params,alasql,p','var y;return '+this.expression.toJS('({})','',null)).bind(this);\r\n\n\tif(fn(params,alasql)) res = this.thenstat.execute(databaseid,params,cb);\r\n\telse {\r\n\t\tif(this.elsestat) res = this.elsestat.execute(databaseid,params,cb);\r\n\t\telse {\r\n\t\t\tif(cb) res = cb(res);\r\n\t\t}\r\n\t}\r\n\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// CREATE VIEW for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.While = function (params) { return yy.extend(this, params); }\r\nyy.While.prototype.toString = function() {\r\n\tvar s = 'WHILE ';\r\n\ts += this.expression.toString();\r\n\ts += ' '+this.loopstat.toString();\r\n\treturn s;\r\n};\r\n\nyy.While.prototype.execute = function (databaseid,params,cb) {\r\n\tvar self = this;\r\n\tvar res = [];\r\n\n\tvar fn = new Function('params,alasql,p','var y;return '+this.expression.toJS());\r\n\n\tif(cb) {\r\n\t\tvar first = false;\r\n\t\tloop();\r\n\t\tfunction loop(data) {\r\n\t\t\tif(first) {\r\n\t\t\t\tres.push(data);\r\n\t\t\t} else {\r\n\t\t\t\tfirst = true;\r\n\t\t\t};\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(fn(params,alasql)) {\r\n\t\t\t\t\tself.loopstat.execute(databaseid,params,loop);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres = cb(res);\r\n\t\t\t\t}\r\n\t\t\t},0);\r\n\t\t}\t\t\r\n\t} else {\r\n\t\twhile(fn(params,alasql)) {\r\n\t\t\tvar res1 = self.loopstat.execute(databaseid,params); \r\n\t\t\tres.push(res1);\r\n\t\t}\r\n\t}\r\n\treturn res;\r\n};\r\n\nyy.Break = function (params) { return yy.extend(this, params); }\r\nyy.Break.prototype.toString = function() {\r\n\tvar s = 'BREAK';\r\n\treturn s;\r\n};\r\n\nyy.Break.prototype.execute = function (databaseid,params,cb,scope) {\r\n\tvar res = 1;\r\n\tif(cb) res = cb(res);\r\n\treturn res;\r\n};\r\n\nyy.Continue = function (params) { return yy.extend(this, params); }\r\nyy.Continue.prototype.toString = function() {\r\n\tvar s = 'CONTINUE';\r\n\treturn s;\r\n};\r\n\nyy.Continue.prototype.execute = function (databaseid,params,cb,scope) {\r\n\tvar res = 1;\r\n\tif(cb) res = cb(res);\t\r\n\treturn res;\r\n};\r\n\nyy.BeginEnd = function (params) { return yy.extend(this, params); }\r\nyy.BeginEnd.prototype.toString = function() {\r\n\tvar s = 'BEGIN '+this.statements.toString()+' END';\r\n\treturn s;\r\n};\r\n\nyy.BeginEnd.prototype.execute = function (databaseid,params,cb,scope) {\r\n\tvar self = this;\r\n\tvar res = [];\r\n\n\tvar idx = 0;\r\n\trunone();\r\n\tfunction runone() {\r\n\t\tself.statements[idx].execute(databaseid,params,function(data){\r\n\t\t\tres.push(data);\r\n\t\t\tidx++;\r\n\t\t\tif(idx<self.statements.length) return runone();\r\n\t\t\tif(cb) res = cb(res);\r\n\t\t});\r\n\t}\r\n\treturn res;\r\n};\r\n\n/*\n//\n// INSERT for Alasql.js\n// Date: 03.11.2014\n// (c) 2014, Andrey Gershun\n//\n*/\n\nyy.Insert = function (params) { return yy.extend(this, params); }\nyy.Insert.prototype.toString = function() {\n\tvar s = 'INSERT ';\n\tif(this.orreplace) s += 'OR REPLACE ';\n\tif(this.replaceonly) s = 'REPLACE ';\n\ts += 'INTO '+this.into.toString();\n\tif(this.columns) s += '('+this.columns.toString()+')';\n\tif(this.values) s += ' VALUES '+this.values.toString();\n\tif(this.select) s += ' '+this.select.toString();\n\treturn s;\n}\n\nyy.Insert.prototype.toJS = function(context, tableid, defcols) {\n\n//\tif(this.expression.reduced) return 'true';\n//\treturn this.expression.toJS(context, tableid, defcols);\n\n//\tvar s = 'this.queriesdata['+(this.queriesidx-1)+'][0]';\n\n\tvar s = 'this.queriesfn['+(this.queriesidx-1)+'](this.params,null,'+context+')';\n\n\treturn s;\n};\n\nyy.Insert.prototype.compile = function (databaseid) {\n\tvar self = this;\n\tdatabaseid = self.into.databaseid || databaseid\n\tvar db = alasql.databases[databaseid];\n\n\tvar tableid = self.into.tableid;\n\tvar table = db.tables[tableid];\n\n\tif(!table){\n\t\tthrow \"Table '\"+tableid+\"' could not be found\";\n\t}\n\n\t// Check, if this dirty flag is required\n\tvar s = '';\n\tvar sw = '';\n\tvar s = 'db.tables[\\''+tableid+'\\'].dirty=true;';\n\tvar s3 = 'var a,aa=[],x;';\n\n\tvar s33;\n\n// INSERT INTO table VALUES\n\tif(this.values) {\n\n\t\tif(this.exists) {\n\t\t\tthis.existsfn  = this.exists.map(function(ex) {\n\t\t\t\tvar nq = ex.compile(databaseid);\n\t\t\t\tnq.query.modifier='RECORDSET';\n\t\t\t\treturn nq;\n\t\t\t});\n\t\t}\n\t\tif(this.queries) {\n\t\t\tthis.queriesfn = this.queries.map(function(q) {\n\t\t\t\tvar nq = q.compile(databaseid);\n\t\t\t\tnq.query.modifier='RECORDSET';\n\t\t\t\treturn nq;\n\t\t\t});\t\t\n\t\t}\n\n\t\tself.values.forEach(function(values) {\n\t\t\tvar ss = [];\n\n\t\t\tif(self.columns) {\n\t\t\t\tself.columns.forEach(function(col, idx){\n\n\t\t\t\t\tvar q = \"'\"+col.columnid +'\\':';\n\t\t\t\t\tif(table.xcolumns && table.xcolumns[col.columnid]) { \n\t\t\t\t\t\tif([\"INT\",\"FLOAT\",\"NUMBER\",\"MONEY\"].indexOf(table.xcolumns[col.columnid].dbtypeid) >=0) {\n\t\t\t\t\t\t\t//q += ''\n\t\t\t\t\t\t\tq += \"(x=\"+values[idx].toJS()+\",x==undefined?undefined:+x)\";\n\t\t\t\t\t\t} else if (alasql.fn[table.xcolumns[col.columnid].dbtypeid]) {\n\t\t\t\t\t\t\tq += \"(new \"+table.xcolumns[col.columnid].dbtypeid+\"(\";\n\t\t\t\t\t\t\tq += values[idx].toJS();\n\t\t\t\t\t\t\tq += \"))\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tq += values[idx].toJS();\n\t\t\t\t\t\t};\n\t\t\t\t\t} else { \n\t\t\t\t\t\tq += values[idx].toJS();\n\t\t\t\t\t}\n\t\t\t\t\tss.push(q);\n\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\tif((Array.isArray(values)) && table.columns && table.columns.length > 0) {\n\t\t\t\t\ttable.columns.forEach(function(col, idx){\n\n\t\t\t\t\t\tvar q = '\\''+col.columnid +'\\':';\n\n\t\t\t\t\t\tif([\"INT\",\"FLOAT\",\"NUMBER\",\"MONEY\"].indexOf(col.dbtypeid) >=0) {\n\t\t\t\t\t\t\tq += \"+\"+values[idx].toJS();\n\t\t\t\t\t\t} else if (alasql.fn[col.dbtypeid]) {\n\t\t\t\t\t\t\tq += \"(new \"+col.dbtypeid+\"(\";\n\t\t\t\t\t\t\tq += values[idx].toJS();\n\t\t\t\t\t\t\tq += \"))\";\n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tq += values[idx].toJS();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tss.push(q);\n\n\t\t\t\t\t});\n\t\t\t\t} else {\n\n\t\t\t\t\tsw = JSONtoJS(values);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(db.tables[tableid].defaultfns) {\n\t\t\t\tss.unshift(db.tables[tableid].defaultfns);\n\t\t\t};\n\t\t\tif(sw) {\n\t\t\t\ts += 'a='+sw+';';\n\t\t\t} else {\n\t\t\t\ts += 'a={'+ss.join(',')+'};';\n\t\t\t}\n\n\t\t\t// If this is a class\n\t\t\tif(db.tables[tableid].isclass) {\n\t\t\t\ts += 'var db=alasql.databases[\\''+databaseid+'\\'];';\n\t\t\t\ts+= 'a.$class=\"'+tableid+'\";';\n\t\t\t\ts+= 'a.$id=db.counter++;';\n\t\t\t\ts+= 'db.objects[a.$id]=a;';\n\t\t\t};\n\n\t        if(db.tables[tableid].insert) {\n\t\t\t\ts += 'var db=alasql.databases[\\''+databaseid+'\\'];';\n\t\t\t\ts += 'db.tables[\\''+tableid+'\\'].insert(a,'+(self.orreplace?\"true\":\"false\")+');';\n\t        } else {\n\t\t\t\ts += 'aa.push(a);';\n\t\t\t}\n\t\t});\n\n\t\ts33 = s3+s;\n\n        if(db.tables[tableid].insert) {\n\n        } else {\n            s += 'alasql.databases[\\''+databaseid+'\\'].tables[\\''+tableid+'\\'].data='+\t\n            'alasql.databases[\\''+databaseid+'\\'].tables[\\''+tableid+'\\'].data.concat(aa);';\n        }\n\n        if(db.tables[tableid].insert) {\n        \tif(db.tables[tableid].isclass) {\n\t        \ts += 'return a.$id;';\n        \t} else {\n\t\t\t\ts += 'return '+self.values.length;\n        \t}\n        } else {\n\t\t\ts += 'return '+self.values.length;\n        }\n\n\t\tvar insertfn = new Function('db, params, alasql','var y;'+s3+s).bind(this);\n\n// INSERT INTO table SELECT\n\n\t} else if(this.select) {\n\t\tthis.select.modifier = 'RECORDSET';\n\t\tvar selectfn = this.select.compile(databaseid);\n\t    if(db.engineid && alasql.engines[db.engineid].intoTable) {\n\t\t\tvar statement = function(params, cb) {\n\t\t\t\tvar aa = selectfn(params);\n\t\t\t\tvar res = alasql.engines[db.engineid].intoTable(db.databaseid,tableid,aa.data,null, cb);\n\t\t\t\treturn res;\n\t\t\t};\n\t\t\treturn statement;\n\t    } else {\n\n\t\t\t\tvar defaultfns = 'return alasql.utils.extend(r,{'+table.defaultfns+'})';\n    \t    \tvar defaultfn = new Function('r,db,params,alasql',defaultfns); \n\t\t\tvar insertfn = function(db, params, alasql) {\n\t\t\t\tvar res = selectfn(params).data;\n\t\t        if(db.tables[tableid].insert) {\n\t\t        \t// If insert() function exists (issue #92)\n\t\t        \tfor(var i=0,ilen=res.length;i<ilen;i++) {\n\t\t        \t\tvar r = cloneDeep(res[i]);\n\t\t        \t\tdefaultfn(r,db,params,alasql);\n\t\t        \t\tdb.tables[tableid].insert(r,self.orreplace);\n\t\t        \t}\n\t\t        } else {\n\t\t\t\t\tdb.tables[tableid].data = db.tables[tableid].data.concat(res);\n\t\t        };\n\t\t        if(alasql.options.nocount) return;\n\t\t\t\telse return res.length;\n\t\t\t}\n\t\t}\n\n\t} else if(this.default) {\n\t\tvar insertfns = 'db.tables[\\''+tableid+'\\'].data.push({'+table.defaultfns+'});return 1;';\n        var insertfn = new Function('db,params,alasql',insertfns); \n    } else {\n    \tthrow new Error('Wrong INSERT parameters');\n    }\n\n    if(db.engineid && alasql.engines[db.engineid].intoTable && alasql.options.autocommit) {\n\t\tvar statement = function(params, cb) {\n\t\t\tvar aa = new Function(\"db,params\",'var y;'+s33+'return aa;')(db,params);\n\n\t\t\tvar res = alasql.engines[db.engineid].intoTable(db.databaseid,tableid,aa, null, cb);\n\n\t\t\treturn res;\n\t\t};\n\n    } else {\n\n\t\tvar statement = function(params, cb) {\n\n\t\t\tvar db = alasql.databases[databaseid];\n\n\t\t\tif(alasql.options.autocommit && db.engineid) {\n\t\t\t\talasql.engines[db.engineid].loadTableData(databaseid,tableid);\n\t\t\t}\n\n\t\t\tvar res = insertfn(db,params,alasql);\n\n\t\t\tif(alasql.options.autocommit && db.engineid) {\n\t\t\t\talasql.engines[db.engineid].saveTableData(databaseid,tableid);\n\t\t\t}\n\t//\t\tvar res = insertfn(db, params);\n\t        if(alasql.options.nocount) res = undefined;\n\t\t\tif(cb) cb(res);\n\t\t\treturn res;\n\t\t};\n\t};\n\n\treturn statement;\n};\n\nyy.Insert.prototype.execute = function (databaseid, params, cb) {\n\treturn this.compile(databaseid)(params,cb);\n//\tthrow new Error('Insert statement is should be compiled')\n}\n\n/*\r\n//\r\n// TRIGGER for Alasql.js\r\n// Date: 29.12.2015\r\n//\r\n*/\r\n\nyy.CreateTrigger = function (params) { return yy.extend(this, params); };\r\nyy.CreateTrigger.prototype.toString = function() {\r\n\tvar s = 'CREATE TRIGGER '+this.trigger +' ';\r\n\tif(this.when) s += this.when+' ';\r\n\ts += this.action+' ON ';\r\n\tif(this.table.databaseid) s += this.table.databaseid+'.';\r\n\ts += this.table.tableid+' ';\r\n\ts += this.statement.toString();\r\n\treturn s;\r\n};\r\n\nyy.CreateTrigger.prototype.execute = function (databaseid, params, cb) {\r\n\tvar res = 1; // No tables removed\r\n\tvar triggerid = this.trigger;\r\n\tdatabaseid = this.table.databaseid || databaseid;\r\n\tvar db = alasql.databases[databaseid];\r\n\tvar tableid = this.table.tableid;\r\n\n\tvar trigger = {\r\n\t\taction: this.action,\r\n\t\twhen: this.when,\r\n\t\tstatement: this.statement,\r\n\t\tfuncid: this.funcid\r\n\t};\r\n\n\tdb.triggers[triggerid] = trigger;\r\n\tif(trigger.action == 'INSERT' && trigger.when == 'BEFORE') {\r\n\t\tdb.tables[tableid].beforeinsert[triggerid] = trigger;\r\n\t} else if(trigger.action == 'INSERT' && trigger.when == 'AFTER') {\r\n\t\tdb.tables[tableid].afterinsert[triggerid] = trigger;\r\n\t} else if(trigger.action == 'INSERT' && trigger.when == 'INSTEADOF') {\r\n\t\tdb.tables[tableid].insteadofinsert[triggerid] = trigger;\r\n\t} else if(trigger.action == 'DELETE' && trigger.when == 'BEFORE') {\r\n\t\tdb.tables[tableid].beforedelete[triggerid] = trigger;\r\n\t} else if(trigger.action == 'DELETE' && trigger.when == 'AFTER') {\r\n\t\tdb.tables[tableid].afterdelete[triggerid] = trigger;\r\n\t} else if(trigger.action == 'DELETE' && trigger.when == 'INSTEADOF') {\r\n\t\tdb.tables[tableid].insteadofdelete[triggerid] = trigger;\r\n\t} else if(trigger.action == 'UPDATE' && trigger.when == 'BEFORE') {\r\n\t\tdb.tables[tableid].beforeupdate[triggerid] = trigger;\r\n\t} else if(trigger.action == 'UPDATE' && trigger.when == 'AFTER') {\r\n\t\tdb.tables[tableid].afterupdate[triggerid] = trigger;\r\n\t} else if(trigger.action == 'UPDATE' && trigger.when == 'INSTEADOF') {\r\n\t\tdb.tables[tableid].insteadofupdate[triggerid] = trigger;\r\n\t}\r\n\n\tif(cb) res = cb(res);\r\n\treturn res;\r\n};\r\n\nyy.DropTrigger = function (params) { return yy.extend(this, params); };\r\nyy.DropTrigger.prototype.toString = function() {\r\n\tvar s = 'DROP TRIGGER '+this.trigger;\r\n\treturn s;\r\n};\r\n\n/**\r\n\tDrop trigger\r\n\t@param {string} databaseid Database id\r\n\t@param {object} params Parameters\r\n\t@param {callback} cb Callback function\r\n\t@return Number of dropped triggers\r\n\t@example\r\n\tDROP TRIGGER one;\r\n*/\r\nyy.DropTrigger.prototype.execute = function (databaseid, params, cb) {\r\n\tvar res = 0; // No tables removed\r\n\tvar db = alasql.databases[databaseid];\r\n\tvar triggerid = this.trigger;\r\n\t// For each table in the list\r\n\tvar tableid = db.triggers[triggerid];\r\n\tif(tableid) {\r\n\t\tres = 1;\r\n\t\tdelete db.tables[tableid].beforeinsert[triggerid];\r\n\t\tdelete db.tables[tableid].afterinsert[triggerid];\r\n\t\tdelete db.tables[tableid].insteadofinsert[triggerid];\r\n\t\tdelete db.tables[tableid].beforedelte[triggerid];\r\n\t\tdelete db.tables[tableid].afterdelete[triggerid];\r\n\t\tdelete db.tables[tableid].insteadofdelete[triggerid];\r\n\t\tdelete db.tables[tableid].beforeupdate[triggerid];\r\n\t\tdelete db.tables[tableid].afterupdate[triggerid];\r\n\t\tdelete db.tables[tableid].insteadofupdate[triggerid];\r\n\t\tdelete db.triggers[triggerid];\r\n\t} else {\r\n\t\tthrow new Error('Trigger not found');\r\n\t}\r\n\tif(cb) res = cb(res);\r\n\treturn res;\r\n};\r\n\n/*\n//\n// DELETE for Alasql.js\n// Date: 03.11.2014\n// (c) 2014, Andrey Gershun\n//\n*/\n\nyy.Delete = function (params) { return yy.extend(this, params); }\nyy.Delete.prototype.toString = function() {\n\tvar s = 'DELETE FROM '+this.table.toString();\n\tif(this.where) s += ' WHERE '+this.where.toString();\n\treturn s;\n}\n\nyy.Delete.prototype.compile = function (databaseid) {\n\n\tdatabaseid = this.table.databaseid || databaseid;\n\tvar tableid = this.table.tableid;\n\tvar statement;\n\tvar db = alasql.databases[databaseid];\n\n\tif(this.where) {\n\n\t\tif(this.exists) {\n\t\t\tthis.existsfn = this.exists.map(function(ex) {\n\t\t\t\tvar nq = ex.compile(databaseid);\n\t\t\t\tnq.query.modifier='RECORDSET';\n\t\t\t\treturn nq;\n\t\t\t});\n\t\t}\n\t\tif(this.queries) {\n\t\t\tthis.queriesfn = this.queries.map(function(q) {\n\t\t\t\tvar nq = q.compile(databaseid);\n\t\t\t\tnq.query.modifier='RECORDSET';\n\t\t\t\treturn nq;\n\t\t\t});\n\t\t}\n\n\t\tvar wherefn = new Function('r,params,alasql','var y;return ('+this.where.toJS('r','')+')').bind(this);\n\n\t\tstatement = (function (params, cb) {\n\t\t\tif(db.engineid && alasql.engines[db.engineid].deleteFromTable) {\n\t\t\t\treturn alasql.engines[db.engineid].deleteFromTable(databaseid, tableid, wherefn, params, cb);\n\t\t\t}\n\n\t\t\tif(alasql.options.autocommit && db.engineid && db.engineid == 'LOCALSTORAGE') {\n\t\t\t\talasql.engines[db.engineid].loadTableData(databaseid,tableid);\n\t\t\t}\n\n\t\t\tvar table = db.tables[tableid];\n\n\t\t\tvar orignum = table.data.length;\n\n\t\t\tvar newtable = [];\n\t\t\tfor(var i=0, ilen=table.data.length;i<ilen;i++) {\n\t\t\t\tif(wherefn(table.data[i],params,alasql)) {\n\t\t\t\t\t// Check for transaction - if it is not possible then return all back\n\t\t\t\t\tif(table.delete) {\n\t\t\t\t\t\ttable.delete(i,params,alasql);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Simply do not push\n\t\t\t\t\t}\n\t\t\t\t} else newtable.push(table.data[i]);\n\t\t\t}\n\n\t\t\ttable.data = newtable;\n\n\t\t\t// Trigger prevent functionality\n\t\t\tfor(var tr in table.afterdelete) {\n\t\t\t\tvar trigger = table.afterdelete[tr];\n\t\t\t\tif(trigger) {\n\t\t\t\t\tif(trigger.funcid) {\n\t\t\t\t\t\talasql.fn[trigger.funcid]();\n\t\t\t\t\t} else if(trigger.statement) {\n\t\t\t\t\t\ttrigger.statement.execute(databaseid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar res = orignum - table.data.length;\n\t\t\tif(alasql.options.autocommit && db.engineid && db.engineid == 'LOCALSTORAGE') {\n\t\t\t\talasql.engines[db.engineid].saveTableData(databaseid,tableid);\n\t\t\t}\n\n\t\t\tif(cb) cb(res);\n\t\t\treturn res;\n\t\t});\n\n\t} else {\n\t\tstatement = function (params, cb) {\n\t\t\tif(alasql.options.autocommit && db.engineid) {\n\t\t\t\talasql.engines[db.engineid].loadTableData(databaseid,tableid);\n\t\t\t}\n\n\t\t\tvar table = db.tables[tableid];\n\t\t\ttable.dirty = true;\n\t\t\tvar orignum = db.tables[tableid].data.length;\n\t\t\t//table.deleteall();\n\t\t\t// Delete all records from the array\n\t\t\tdb.tables[tableid].data.length = 0;\n\n\t\t\t// Reset PRIMARY KEY and indexes\n\t\t\tfor(var ix in db.tables[tableid].uniqs) {\n\t\t\t\tdb.tables[tableid].uniqs[ix] = {};\n\t\t\t}\n\n\t\t\tfor(var ix in db.tables[tableid].indices) {\n\t\t\t\tdb.tables[tableid].indices[ix] = {};\n\t\t\t}\n\n\t\t\tif(alasql.options.autocommit && db.engineid) {\n\t\t\t\talasql.engines[db.engineid].saveTableData(databaseid,tableid);\n\t\t\t}\n\n\t\t\tif(cb) cb(orignum);\n\t\t\treturn orignum;\n\t\t};\n\t}\n\n\treturn statement;\n\n};\n\nyy.Delete.prototype.execute = function (databaseid, params, cb) {\n\treturn this.compile(databaseid)(params,cb);\n}\n\n/*\r\n//\r\n// UPDATE for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Update = function (params) { return yy.extend(this, params); }\r\nyy.Update.prototype.toString = function() {\r\n\tvar s = 'UPDATE '+this.table.toString();\r\n\tif(this.columns) s += ' SET '+this.columns.toString();\r\n\tif(this.where) s += ' WHERE '+this.where.toString();\r\n\treturn s;\r\n}\r\n\nyy.SetColumn = function (params) { return yy.extend(this, params); }\r\nyy.SetColumn.prototype.toString = function() {\r\n\treturn this.column.toString() + '='+this.expression.toString();\r\n}\r\n\nyy.Update.prototype.compile = function (databaseid) {\r\n\n\tdatabaseid = this.table.databaseid || databaseid;\r\n\tvar tableid = this.table.tableid;\r\n\n\tif(this.where) {\r\n\t\tif(this.exists) {\r\n\t\t\tthis.existsfn  = this.exists.map(function(ex) {\r\n\t\t\t\tvar nq = ex.compile(databaseid);\r\n\t\t\t\tnq.query.modifier='RECORDSET';\r\n\t\t\t\treturn nq;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(this.queries) {\r\n\t\t\tthis.queriesfn = this.queries.map(function(q) {\r\n\t\t\t\tvar nq = q.compile(databaseid);\r\n\t\t\t\tnq.query.modifier='RECORDSET';\r\n\t\t\t\treturn nq;\r\n\t\t\t});\t\t\r\n\t\t}\r\n\n\t\tvar wherefn = new Function('r,params,alasql','var y;return '+this.where.toJS('r','')).bind(this);\r\n\t};\r\n\n\t// Construct update function\r\n\tvar s = alasql.databases[databaseid].tables[tableid].onupdatefns || '';\r\n\ts += ';';\r\n\tthis.columns.forEach(function(col){\r\n\t\ts += 'r[\\''+col.column.columnid+'\\']='+col.expression.toJS('r','')+';'; \r\n\t});\r\n\tvar assignfn = new Function('r,params,alasql','var y;'+s);\r\n\n\tvar statement = function(params, cb) {\r\n\t\tvar db = alasql.databases[databaseid];\r\n\n\t\tif(db.engineid && alasql.engines[db.engineid].updateTable) {\r\n\n\t\t\treturn alasql.engines[db.engineid].updateTable(databaseid, tableid, assignfn, wherefn, params, cb);\r\n\t\t}\r\n\n\t\tif(alasql.options.autocommit && db.engineid) {\r\n\t\t\talasql.engines[db.engineid].loadTableData(databaseid,tableid);\r\n\t\t}\r\n\n\t\tvar table = db.tables[tableid];\r\n\t\tif(!table) {\r\n\t\t\tthrow new Error(\"Table '\"+tableid+\"' not exists\")\r\n\t\t}\r\n\n\t\tvar numrows = 0;\r\n\t\tfor(var i=0, ilen=table.data.length; i<ilen; i++) {\r\n\t\t\tif(!wherefn || wherefn(table.data[i], params,alasql) ) {\r\n\t\t\t\tif(table.update) {\r\n\t\t\t\t\ttable.update(assignfn, i, params);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tassignfn(table.data[i], params,alasql);\r\n\t\t\t\t}\r\n\t\t\t\tnumrows++;\r\n\t\t\t}\r\n\t\t};\r\n\n\t\tif(alasql.options.autocommit && db.engineid) {\r\n\t\t\talasql.engines[db.engineid].saveTableData(databaseid,tableid);\r\n\t\t}\r\n\n\t\tif(cb) cb(numrows);\r\n\t\treturn numrows;\r\n\t};\r\n\treturn statement;\r\n};\r\n\nyy.Update.prototype.execute = function (databaseid, params, cb) {\r\n\treturn this.compile(databaseid)(params,cb);\r\n}\r\n\n/*\r\n//\r\n// SET for Alasql.js\r\n// Date: 01.12.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Merge = function (params) { return yy.extend(this, params); }\r\nyy.Merge.prototype.toString = function() {\r\n\tvar s = 'MERGE ';\r\n\ts += this.into.tableid+' ';\r\n\tif(this.into.as) s += 'AS '+this.into.as+' ';\r\n\ts += 'USING '+this.using.tableid+' ';\r\n\tif(this.using.as) s += 'AS '+this.using.as+' ';\r\n\ts += 'ON '+this.on.toString()+' ';\r\n\tthis.matches.forEach(function(m){\r\n\t\ts += 'WHEN ';\r\n\t\tif(!m.matched) s += 'NOT ';\r\n\t\ts += 'MATCHED ';\r\n\t\tif(m.bytarget) s += 'BY TARGET ';\r\n\t\tif(m.bysource) s += 'BY SOURCE ';\r\n\t\tif(m.expr) s+= 'AND'+' '+m.expr.toString()+' ';\r\n\t\ts += 'THEN ';\r\n\t\tif(m.action.delete) s += 'DELETE ';\r\n\t\tif(m.action.insert) {\r\n\t\t\ts += 'INSERT ';\r\n\t\t\tif(m.action.columns) s += '('+m.action.columns.toString()+') ';\r\n\t\t\tif(m.action.values) s += 'VALUES ('+m.action.values.toString()+') ';\r\n\t\t\tif(m.action.defaultvalues) s += 'DEFAULT VALUES ';\r\n\t\t}\r\n\t\tif(m.action.update) {\r\n\t\t\ts += 'UPDATE ';\r\n\t\t\ts += m.action.update.map(function(u){\r\n\t\t\t\treturn u.toString();\r\n\t\t\t}).join(',')+' ';\r\n\t\t}\r\n\n\t});\r\n\n\treturn s;\r\n}\r\n\nyy.Merge.prototype.execute = function (databaseid,params,cb) {\r\n\tvar res = 1;\r\n\n\tif(cb) res=cb(res);\r\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// UPDATE for Alasql.js\r\n// Date: 03.11.2014\r\n// Modified: 16.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// CREATE DATABASE databaseid\r\nyy.CreateDatabase = function (params) { return yy.extend(this, params); };\r\nyy.CreateDatabase.prototype.toString = function() {\r\n\tvar s = 'CREATE'; \r\n\tif(this.engineid) s+=' '+this.engineid;\r\n\ts += ' DATABASE';\r\n\tif(this.ifnotexists) s += ' IF NOT EXISTS';\r\n\ts += ' '+this.databaseid;\r\n\tif(this.args && this.args.length > 0) { \r\n\t\ts += '('+this.args.map(function(arg){ return arg.toString()}).join(', ')+')';\r\n\t}\r\n\tif(this.as) s += ' AS '+this.as;\r\n\treturn s;\r\n}\r\n//yy.CreateDatabase.prototype.compile = returnUndefined;\r\nyy.CreateDatabase.prototype.execute = function (databaseid, params, cb) {\r\n\tvar args;\r\n\tif(this.args && this.args.length > 0) {\r\n\t\targs = this.args.map(function(arg){\r\n\t\t\treturn new Function('params,alasql','var y;return '+arg.toJS())(params,alasql);\r\n\t\t});\r\n\t};\r\n\tif(this.engineid) {\r\n\t\tvar res = alasql.engines[this.engineid].createDatabase(this.databaseid, this.args, this.ifnotexists, this.as, cb);\r\n\t\treturn res;\r\n\t} else {\r\n\t\tvar dbid = this.databaseid;\r\n\t\tif(alasql.databases[dbid]) {\r\n\t\t\tthrow new Error(\"Database '\"+dbid+\"' already exists\")\r\n\t\t};\r\n\t\tvar a = new alasql.Database(dbid);\r\n\t\tvar res = 1;\r\n\t\tif(cb) return cb(res);\r\n\t\treturn res;\r\n\t}\r\n};\r\n\n// CREATE DATABASE databaseid\r\nyy.AttachDatabase = function (params) { return yy.extend(this, params); };\r\nyy.AttachDatabase.prototype.toString = function() {\r\n\tvar s = 'ATTACH';\r\n\tif(this.engineid) s += ' '+this.engineid;\r\n\ts += ' DATABASE'+' '+this.databaseid;\r\n\t// TODO add params\r\n\tif(args) {\r\n\t\ts += '(';\r\n\t\t\tif(args.length>0) {\r\n\t\t\t\ts += args.map(function(arg){ return arg.toString(); }).join(', ');\r\n\t\t\t}\r\n\t\ts += ')';\r\n\t}\r\n\tif(this.as) s+= ' AS'+' '+this.as;\r\n\treturn s;\r\n}\r\n//yy.CreateDatabase.prototype.compile = returnUndefined;\r\nyy.AttachDatabase.prototype.execute = function (databaseid, params, cb) {\r\n\tif(!alasql.engines[this.engineid]) {\r\n\t\tthrow new Error('Engine \"'+this.engineid+'\" is not defined.');\r\n\t};\r\n\tvar res = alasql.engines[this.engineid].attachDatabase(this.databaseid, this.as, this.args, params, cb);\r\n\treturn res;\r\n};\r\n\n// CREATE DATABASE databaseid\r\nyy.DetachDatabase = function (params) { return yy.extend(this, params); };\r\nyy.DetachDatabase.prototype.toString = function() {\r\n\tvar s = 'DETACH';\r\n\ts += ' DATABASE'+' '+this.databaseid;\r\n\treturn s;\r\n}\r\n//yy.CreateDatabase.prototype.compile = returnUndefined;\r\nyy.DetachDatabase.prototype.execute = function (databaseid, params, cb) {\r\n\tif(!alasql.databases[this.databaseid].engineid) {\r\n\t\tthrow new Error('Cannot detach database \"'+this.engineid+'\", because it was not attached.');\r\n\t};\r\n\tvar res;\r\n\n\tvar dbid = this.databaseid;\r\n\n\tif(dbid == alasql.DEFAULTDATABASEID) {\r\n\t\tthrow new Error(\"Drop of default database is prohibited\");\t\t\t\r\n\t}\r\n\n\tif(!alasql.databases[dbid]) {\r\n\t\tif(!this.ifexists) {\r\n\t\t\tthrow new Error(\"Database '\"+dbid+\"' does not exist\");\t\r\n\t\t} else {\r\n\t\t\tres = 0;\r\n\t\t}\r\n\t} else {\r\n\t\tdelete alasql.databases[dbid];\r\n\t\tif(dbid == alasql.useid) {\r\n\t\t\talasql.use();\t\t\r\n\t\t}\r\n\t\tres = 1;\r\n\t}\r\n\tif(cb) cb(res);\r\n\treturn res;\r\n//\tvar res = alasql.engines[this.engineid].attachDatabase(this.databaseid, this.as, cb);\r\n//\treturn res;\r\n};\r\n\n// USE DATABSE databaseid\r\n// USE databaseid\r\nyy.UseDatabase = function (params) { return yy.extend(this, params); };\r\nyy.UseDatabase.prototype.toString = function() {\r\n\treturn 'USE' +' '+'DATABASE'+' '+this.databaseid;\r\n}\r\n//yy.UseDatabase.prototype.compile = returnUndefined;\r\nyy.UseDatabase.prototype.execute = function (databaseid, params, cb) {\r\n\tvar dbid = this.databaseid;\r\n\tif(!alasql.databases[dbid]) {\r\n\t\tthrow new Error(\"Database '\"+dbid+\"' does not exist\")\r\n\t};\r\n\talasql.use(dbid);\r\n\tvar res = 1;\r\n\tif(cb) cb(res);\r\n\treturn res;\r\n};\r\n\n// DROP DATABASE databaseid\r\nyy.DropDatabase = function (params) { return yy.extend(this, params); }\r\nyy.DropDatabase.prototype.toString = function() {\r\n\tvar s = 'DROP';\r\n\tif(this.ifexists) s += ' IF EXISTS';\r\n\ts += ' DATABASE '+this.databaseid;\r\n\treturn s;\r\n}\r\n//yy.DropDatabase.prototype.compile = returnUndefined;\r\nyy.DropDatabase.prototype.execute = function (databaseid, params, cb) {\r\n\tif(this.engineid) {\r\n\n\t\treturn alasql.engines[this.engineid].dropDatabase(this.databaseid, this.ifexists, cb);\r\n\t}\r\n\tvar res;\r\n\n\tvar dbid = this.databaseid;\r\n\n\tif(dbid == alasql.DEFAULTDATABASEID) {\r\n\t\tthrow new Error(\"Drop of default database is prohibited\");\t\t\t\r\n\t}\r\n\tif(!alasql.databases[dbid]) {\r\n\t\tif(!this.ifexists) {\r\n\t\t\tthrow new Error(\"Database '\"+dbid+\"' does not exist\");\t\r\n\t\t} else {\r\n\t\t\tres = 0;\r\n\t\t}\r\n\t} else {\r\n\t\tif(alasql.databases[dbid].engineid) {\r\n\t\t\tthrow new Error(\"Cannot drop database '\"+dbid+\"', because it is attached. Detach it.\");\t\r\n\t\t}\r\n\n\t\tdelete alasql.databases[dbid];\r\n\t\tif(dbid == alasql.useid) {\r\n\t\t\talasql.use();\t\t\r\n\t\t}\r\n\t\tres = 1;\r\n\t}\r\n\tif(cb) cb(res);\r\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// SET for Alasql.js\r\n// Date: 01.12.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Declare = function (params) { return yy.extend(this, params); }\r\nyy.Declare.prototype.toString = function() {\r\n\tvar s = 'DECLARE ';\r\n\tif(this.declares && this.declares.length > 0) {\r\n\t\ts = this.declares.map(function(declare){\r\n\t\t\tvar s = '';\r\n\t\t\ts += '@'+declare.variable+' ';\r\n\t\t\ts += declare.dbtypeid;\r\n\t\t\tif(this.dbsize){\r\n\t\t\t\ts += '('+this.dbsize;\r\n\t\t\t\tif(this.dbprecision){\r\n\t\t\t\t\ts+= ','+this.dbprecision;\r\n\t\t\t\t}\r\n\t\t\t\ts += ')';\r\n\t\t\t}\r\n\t\t\tif(declare.expression){\r\n\t\t\t\ts += ' = '+declare.expression.toString();\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t}).join(',');\r\n\t}\r\n\treturn s;\r\n}\r\n\nyy.Declare.prototype.execute = function (databaseid,params,cb) {\r\n\tvar res = 1;\r\n\tif(this.declares && this.declares.length > 0) {\r\n\t\tthis.declares.map(function(declare){\r\n\t\t\tvar dbtypeid = declare.dbtypeid;\r\n\t\t\tif(!alasql.fn[dbtypeid]){\r\n\t\t\t\tdbtypeid = dbtypeid.toUpperCase();\r\n\t\t\t}\r\n\t\t\talasql.declares[declare.variable] = {dbtypeid:dbtypeid,\r\n\t\t\t\tdbsize:declare.dbsize, dbprecision:declare.dbprecision};\r\n\n\t\t\t// Set value\r\n\t\t\tif(declare.expression) {\r\n\n\t\t\t\talasql.vars[declare.variable] = new Function(\"params,alasql\",\"return \"\r\n\t\t\t\t\t+declare.expression.toJS('({})','', null))(params,alasql);\r\n\t\t\t\tif(alasql.declares[declare.variable]) {\r\n\t\t\t\t\talasql.vars[declare.variable] = alasql.stdfn.CONVERT(alasql.vars[declare.variable],alasql.declares[declare.variable]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\n\t\t});\r\n\t}\r\n\tif(cb){\r\n\t\tres=cb(res);\r\n\n\t}\r\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// SHOW for Alasql.js\r\n// Date: 19.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.ShowDatabases = function (params) { return yy.extend(this, params); }\r\nyy.ShowDatabases.prototype.toString = function() {\r\n\tvar s = 'SHOW DATABASES';\r\n\tif(this.like) s += 'LIKE '+this.like.toString();\r\n\treturn s;\r\n}\r\nyy.ShowDatabases.prototype.execute = function (databaseid, params, cb) {\r\n\tif(this.engineid) {\r\n\t\treturn alasql.engines[this.engineid].showDatabases(this.like, cb);\r\n\t} else {\r\n\t\tvar self = this;\r\n\t\tvar res = [];\r\n\t\tfor(dbid in alasql.databases) {\r\n\t\t\tres.push({databaseid: dbid});\r\n\t\t};\r\n\t\tif(self.like && res && res.length > 0) {\r\n\t\t\tres = res.filter(function(d){\r\n\n\t\t\t\treturn alasql.utils.like(self.like.value,d.databaseid);\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(cb) cb(res);\r\n\t\treturn res;\r\n\t};\r\n\n};\r\n\nyy.ShowTables = function (params) { return yy.extend(this, params); }\r\nyy.ShowTables.prototype.toString = function() {\r\n\tvar s = 'SHOW TABLES';\r\n\tif(this.databaseid) s += ' FROM '+this.databaseid;\r\n\tif(this.like) s += ' LIKE '+this.like.toString();\r\n\treturn s;\r\n}\r\nyy.ShowTables.prototype.execute = function (databaseid, params, cb) {\r\n\tvar db = alasql.databases[this.databaseid || databaseid];\r\n\n\tvar self = this;\r\n\tvar res = [];\r\n\tfor(tableid in db.tables) {\r\n\t\tres.push({tableid: tableid});\r\n\t};\r\n\tif(self.like && res && res.length > 0) {\r\n\t\tres = res.filter(function(d){\r\n\t\t\t//return d.tableid.match(new RegExp((self.like.value||'').replace(/\\%/g,'.*').replace(/\\?|_/g,'.'),'g'));\r\n\t\t\treturn alasql.utils.like(self.like.value,d.tableid);\r\n\t\t});\r\n\t};\r\n\tif(cb) cb(res);\r\n\treturn res;\r\n};\r\n\nyy.ShowColumns = function (params) { return yy.extend(this, params); }\r\nyy.ShowColumns.prototype.toString = function() {\r\n\tvar s = 'SHOW COLUMNS';\r\n\tif(this.table.tableid) s += ' FROM '+this.table.tableid;\r\n\tif(this.databaseid) s += ' FROM '+this.databaseid;\r\n\treturn s;\r\n};\r\n\nyy.ShowColumns.prototype.execute = function (databaseid, params, cb) {\r\n\tvar db = alasql.databases[this.databaseid || databaseid];\r\n\tvar table = db.tables[this.table.tableid];\r\n\n\tif(table && table.columns) {\r\n\t\tvar res = table.columns.map(function(col){\r\n\t\t\treturn {columnid: col.columnid, dbtypeid: col.dbtypeid, dbsize: col.dbsize};\r\n\t\t});\r\n\t\tif(cb) cb(res);\r\n\t\treturn res;\r\n\t} else {\r\n\t\tif(cb) cb([]);\r\n\t\treturn [];\r\n\t}\r\n};\r\n\nyy.ShowIndex = function (params) { return yy.extend(this, params); }\r\nyy.ShowIndex.prototype.toString = function() {\r\n\tvar s = 'SHOW INDEX';\r\n\tif(this.table.tableid) s += ' FROM '+this.table.tableid;\r\n\tif(this.databaseid) s += ' FROM '+this.databaseid;\r\n\treturn s;\r\n};\r\nyy.ShowIndex.prototype.execute = function (databaseid, params, cb) {\r\n\tvar db = alasql.databases[this.databaseid || databaseid];\r\n\tvar table = db.tables[this.table.tableid];\r\n\tvar res = [];\r\n\tif(table && table.indices) {\r\n\t\tfor(var ind in table.indices) {\r\n\t\t\tres.push({hh:ind, len:Object.keys(table.indices[ind]).length});\r\n\t\t}\r\n\t}\r\n\n\tif(cb) cb(res);\r\n\treturn res;\r\n};\r\n\nyy.ShowCreateTable = function (params) { return yy.extend(this, params); }\r\nyy.ShowCreateTable.prototype.toString = function() {\r\n\tvar s = 'SHOW CREATE TABLE '+this.table.tableid;\r\n\tif(this.databaseid) s += ' FROM '+this.databaseid;\r\n\treturn s;\r\n}\r\nyy.ShowCreateTable.prototype.execute = function (databaseid) {\r\n\tvar db = alasql.databases[this.databaseid || databaseid];\r\n\tvar table = db.tables[this.table.tableid];\r\n\tif(table) {\r\n\t\tvar s = 'CREATE TABLE '+this.table.tableid+' (';\r\n\t\tvar ss = [];\r\n\t\tif(table.columns) {\r\n\t\t\ttable.columns.forEach(function(col){\r\n\t\t\t\tvar a = col.columnid+' '+col.dbtypeid;\r\n\t\t\t\tif(col.dbsize) a += '('+col.dbsize+')';\r\n\t\t\t\tif(col.primarykey) a += ' PRIMARY KEY';\r\n\t\t\t\t// TODO extend\r\n\t\t\t\tss.push(a); \r\n\t\t\t});\r\n\t\t\ts += ss.join(', ');\r\n\t\t};\r\n\t\ts += ')';\r\n\t\treturn s;\r\n\t} else {\r\n\t\tthrow new Error('There is no such table \"'+this.table.tableid+'\"');\r\n\t}\r\n};\r\n\n/*\r\n//\r\n// SET for Alasql.js\r\n// Date: 01.12.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.SetVariable = function (params) { return yy.extend(this, params); }\r\nyy.SetVariable.prototype.toString = function() {\r\n\tvar s = 'SET ';\r\n\tif(typeof this.value != 'undefined') s += this.variable.toUpperCase()+' '+(this.value?'ON':'OFF');\r\n\tif(this.expression) s += this.method + this.variable+' = '+this.expression.toString();\r\n\treturn s;\r\n}\r\n\nyy.SetVariable.prototype.execute = function (databaseid,params,cb) {\r\n\n\tif(typeof this.value != 'undefined') {\r\n\t\tvar val = this.value;\r\n\t\tif(val == 'ON') val = true;\r\n\t\telse if(val == 'OFF') val = false;\r\n\n\t\t\talasql.options[this.variable] = val;\r\n\n\t} else if(this.expression) {\r\n\n\t\tif(this.exists) {\r\n\t\t\tthis.existsfn = this.exists.map(function(ex) {\r\n\t\t\t\tvar nq = ex.compile(databaseid);\r\n\t\t\t\tif(nq.query && !nq.query.modifier) nq.query.modifier='RECORDSET';\r\n\t\t\t\treturn nq;\r\n\n\t\t\t\t// TODO Include modifier\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(this.queries) {\r\n\t\t\tthis.queriesfn = this.queries.map(function(q) {\r\n\t\t\t\tvar nq = q.compile(databaseid);\r\n\t\t\t\tif(nq.query && !nq.query.modifier) nq.query.modifier='RECORDSET';\r\n\t\t\t\treturn nq;\r\n\t\t\t\t// TODO Include modifier\r\n\t\t\t});\t\t\r\n\t\t}\r\n\n\t\tvar res = new Function(\"params,alasql\",\"return \"\r\n\t\t\t+this.expression.toJS('({})','', null)).bind(this)(params,alasql);\r\n\t\tif(alasql.declares[this.variable]) {\r\n\t\t\tres = alasql.stdfn.CONVERT(res,alasql.declares[this.variable]);\r\n\t\t}\r\n\t\tif(this.props && this.props.length > 0) {\r\n\t\t\tif(this.method == '@') {\r\n\t\t\t\tvar fs = 'alasql.vars[\\''+this.variable+'\\']';\r\n\t\t\t} else {\r\n\t\t\t\tvar fs = 'params[\\''+this.variable+'\\']';\r\n\t\t\t}\r\n\t\t\tfs += this.props.map(function(prop){\r\n\t\t\t\tif(typeof prop == 'string') {\r\n\t\t\t\t\treturn '[\\''+prop+'\\']';\r\n\t\t\t\t} else if(typeof prop == 'number') {\r\n\t\t\t\t\treturn '['+prop+']';\r\n\t\t\t\t} else {\r\n\n\t\t\t\t\treturn '['+prop.toJS()+']';\r\n\n\t\t\t\t}\r\n\t\t\t}).join();\r\n\n\t\t\tnew Function(\"value,params,alasql\",'var y;'+fs +'=value')(res,params,alasql);\r\n\t\t} else {\r\n\t\t\tif(this.method == '@') {\r\n\t\t\t\talasql.vars[this.variable] = res;\r\n\t\t\t} else {\r\n\t\t\t\tparams[this.variable] = res;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvar res = 1;\r\n\tif(cb) res=cb(res);\r\n\treturn res;\r\n};\r\n\n// Console functions\r\n\nalasql.test = function(name, times, fn) {\r\n\tif(arguments.length === 0) {\r\n\t\talasql.log(alasql.con.results);\r\n\t\treturn;\r\n\t} else if(arguments.length === 1) {\r\n\t\tvar tm = Date.now();\r\n\t\tfn();\r\n\t\talasql.con.log(Date.now()-tm);\r\n\t\treturn;\r\n\t} \r\n\n\tif(arguments.length === 2) {\r\n\t\tfn = times;\r\n\t\ttimes = 1;\r\n\t}\r\n\n\tvar tm = Date.now();\r\n\tfor(var i=0;i<times;i++){\r\n\t\tfn();\r\n\t}\r\n\talasql.con.results[name] = Date.now()-tm;\r\n};\r\n\n// Console\r\n// alasql.log = function(sql, params) {\r\n\n// };\r\n\n// Console\r\nalasql.log = function(sql, params) {\r\n\tvar olduseid = alasql.useid;\r\n\tvar target = alasql.options.logtarget;\r\n\t// For node other\r\n\tif(utils.isNode) {\r\n\t\ttarget = 'console';\r\n\t}\r\n\n\tvar res;\r\n\tif(typeof sql === \"string\") {\r\n\t\tres = alasql(sql, params);\r\n\t} else {\r\n\t\tres = sql;\r\n\t}\r\n\n\t// For Node and console.output\r\n\tif(target === 'console' || utils.isNode) {\r\n\t\tif(typeof sql === 'string' && alasql.options.logprompt){\r\n\t\t\tconsole.log(olduseid+'>',sql);\r\n\t\t}\r\n\n\t\tif(Array.isArray(res)) {\r\n\t\t\tif(console.table) {\r\n\t\t\t\t// For Chrome and other consoles\r\n\t\t\t\tconsole.table(res);\t\t\r\n\t\t\t} else {\r\n\t\t\t\t// Add print procedure\r\n\t\t\t\tconsole.log(JSONtoString(res));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log(JSONtoString(res));\t\t\t\t\r\n\t\t}\r\n\n\t} else {\r\n\t\tvar el;\r\n\t\tif(target === 'output') {\r\n\t\t\tel = document.getElementsByTagName('output')[0];\r\n\t\t} else {\r\n\t\t\tif(typeof target === 'string') {\r\n\t\t\t\tel = document.getElementById(target);\r\n\t\t\t} else {\r\n\t\t\t\t// in case of DOM\r\n\t\t\t\tel = target;\r\n\t\t\t}\r\n\n\t\t}\r\n\n\t\tvar s = '';\r\n\n\t\tif(typeof sql === 'string' && alasql.options.logprompt) {\r\n\n\t\t\ts += '<pre><code>'+alasql.pretty(sql)+'</code></pre>';\r\n\t\t}\r\n\n\t\tif(Array.isArray(res)) {\r\n\t\t\tif(res.length === 0) {\r\n\t\t\t\ts += '<p>[ ]</p>'\r\n\t\t\t} else if(typeof res[0] !== 'object' || Array.isArray(res[0])) {\r\n\t\t\t\tfor(var i=0,ilen=res.length;i<ilen;i++) {\r\n\t\t\t\t\ts += '<p>'+loghtml(res[i])+'</p>';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ts += loghtml(res);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ts += loghtml(res);\r\n\t\t}\r\n\t\tel.innerHTML += s;\r\n\t}\r\n};\r\n\nalasql.clear = function() {\r\n\tvar target = alasql.options.logtarget;\r\n\t// For node other\r\n\n\tif(utils.isNode || utils.isMeteorServer) {\r\n\t\tif(console.clear) {\r\n\t\t\tconsole.clear();\r\n\t\t} \r\n\t} else {\r\n\t\tvar el;\r\n\t\tif(target === 'output') {\r\n\t\t\tel = document.getElementsByTagName('output')[0];\r\n\t\t} else {\r\n\t\t\tif(typeof target === 'string') {\r\n\t\t\t\tel = document.getElementById(target);\r\n\t\t\t} else {\r\n\t\t\t\t// in case of DOM\r\n\t\t\t\tel = target;\r\n\t\t\t}\r\n\t\t}\r\n\t\tel.innerHTML = '';\t\t\r\n\t}\r\n}\r\n\nalasql.write = function(s) {\r\n\n\tvar target = alasql.options.logtarget;\r\n\t// For node other\r\n\tif(utils.isNode || utils.isMeteorServer) {\r\n\t\tif(console.log) {\r\n\t\t\tconsole.log(s);\r\n\t\t} \r\n\t} else {\r\n\t\tvar el;\r\n\t\tif(target === 'output') {\r\n\t\t\tel = document.getElementsByTagName('output')[0];\r\n\t\t} else {\r\n\t\t\tif(typeof target === 'string') {\r\n\t\t\t\tel = document.getElementById(target);\r\n\t\t\t} else {\r\n\t\t\t\t// in case of DOM\r\n\t\t\t\tel = target;\r\n\t\t\t}\r\n\t\t}\r\n\t\tel.innerHTML += s;\t\t\r\n\t}\r\n}\r\n\nfunction loghtml(res) {\r\n\n\tvar s  = '';\r\n\tif(res === undefined) {\r\n\t\ts += 'undefined';\r\n\t} else if(Array.isArray(res)) {\r\n\t\ts += '<style>';\r\n\t\ts += 'table {border:1px black solid; border-collapse: collapse; border-spacing: 0px;}';\r\n\t\ts += 'td,th {border:1px black solid; padding-left:5px; padding-right:5px}';\r\n\t\ts += 'th {background-color: #EEE}';\r\n\t\ts += '</style>';\r\n\t\ts += '<table>';\r\n\t\tvar cols = [];\t\t\t\r\n\t\tfor(var colid in res[0]) {\r\n\t\t\tcols.push(colid);\r\n\t\t}\r\n\t\ts += '<tr><th>#';\r\n\t\tcols.forEach(function(colid){\r\n\t\t\ts += '<th>'+colid;\r\n\t\t});\r\n\t\tfor(var i=0,ilen=res.length;i<ilen;i++) {\r\n\t\t\ts += '<tr><th>'+(i+1);\r\n\t\t\tcols.forEach(function(colid){\r\n\t\t\t\ts += '<td> ';\r\n\t\t\t\tif(res[i][colid] == +res[i][colid]) {       // jshint ignore:line\r\n\t\t\t\t\ts += '<div style=\"text-align:right\">';\r\n\t\t\t\t\tif(typeof res[i][colid] === 'undefined'){\r\n\t\t\t\t\t\ts += 'NULL';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ts += res[i][colid];\r\n\t\t\t\t\t}\r\n\t\t\t\t\ts += '</div>';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(typeof res[i][colid] === 'undefined') {\r\n\t\t\t\t\t\ts += 'NULL';\r\n\t\t\t\t\t} else if(typeof res[i][colid] === 'string') {\r\n\t\t\t\t\t\ts += res[i][colid];\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ts += JSONtoString(res[i][colid]);\r\n\t\t\t\t\t}\r\n\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\n\t\ts += '</table>';\r\n\t} else {\r\n\t\ts += '<p>'+JSONtoString(res)+'</p>';\r\n\t}\r\n\t\t// if() {}\r\n\n\t\t// \t\tif(typeof res == 'object') {\r\n\t\t// \t\t\ts += '<p>'+JSON.stringify(res)+'</p>';\r\n\t\t// \t\t} else {\r\n\t\t// \t\t}\r\n\treturn s;\r\n}\r\n\nfunction scrollTo(element, to, duration) {\r\n    if(duration <= 0){\r\n    \treturn;\r\n    }\r\n    var difference = to - element.scrollTop;\r\n    var perTick = difference / duration * 10;\r\n\n    setTimeout(function() {\r\n        if(element.scrollTop===to){\r\n        \treturn;\r\n        }\r\n        element.scrollTop = element.scrollTop + perTick;\r\n        scrollTo(element, to, duration - 10);\r\n    }, 10);\r\n}\r\n\nalasql.prompt = function(el, useidel, firstsql) {\r\n\tif(utils.isNode) {\r\n\t\tthrow new Error('The prompt not realized for Node.js');\r\n\t}\r\n\n\tvar prompti = 0;\r\n\n\tif(typeof el === 'string'){\r\n\t\tel = document.getElementById(el);\r\n\t}\r\n\n\tif(typeof useidel === 'string'){\r\n\t\tuseidel = document.getElementById(useidel);\r\n\t}\r\n\n\tuseidel.textContent = alasql.useid;\r\n\n\tif(firstsql) {\r\n\t\talasql.prompthistory.push(firstsql);\r\n\t\tprompti = alasql.prompthistory.length;\r\n\t\ttry {\r\n\t\t\tvar tm = Date.now();\r\n\t\t\talasql.log(firstsql);\r\n\t\t\talasql.write('<p style=\"color:blue\">'+(Date.now()-tm)+' ms</p>');\r\n\t\t} catch (err) {\r\n\t\t\talasql.write('<p>'+olduseid+'&gt;&nbsp;<b>'+sql+'</b></p>');\r\n\t\t\talasql.write('<p style=\"color:red\">'+err+'<p>');\r\n\t\t}\r\n\t}\r\n\n\tvar y = el.getBoundingClientRect().top + document.getElementsByTagName('body')[0].scrollTop;\r\n\tscrollTo(document.getElementsByTagName('body')[0],y,500);\r\n\n\tel.onkeydown = function(event) {\r\n\t\tif(event.which === 13) {\r\n\t\t\tvar sql = el.value;\r\n\t\t\tvar olduseid = alasql.useid;\r\n\t\t\tel.value = '';\r\n\t\t\talasql.prompthistory.push(sql);\r\n\t\t\tprompti = alasql.prompthistory.length;\r\n\t\t\ttry {\r\n\t\t\t\tvar tm = Date.now();\r\n\t\t\t\talasql.log(sql);\r\n\t\t\t\talasql.write('<p style=\"color:blue\">'+(Date.now()-tm)+' ms</p>');\r\n\t\t\t} catch (err) {\r\n\t\t\t\talasql.write('<p>'+olduseid+'&gt;&nbsp;'+alasql.pretty(sql, false)+'</p>');\r\n\t\t\t\talasql.write('<p style=\"color:red\">'+err+'<p>');\r\n\t\t\t}\r\n\t\t\tel.focus();\r\n\n\t\t\tuseidel.textContent = alasql.useid;\r\n\t\t\tvar y = el.getBoundingClientRect().top + document.getElementsByTagName('body')[0].scrollTop;\r\n\t\t\tscrollTo(document.getElementsByTagName('body')[0],y,500);\r\n\t\t} else if(event.which === 38) {\r\n\t\t\tprompti--; if(prompti<0){\r\n\t\t\t\tprompti = 0;\r\n\t\t\t}\r\n\t\t\tif(alasql.prompthistory[prompti]) {\r\n\t\t\t\tel.value = alasql.prompthistory[prompti];\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\n\t\t} else if(event.which === 40) {\r\n\t\t\tprompti++; \r\n\t\t\tif(prompti>=alasql.prompthistory.length) {\r\n\t\t\t\tprompti = alasql.prompthistory.length;\r\n\t\t\t\tel.value = '';\r\n\t\t\t} else if(alasql.prompthistory[prompti]) {\r\n\t\t\t\tel.value = alasql.prompthistory[prompti];\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\n\t}\r\n}\r\n\n/*\r\n//\r\n// Commit for Alasql.js\r\n// Date: 01.12.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\nyy.BeginTransaction = function (params) { return yy.extend(this, params); }\r\nyy.BeginTransaction.prototype.toString = function() {\r\n\treturn 'BEGIN TRANSACTION';\r\n}\r\n\nyy.BeginTransaction.prototype.execute = function (databaseid,params, cb) {\r\n\tvar res = 1;\r\n\tif(alasql.databases[databaseid].engineid) {\r\n\t\treturn alasql.engines[alasql.databases[alasql.useid].engineid].begin(databaseid, cb);\r\n\t} else {\r\n\t\t// alasql commit!!!\r\n\t}\r\n\tif(cb) cb(res);\r\n\treturn res;\r\n};\r\n\nyy.CommitTransaction = function (params) { return yy.extend(this, params); }\r\nyy.CommitTransaction.prototype.toString = function() {\r\n\treturn 'COMMIT TRANSACTION';\r\n}\r\n\nyy.CommitTransaction.prototype.execute = function (databaseid,params, cb) {\r\n\tvar res = 1;\r\n\tif(alasql.databases[databaseid].engineid) {\r\n\t\treturn alasql.engines[alasql.databases[alasql.useid].engineid].commit(databaseid, cb);\r\n\t} else {\r\n\t\t// alasql commit!!!\r\n\t}\r\n\tif(cb) cb(res);\r\n\treturn res;\r\n};\r\n\nyy.RollbackTransaction = function (params) { return yy.extend(this, params); }\r\nyy.RollbackTransaction.prototype.toString = function() {\r\n\treturn 'ROLLBACK TRANSACTION';\r\n}\r\n\nyy.RollbackTransaction.prototype.execute = function (databaseid,params,cb) {\r\n\tvar res = 1;\r\n\tif(alasql.databases[databaseid].engineid) {\r\n\t\treturn alasql.engines[alasql.databases[databaseid].engineid].rollback(databaseid, cb);\r\n\t} else {\r\n\t\t// alasql commit!!!\r\n\t}\r\n\tif(cb) cb(res);\r\n\treturn res;\r\n};\r\n\nif(alasql.options.tsql) {\n\n//\n// Check tables and views\n// IF OBJECT_ID('dbo.Employees') IS NOT NULL\n\n  // IF OBJECT_ID('dbo.VSortedOrders', 'V') IS NOT NULL\n\nalasql.stdfn.OBJECT_ID = function(name,type) {\n\tif(typeof type == 'undefined') type = 'T';\n\ttype = type.toUpperCase();\n\n\tvar sname = name.split('.');\n\tvar dbid = alasql.useid;\n\tvar objname = sname[0];\n\tif(sname.length == 2) {\n\t\tdbid = sname[0];\n\t\tobjname = sname[1];\n\t}\n\n\tvar tables = alasql.databases[dbid].tables;\n\tdbid = \talasql.databases[dbid].databaseid;\n\tfor(var tableid in tables) {\n\t\tif(tableid == objname) {\n\t\t\t// TODO: What OBJECT_ID actually returns\n\n\t\t\tif(tables[tableid].view && type == 'V') return dbid+'.'+tableid;\n\t\t\tif(!tables[tableid].view && type == 'T') return dbid+'.'+tableid;\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\treturn undefined;\n};\n\n}\n\nif(alasql.options.mysql) {\n\n}\n\nif(alasql.options.mysql || alasql.options.sqlite) {\n\n// Pseudo INFORMATION_SCHEMA function\nalasql.from.INFORMATION_SCHEMA = function(filename, opts, cb, idx, query) {\n\tif(filename == 'VIEWS' || filename == 'TABLES' ) {\n\t\tvar res = [];\n\t\tfor(var databaseid in alasql.databases) {\t\t\t\n\t\t\tvar tables = alasql.databases[databaseid].tables;\n\t\t\tfor(var tableid in tables) {\n\t\t\t\tif((tables[tableid].view && filename == 'VIEWS') ||\n\t\t\t\t\t(!tables[tableid].view && filename == 'TABLES')) {\n\t\t\t\t\tres.push({TABLE_CATALOG:databaseid,TABLE_NAME:tableid});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(cb) res = cb(res, idx, query);\n\t\treturn res;\t\t\n\t}\n\tthrow new Error('Unknown INFORMATION_SCHEMA table');\n}\n\n}\nif(alasql.options.postgres) {\n}\nif(alasql.options.oracle) {\n}\nif(alasql.options.sqlite) {\n}\n//\n// into functions\n//\n// (c) 2014 Andrey Gershun\n//\n\nalasql.into.SQL = function(filename, opts, data, columns, cb) {\n\tvar res;\n\tif(typeof filename === 'object') {\n\t\topts = filename;\n\t\tfilename = undefined;\n\t}\n\tvar opt = {};\n\talasql.utils.extend(opt, opts); \n\tif(typeof opt.tableid === 'undefined') {\n\t\tthrow new Error('Table for INSERT TO is not defined.');\n\t}\n\n\tvar s = '';\n\tif(columns.length === 0) {\n\t\tif(typeof data[0] === \"object\") {\n\t\t\tcolumns = Object.keys(data[0]).map(function(columnid){return {columnid:columnid}});\n\t\t} else {\n\t\t\t// What should I do?\n\t\t\t// columns = [{columnid:\"_\"}];\n\t\t}\n\t}\n\n\tfor(var i=0,ilen=data.length;i<ilen;i++) {\n\t\ts += 'INSERT INTO '+opts.tableid +'(';\n\t\ts += columns.map(function(col){return col.columnid}).join(\",\");\n\t\ts += ') VALUES (';\n\t\ts += columns.map(function(col){\n\t\t\tvar val = data[i][col.columnid];\n\t\t\tif(col.typeid) {\n\t\t\t\tif(col.typeid === 'STRING' || col.typeid === 'VARCHAR' ||  \n\t\t\t\t\tcol.typeid === 'NVARCHAR' || col.typeid === 'CHAR' || col.typeid === 'NCHAR') {\n\t\t\t\t\tval = \"'\"+escapeqq(val)+\"'\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(typeof val == 'string') {\n\t\t\t\t\tval = \"'\"+escapeqq(val)+\"'\";\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn val;\n\t\t});\t\t\n\t\ts += ');\\n';\n\t}\n//\tif(filename === '') {\n\n//\t} else {\n\n\tfilename = alasql.utils.autoExtFilename(filename,'sql',opts);\n\tres = alasql.utils.saveFile(filename,s);\n\tif(cb){\n\t\tres = cb(res);\n\t}\n\treturn res;\n};\n\nalasql.into.HTML = function(selector, opts, data, columns, cb) {\n\tvar res = 1;\n\tif(typeof exports !== 'object') {\n\t\tvar opt = {headers:true};\n\t\talasql.utils.extend(opt, opts);\n\n\t\tvar sel = document.querySelector(selector);\n\t\tif(!sel) {\n\t\t\tthrow new Error('Selected HTML element is not found');\n\t\t};\t\n\n\t\tif(columns.length === 0) {\n\t\t\tif(typeof data[0] === \"object\") {\n\t\t\t\tcolumns = Object.keys(data[0]).map(function(columnid){return {columnid:columnid}});\n\t\t\t} else {\n\t\t\t\t// What should I do?\n\t\t\t\t// columns = [{columnid:\"_\"}];\n\t\t\t}\n\t\t}\n\n\t\tvar tbe = document.createElement('table');\n\t\tvar thead = document.createElement('thead');\n\t\ttbe.appendChild(thead);\n\t\tif(opt.headers) {\n\t\t\tvar tre = document.createElement('tr');\n\t\t\tfor(var i=0;i<columns.length;i++){\n\t\t\t\tvar the = document.createElement('th');\n\t\t\t\tthe.textContent = columns[i].columnid;\n\t\t\t\ttre.appendChild(the);\n\t\t\t}\n\t\t\tthead.appendChild(tre);\n\t\t}\n\n\t\tvar tbody = document.createElement('tbody');\n\t\ttbe.appendChild(tbody);\n\t\tfor(var j=0;j<data.length;j++){\n\t\t\tvar tre = document.createElement('tr');\n\t\t\tfor(var i=0;i<columns.length;i++){\n\t\t\t\tvar the = document.createElement('td');\n\t\t\t\tthe.textContent = data[j][columns[i].columnid];\n\t\t\t\ttre.appendChild(the);\n\t\t\t}\n\t\t\ttbody.appendChild(tre);\n\t\t}\n\t\talasql.utils.domEmptyChildren(sel);\n\n\t\tsel.appendChild(tbe);\n\t}\n\tif(cb){\n\t\tres = cb(res);\n\t}\n\treturn res;\n};\n\nalasql.into.JSON = function(filename, opts, data, columns, cb) {\n\tvar res = 1;\n\tif(typeof filename === 'object') {\n\t\topts = filename;\n\t\tfilename = undefined;\n\t}\n\tvar s = JSON.stringify(data);\n\n\tfilename = alasql.utils.autoExtFilename(filename,'json',opts);\n\tres = alasql.utils.saveFile(filename,s);\n\tif(cb){\n\t\tres = cb(res);\n\t}\n\treturn res;\n};\n\nalasql.into.TXT = function(filename, opts, data, columns, cb) {\n\t// If columns is empty\n\tif(columns.length === 0 && data.length > 0) {\n\t\tcolumns = Object.keys(data[0]).map(function(columnid){return {columnid:columnid}});\n\t}\n\t// If one parameter\n\tif(typeof filename === 'object') {\n\t\topts = filename;\n\t\tfilename = undefined;\n\t}\n\n\tvar res = data.length;\n\tvar s = '';\n\tif(data.length > 0) {\n\t\tvar key = columns[0].columnid;\n\t\ts += data.map(function(d){\n\t\t\treturn d[key];\n\t\t}).join('\\n');\n\t}\n\n\tfilename = alasql.utils.autoExtFilename(filename,'txt',opts);\n\tres = alasql.utils.saveFile(filename,s);\n\tif(cb){\n\t\tres = cb(res);\n\t}\n\treturn res;\n};\n\nalasql.into.TAB = alasql.into.TSV = function(filename, opts, data, columns, cb) {\n\tvar opt = {};\n\talasql.utils.extend(opt, opts);\n\topt.separator = '\\t';\n\tfilename = alasql.utils.autoExtFilename(filename,'tab',opts);\n\topt.autoExt = false;\n\treturn alasql.into.CSV(filename, opt, data, columns, cb);\n}\n\nalasql.into.CSV = function(filename, opts, data, columns, cb) {\n\tif(columns.length === 0 && data.length > 0) {\n\t\tcolumns = Object.keys(data[0]).map(function(columnid){return {columnid:columnid}});\n\t}\n\tif(typeof filename === 'object') {\n\t\topts = filename;\n\t\tfilename = undefined;\n\t}\n\n\tvar opt = {headers:true};\n\t//opt.separator = ','; \n\topt.separator = ';';\n\topt.quote = '\"';\n\n\topt.utf8Bom = true;\n\tif(opts && !opts.headers && typeof opts.headers !== 'undefined'){\n\t\topt.utf8Bom = false;\t\n\t}\n\n\talasql.utils.extend(opt, opts);\n\tvar res = data.length;\n\tvar s = opt.utf8Bom ? \"\\ufeff\" : '';\n\tif(opt.headers) {\n\t\ts += opt.quote+columns.map(function(col){\n\t\t\treturn col.columnid.trim();\n\t\t}).join(opt.quote+opt.separator+opt.quote)+opt.quote+'\\r\\n';\n\t}\n\n\tdata.forEach(function(d){\n\t\ts += columns.map(function(col){\n\t\t\tvar s = d[col.columnid];\n\t\t\t// escape the character wherever it appears in the field\n\t\t\tif (opt.quote !== '') {\n\t\t\t\ts = (s+\"\").replace(new RegExp('\\\\'+opt.quote,\"g\"), opt.quote + opt.quote);\n\t\t\t}\n\n      //Excel 2013 needs quotes around strings - thanks for _not_ complying with RFC for CSV \n      if(+s!=s){  // jshint ignore:line\n          s = opt.quote + s + opt.quote; \n      }\n\n      return s;\n\t\t}).join(opt.separator)+'\\r\\n';\t\n\t});\n\n\tfilename = alasql.utils.autoExtFilename(filename,'csv',opts);\n\tres = alasql.utils.saveFile(filename,s, null, {disableAutoBom: true});\n\tif(cb){\n\t\tres = cb(res);\n\t}\n\treturn res;\n};\n\n//\n// 831xl.js - Coloring Excel\n// 18.04.2015\n// Generate XLS file with colors and styles\n// with Excel\n\nalasql.into.XLS = function(filename, opts, data, columns, cb) {\n\t// If filename is not defined then output to the result\n\tif(typeof filename == 'object') {\n\t\topts = filename;\n\t\tfilename = undefined;\n\t}\n\n\t// Set sheets\n\tvar sheets = {};\n\tif(opts && opts.sheets) {\n\t\tsheets = opts.sheets;\n\t};\n\n\t// Default sheet\n\tvar sheet = {headers:true};\n\tif(typeof sheets['Sheet1'] != 'undefined') {\n\t\tsheet = sheets[0];\n\t} else {\n\t\tif(typeof opts != 'undefined') {\n\t\t\tsheet = opts;\n\t\t}\n\t};\n\n\t// Set sheet name and default is 'Sheet1'\n\tif(typeof sheet.sheetid == 'undefined') {\n\t\tsheet.sheetid = 'Sheet1';\n\t};\n\n\tvar s = toHTML();\n\n\t// File is ready to save\n\tfilename = alasql.utils.autoExtFilename(filename,'xls',opts);\n\tvar res = alasql.utils.saveFile(filename,s);\n\tif(cb) res = cb(res);\n\treturn res;\n\n\tfunction toHTML() {\n\t// Generate prologue\n\t\tvar s = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" \\\n\t\txmlns=\"http://www.w3.org/TR/REC-html40\"><head> \\\n\t\t<meta charset=\"utf-8\" /> \\\n\t\t\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets> ';\n\n\t\t// Worksheets\n\t\ts+=' <x:ExcelWorksheet><x:Name>' + sheet.sheetid + '</x:Name><x:WorksheetOptions><x:DisplayGridlines/>     </x:WorksheetOptions> \\\n\t\t</x:ExcelWorksheet>';\n\n\t\ts += '</x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e</head>';\n\n\t\t// Generate body\n\t\ts += '<body';\n\t\tif(typeof sheet.style != 'undefined') {\n\t\t\ts += ' style=\"';\n\t\t\tif(typeof sheet.style == 'function') {\n\t\t\t\ts += sheet.style(sheet);\n\t\t\t} else {\n\t\t\t\ts += sheet.style;\n\t\t\t}\n\t\t\ts += '\"';\n\t\t}\n\t\ts +='>';\n\t\ts += '<table>';\n\t\tif(typeof sheet.caption != 'undefined') {\n\t\t\tvar caption = sheet.caption;\n\t\t\tif(typeof caption == 'string') {\n\t\t\t\tcaption = {title:caption};\n\t\t\t}\n\t\t\ts += '<caption';\n\t\t\tif(typeof caption.style != 'undefined') {\n\t\t\t\ts += ' style=\"';\n\t\t\t\tif(typeof caption.style == 'function') {\n\t\t\t\t\ts += caption.style(sheet,caption);\n\t\t\t\t} else {\n\t\t\t\t\ts += caption.style;\n\t\t\t\t}\n\t\t\t\ts += '\" '\n\t\t\t}\n\t\t\ts += '>';\n\t\t\ts += caption.title;\n\t\t\ts += '</caption>';\n\t\t}\n\n\t\t// Columns\n\n\t\t// If columns defined in sheet, then take them\n\t\tif(typeof sheet.columns != 'undefined') {\n\t\t\tcolumns = sheet.columns;\n\t\t} else {\n\t\t\t// Autogenerate columns if they are passed as parameters\n\t\t\tif(columns.length == 0 && data.length > 0) {\n\t\t\t\tif(typeof data[0] == 'object') {\n\t\t\t\t\tif(Array.isArray(data[0])) {\n\t\t\t\t\t\tcolumns = data[0].map(function(d,columnidx){\n\t\t\t\t\t\t\treturn {columnid:columnidx};\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolumns = Object.keys(data[0]).map(function(columnid){\n\t\t\t\t\t\t\treturn {columnid:columnid};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Prepare columns\n\t\tcolumns.forEach(function(column,columnidx){\n\t\t\tif(typeof sheet.column != 'undefined') {\n\t\t\t\textend(column,sheet.column);\n\t\t\t}\n\n\t\t\tif(typeof column.width == 'undefined') {\n\t\t\t\tif(sheet.column && sheet.column.width !='undefined') {\n\t\t\t\t\tcolumn.width = sheet.column.width;\n\n\t\t\t\t} else {\n\t\t\t\t\tcolumn.width = \"120px\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(typeof column.width == 'number') column.width = column.width + \"px\";\n\t\t\tif(typeof column.columnid == 'undefined') column.columnid = columnidx;\n\t\t\tif(typeof column.title == 'undefined') column.title = \"\"+column.columnid.trim();\n\t\t\tif(sheet.headers && Array.isArray(sheet.headers)) column.title = sheet.headers[columnidx];\n\t\t});\n\n\t\t// Set columns widths\n\t\ts += '<colgroups>';\n\t\tcolumns.forEach(function (column) {\n\t\t\ts += '<col style=\"width: '+column.width+'\"></col>';\n\t\t});\n\t\ts += '</colgroups>';\n\n\t\t// Headers\n\t\tif(sheet.headers) {\n\t\t \ts += '<thead>';\n\t\t \ts += '<tr>';\n\n\t\t\t// TODO: Skip columns to body\n\n\t\t\t// Headers\n\t\t\tcolumns.forEach(function (column,columnidx) {\n\n\t\t\t\ts += '<th ';\n\t\t\t\t// Column style\n\t\t\t\tif(typeof column.style != 'undefined') {\n\t\t\t\t\ts += ' style=\"';\n\t\t\t\t\tif(typeof column.style == 'function') {\n\t\t\t\t\t\ts += column.style(sheet,column,columnidx);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts += column.style;\n\t\t\t\t\t}\n\t\t\t\t\ts += '\" '\n\t\t\t\t}\n\t\t\t\ts += '>';\n\n\t\t\t\t// Column title\n\t\t\t\tif(typeof column.title != 'undefined') {\n\t\t\t\t\tif(typeof column.title == 'function') {\n\t\t\t\t\t\ts += column.title(sheet,column,columnidx);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts += column.title;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts += '</th>';\n\t\t\t});\t\n\n\t\t\ts += '</tr>';\t\n\t\t\ts += '</thead>';\n\t\t}\n\n\t\ts += '<tbody>';\n\n\t\t// TODO: Skip lines between header and body\n\n\t\tif(data && data.length > 0) {\n\n\t\t\t// TODO: Skip columns to body\n\n\t\t\t// Loop over data rows\n\t\t\tdata.forEach(function(row,rowidx){\n\t\t\t\t// Limit number of rows on the sheet\n\t\t\t\tif(rowidx>sheet.limit) return;\n\t\t\t\t// Create row\n\t\t\t\ts += '<tr';\n\n\t\t\t\tvar srow = {};\n\t\t\t\textend(srow,sheet.row);\n\t\t\t\tif(sheet.rows && sheet.rows[rowidx]) {\n\t\t\t\t\textend(srow,sheet.rows[rowidx]);\n\t\t\t\t}\n\t\t\t\t// Row style fromdefault sheet\n\t\t\t\tif(typeof srow != 'undefined') {\n\t\t\t\t\tif(typeof srow.style != 'undefined') {\n\t\t\t\t\t\ts += ' style=\"';\n\t\t\t\t\t\tif(typeof srow.style == 'function') {\n\t\t\t\t\t\t\ts += srow.style(sheet,row,rowidx);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ts += srow.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts += '\" '\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\ts += '>';\n\t\t\t\t// Loop over columns\n\t\t\t\tcolumns.forEach(function (column,columnidx) {\n\t\t\t\t\t// Parameters\n\t\t\t\t\tvar cell = {};\n\t\t\t\t\textend(cell,sheet.cell);\n\t\t\t\t\textend(cell,srow.cell);\n\t\t\t\t\tif(typeof sheet.column != 'undefined') {\n\t\t\t\t\t\textend(cell,sheet.column.cell);\n\t\t\t\t\t}\n\t\t\t\t\textend(cell,column.cell);\n\t\t\t\t\tif(sheet.cells && sheet.cells[rowidx] && sheet.cells[rowidx][columnidx]) {\n\t\t\t\t\t\textend(cell,sheet.cells[rowidx][columnidx]);\n\t\t\t\t\t};\n\n\t\t\t\t\t// Create value\n\t\t\t\t\tvar value = row[column.columnid];\n\t\t\t\t\tif(typeof cell.value == 'function') {\n\t\t\t\t\t\tvalue = cell.value(value,sheet,row,column,cell,rowidx,columnidx);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Define cell type\n\t\t\t\t\tvar typeid = cell.typeid;\n\t\t\t\t\tif(typeof typeid == 'function') {\n\t\t\t\t\t\ttypeid = typeid(value,sheet,row,column,cell,rowidx,columnidx);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(typeof typeid == 'undefined') {\n\t\t\t\t\t\tif(typeof value == 'number') typeid = 'number';\n\t\t\t\t\t\telse if(typeof value == 'string') typeid = 'string';\n\t\t\t\t\t\telse if(typeof value == 'boolean') typeid = 'boolean';\n\t\t\t\t\t\telse if(typeof value == 'object') {\n\t\t\t\t\t\t\tif(value instanceof Date) typeid = 'date';\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tvar typestyle = '';\n\n\t\t\t\t\tif(typeid == 'money') {\n\t\t\t\t\t\ttypestyle = 'mso-number-format:\\\"\\\\#\\\\,\\\\#\\\\#0\\\\\\\\ _р_\\\\.\\\";white-space:normal;';\n\t\t\t\t\t} else if(typeid == 'number') {\n\t\t\t\t\t\ttypestyle = ' ';\n\t\t\t\t\t} else if (typeid == 'date') {\n\t\t\t\t\t\ttypestyle = 'mso-number-format:\\\"Short Date\\\";'; \n\t\t\t\t\t} else {\n\t\t\t\t\t\t// FOr other types is saved\n\t\t\t\t\t\tif( opts.types && opts.types[typeid] && opts.types[typeid].typestyle) {\n\t\t\t\t\t\t\ttypestyle = opts.types[typeid].typestyle;\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO Replace with extend...\n\t\t\t\t\ttypestyle = typestyle || 'mso-number-format:\\\"\\\\@\\\";'; // Default type style\n\n\t\t\t\t\ts += \"<td style='\" + typestyle+\"' \" ;\n\t\t\t\t\tif(typeof cell.style != 'undefined') {\n\t\t\t\t\t\ts += ' style=\"';\n\t\t\t\t\t\tif(typeof cell.style == 'function') {\n\t\t\t\t\t\t\ts += cell.style(value,sheet,row,column,rowidx,columnidx);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ts += cell.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts += '\" '\n\t\t\t\t\t}\n\t\t\t\t\ts += '>';\n\n\t\t\t\t\t// TODO Replace with extend...\n\t\t\t\t\tvar format = cell.format;\n\t\t\t\t\tif(typeof value == 'undefined') {\n\t\t\t\t\t\ts += '';\n\t\t\t\t\t} else if(typeof format != 'undefined') {\n\t\t\t\t\t\tif(typeof format == 'function') {\n\t\t\t\t\t\t\ts += format(value);\n\t\t\t\t\t\t} else if(typeof format == 'string') {\n\t\t\t\t\t\t\ts += value; // TODO - add string format\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('Unknown format type. Should be function or string');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(typeid == 'number' || typeid == 'date') {\n\t\t\t\t\t\t\ts += value.toString();\n\t\t\t\t\t\t} else if(typeid == 'money') {\n\t\t\t\t\t\t\ts += (+value).toFixed(2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ts += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ts += '</td>';\n\t\t\t\t});\n\n\t\t\t\ts += '</tr>';\n\t\t\t});\n\t\t}\n\n\t\ts += '</tbody>';\n\n\t\t// Generate epilogue\n\t\ts += '</table>';\n\t\ts += '</body>';\n\t\ts += '</html>';\n\n\t\treturn s;\n\n\t}\n\n\t// Style function\n\tfunction style(a) {\n\t\tvar s = ' style=\"';\n\t\tif(a && typeof a.style != 'undefined') {\n\t\t\ts += a.style + ';';\n\t\t}\n\t\ts += '\" ';\n\t\treturn s;\n\t}\n};\n\nalasql.into.XLSXML = function(filename, opts, data, columns, cb) {\n\topts = opts || {};\n\n\t// If filename is not defined then output to the result\n\tif(typeof filename == 'object') {\n\t\topts = filename;\n\t\tfilename = undefined;\n\t}\n\n\t// Set sheets\n\tvar sheets = {};\n\tif(opts && opts.sheets) {\n\t\tsheets = opts.sheets;\n\t} else {\n\t\tsheets.Sheet1 = opts;\n\t};\n\n\t// File is ready to save\n\tfilename = alasql.utils.autoExtFilename(filename,'xls',opts);\n\tvar res = alasql.utils.saveFile(filename,toXML());\n\tif(cb) res = cb(res);\n\treturn res;\n\n\tfunction toXML() {\n\t\tvar s1 = '<?xml version=\"1.0\"?> \\\n\t\t<Workbook xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\" \\\n\t\t xmlns:o=\"urn:schemas-microsoft-com:office:office\" \\\n\t\t xmlns:x=\"urn:schemas-microsoft-com:office:excel\" \\\n\t\t xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" \\\n\t\t xmlns:html=\"http://www.w3.org/TR/REC-html40\"> \\\n\t\t <DocumentProperties xmlns=\"urn:schemas-microsoft-com:office:office\"> \\\n\t\t </DocumentProperties> \\\n\t\t <OfficeDocumentSettings xmlns=\"urn:schemas-microsoft-com:office:office\"> \\\n\t\t  <AllowPNG/> \\\n\t\t </OfficeDocumentSettings> \\\n\t\t <ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\"> \\\n\t\t  <ActiveSheet>0</ActiveSheet> \\\n\t\t </ExcelWorkbook> \\\n\t\t <Styles> \\\n\t\t  <Style ss:ID=\"Default\" ss:Name=\"Normal\"> \\\n\t\t   <Alignment ss:Vertical=\"Bottom\"/> \\\n\t\t   <Borders/> \\\n\t\t   <Font ss:FontName=\"Calibri\" x:Family=\"Swiss\" ss:Size=\"12\" ss:Color=\"#000000\"/> \\\n\t\t   <Interior/> \\\n\t\t   <NumberFormat/> \\\n\t\t   <Protection/> \\\n\t\t  </Style>';\n\n\t \tvar s2 = ''; // for styles\n\n\t\tvar s3 = ' </Styles>';\n\n\t\tvar styles = {}; // hash based storage for styles\n\t\tvar stylesn = 62; // First style\n\n\t\t// Generate style\n\t\tfunction hstyle(st) {\n\t\t\t// Prepare string\n\t\t\tvar s = '';\n\t\t\tfor(var key in st) {\n\t\t\t\ts += '<'+key;\n\t\t\t\tfor(var attr in st[key]) {\n\t\t\t\t\ts += ' ';\n\t\t\t\t\tif(attr.substr(0,2) == 'x:') {\n\t\t\t\t\t\ts += attr;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts += 'ss:';\n\t\t\t\t\t}\n\t\t\t\t\ts += attr+'=\"'+st[key][attr]+'\"';\n\t\t\t\t}\n\t\t\t\ts += '/>';\n\t\t\t}\n\n\t\t\tvar hh = hash(s);\n\t\t\t// Store in hash\n\t\t\tif(styles[hh]) {\n\t\t\t} else {\n\t\t\t\tstyles[hh] = {styleid:stylesn};\n\t\t\t\ts2 += '<Style ss:ID=\"s'+stylesn+'\">';\n\t\t\t\ts2 += s;\n\t\t\t\ts2 += '</Style>';\n\t\t\t\tstylesn++;\n\t\t\t}\n\t\t\treturn 's'+styles[hh].styleid;\n\t\t}\n\n\t\tfor (var sheetid in sheets) {\n\t\t\tvar sheet = sheets[sheetid];\n\n\t\t\t// If columns defined in sheet, then take them\n\t\t\tif(typeof sheet.columns != 'undefined') {\n\t\t\t\tcolumns = sheet.columns;\n\t\t\t} else {\n\t\t\t\t// Autogenerate columns if they are passed as parameters\n\t\t\t\tif(columns.length == 0 && data.length > 0) {\n\t\t\t\t\tif(typeof data[0] == 'object') {\n\t\t\t\t\t\tif(Array.isArray(data[0])) {\n\t\t\t\t\t\t\tcolumns = data[0].map(function(d,columnidx){\n\t\t\t\t\t\t\t\treturn {columnid:columnidx};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolumns = Object.keys(data[0]).map(function(columnid){\n\t\t\t\t\t\t\t\treturn {columnid:columnid};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Prepare columns\n\t\t\tcolumns.forEach(function(column,columnidx){\n\t\t\t\tif(typeof sheet.column != 'undefined') {\n\t\t\t\t\textend(column,sheet.column);\n\t\t\t\t}\n\n\t\t\t\tif(typeof column.width == 'undefined') {\n\t\t\t\t\tif(sheet.column && (typeof sheet.column.width !='undefined')) {\n\t\t\t\t\t\tcolumn.width = sheet.column.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolumn.width = 120;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(typeof column.width == 'number') column.width = column.width;\n\t\t\t\tif(typeof column.columnid == 'undefined') column.columnid = columnidx;\n\t\t\t\tif(typeof column.title == 'undefined') column.title = \"\"+column.columnid.trim();\n\t\t\t\tif(sheet.headers && Array.isArray(sheet.headers)) column.title = sheet.headers[idx];\n\t\t\t});\n\n\t\t\t// Header\n\t \t\ts3 +='<Worksheet ss:Name=\"'+sheetid+'\"> \\\n\t  \t\t\t<Table ss:ExpandedColumnCount=\"'+columns.length\n\t  \t\t\t+'\" ss:ExpandedRowCount=\"'+((sheet.headers?1:0)+Math.min(data.length,sheet.limit||data.length))\n\t  \t\t\t\t+'\" x:FullColumns=\"1\" \\\n\t   \t\t\tx:FullRows=\"1\" ss:DefaultColumnWidth=\"65\" ss:DefaultRowHeight=\"15\">';\n\n\t\t\tcolumns.forEach(function (column,columnidx) {\n\n\t   \t\t\ts3 += '<Column ss:Index=\"'+(columnidx+1)\n\t   \t\t\t       +'\" ss:AutoFitWidth=\"0\" ss:Width=\"'+column.width+'\"/>'\n\t   \t\t});\n\n\t   \t\t// Headers\n\t\t\tif(sheet.headers) {\n\t   \t\t\ts3 += '<Row ss:AutoFitHeight=\"0\">';\n\n\t\t\t\t// TODO: Skip columns to body\n\n\t\t\t\t// Headers\n\t\t\t\tcolumns.forEach(function (column,columnidx) {\n\n\t\t    \t\ts3 += '<Cell ';\n\n\t\t\t\t\tif(typeof column.style != 'undefined') {\n\t\t\t\t\t\tvar st = {};\n\t\t\t\t\t\tif(typeof column.style == 'function') {\n\t\t\t\t\t\t\textend(st,column.style(sheet,column,columnidx));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\textend(st,column.style);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts3 += 'ss:StyleID=\"'+hstyle(st)+'\"';\n\t\t\t\t\t}\n\n\t\t    \t\ts3 += '><Data ss:Type=\"String\">';\n\n\t\t\t\t\t// Column title\n\t\t\t\t\tif(typeof column.title != 'undefined') {\n\t\t\t\t\t\tif(typeof column.title == 'function') {\n\t\t\t\t\t\t\ts3 += column.title(sheet,column,columnidx);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ts3 += column.title;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ts3 += '</Data></Cell>';\n\t\t\t\t});\t\n\n\t\t\t\ts3 += '</Row>';\n\t\t\t};\n\n\t   \t\t// Data\n\t\t\tif(data && data.length > 0) {\n\t\t\t\t// Loop over data rows\n\t\t\t\tdata.forEach(function(row,rowidx){\n\t\t\t\t\t// Limit number of rows on the sheet\n\t\t\t\t\tif(rowidx>sheet.limit) return;\n\n\t\t\t\t\t// Extend row properties\n\t\t\t\t\tvar srow = {};\n\t\t\t\t\textend(srow,sheet.row);\n\t\t\t\t\tif(sheet.rows && sheet.rows[rowidx]) {\n\t\t\t\t\t\textend(srow,sheet.rows[rowidx]);\n\t\t\t\t\t}\n\n\t\t   \t\t\ts3 += '<Row ';\n\n\t\t\t\t\t// Row style fromdefault sheet\n\t\t\t\t\tif(typeof srow != 'undefined') {\n\t\t\t\t\t\tvar st = {};\n\t\t\t\t\t\tif(typeof srow.style != 'undefined') {\n\t\t\t\t\t\t\tif(typeof srow.style == 'function') {\n\t\t\t\t\t\t\t\textend(st,srow.style(sheet,row,rowidx));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\textend(st,srow.style);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ts3 += 'ss:StyleID=\"'+hstyle(st)+'\"';\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\ts3 += '>';//'ss:AutoFitHeight=\"0\">'\n\n\t\t\t\t\t// Data\n\t\t\t\t\tcolumns.forEach(function (column,columnidx) {\n\n\t\t\t\t\t\t// Parameters\n\t\t\t\t\t\tvar cell = {};\n\t\t\t\t\t\textend(cell,sheet.cell);\n\t\t\t\t\t\textend(cell,srow.cell);\n\t\t\t\t\t\tif(typeof sheet.column != 'undefined') {\n\t\t\t\t\t\t\textend(cell,sheet.column.cell);\n\t\t\t\t\t\t}\n\t\t\t\t\t\textend(cell,column.cell);\n\t\t\t\t\t\tif(sheet.cells && sheet.cells[rowidx] && sheet.cells[rowidx][columnidx]) {\n\t\t\t\t\t\t\textend(cell,sheet.cells[rowidx][columnidx]);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Create value\n\t\t\t\t\t\tvar value = row[column.columnid];\n\t\t\t\t\t\tif(typeof cell.value == 'function') {\n\t\t\t\t\t\t\tvalue = cell.value(value,sheet,row,column,cell,rowidx,columnidx);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Define cell type\n\t\t\t\t\t\tvar typeid = cell.typeid;\n\t\t\t\t\t\tif(typeof typeid == 'function') {\n\t\t\t\t\t\t\ttypeid = typeid(value,sheet,row,column,cell,rowidx,columnidx);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(typeof typeid == 'undefined') {\n\t\t\t\t\t\t\tif(typeof value == 'number') typeid = 'number';\n\t\t\t\t\t\t\telse if(typeof value == 'string') typeid = 'string';\n\t\t\t\t\t\t\telse if(typeof value == 'boolean') typeid = 'boolean';\n\t\t\t\t\t\t\telse if(typeof value == 'object') {\n\t\t\t\t\t\t\t\tif(value instanceof Date) typeid = 'date';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar Type = 'String';\n\t\t\t\t\t\tif(typeid == 'number') Type = 'Number';\n\t\t\t\t\t\telse if(typeid == 'date') Type = 'Date';\n\t\t\t\t\t\t// TODO: What else?\n\n\t\t\t\t\t\t// Prepare Data types styles\n\t\t\t\t\t\tvar typestyle = '';\n\n\t\t\t\t\t\tif(typeid == 'money') {\n\t\t\t\t\t\t\ttypestyle = 'mso-number-format:\\\"\\\\#\\\\,\\\\#\\\\#0\\\\\\\\ _р_\\\\.\\\";white-space:normal;';\n\t\t\t\t\t\t} else if(typeid == 'number') {\n\t\t\t\t\t\t\ttypestyle = ' ';\n\t\t\t\t\t\t} else if (typeid == 'date') {\n\t\t\t\t\t\t\ttypestyle = 'mso-number-format:\\\"Short Date\\\";'; \n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// For other types is saved\n\t\t\t\t\t\t\tif( opts.types && opts.types[typeid] && opts.types[typeid].typestyle) {\n\t\t\t\t\t\t\t\ttypestyle = opts.types[typeid].typestyle;\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// TODO Replace with extend...\n\t\t\t\t\t\ttypestyle = typestyle || 'mso-number-format:\\\"\\\\@\\\";'; // Default type style\n\n\t\t\t    \t\ts3 += '<Cell ';\n\n\t\t\t\t\t\t// Row style fromdefault sheet\n\t\t\t\t\t\tvar st = {};\n\t\t\t\t\t\tif(typeof cell.style != 'undefined') {\n\t\t\t\t\t\t\tif(typeof cell.style == 'function') {\n\t\t\t\t\t\t\t\textend(st,cell.style(value,sheet,row,column,rowidx,columnidx));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\textend(st,cell.style);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ts3 += 'ss:StyleID=\"'+hstyle(st)+'\"';\n\t\t\t\t\t\t}\n\n\t\t\t    \t\ts3 += '>';\n\n\t\t\t    \t\ts3+='<Data ss:Type=\"'+Type+'\">';\n\n\t\t\t\t\t\t// TODO Replace with extend...\n\t\t\t\t\t\tvar format = cell.format;\n\t\t\t\t\t\tif(typeof value == 'undefined') {\n\t\t\t\t\t\t\ts3 += '';\n\t\t\t\t\t\t} else if(typeof format != 'undefined') {\n\t\t\t\t\t\t\tif(typeof format == 'function') {\n\t\t\t\t\t\t\t\ts3 += format(value);\n\t\t\t\t\t\t\t} else if(typeof format == 'string') {\n\t\t\t\t\t\t\t\ts3 += value; // TODO - add string format\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error('Unknown format type. Should be function or string');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(typeid == 'number' || typeid == 'date') {\n\t\t\t\t\t\t\t\ts3 += value.toString();\n\t\t\t\t\t\t\t} else if(typeid == 'money') {\n\t\t\t\t\t\t\t\ts3 += (+value).toFixed(2);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ts3 += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t    \t\ts3 += '</Data></Cell>';\n\t\t\t    \t});\n\n\t\t   \t\t\ts3 += '</Row>';\n\t\t   \t\t});\n\n\t\t   \t}\n\t   \t\t// Finish\n\t\t\ts3 += '</Table></Worksheet>';\n\t\t};\n\n\t\ts3 +='</Workbook>';\n\n\t\treturn s1+s2+s3;\n\t};\n\n};\n\n/**\n\tExport to XLSX function\n\t@function\n\t@param {string|object} filename Filename or options\n\t@param {object|undefined} opts Options or undefined\n\t@param {array} data Data\n\t@param {array} columns Columns\n\t@parab {callback} cb Callback function\n\t@return {number} Number of files processed\n*/\n\nalasql.into.XLSX = function(filename, opts, data, columns, cb) {\n\n\t/** @type {number} result */\n\tvar res = 1;\n\n\tif(deepEqual(columns,[{columnid:'_'}])) {\n\t\tdata = data.map(function(dat){return dat._;});\n\t\tcolumns = undefined;\n\n\t} else {\n\n\t}\n\n\tfilename = alasql.utils.autoExtFilename(filename,'xlsx',opts);\t\n\n\tvar XLSX = getXLSX();\n\n\t/* If called without filename, use opts */\n\tif(typeof filename == 'object') {\n\t\topts = filename;\n\t\tfilename = undefined;\n\t};\n\n\t/** @type {object} Workbook */\n\tvar wb = {SheetNames:[], Sheets:{}};\n\n\t// ToDo: check if cb must be treated differently here\n\tif(opts.sourcefilename) {\n\t\talasql.utils.loadBinaryFile(opts.sourcefilename,!!cb,function(data){\n\t\t\twb = XLSX.read(data,{type:'binary'});\n\t\t\tdoExport();\n        \t});\n\t} else {\n\t\tdoExport();\n\t};\n\n\t/* Return result */\n\tif(cb) res = cb(res);\n\treturn res;\n\n\t/**\n\t\tExport workbook\n\t\t@function\n\t*/\n\tfunction doExport() {\n\n\t\t/*\n\t\t\tIf opts is array of arrays then this is a\n\t\t\tmultisheet workboook, else it is a singlesheet\n\t\t*/\n\t\tif(typeof opts == 'object' && Array.isArray(opts)) {\n\t\t\tif(data && data.length > 0) {\n\t\t\t\tdata.forEach(function(dat,idx){\n\t\t\t\t\tprepareSheet(opts[idx],dat,undefined,idx+1)\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tprepareSheet(opts,data,columns,1);\n\t\t}\n\n\t\tsaveWorkbook(cb);\n\n\t}\n\n\t/**\n\t\tPrepare sheet\n\t\t@params {object} opts\n\t\t@params {array|object} data\n\t\t@params {array} columns Columns\n\t*/\n\tfunction prepareSheet(opts, data, columns, idx) {\n\n\t\t/** Default options for sheet */\n\t\tvar opt = {sheetid:'Sheet '+idx,headers:true};\n\t\talasql.utils.extend(opt, opts);\n\n\t\tvar dataLength = Object.keys(data).length;\n\n\t\t// Generate columns if they are not defined\n\t\tif((!columns || columns.length == 0) && dataLength > 0) {\n\t\t\tcolumns = Object.keys(data[0]).map(function(columnid){return {columnid:columnid}});\n\t\t}\n\n\t\tvar cells = {};\n\n\t\tif(wb.SheetNames.indexOf(opt.sheetid) > -1) {\n\t\t\tcells = wb.Sheets[opt.sheetid];\n\t\t} else {\n\t\t\twb.SheetNames.push(opt.sheetid);\n\t\t\twb.Sheets[opt.sheetid] = {};\n\t\t\tcells = wb.Sheets[opt.sheetid];\n\t\t}\n\n\t\tvar range = \"A1\";\n\t\tif(opt.range) range = opt.range;\n\n\t\tvar col0 = alasql.utils.xlscn(range.match(/[A-Z]+/)[0]);\n\t\tvar row0 = +range.match(/[0-9]+/)[0]-1;\n\n\t\tif(wb.Sheets[opt.sheetid]['!ref']) {\n\t\t\tvar rangem = wb.Sheets[opt.sheetid]['!ref'];\n\t\t\tvar colm = alasql.utils.xlscn(rangem.match(/[A-Z]+/)[0]);\n\t\t\tvar rowm = +rangem.match(/[0-9]+/)[0]-1;\n\t\t} else {\n\t\t\tvar colm = 1, rowm = 1;\n\t\t}\n\t\tvar colmax = Math.max(col0+columns.length,colm);\n\t\tvar rowmax = Math.max(row0+dataLength+2,rowm);\n\n\t\tvar i = row0+1;\n\n\t\twb.Sheets[opt.sheetid]['!ref'] = 'A1:'+alasql.utils.xlsnc(colmax)+(rowmax);\n\n\t\tif(opt.headers) {\n\t\t\tcolumns.forEach(function(col, idx){\n\t\t\t\tcells[alasql.utils.xlsnc(col0+idx)+\"\"+i] = {v:col.columnid.trim()};\n\t\t\t});\n\t\t\ti++;\n\t\t}\n\n\t\tfor(var j=0;j<dataLength;j++) {\n\t\t\tcolumns.forEach(function(col, idx){\n\t\t\t\tvar cell = {v:data[j][col.columnid]};\n\t\t\t\tif(typeof data[j][col.columnid] == 'number') {\n\t\t\t\t\tcell.t = 'n';\n\t\t\t\t} else if(typeof data[j][col.columnid] == 'string') {\n\t\t\t\t\tcell.t = 's';\n\t\t\t\t} else if(typeof data[j][col.columnid] == 'boolean') {\n\t\t\t\t\tcell.t = 'b';\n\t\t\t\t} else if(typeof data[j][col.columnid] == 'object') {\n\t\t\t\t\tif(data[j][col.columnid] instanceof Date) {\n\t\t\t\t\t\tcell.t = 'd';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcells[alasql.utils.xlsnc(col0+idx)+\"\"+i] = cell;\n\t\t\t});\n\t\t\ti++;\n\t\t}\n\n\t}\n\n\t/**\n\t\tSave Workbook\n\t\t@params {array} wb Workbook\n\t\t@params {callback} cb Callback\n\t*/\n\tfunction saveWorkbook(cb) {\n\n\t\tvar XLSX;\n\n\t\tif(typeof filename == 'undefined') {\n\t\t\tres = wb;\n\t\t} else {\n\t\t\tXLSX = getXLSX();\n\n\t\t\tif(utils.isNode || utils.isMeteorServer) {\n\t\t\t\tXLSX.writeFile(wb, filename);\n\t\t\t} else {\n\n\t\t\t\tvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\t\t\t\tvar wbout = XLSX.write(wb,wopts);\n\n\t\t\t\tfunction s2ab(s) {\n\t\t\t\t  var buf = new ArrayBuffer(s.length);\n\t\t\t\t  var view = new Uint8Array(buf);\n\t\t\t\t  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\t\t\t\t  return buf;\n\t\t\t\t}\n\n\t\t\t\t/* the saveAs call downloads a file on the local machine */\n\n\t\t\t\tif(isIE() == 9) {\n\t\t\t\t\tthrow new Error('Cannot save XLSX files in IE9. Please use XLS() export function');\n\n\t\t/** @todo Check if this code is required */\n\n\t\t\t\t} else {\n\t\t\t\t\tsaveAs(new Blob([s2ab(wbout)],{type:\"application/octet-stream\"}), filename);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t};\n};\n\n/*\n//\n// FROM functions Alasql.js\n// Date: 11.12.2014\n// (c) 2014, Andrey Gershun\n//\n*/\n\n/**\n   Meteor\n*/\n\nalasql.from.METEOR = function(filename, opts, cb, idx, query) {\n\tvar res = filename.find(opts).fetch();\n\tif(cb){\n\t\tres = cb(res, idx, query);\n\t}\n\treturn res;\n };\n\n/**\n\tGoogle Spreadsheet reader\n */\nalasql.from.TABLETOP = function(key, opts, cb, idx, query) {\n\tvar res = [];\n\n\tvar opt = {headers:true, simpleSheet:true, key:key};\n\talasql.utils.extend(opt, opts);\n\topt.callback = function(data){\n\t\tfor(var i=0; i<data.length; i++) {\n\t\t\tfor (var prop in data[i]) {\n\t        \tif(data[i][prop] == +data[i][prop] && data[i].hasOwnProperty(prop)){ // jshint ignore:line\n\t\t\t\t\tdata[i][prop] = +data[i][prop];\n\t\t\t\t}\n\t\t\t}\n\t    }\n\t\tres = data;\n\t\tif(cb){\n\t\t\tres = cb(res, idx, query);\n\t\t}\n\t};\n\n\tTabletop.init(opt);\n\treturn null;\n};\n\nalasql.from.HTML = function(selector, opts, cb, idx, query) {\n\tvar opt = {};\n\talasql.utils.extend(opt, opts);\n\n\tvar sel = document.querySelector(selector);\n\tif(!sel && sel.tagName !== \"TABLE\") {\n\t\tthrow new Error('Selected HTML element is not a TABLE');\n\t}\n\n\tvar res = [];\n\tvar headers = opt.headers;\n\n\tif(headers && !(Array.isArray(headers))) {\n\t\theaders = [];\n\t\tvar ths = sel.querySelector(\"thead tr\").children;\n\t\tfor(var i=0;i<ths.length;i++){\n\t\t\tif(!(ths.item(i).style && ths.item(i).style.display === \"none\" && opt.skipdisplaynone)) {\n\t\t\t\theaders.push(ths.item(i).textContent);\n\t\t\t} else {\n\t\t\t\theaders.push(undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar trs = sel.querySelectorAll(\"tbody tr\");\n\n\tfor(var j=0;j<trs.length;j++) {\n\t\tvar tds = trs.item(j).children;\n\t\tvar r = {};\n\t\tfor(var i=0;i<tds.length;i++){\n\t\t\tif(!(tds.item(i).style && tds.item(i).style.display === \"none\" && opt.skipdisplaynone)) {\n\t\t\t\tif(headers) {\n\t\t\t\t\tr[headers[i]] = tds.item(i).textContent;\n\t\t\t\t} else {\n\t\t\t\t\tr[i] = tds.item(i).textContent;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tres.push(r);\n\t}\n\n\tif(cb){\n\t\tres = cb(res, idx, query);\n\t}\n\treturn res;\n}\n\nalasql.from.RANGE = function(start, finish, cb, idx, query) {\n\tvar res = [];\n\tfor(var i=start;i<=finish;i++){\n\t\tres.push(i);\n\t}\n//\tres = new alasql.Recordset({data:res,columns:{columnid:'_'}});\n\tif(cb){\n\t\tres = cb(res, idx, query);\n\t}\n\treturn res;\n}\n\n// Read data from any file\nalasql.from.FILE = function(filename, opts, cb, idx, query) {\n\tvar fname;\n\tif(typeof filename === 'string') {\n\t\tfname = filename;\n\n\t} else if(filename instanceof Event) {\n\t\tfname = filename.target.files[0].name;\n\n\t} else {\n\t\tthrow new Error(\"Wrong usage of FILE() function\");\n\t}\n\n\tvar parts = fname.split('.');\n\n\tvar ext = parts[parts.length-1].toUpperCase();\n\n\tif(alasql.from[ext]) {\n\n\t\treturn alasql.from[ext](filename, opts, cb, idx, query);\n\t} else {\n\t\tthrow new Error('Cannot recognize file type for loading');\n\t}\n};\n\n// Read JSON file\n\nalasql.from.JSON = function(filename, opts, cb, idx, query) {\n\tvar res;\n\n\tfilename = alasql.utils.autoExtFilename(filename,'json',opts);\n\talasql.utils.loadFile(filename,!!cb,function(data){\n\n\t\tres = JSON.parse(data);\n\t\tif(cb){\n\t\t\tres = cb(res, idx, query);\n\t\t}\n\t});\n\treturn res;\n};\n\nalasql.from.TXT = function(filename, opts, cb, idx, query) {\n\tvar res;\n\tfilename = alasql.utils.autoExtFilename(filename,'txt',opts);\n\talasql.utils.loadFile(filename,!!cb,function(data){\n\t\tres = data.split(/\\r?\\n/);\n\n\t\t// Remove last line if empty\n\t\tif(res[res.length-1] === ''){ \n\t\t\tres.pop(); \n\t\t}\n\t\tfor(var i=0, ilen=res.length; i<ilen;i++) {\n\t\t\t// Please avoid '===' here\n\t\t\tif(res[i] == +res[i]){\t// jshint ignore:line\n\t\t\t\tres[i] = +res[i];\n\t\t\t}\n\t\t\tres[i] = [res[i]];\n\t\t}\n\t\tif(cb){\n\t\t\tres = cb(res, idx, query);\n\t\t}\n\t});\n\treturn res;\n};\n\nalasql.from.TAB = alasql.from.TSV = function(filename, opts, cb, idx, query) {\n\topts = opts || {};\n\topts.separator = '\\t';\n\tfilename = alasql.utils.autoExtFilename(filename,'tab',opts);\n\topts.autoext = false;\n\treturn alasql.from.CSV(filename, opts, cb, idx, query);\n};\n\nalasql.from.CSV = function(contents, opts, cb, idx, query) {\n\tvar opt = {\n\t\tseparator: ',',\n\t\tquote: '\"',\n\t\theaders:true\n\t};\n\talasql.utils.extend(opt, opts);\n\tvar res;\n\tvar hs = [];\n\tfunction parseText(text) {\n\n\t\tvar delimiterCode = opt.separator.charCodeAt(0);\n\t\tvar quoteCode = opt.quote.charCodeAt(0);\n\n      \tvar EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t\t\tfunction token() {\n\t\t\tif (I >= N){\n\t\t\t\treturn EOF;\n\t\t\t}\n\t\t\tif (eol){\n\t\t\t\treturn eol = false, EOL;\n\t\t\t}\n\t\t\tvar j = I;\n\t\t\tif (text.charCodeAt(j) === quoteCode) {\n\t\t\t\tvar i = j;\n\t\t\t\twhile (i++ < N) {\n\t\t\t\t\tif (text.charCodeAt(i) === quoteCode) {\n\t\t\t\t\t\tif (text.charCodeAt(i + 1) !== quoteCode){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t++i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tI = i + 2;\n\t\t\t\tvar c = text.charCodeAt(i + 1);\n\t\t\t\tif (c === 13) {\n\t\t\t\t\teol = true;\n\t\t\t\t\tif (text.charCodeAt(i + 2) === 10){\n\t\t\t\t\t\t++I;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === 10) {\n\t\t\t\t\teol = true;\n\t\t\t\t}\n\t\t\t\treturn text.substring(j + 1, i).replace(/\"\"/g, '\"');\n\t\t\t}\n\t\t\twhile (I < N) {\n\t\t\t\tvar c = text.charCodeAt(I++), k = 1;\n\t\t\t\tif(c === 10){\n\t\t\t\t\teol = true;\n\t\t\t\t} else if (c === 13) {\n\t\t\t\t\teol = true;\n\t\t\t\t\tif (text.charCodeAt(I) === 10){\n\t\t\t\t\t\t++I;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t}\n\t\t\t\t} else if(c !== delimiterCode){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn text.substring(j, I - k);\n\t\t\t}\n\t\t\treturn text.substring(j);\n\t\t}\n\n\t\twhile ((t = token()) !== EOF) {\n\t\t\tvar a = [];\n\t\t\twhile (t !== EOL && t !== EOF) {\n\t\t\t\ta.push(t.trim());\n\t\t\t\tt = token();\n\t\t\t}\n\n\t        if(opt.headers) {\n\t        \tif(n === 0) {\n\t\t\t\t\tif(typeof opt.headers === 'boolean') {\n\t\t        \t\ths = a;\n\t\t\t\t\t} else if(Array.isArray(opt.headers)) {\n\t\t\t\t\t\ths = opt.headers;\n\t\t        \t\tvar r = {};\n\t\t        \t\ths.forEach(function(h,idx){\n\t\t        \t\t\tr[h] = a[idx];\n\t\t        \t\t\t// Please avoid === here\n\t\t\t\t\t\t\tif((typeof r[h] !== 'undefined') && r[h].length !== 0 && (r[h]).trim() == +r[h]){ // jshint ignore:line\n\t\t\t\t\t\t\t\tr[h] = +r[h];\n\t\t\t\t\t\t\t}\n\t\t        \t\t});\n\t\t\t\t\t\trows.push(r);\n\t\t\t\t\t}\n\n\t        \t} else {\n\t        \t\tvar r = {};\n\t        \t\ths.forEach(function(h,idx){\n\t        \t\t\tr[h] = a[idx];\n\t\t\t\t\t\tif((typeof r[h] !== 'undefined') && r[h].length !== 0 && r[h].trim() == +r[h]){ // jshint ignore:line\n\t\t\t\t\t\t\tr[h] = +r[h];\n\t\t\t\t\t\t}\n\t        \t\t});\n\t        \t\trows.push(r);\n\t        \t}\n\t        \tn++;\n\t        } else {\n\t    \t    rows.push(a);\n\t    \t}\n      }\n\n      res = rows;\n\n\tif(opt.headers) {\n\t\tif(query && query.sources && query.sources[idx]) {\n\t\t\tvar columns = query.sources[idx].columns = [];\n\t\t\ths.forEach(function(h){\n\t\t\t\tcolumns.push({columnid:h});\n\t\t\t});\n\t\t}\n\t}\n\n\t\tif(cb){\n\t\t\tres = cb(res, idx, query);\n\t\t}\n\t}\n\tif( (new RegExp(\"\\n\")).test(contents) ) {\n\t\tparseText(contents)\n\t} else {\n\t\tcontents = alasql.utils.autoExtFilename(contents,'csv',opts);\n\t\talasql.utils.loadFile(contents,!!cb,parseText);\n\t}\n\treturn res;\n};\n\nfunction XLSXLSX(X,filename, opts, cb, idx, query) {\n\tvar opt = {};\n\topts = opts || {};\n\talasql.utils.extend(opt, opts);\n\tif(typeof opt.headers === 'undefined'){\n\t\topt.headers = true;\n\t}\n\tvar res;\n\n\t/**\n\t * see https://github.com/SheetJS/js-xlsx/blob/5ae6b1965bfe3764656a96f536b356cd1586fec7/README.md\n\t * for example of using readAsArrayBuffer under `Parsing Workbooks`\n\t */\n\tfunction fixdata(data) {\n\t\tvar o = \"\", l = 0, w = 10240;\n\t\tfor(; l<data.byteLength/w; ++l) o+=String.fromCharCode.apply(null,new Uint8Array(data.slice(l*w,l*w+w)));\n\t\to+=String.fromCharCode.apply(null, new Uint8Array(data.slice(l*w)));\n\t\treturn o;\n\t}\n\tfilename = alasql.utils.autoExtFilename(filename,'xls',opts);\n\talasql.utils.loadBinaryFile(filename,!!cb,function(data){\n\n//\tfunction processData(data) {\n\t\tif (data instanceof ArrayBuffer) {\n\t\t\tvar arr = fixdata(data);\n\t\t\tvar workbook = X.read(btoa(arr),{type:'base64'});\n\t\t} else {\n\t\t\tvar workbook = X.read(data,{type:'binary'});\n\t\t}\n\n\t\tvar sheetid;\n\t\tif(typeof opt.sheetid === 'undefined') {\n\t\t\tsheetid = workbook.SheetNames[0];\n\t\t} else {\n\t\t\tsheetid = opt.sheetid;\n\t\t}\n\t\tvar range;\n\t\tif(typeof opt.range === 'undefined') {\n\t\t\trange = workbook.Sheets[sheetid]['!ref'];\n\t\t} else {\n\t\t\trange = opt.range;\n\t\t\tif(workbook.Sheets[sheetid][range]){\n\t\t\t\trange = workbook.Sheets[sheetid][range];\n\t\t\t}\n\t\t}\n\t\tvar rg = range.split(':');\n\t\tvar col0 = rg[0].match(/[A-Z]+/)[0];\n\t\tvar row0 = +rg[0].match(/[0-9]+/)[0];\n\t\tvar col1 = rg[1].match(/[A-Z]+/)[0];\n\t\tvar row1 = +rg[1].match(/[0-9]+/)[0];\n\n\t\tvar hh = {};\n\t\tvar xlscnCol0 = alasql.utils.xlscn(col0);\n\t\tvar xlscnCol1 = alasql.utils.xlscn(col1);\n\t\tfor(var j=xlscnCol0;j<=xlscnCol1;j++){\n\t\t\tvar col = alasql.utils.xlsnc(j);\n\t\t\tif(opt.headers) {\n\t\t\t\tif(workbook.Sheets[sheetid][col+\"\"+row0]) {\n\t\t\t\t\thh[col] = workbook.Sheets[sheetid][col+\"\"+row0].v;\n\t\t\t\t} else {\n\t\t\t\t\thh[col] = col;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thh[col] = col;\n\t\t\t}\n\t\t}\n\t\tvar res = [];\n\t\tif(opt.headers){\n\t\t\trow0++;\n\t\t}\n\t\tfor(var i=row0;i<=row1;i++) {\n\t\t\tvar row = {};\n\t\t\tfor(var j=xlscnCol0;j<=xlscnCol1;j++){\n\t\t\t\tvar col = alasql.utils.xlsnc(j);\n\t\t\t\tif(workbook.Sheets[sheetid][col+\"\"+i]) {\n\t\t\t\t\trow[hh[col]] = workbook.Sheets[sheetid][col+\"\"+i].v;\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.push(row);\n\t\t}\n\n\t\t// Remove last empty line (issue #548)\n\t\tif(res.length > 0 && res[res.length-1] && Object.keys(res[res.length-1]).length == 0) {\n\t\t\tres.pop();\n\t\t}\n\n\t\tif(cb){\n\t\t\tres = cb(res, idx, query);\n\t\t}\n\t}, function(err){\n\t\tthrow err;\n\t});\n\n\treturn res;\n}\n\nalasql.from.XLS = function(filename, opts, cb, idx, query) {\n\topts=opts||{};\n\tfilename = alasql.utils.autoExtFilename(filename,'xls',opts);\n\topts.autoExt = false;\n\treturn XLSXLSX(getXLS(),filename, opts, cb, idx, query);\n}\n\nalasql.from.XLSX = function(filename, opts, cb, idx, query) {\n\topts=opts||{};\n\tfilename = alasql.utils.autoExtFilename(filename,'xlsx',opts);\n\topts.autoExt = false;\n\treturn XLSXLSX(getXLSX(),filename, opts, cb, idx, query);\n};\n\nalasql.from.XML = function(filename, opts, cb, idx, query) {\n  var res;\n\n  alasql.utils.loadFile(filename,!!cb,function(data){\n\n    res = xmlparse(data).root; \n\n    if(cb) res = cb(res, idx, query);\n  });\n  return res;\n};\n\n/**\n * Parse the given string of `xml`.\n *\n * @param {String} xml\n * @return {Object}\n * @api public\n */\n\nfunction xmlparse(xml) {\n  xml = xml.trim();\n\n  // strip comments\n  xml = xml.replace(/\x3c!--[\\s\\S]*?--\x3e/g, '');\n\n  return document();\n\n  /**\n   * XML document.\n   */\n\n  function document() {\n    return {\n      declaration: declaration(),\n      root: tag()\n    }\n  }\n\n  /**\n   * Declaration.\n   */\n\n  function declaration() {\n    var m = match(/^<\\?xml\\s*/);\n    if (!m) return;\n\n    // tag\n    var node = {\n      attributes: {}\n    };\n\n    // attributes\n    while (!(eos() || is('?>'))) {\n      var attr = attribute();\n      if (!attr) return node;\n      node.attributes[attr.name] = attr.value;\n    }\n\n    match(/\\?>\\s*/);\n\n    return node;\n  }\n\n  /**\n   * Tag.\n   */\n\n  function tag() {\n    var m = match(/^<([\\w-:.]+)\\s*/);\n    if (!m) return;\n\n    // name\n    var node = {\n      name: m[1],\n      attributes: {},\n      children: []\n    };\n\n    // attributes\n    while (!(eos() || is('>') || is('?>') || is('/>'))) {\n      var attr = attribute();\n      if (!attr) return node;\n      node.attributes[attr.name] = attr.value;\n    }\n\n    // self closing tag\n    if (match(/^\\s*\\/>\\s*/)) {\n      return node;\n    }\n\n    match(/\\??>\\s*/);\n\n    // content\n    node.content = content();\n\n    // children\n    var child;\n    while (child = tag()) {\n      node.children.push(child);\n    }\n\n    // closing\n    match(/^<\\/[\\w-:.]+>\\s*/);\n\n    return node;\n  }\n\n  /**\n   * Text content.\n   */\n\n  function content() {\n    var m = match(/^([^<]*)/);\n    if (m) return m[1];\n    return '';\n  }\n\n  /**\n   * Attribute.\n   */\n\n  function attribute() {\n    var m = match(/([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/);\n    if (!m) return;\n    return { name: m[1], value: strip(m[2]) }\n  }\n\n  /**\n   * Strip quotes from `val`.\n   */\n\n  function strip(val) {\n    return val.replace(/^['\"]|['\"]$/g, '');\n  }\n\n  /**\n   * Match `re` and advance the string.\n   */\n\n  function match(re) {\n    var m = xml.match(re);\n    if (!m) return;\n    xml = xml.slice(m[0].length);\n    return m;\n  }\n\n  /**\n   * End-of-source.\n   */\n\n  function eos() {\n    return 0 == xml.length;\n  }\n\n  /**\n   * Check for `prefix`.\n   */\n\n  function is(prefix) {\n    return 0 == xml.indexOf(prefix);\n  }\n};\n\nalasql.from.GEXF = function(filename, opts, cb, idx, query) {\n\n\tvar res;\n\talasql('SEARCH FROM XML('+filename+')',[],function(data){\n\t\tres = data;\n\t\tconsole.log(res);\n\t\tif(cb) res=cb(res);\n\t});\n  return res;\n};\n\n/*\r\n//\r\n// HELP for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n/**\r\n\tPrint statement \r\n\t@class\r\n\t@param {object} params Initial setup properties\r\n*/\r\n\nyy.Print = function (params) { return yy.extend(this, params); }\r\n\n/** \r\n\tGenerate SQL string \r\n\t@this Print statement object\r\n*/\r\nyy.Print.prototype.toString = function() {\r\n\tvar s = 'PRINT';\r\n\tif(this.statement) s += ' '+this.statement.toString();\r\n\treturn s;\r\n}\r\n\n/**\r\n \tPrint result of select statement or expression\r\n \t@param {string} databaseid Database identificator\r\n \t@param {object} params Query parameters\r\n \t@param {statement-callback} cb Callback function \r\n\t@this Print statement object\r\n*/\r\nyy.Print.prototype.execute = function (databaseid,params,cb) {\r\n\n\tvar self = this;\r\n\tvar res = 1;\r\n\n\talasql.precompile(this,databaseid,params);  /** @todo Change from alasql to this */\r\n\n\tif(this.exprs && this.exprs.length >0) {\r\n\t\tvar rs = this.exprs.map(function(expr){\r\n\n\t\t\tvar exprfn =  new Function(\"params,alasql,p\",'var y;return '+expr.toJS('({})','', null)).bind(self);\r\n\t\t\tvar r = exprfn(params,alasql);\r\n\t\t\treturn JSONtoString(r);\r\n\t\t});\r\n\t\tconsole.log.apply(console,rs);\r\n\t} else if(this.select) {\r\n\t\tvar r = this.select.execute(databaseid,params);\r\n\t\tconsole.log(JSONtoString(r));\r\n\t} else {\r\n\t\tconsole.log();\r\n\t}\r\n\n\tif(cb) res = cb(res);\r\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// HELP for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Source = function (params) { return yy.extend(this, params); }\r\nyy.Source.prototype.toString = function() {\r\n\tvar s = 'SOURCE';\r\n\tif(this.url) s += \" '\"+this.url+\" '\";\r\n\treturn s;\r\n}\r\n\n// SOURCE FILE\r\nyy.Source.prototype.execute = function (databaseid,params,cb) {\r\n\n\tvar res;\r\n\tloadFile(this.url, !!cb, function(data){\r\n\n\t\tres = alasql(data);\r\n\t\tif(cb) res = cb(res);\r\n\t\treturn res;\r\n\t}, function(err){\r\n\t\tthrow err;\r\n\t});\r\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// HELP for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Require = function (params) { return yy.extend(this, params); }\r\nyy.Require.prototype.toString = function() {\r\n\tvar s = 'REQUIRE';\r\n\tif(this.paths && this.paths.length > 0) {\r\n\t\ts += this.paths.map(function(path){\r\n\t\t\treturn path.toString()\r\n\t\t}).join(',');\r\n\t}\r\n\tif(this.plugins && this.plugins.length > 0) {\r\n\t\ts += this.plugins.map(function(plugin){\r\n\t\t\treturn plugin.toUpperCase();\r\n\t\t}).join(',');\r\n\t}\r\n\treturn s;\r\n}\r\n\n/**\r\n Attach plug-in for Alasql\r\n */\r\nyy.Require.prototype.execute = function (databaseid,params,cb) {\r\n\tvar self = this;\r\n\tvar res = 0;\r\n\tvar ss = '';\r\n\n\tif(this.paths && this.paths.length > 0) {\r\n\t\tthis.paths.forEach(function(path){\r\n\t\t\tloadFile(path.value, !!cb, function(data){\r\n\t\t\t\tres++;\r\n\n\t\t\t\tss += data;\r\n\t\t\t\tif(res<self.paths.length) return;\r\n\n\t\t\t\tnew Function(\"params,alasql\",ss)(params,alasql);\r\n\t\t\t\tif(cb) res = cb(res);\r\n\t\t\t});\r\n\t\t});\r\n\t} else if(this.plugins && this.plugins.length > 0) {\r\n\n\t\tthis.plugins.forEach(function(plugin){\r\n\t\t\t// If plugin is not loaded already\r\n\t\t\tif(!alasql.plugins[plugin]) {\r\n\t\t\t\tloadFile(alasql.path+'/alasql-'+plugin.toLowerCase()+'.js', !!cb, function(data){\r\n\t\t\t\t\t// Execute all plugins at the same time\r\n\t\t\t\t\tres++;\r\n\t\t\t\t\tss += data;\r\n\t\t\t\t\tif(res<self.plugins.length) return;\r\n\n\t\t\t\t\tnew Function(\"params,alasql\",ss)(params,alasql);\r\n\t\t\t\t\talasql.plugins[plugin] = true; // Plugin is loaded\r\n\t\t\t\t\tif(cb) res = cb(res);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\tif(cb) res = cb(res);\t\t\t\r\n\t} \r\n\treturn res;\r\n};\r\n\n/*\r\n//\r\n// HELP for Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\nyy.Assert = function (params) { return yy.extend(this, params); }\r\nyy.Source.prototype.toString = function() {\r\n\tvar s = 'ASSERT';\r\n\tif(this.value) s += ' '+JSON.stringify(this.value);\r\n\treturn s;\r\n}\r\n\n// SOURCE FILE\r\nyy.Assert.prototype.execute = function (databaseid) {\r\n\n\tif(!deepEqual(alasql.res,this.value)) {\r\n\n\t\t\tthrow new Error((this.message||'Assert wrong')+': '+JSON.stringify(alasql.res)+' == '+JSON.stringify(this.value));\r\n\n\t}\r\n\treturn 1;\r\n};\r\n\n//\n// 91websql.js\n// WebSQL database support\n// (c) 2014, Andrey Gershun\n//\n\nvar WEBSQL = alasql.engines.WEBSQL = function (){};\n\nWEBSQL.createDatabase = function(wdbid, args, dbid, cb){\n\tvar res = 1;\n\tvar wdb = openDatabase(wdbid, args[0], args[1], args[2]);\n\tif(this.dbid) {\n\t\tvar db = alasql.createDatabase(this.dbid);\n\t\tdb.engineid = 'WEBSQL';\n\t\tdb.wdbid = wdbid;\n\t\tsb.wdb = db;\n\t}\n\tif(!wdb) {\n\t\tthrow new Error('Cannot create WebSQL database \"'+databaseid+'\"')\n\t}\n\tif(cb) cb(res);\n\treturn res;\n};\n\nWEBSQL.dropDatabase = function(databaseid){\n\tthrow new Error('This is impossible to drop WebSQL database.');\n};\n\nWEBSQL.attachDatabase = function(databaseid, dbid, args, params, cb){\n\tvar res = 1;\n\tif(alasql.databases[dbid]) {\n\t\tthrow new Error('Unable to attach database as \"'+dbid+'\" because it already exists');\n\t};\n\talasqlopenDatabase(databaseid, args[0], args[1], args[2]);\n\treturn res;\n}\n\n//\n// 91indexeddb.js\n// AlaSQL IndexedDB module\n// Date: 18.04.2015\n// (c) Andrey Gershun\n//\n\nvar IDB = alasql.engines.INDEXEDDB = function (){};\n\nif(utils.hasIndexedDB) {\n\t// For Chrome it work normally, for Firefox - simple shim\n\tif(typeof utils.global.indexedDB.webkitGetDatabaseNames == 'function') {\n\t\tIDB.getDatabaseNames = utils.global.indexedDB.webkitGetDatabaseNames.bind(utils.global.indexedDB);\n\t} else {\n\t\tIDB.getDatabaseNames = function () {\n\t\t\tvar request = {};\n\t\t\tvar result = {\n\t\t\t\tcontains:function(name){\n\t\t\t\t\treturn true; // Always return true\n\t\t\t\t},\n\t\t\t\tnotsupported: true\n\t\t\t};\n\t\t\tsetTimeout(function(){\n\t\t\t\tvar event = {target:{result:result}}\n\t\t\t\trequest.onsuccess(event);\n\t\t\t},0);\n\t\t\treturn request;\n\t\t};\n\t\tIDB.getDatabaseNamesNotSupported = true;\n\t}\n}\n\n//\n// SHOW DATABASES\n// work only in chrome\n//\nIDB.showDatabases = function(like,cb) {\n\n\tvar request = IDB.getDatabaseNames();\n\trequest.onsuccess = function(event) {\n\t\tvar dblist = event.target.result;\n\t\tif(IDB.getDatabaseNamesNotSupported) {\n\t\t\tthrow new Error('SHOW DATABASE is not supported in this browser');\n\t\t}\n\t\tvar res = [];\n\t\tif(like) {\n\t\t\tvar relike = new RegExp((like.value).replace(/\\%/g,'.*'),'g');\n\t\t}\n\t\tfor(var i=0;i<dblist.length;i++) {\n\t\t\tif(!like || dblist[i].match(relike)) {\n\t\t\t\tres.push({databaseid: dblist[i]});\n\t\t\t}\n\t\t};\n\t\tcb(res);\n\t};\n};\n\nIDB.createDatabase = function(ixdbid, args, ifnotexists, dbid, cb){\nconsole.log(arguments);\n  var indexedDB = utils.global.indexedDB;\n\tif(ifnotexists) {\n\t\tvar request2 = indexedDB.open(ixdbid,1);\n\t\trequest2.onsuccess = function(event) {\n\t\t\tevent.target.result.close();\n\t\t\tif(cb) cb(1);\n\t\t};\n\t} else {\n\t\tvar request1 = indexedDB.open(ixdbid,1);\n\t\trequest1.onupgradeneeded = function (e){\n\t\t\tconsole.log('abort');\n\t\t    e.target.transaction.abort();\n\t\t};\n\t\trequest1.onsuccess = function(e) {\n\t\t\tconsole.log('success');\n\t\t\tif(ifnotexists) {\n\t\t\t\tif(cb) cb(0);\n\t\t\t} else {\n\t\t\t\tthrow new Error('IndexedDB: Cannot create new database \"'+ixdbid+'\" because it already exists');\n\t\t\t}\n\t\t}\n\t}\n\n};\n\nIDB.createDatabase = function(ixdbid, args, ifnotexists, dbid, cb){\n  var indexedDB = utils.global.indexedDB;\n\tif(IDB.getDatabaseNamesNotSupported) {\n\t\t// Hack for Firefox\n\t\tif(ifnotexists) {\n\n\t\t\tvar dbExists = true;\n\t\t\tvar request2 = indexedDB.open(ixdbid);\n\n\t\t\trequest2.onupgradeneeded = function (e){\n\n\t\t\t\tdbExists = false;\n        //\t\t\t    e.target.transaction.abort();\n        //\t\t\t    cb(0);\n\t\t\t};\n\t\t\trequest2.onsuccess = function(event) {\n\n\t\t\t\tevent.target.result.close();\n\t\t\t\tif(dbExists) {\n\t\t\t\t\tif(cb) cb(0);\n\t\t\t\t} else {\n\t\t\t\t\tif(cb) cb(1);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\n\t\t\tvar request1 = indexedDB.open(ixdbid);\n\t\t\trequest1.onupgradeneeded = function (e){\n\t\t\t    e.target.transaction.abort();\n\t\t\t};\n\t\t\trequest1.onabort = function(event) {\n\t\t\t\tif(cb) cb(1);\n\t\t\t};\n\t\t\trequest1.onsuccess = function(event) {\n\t\t\t\tevent.target.result.close();\n\t\t\t\tthrow new Error('IndexedDB: Cannot create new database \"'+ixdbid+'\" because it already exists');\n        //\t\t\t\tcb(0);\n\t\t\t};\n\n\t\t}\n\n\t} else {\n\t\tvar request1 = IDB.getDatabaseNames();\n\t\trequest1.onsuccess = function(event) {\n\t\t\tvar dblist = event.target.result;\n\t\t\tif(dblist.contains(ixdbid)){\n\t\t\t\tif(ifnotexists) {\n\t\t\t\t\tif(cb) cb(0);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('IndexedDB: Cannot create new database \"'+ixdbid+'\" because it already exists');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar request2 = indexedDB.open(ixdbid,1);\n\t\t\trequest2.onsuccess = function(event) {\n\t\t\t\tevent.target.result.close();\n\t\t\t\tif(cb) cb(1);\n\t\t\t};\n\t\t};\n\t}\n};\n\nIDB.dropDatabase = function(ixdbid, ifexists, cb){\n  var indexedDB = utils.global.indexedDB;\n\tvar request1 = IDB.getDatabaseNames();\n\trequest1.onsuccess = function(event) {\n\t\tvar dblist = event.target.result;\n\t\tif(!dblist.contains(ixdbid)){\n\t\t\tif(ifexists) {\n\t\t\t\tif(cb) cb(0);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthrow new Error('IndexedDB: Cannot drop new database \"'+ixdbid+'\" because it does not exist');\n\t\t\t}\n\t\t};\n\t\tvar request2 = indexedDB.deleteDatabase(ixdbid);\n\t\trequest2.onsuccess = function(event) {\n\n\t\t\tif(cb) cb(1);\n\t\t}\n\t};\n};\n\nIDB.attachDatabase = function(ixdbid, dbid, args, params, cb) {\n\n\tif(!utils.hasIndexedDB){\n\t\tthrow new Error('The current browser does not support IndexedDB');\n\t}\n\tvar indexedDB = utils.global.indexedDB;\n\tvar request1 = IDB.getDatabaseNames();\n\trequest1.onsuccess = function(event) {\n\t\tvar dblist = event.target.result;\n\t\tif(!dblist.contains(ixdbid)){\n\t\t\tthrow new Error('IndexedDB: Cannot attach database \"'+ixdbid+'\" because it does not exist');\n\t\t};\n\t\tvar request2 = indexedDB.open(ixdbid);\n\t\trequest2.onsuccess = function(event) {\n\t\t\tvar ixdb = event.target.result;\n\t\t\tvar db = new alasql.Database(dbid || ixdbid);\n\t\t\tdb.engineid = \"INDEXEDDB\";\n\t\t\tdb.ixdbid = ixdbid;\n\t\t\tdb.tables = [];\n\t\t\tvar tblist = ixdb.objectStoreNames;\n\t\t\tfor(var i=0;i<tblist.length;i++){\n\t\t\t\tdb.tables[tblist[i]] = {};\n\t\t\t};\n\n\t\t\tevent.target.result.close();\n\t\t\tif(cb) cb(1);\n\t\t};\n\t};\n};\n\nIDB.createTable = function(databaseid, tableid, ifnotexists, cb) {\n  var indexedDB = utils.global.indexedDB;\n\n\tvar ixdbid = alasql.databases[databaseid].ixdbid;\n\n\tvar request1 = IDB.getDatabaseNames();\n\trequest1.onsuccess = function(event) {\n\t\tvar dblist = event.target.result;\n\t\tif(!dblist.contains(ixdbid)){\n\t\t\tthrow new Error('IndexedDB: Cannot create table in database \"'+ixdbid+'\" because it does not exist');\n\t\t};\n\t\tvar request2 = indexedDB.open(ixdbid);\n\t\trequest2.onversionchange = function(event) {\n\n\t\t\tevent.target.result.close();\n\t\t};\n\t\trequest2.onsuccess = function(event) {\n\t\t\tvar version = event.target.result.version;\n\t\t\tevent.target.result.close();\n\n\t\t\tvar request3 = indexedDB.open(ixdbid, version+1);\n\t\t\trequest3.onupgradeneeded = function(event) {\n\t\t\t\tvar ixdb = event.target.result;\n\n\t\t\t\tvar store = ixdb.createObjectStore(tableid, {autoIncrement:true});\n\n\t\t\t};\n\t\t\trequest3.onsuccess = function(event) {\n\n\t\t\t\tevent.target.result.close();\n\t\t\t\tif(cb) cb(1);\n\t\t\t};\n\t\t\trequest3.onerror = function(event){\n\t\t\t\tthrow event;\n\n\t\t\t}\n\t\t\trequest3.onblocked = function(event){\n\t\t\t\tthrow new Error('Cannot create table \"'+tableid+'\" because database \"'+databaseid+'\"  is blocked');\n\n\t\t\t}\n\t\t};\n\t};\n};\n\nIDB.dropTable = function (databaseid, tableid, ifexists, cb) {\n  var indexedDB = utils.global.indexedDB;\n\tvar ixdbid = alasql.databases[databaseid].ixdbid;\n\n\tvar request1 = IDB.getDatabaseNames();\n\trequest1.onsuccess = function(event) {\n\t\tvar dblist = event.target.result;\n\n\t\tif(!dblist.contains(ixdbid)){\n\t\t\tthrow new Error('IndexedDB: Cannot drop table in database \"'+ixdbid+'\" because it does not exist');\n\t\t}\n\n\t\tvar request2 = indexedDB.open(ixdbid);\n\t\trequest2.onversionchange = function(event) {\n\t\t\tevent.target.result.close();\n\t\t};\n\n\t\trequest2.onsuccess = function(event) {\n\t\t\tvar version = event.target.result.version;\n\t\t\tevent.target.result.close();\n\n\t\t\tvar request3 = indexedDB.open(ixdbid, version+1);\n\t\t\trequest3.onupgradeneeded = function(event) {\n\t\t\t\tvar ixdb = event.target.result;\n\t\t\t\tif(ixdb.objectStoreNames.contains(tableid)) {\n\t\t\t\t\tixdb.deleteObjectStore(tableid);\n\t\t\t\t\tdelete alasql.databases[databaseid].tables[tableid];\n\t\t\t\t} else {\n\t\t\t\t\tif(!ifexists) {\n\t\t\t\t\t\tthrow new Error('IndexedDB: Cannot drop table \"'+tableid+'\" because it does not exist');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t\trequest3.onsuccess = function(event) {\n\n\t\t\t\tevent.target.result.close();\n\t\t\t\tif(cb) cb(1);\n\t\t\t};\n\t\t\trequest3.onerror = function(event){\n\n\t\t\t\tthrow event;\n\t\t\t}\n\t\t\trequest3.onblocked = function(event){\n\t\t\t\tthrow new Error('Cannot drop table \"'+tableid+'\" because database \"'+databaseid+'\" is blocked');\n\n\t\t\t}\n\t\t};\n\t};\n}\n\nIDB.intoTable = function(databaseid, tableid, value, columns, cb) {\n\n\t// console.trace();\n\n\tvar indexedDB = utils.global.indexedDB;\n\tvar ixdbid = alasql.databases[databaseid].ixdbid;\n\tvar request1 = indexedDB.open(ixdbid);\n\trequest1.onsuccess = function(event) {\n\t\tvar ixdb = event.target.result;\n\t\tvar tx = ixdb.transaction([tableid],\"readwrite\");\n\t\tvar tb = tx.objectStore(tableid);\n\n\t\tfor(var i=0, ilen = value.length;i<ilen;i++) {\n\t\t\ttb.add(value[i]);\n\t\t};\n\t\ttx.oncomplete = function() {\n\t\t\tixdb.close();\n\n\t\t\tif(cb) cb(ilen);\n\t\t}\n\t};\n\n};\n\nIDB.fromTable = function(databaseid, tableid, cb, idx, query){\n\n\t// console.trace();\n\tvar indexedDB = utils.global.indexedDB;\n\tvar ixdbid = alasql.databases[databaseid].ixdbid;\n\tvar request = indexedDB.open(ixdbid);\n\trequest.onsuccess = function(event) {\n\t\tvar res = [];\n\t\tvar ixdb = event.target.result;\n\n\t\tvar tx = ixdb.transaction([tableid]);\n\t\tvar store = tx.objectStore(tableid);\n\t\tvar cur = store.openCursor();\n\n\t\tcur.onblocked = function(event) {\n\n\t\t}\n\t\tcur.onerror = function(event) {\n\n\t\t}\n\t\tcur.onsuccess = function(event) {\n\n\t\t\tvar cursor = event.target.result;\n\n\t\t\tif(cursor) {\n\t\t\t\tres.push(cursor.value);\n\t\t\t\tcursor.continue();\n\t\t\t} else {\n\n\t\t\t\tixdb.close();\n\t\t\t\tif(cb) cb(res, idx, query);\n\t\t\t}\n\t\t}\n\t}\n}\n\nIDB.deleteFromTable = function(databaseid, tableid, wherefn,params, cb){\n\n\t// console.trace();\n  var indexedDB = utils.global.indexedDB;\n\tvar ixdbid = alasql.databases[databaseid].ixdbid;\n\tvar request = indexedDB.open(ixdbid);\n\trequest.onsuccess = function(event) {\n\t\tvar res = [];\n\t\tvar ixdb = event.target.result;\n\n\t\tvar tx = ixdb.transaction([tableid], 'readwrite');\n\t\tvar store = tx.objectStore(tableid);\n\t\tvar cur = store.openCursor();\n\t\tvar num = 0;\n\n\t\tcur.onblocked = function(event) {\n\n\t\t}\n\t\tcur.onerror = function(event) {\n\n\t\t}\n\t\tcur.onsuccess = function(event) {\n\n\t\t\tvar cursor = event.target.result;\n\n\t\t\tif(cursor) {\n\t\t\t\tif((!wherefn) || wherefn(cursor.value,params)) {\n\n\t\t\t\t\tcursor.delete();\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t\tcursor.continue();\n\t\t\t} else {\n\n\t\t\t\tixdb.close();\n\t\t\t\tif(cb) cb(num);\n\t\t\t}\n\t\t}\n\t}\n}\n\nIDB.updateTable = function(databaseid, tableid, assignfn, wherefn, params, cb){\n\n\t// console.trace();\n  var indexedDB = utils.global.indexedDB;\n\tvar ixdbid = alasql.databases[databaseid].ixdbid;\n\tvar request = indexedDB.open(ixdbid);\n\trequest.onsuccess = function(event) {\n\t\tvar res = [];\n\t\tvar ixdb = event.target.result;\n\n\t\tvar tx = ixdb.transaction([tableid], 'readwrite');\n\t\tvar store = tx.objectStore(tableid);\n\t\tvar cur = store.openCursor();\n\t\tvar num = 0;\n\n\t\tcur.onblocked = function(event) {\n\n\t\t}\n\t\tcur.onerror = function(event) {\n\n\t\t}\n\t\tcur.onsuccess = function(event) {\n\n\t\t\tvar cursor = event.target.result;\n\n\t\t\tif(cursor) {\n\t\t\t\tif((!wherefn) || wherefn(cursor.value,params)) {\n\n\t\t\t\t\tvar r = cursor.value;\n\t\t\t\t\tassignfn(r,params);\n\n\t\t\t\t\tcursor.update(r);\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t\tcursor.continue();\n\t\t\t} else {\n\n\t\t\t\tixdb.close();\n\t\t\t\tif(cb) cb(num);\n\t\t\t}\n\t\t}\n\t}\n}\n\n//\n// 91localstorage.js\n// localStorage and DOM-Storage engine\n// Date: 09.12.2014\n// (c) Andrey Gershun\n//\n\nvar LS = alasql.engines.LOCALSTORAGE = function (){};\n\n/**\n\tRead data from localStorage with security breaks\n\t@param key {string} Address in localStorage\n\t@return {object} JSON object\n*/\nLS.get = function(key) {\n\tvar s = localStorage.getItem(key);\n\tif(typeof s === \"undefined\") return;\n\tvar v = undefined;\n\ttry {\n\t\tv = JSON.parse(s);\n\t} catch(err) {\n\t\tthrow new Error('Cannot parse JSON object from localStorage'+s);\n\t}\n\treturn v;\n};\n\n/**\n\tStore data into localStorage with security breaks\n\t@param key {string} Address in localStorage\n\t@return {object} JSON object\n*/\nLS.set = function(key, value){\n\tif(typeof value === 'undefined') localStorage.removeItem(key);\n\telse localStorage.setItem(key,JSON.stringify(value));\n};\n\n/**\n\tStore table structure and data into localStorage\n\t@param databaseid {string} AlaSQL database id (not external localStorage)\n\t@param tableid {string} Table name\n\t@return Nothing\n*/\nLS.storeTable = function(databaseid,tableid) {\n\tvar db = alasql.databases[databaseid];\n\tvar table = db.tables[tableid];\n\t// Create empty structure for table\n\tvar tbl = {};\n\ttbl.columns = table.columns;\n\ttbl.data = table.data;\n\ttbl.identities = table.identities;\n\t// TODO: May be add indexes, objects and other fields?\n\tLS.set(db.lsdbid+'.'+tableid,tbl);\n};\n\n/**\n\tRestore table structure and data\n\t@param databaseid {string} AlaSQL database id (not external localStorage)\n\t@param tableid {string} Table name\n\t@return Nothing\n*/\nLS.restoreTable = function(databaseid,tableid) {\n\tvar db = alasql.databases[databaseid];\n\tvar tbl = LS.get(db.lsdbid+'.'+tableid);\n\tvar table = new alasql.Table();\n\tfor(var f in tbl) {\n\t\ttable[f] = tbl[f];\n\t}\n\tdb.tables[tableid] = table;\n\ttable.indexColumns();\n\t// We need to add other things here\n\treturn table;\n};\n\n/**\n\tRemove table from localStorage\n\t@param databaseid {string} AlaSQL database id (not external localStorage)\n\t@param tableid {string} Table name\n*/\n\nLS.removeTable = function(databaseid,tableid) {\n\tvar db = alasql.databases[databaseid];\n\tlocalStorage.removeItem(db.lsdbid+'.'+tableid);\n};\n\n/**\n\tCreate database in localStorage\n\t@param lsdbid {string} localStorage database id\n\t@param args {array} List of parameters (not used in localStorage)\n\t@param ifnotexists {boolean} Check if database does not exist\n\t@param databaseid {string} AlaSQL database id (not external localStorage)\n\t@param cb {function} Callback\n*/\n\nLS.createDatabase = function(lsdbid, args, ifnotexists, databaseid, cb){\n\tvar res = 1;\n\tvar ls = LS.get('alasql'); // Read list of all databases\n\tif(!(ifnotexists && ls && ls.databases && ls.databases[lsdbid])) {\n\t\tif(!ls) ls = {databases:{}}; // Empty record\n\t\tif(ls.databases && ls.databases[lsdbid]) {\n\t\t\tthrow new Error('localStorage: Cannot create new database \"'+lsdbid+'\" because it already exists');\n\t\t}\n\t\tls.databases[lsdbid] = true;\n\t\tLS.set('alasql',ls);\n\t\tLS.set(lsdbid,{databaseid:lsdbid, tables:{}}); // Create database record\n\t} else {\n\t\tres = 0;\n\t}\n\tif(cb) res = cb(res);\n\treturn res;\n};\n\n/**\n\tDrop external database\n\t@param lsdbid {string} localStorage database id\n\t@param ifexists {boolean} Check if database exists\n\t@param cb {function} Callback\n*/\nLS.dropDatabase = function(lsdbid, ifexists, cb){\n\tvar res = 1;\n\tvar ls = LS.get('alasql');\n\tif(!(ifexists && ls && ls.databases && !ls.databases[lsdbid])) {\n\n\t\t// 1. Remove record from 'alasql' record\n\t\tif(!ls) {\n\t\t\tif(!ifexists) {\n\t\t\t\tthrow new Error('There is no any AlaSQL databases in localStorage');\n\t\t\t} else {\n\t\t\t\treturn cb?cb(0):0;\n\t\t\t}\n\t\t};\n\n\t\tif(ls.databases && !ls.databases[lsdbid]) {\n\t\t\tthrow new Error('localStorage: Cannot drop database \"'+lsdbid+'\" because there is no such database');\n\t\t}\n\t\tdelete ls.databases[lsdbid];\n\t\tLS.set('alasql',ls);\n\n\t\t// 2. Remove tables definitions\n\t\tvar db = LS.get(lsdbid);\n\t\tfor(var tableid in db.tables) {\n\t\t\tlocalStorage.removeItem(lsdbid+'.'+tableid);\n\t\t}\n\n\t\t// 3. Remove database definition\n\t\tlocalStorage.removeItem(lsdbid);\n\t} else {\n\t\tres = 0;\n\t}\n\tif(cb) res = cb(res);\n\treturn res;\n};\n\n/**\n\tAttach existing localStorage database to AlaSQL database\n\t@param lsdibid {string} localStorage database id\n\t@param\n*/\n\nLS.attachDatabase = function(lsdbid, databaseid, args, params, cb){\n\tvar res = 1;\n\tif(alasql.databases[databaseid]) {\n\t\tthrow new Error('Unable to attach database as \"'+databaseid+'\" because it already exists');\n\t};\n\tif(!databaseid) databaseid = lsdbid;\n\tvar db = new alasql.Database(databaseid);\n\tdb.engineid = \"LOCALSTORAGE\";\n\tdb.lsdbid = lsdbid;\n\tdb.tables = LS.get(lsdbid).tables;\n\t// IF AUTOABORT IS OFF then copy data to memory\n\tif(!alasql.options.autocommit) {\n\t\tif(db.tables){\n\t\t\tfor(var tbid in db.tables) {\n\t\t\t\tLS.restoreTable(databaseid,tbid);\n\n\t\t\t}\n\t\t}\n\t}\n\tif(cb) res = cb(res);\n\treturn res;\n};\n\n/**\n\tShow list of databases from localStorage\n\t@param like {string} Mathing pattern\n\t@param cb {function} Callback\n*/\nLS.showDatabases = function(like, cb) {\n\tvar res = [];\n\tvar ls = LS.get('alasql');\n\tif(like) {\n\t\t// TODO: If we have a special function for LIKE patterns?\n\t\tvar relike = new RegExp(like.value.replace(/\\%/g,'.*'),'g');\n\t}\n\tif(ls && ls.databases) {\n\t\tfor(dbid in ls.databases) {\n\t\t\tres.push({databaseid: dbid});\n\t\t};\n\t\tif(like && res && res.length > 0) {\n\t\t\tres = res.filter(function(d){\n\t\t\t\treturn d.databaseid.match(relike);\n\t\t\t});\n\t\t}\n\t};\n\tif(cb) res=cb(res);\n\treturn res;\n};\n\n/**\n\tCreate table in localStorage database\n\t@param databaseid {string} AlaSQL database id\n\t@param tableid {string} Table id\n\t@param ifnotexists {boolean} If not exists flag\n\t@param cb {function} Callback\n*/\n\nLS.createTable = function(databaseid, tableid, ifnotexists, cb) {\n\tvar res = 1;\n\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n\tvar tb = LS.get(lsdbid+'.'+tableid);\n\t// Check if such record exists\n\tif(tb && !ifnotexists) {\n\t\tthrow new Error('Table \"'+tableid+'\" alsready exists in localStorage database \"'+lsdbid+'\"');\n\t};\n\tvar lsdb = LS.get(lsdbid);\n\tvar table = alasql.databases[databaseid].tables[tableid];\n\n\t// TODO: Check if required\n\tlsdb.tables[tableid] = true;\n\n\tLS.set(lsdbid, lsdb);\n\tLS.storeTable(databaseid,tableid);\n\n\tif(cb) res = cb(res);\n\treturn res;\n}\n\n/**\n   Empty table and reset identities\n   @param databaseid {string} AlaSQL database id (not external localStorage)\n   @param tableid {string} Table name\n\t @param ifexists {boolean} If exists flag\n   @param cb {function} Callback\n   @return 1 on success\n*/\nLS.truncateTable = function(databaseid,tableid, ifexists, cb){\n  var res = 1\n  var lsdbid = alasql.databases[databaseid].lsdbid;\n\n\tif(alasql.options.autocommit) {\n\t\tvar lsdb = LS.get(lsdbid);\n\t} else {\n\t\tvar lsdb = alasql.databases[databaseid];\n\t}\n\n\tif(!ifexists && !lsdb.tables[tableid]) {\n\t\tthrow (new Error('Cannot truncate table \"'+tableid+'\" in localStorage, because it does not exist'));\n\t};\n\n\t//load table\n\tvar tbl = LS.restoreTable(databaseid,tableid);\n\n  //clear data from table\n  tbl.data = [];\n  //TODO reset all identities\n  //but identities are not working on LOCALSTORAGE\n  //See test 607 for details\n\n\t//store table\n\tLS.storeTable(databaseid,tableid);\n\n  if(cb) res = cb(res);\n  return res;\n}\n\n/**\n\tCreate table in localStorage database\n\t@param databaseid {string} AlaSQL database id\n\t@param tableid {string} Table id\n\t@param ifexists {boolean} If exists flag\n\t@param cb {function} Callback\n*/\n\nLS.dropTable = function (databaseid, tableid, ifexists, cb) {\n\tvar res = 1;\n\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n\tif(alasql.options.autocommit) {\n\t\tvar lsdb = LS.get(lsdbid);\n\t} else {\n\t\tvar lsdb = alasql.databases[databaseid];\n\t}\n\tif(!ifexists && !lsdb.tables[tableid]) {\n\t\tthrow new Error('Cannot drop table \"'+tableid+'\" in localStorage, because it does not exist');\n\t};\n\tdelete lsdb.tables[tableid];\n\tLS.set(lsdbid, lsdb);\n//\tlocalStorage.removeItem(lsdbid+'.'+tableid);\n\tLS.removeTable(databaseid,tableid);\n\tif(cb) res = cb(res);\n\treturn res;\n}\n\n/**\n\tRead all data from table\n*/\n\nLS.fromTable = function(databaseid, tableid, cb, idx, query) {\n\n\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n//\tvar res = LS.get(lsdbid+'.'+tableid);\n\n\tvar res = LS.restoreTable(databaseid,tableid).data;\n\n\tif(cb) res = cb(res, idx, query);\n\treturn res;\n};\n\n/**\n\tInsert data into the table\n\t@param databaseid {string} Database id\n\t@param tableid {string} Table id\n\t@param value {array} Array of values\n\t@param columns {array} Columns (not used)\n\t@param cb {function} Callback\n*/\n\nLS.intoTable = function(databaseid, tableid, value, columns, cb) {\n\n\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n\tvar res = value.length;\n//\tvar tb = LS.get(lsdbid+'.'+tableid);\n\tvar tb = LS.restoreTable(databaseid,tableid);\n\tif(!tb.data) tb.data = [];\n\ttb.data = tb.data.concat(value);\n//\tLS.set(lsdbid+'.'+tableid, tb);\n\tLS.storeTable(databaseid,tableid);\n\n\tif(cb) res = cb(res);\n\n\treturn res;\n};\n\n/**\n\tLaad data from table\n*/\nLS.loadTableData = function(databaseid, tableid){\n\tvar db = alasql.databases[databaseid];\n\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n\tLS.restoreTable(databaseid,tableid);\n//\tdb.tables[tableid].data = LS.get(lsdbid+'.'+tableid);\n}\n\n/**\n\tSave data to the table\n*/\n\nLS.saveTableData = function(databaseid, tableid){\n\tvar db = alasql.databases[databaseid];\n\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n\tLS.storeTable(lsdbid,tableid);\n//\tLS.set(lsdbid+'.'+tableid,db.tables[tableid].data);\n\tdb.tables[tableid].data = undefined;\n}\n\n/**\n\tCommit\n*/\n\nLS.commit = function(databaseid, cb) {\n\n\tvar db = alasql.databases[databaseid];\n\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n\tvar lsdb = {databaseid:lsdbid, tables:{}};\n\tif(db.tables) {\n\t\tfor(var tbid in db.tables) {\n\t\t\t// TODO: Question - do we need this line\n\t\t\tlsdb.tables[tbid] = true;\n\t\t\tLS.storeTable(databaseid,tbid);\n\n\t\t};\n\t}\n\tLS.set(lsdbid,lsdb);\n\treturn cb?cb(1):1;\n};\n\n/**\n\tAlias BEGIN = COMMIT\n*/\nLS.begin = LS.commit;\n\n/**\n\tROLLBACK\n*/\n\nLS.rollback = function(databaseid, cb) {\n\n\t// This does not work and should be fixed\n\t// Plus test 151 and 231\n\n\treturn;\n\n\tvar db = alasql.databases[databaseid];\n\tdb.dbversion++;\n\n\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n\tvar lsdb = LS.get(lsdbid);\n//\tif(!alasql.options.autocommit) {\n\n\tdelete alasql.databases[databaseid];\n\talasql.databases[databaseid] = new alasql.Database(databaseid);\n\textend(alasql.databases[databaseid], lsdb);\n\talasql.databases[databaseid].databaseid = databaseid;\n\talasql.databases[databaseid].engineid = 'LOCALSTORAGE';\n\n\t\tif(lsdb.tables){\n\t\t\tfor(var tbid in lsdb.tables) {\n\n\t\t\t\t\tLS.restoreTable(databaseid,tbid);\n\n\t\t\t\t// index columns\n\t\t\t\t// convert types\n\t\t\t}\n\t\t}\n//\t}\n\n}\n\n//\n// 91websql.js\n// WebSQL database support\n// (c) 2014, Andrey Gershun\n//\n\nvar SQLITE = alasql.engines.SQLITE = function (){};\n\nSQLITE.createDatabase = function(wdbid, args, ifnotexists, dbid, cb){\n\tthrow new Error('Connot create SQLITE database in memory. Attach it.');\n};\n\nSQLITE.dropDatabase = function(databaseid){\n\tthrow new Error('This is impossible to drop SQLite database. Detach it.');\n};\n\nSQLITE.attachDatabase = function(sqldbid, dbid, args, params, cb){\n\tvar res = 1;\n\tif(alasql.databases[dbid]) {\n\t\tthrow new Error('Unable to attach database as \"'+dbid+'\" because it already exists');\n\t};\n\n\tif(args[0] && (args[0] instanceof yy.StringValue)\n\t\t|| (args[0] instanceof yy.ParamValue)) {\n\n\t\tif(args[0] instanceof yy.StringValue) {\n\t\t\tvar value = args[0].value;\n\t\t} else if(args[0] instanceof yy.ParamValue) {\n\t\t\tvar value = params[args[0].param];\n\t\t}\n\t\talasql.utils.loadBinaryFile(value,true,function(data){\n\t\t\tvar db = new alasql.Database(dbid || sqldbid);\n\t\t\tdb.engineid = \"SQLITE\";\n\t\t\tdb.sqldbid = sqldbid;\n\t\t\tvar sqldb = db.sqldb = new SQL.Database(data);\n\t\t\tdb.tables = [];\n\t\t\tvar tables = sqldb.exec(\"SELECT * FROM sqlite_master WHERE type='table'\")[0].values;\n\n\t\t   \ttables.forEach(function(tbl){\n\t\t   \t\tdb.tables[tbl[1]] = {};\n\t\t   \t\tvar columns = db.tables[tbl[1]].columns = [];\n\t\t   \t\tvar ast = alasql.parse(tbl[4]);\n\n\t\t   \t\tvar coldefs = ast.statements[0].columns;\n\t\t   \t\tif(coldefs && coldefs.length>0) {\n\t\t   \t\t\tcoldefs.forEach(function(cd){\n\t\t\t   \t\t\tcolumns.push(cd);\n\t\t   \t\t\t});\n\t\t   \t\t}\n\n\t\t   \t});\n\n\t\t   \tcb(1);\n\t\t}, function(err){\n\t\t\tthrow new Error('Cannot open SQLite database file \"'+args[0].value+'\"');\n\t\t})\n\t\treturn res;\n\t} else {\n\t\tthrow new Error('Cannot attach SQLite database without a file');\n\t};\n\n\treturn res;\n}\n\nSQLITE.fromTable = function(databaseid, tableid, cb, idx, query){\n\tvar data = alasql.databases[databaseid].sqldb.exec(\"SELECT * FROM \"+tableid);\n\tvar columns = query.sources[idx].columns = [];\n\tif(data[0].columns.length > 0) {\n\t\tdata[0].columns.forEach(function(columnid) {\n\t\t\tcolumns.push({columnid:columnid});\n\t\t});\n\t};\n\n\tvar res = [];\n\tif(data[0].values.length > 0) {\n\t\tdata[0].values.forEach(function(d){\n\t\t\tvar r = {};\n\t\t\tcolumns.forEach(function(col,idx){\n\t\t\t\tr[col.columnid] = d[idx];\n\t\t\t});\n\t\t\tres.push(r);\n\t\t});\n\t}\n\tif(cb) cb(res, idx, query);\n};\n\nSQLITE.intoTable = function(databaseid, tableid, value, columns, cb) {\n\tvar sqldb = alasql.databases[databaseid].sqldb;\n\tfor(var i=0, ilen = value.length;i<ilen;i++) {\n\t\tvar s = \"INSERT INTO \"+tableid+\" (\";\n\t\tvar d = value[i];\n\t\tvar keys = Object.keys(d);\n\t\ts += keys.join(\",\");\n\t\ts += \") VALUES (\";\n\t\ts += keys.map(function(k){\n\t\t\tv = d[k];\n\t\t\tif(typeof v == 'string') v = \"'\"+v+\"'\";\n\t\t\treturn v;\n\t\t}).join(\",\");\n\t\ts += \")\";\n\t\tsqldb.exec(s);\n\t};\n\tvar res = ilen;\n\tif(cb) cb(res);\n\treturn res;\n};\n\n//\n// 91localstorage.js\n// localStorage and DOM-Storage engine\n// Date: 09.12.2014\n// (c) Andrey Gershun\n//\n\nvar FS = alasql.engines.FILESTORAGE = alasql.engines.FILE = function (){};\n\nFS.createDatabase = function(fsdbid, args, ifnotexists, dbid, cb){\n\n\tvar res = 1;\n\tvar filename = args[0].value;\n\n\talasql.utils.fileExists(filename, function(fex){\n\n\t\tif(fex) {\n\t\t\tif(ifnotexists) {\n\t\t\t\tres = 0;\n\t\t\t\tif(cb) res = cb(res);\n\t\t\t\treturn res;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Cannot create new database file, because it alreagy exists');\n\t\t\t} \n\t\t} else {\n\t\t\tvar data = {tables:{}};\n\t\t\talasql.utils.saveFile(filename,JSON.stringify(data),function(data){\n\t\t\t\tif(cb) res = cb(res);\n\t\t\t});\n\t\t}\n\t});\n\treturn res;\n};\n\nFS.dropDatabase = function(fsdbid, ifexists, cb){\n\tvar res;\n\tvar filename = fsdbid.value;\n\n\talasql.utils.fileExists(filename, function(fex){\n\t\tif(fex) {\n\t\t\tres = 1;\n\t\t\talasql.utils.deleteFile(filename, function(){\n\t\t\t\tres = 1;\n\t\t\t\tif(cb) res = cb(res);\n\t\t\t});\n\t\t} else {\n\t\t\tif(!ifexists) {\n\t\t\t\tthrow new Error('Cannot drop database file, because it does not exist');\n\t\t\t}\n\t\t\tres = 0;\n\t\t\tif(cb) res = cb(res);\n\t\t}\n\t});\n\treturn res;\n};\n\nFS.attachDatabase = function(fsdbid, dbid, args, params, cb){\n\n\tvar res = 1;\n\tif(alasql.databases[dbid]) {\n\t\tthrow new Error('Unable to attach database as \"'+dbid+'\" because it already exists');\n\t};\n\tvar db = new alasql.Database(dbid || fsdbid);\n\tdb.engineid = \"FILESTORAGE\";\n//\tdb.fsdbid = fsdbid;\n\tdb.filename = args[0].value;\n\tloadFile(db.filename, !!cb, function(s){\n\t\ttry {\n\t\t\tdb.data = JSON.parse(s);\n\t\t} catch(err) {\n\t\t\tthrow new Error('Data in FileStorage database are corrupted');\n\t\t}\n\t\tdb.tables = db.data.tables;\n\t\t// IF AUTOCOMMIT IS OFF then copy data to memory\n\t\tif(!alasql.options.autocommit) {\n\t\t\tif(db.tables){\n\t\t\t\tfor(var tbid in db.tables) {\n\t\t\t\t\tdb.tables[tbid].data = db.data[tbid];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(cb) res = cb(res);\n\t});\n\treturn res;\n};\n\nFS.createTable = function(databaseid, tableid, ifnotexists, cb) {\n\tvar db = alasql.databases[databaseid];\n\tvar tb = db.data[tableid];\n\tvar res = 1;\n\n\tif(tb && !ifnotexists) {\n\t\tthrow new Error('Table \"'+tableid+'\" alsready exists in the database \"'+fsdbid+'\"');\n\t};\n\tvar table = alasql.databases[databaseid].tables[tableid];\n\tdb.data.tables[tableid] = {columns:table.columns};\n\tdb.data[tableid] = [];\n\n\tFS.updateFile(databaseid);\t\n\n\tif(cb) cb(res);\n\treturn res;\n};\n\nFS.updateFile = function(databaseid) {\n\n\tvar db = alasql.databases[databaseid];\n\tif(db.issaving) {\n\t\tdb.postsave = true;\n\t\treturn;\n\t};\n\tdb.issaving = true;\n\tdb.postsave = false;\n\talasql.utils.saveFile(db.filename, JSON.stringify(db.data), function(){\n\t\tdb.issaving = false;\n\n\t\tif(db.postsave) {\n\t\t\tsetTimeout(function(){\n\t\t\t\tFS.updateFile(databaseid);\n\t\t\t},50); // TODO Test with different timeout parameters\n\t\t};\n\t});\n};\n\nFS.dropTable = function (databaseid, tableid, ifexists, cb) {\n\tvar res = 1;\n\tvar db = alasql.databases[databaseid];\n\tif(!ifexists && !db.tables[tableid]) {\n\t\tthrow new Error('Cannot drop table \"'+tableid+'\" in fileStorage, because it does not exist');\n\t};\n\tdelete db.tables[tableid];\n\tdelete db.data.tables[tableid];\n\tdelete db.data[tableid];\n\tFS.updateFile(databaseid);\t\n\tif(cb) cb(res);\n\treturn res;\n}\n\nFS.fromTable = function(databaseid, tableid, cb, idx, query) {\n\n\tvar db = alasql.databases[databaseid];\n\tvar res = db.data[tableid];\n\tif(cb) res = cb(res, idx, query);\n\treturn res;\n};\n\nFS.intoTable = function(databaseid, tableid, value, columns, cb) {\n\tvar db = alasql.databases[databaseid];\n\tvar res = value.length;\n\tvar tb = db.data[tableid];\n\tif(!tb) tb = [];\n\tdb.data[tableid] = tb.concat(value);\n\tFS.updateFile(databaseid);\t\n\tif(cb) cb(res);\n\treturn res;\n};\n\nFS.loadTableData = function(databaseid, tableid){\n\tvar db = alasql.databases[databaseid];\n\tdb.tables[tableid].data = db.data[tableid];\n}\n\nFS.saveTableData = function(databaseid, tableid){\n\tvar db = alasql.databases[databaseid];\n\tdb.data[tableid] = db.tables[tableid].data;\n\tdb.tables[tableid].data = null;\n\tFS.updateFile(databaseid);\t\n}\n\nFS.commit = function(databaseid, cb) {\n\n\tvar db = alasql.databases[databaseid];\n\tvar fsdb = {tables:{}};\n\tif(db.tables) {\n\t\tfor(var tbid in db.tables) {\n\t\t\tdb.data.tables[tbid] = {columns: db.tables[tbid].columns};\n\t\t\tdb.data[tbid] = db.tables[tbid].data;\n\t\t};\n\t};\n\tFS.updateFile(databaseid);\n\treturn cb?cb(1):1;\n};\n\nFS.begin = FS.commit;\n\nFS.rollback = function(databaseid, cb) {\n\tvar res = 1;\n\tvar db = alasql.databases[databaseid];\n\tdb.dbversion++;\n\n//\tvar lsdbid = alasql.databases[databaseid].lsdbid;\n//\tlsdb = LS.get(lsdbid);\n\twait();\n\tfunction wait() {\n\t\tsetTimeout(function(){\n\t\t\tif(db.issaving) {\n\t\t\t\treturn wait();\n\t\t\t} else {\n\t\t\t\talasql.loadFile(db.filename,!!cb,function(data){\n\t\t\t\t\tdb.data = data;\n\t\t\t\t\tdb.tables = {};\n\t\t\t\t\tfor(var tbid in db.data.tables) {\n\t\t\t\t\t\tvar tb = new alasql.Table({columns: db.data.tables[tbid].columns});\n\t\t\t\t\t\textend(tb,db.data.tables[tbid]);\n\t\t\t\t\t\tdb.tables[tbid] = tb;\n\t\t\t\t\t\tif(!alasql.options.autocommit) {\n\t\t\t\t\t\t\tdb.tables[tbid].data = db.data[tbid];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdb.tables[tbid].indexColumns();\n\n\t\t\t\t\t\t// index columns\n\t\t\t\t\t\t// convert types\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete alasql.databases[databaseid];\n\t\t\t\t\talasql.databases[databaseid] = new alasql.Database(databaseid);\n\t\t\t\t\textend(alasql.databases[databaseid], db);\n\t\t\t\t\talasql.databases[databaseid].engineid = 'FILESTORAGE';\n\t\t\t\t\talasql.databases[databaseid].filename = db.filename;\n\n\t\t\t\t\tif(cb) res = cb(res);\n\t\t\t\t\t// Todo: check why no return\n\t\t\t\t});\n\t\t\t};\n\t\t},100);\t\t\n\t};\n\n}\n\nif(utils.isBrowser && !utils.isWebWorker) {\n\nalasql = alasql||false;\n\nif(!alasql){\n\tthrow new Error('alasql was not found');\n}\n\nalasql.worker = function(){\n\tthrow new Error('Can find webworker in this enviroment');\n\n}\n\nif(typeof(Worker) !== \"undefined\") {\n\n\talasql.worker = function(path, paths, cb) {\n\t//\tvar path;\n\t\tif(path === true){\n\t\t\tpath = undefined;\n\t\t}\n\n\t\tif (typeof path === \"undefined\") {\n\t\t\tvar sc = document.getElementsByTagName('script');\n\t\t\tfor(var i=0;i<sc.length;i++) {\n\t\t\t\tif (sc[i].src.substr(-16).toLowerCase() === 'alasql-worker.js') {\n\t\t\t\t\tpath = sc[i].src.substr(0,sc[i].src.length-16)+'alasql.js'; \n\t\t\t\t\tbreak;\n\t\t\t\t} else if (sc[i].src.substr(-20).toLowerCase() === 'alasql-worker.min.js') {\n\t\t\t\t\tpath = sc[i].src.substr(0,sc[i].src.length-20)+'alasql.min.js';\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (sc[i].src.substr(-9).toLowerCase() === 'alasql.js') {\n\t\t\t\t\tpath = sc[i].src; \n\t\t\t\t\tbreak;\n\t\t\t\t} else if (sc[i].src.substr(-13).toLowerCase() === 'alasql.min.js') {\n\t\t\t\t\tpath = sc[i].src.substr(0,sc[i].src.length-13)+'alasql.min.js'; \n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(typeof path === \"undefined\") {\n\t\t\tthrow new Error('Path to alasql.js is not specified');\n\t\t} else if(path !== false) {\n\n\t\t\tvar js = \"importScripts('\";\n\t\t\t\tjs += path;\n\t\t\t\tjs+=\"');self.onmessage = function(event) {\"+\n\t\t\t\"alasql(event.data.sql,event.data.params, function(data){\"+\n\t\t\t\"postMessage({id:event.data.id, data:data});});}\";\n\n\t\t\tvar blob = new Blob([js], {\"type\": \"text\\/plain\"});\n\t\t\talasql.webworker = new Worker(URL.createObjectURL(blob));\n\n\t\t\talasql.webworker.onmessage = function(event) {\n\t\t\t\tvar id = event.data.id;\n\n\t\t\t\talasql.buffer[id](event.data.data);\n\t\t\t\tdelete alasql.buffer[id];\n\t\t\t};\n\n\t\t\talasql.webworker.onerror = function(e){\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif(arguments.length > 1) {\n\t\t\t\tvar sql = 'REQUIRE ' + paths.map(function(p){\n\t\t\t\t\treturn '\"'+p+'\"';\n\t\t\t\t}).join(\",\");\n\t\t\t\talasql(sql,[],cb);\n\t\t\t}\n\n\t\t} else if(path === false) {\n\t\t\tdelete alasql.webworker;\n\t\t\treturn;\n\t\t}\n\t};\n\n}\n\n/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n/*\r\n//\r\n// Last part of Alasql.js\r\n// Date: 03.11.2014\r\n// (c) 2014, Andrey Gershun\r\n//\r\n*/\r\n\n// This is a final part of Alasql\r\n\n/*only-for-browser/*\r\nif(utils.isCordova || utils.isMeteorServer || utils.isNode ){\r\n  console.warn('It looks like you are using the browser version of AlaSQL. Please use the alasql.fs.js file instead.')\r\n}\r\n//*/\r\n\n// FileSaveAs\r\nalasql.utils.saveAs = saveAs;\r\n\n};\r\n\n// Create default database\r\nnew Database(\"alasql\");\r\n\n// Set default database\r\nalasql.use(\"alasql\");\r\n\nreturn alasql;\r\n}));\r\n\n"},function(t,e,n){n(4).tag2("es-facet-datetimes",'<div each="{opts.items}" ref="input" data-value="{value}" class="facet-item {disable: !count} {active: active}" onclick="{this.submit}"> <span class="facet-label">{label}</span>&nbsp;<span class="facet-count">{count}</span> </div>','es-facet-datetimes .facet-item,[data-is="es-facet-datetimes"] .facet-item{ cursor: pointer; } es-facet-datetimes .active,[data-is="es-facet-datetimes"] .active{ font-weight: bold; } es-facet-datetimes .disable,[data-is="es-facet-datetimes"] .disable{ color: lightgrey; } es-facet-datetimes .facet-count:before,[data-is="es-facet-datetimes"] .facet-count:before{ content: \'(\'; } es-facet-datetimes .facet-count:after,[data-is="es-facet-datetimes"] .facet-count:after{ content: \')\'; }',"",function(t){var e=this,r=n(70);e.on("mount",function(){e.opts.type="datetimes",e.opts.field=e.opts.field||"",e.opts.interval=e.opts.interval||"",e.opts.format=e.opts.format||"%c",e.opts.items=e.opts.items||[]}),e.on("update",function(){var t=this;t.opts.items.forEach(function(e,n){t.opts.items[n].label=e.label||r(t.opts.format,new Date(e.value))})}),e.submit=function(t){t.currentTarget.classList.toggle("active"),e.trigger("submit",{type:e.opts.type,field:e.opts.field,interval:e.opts.interval,values:e.refs.input.filter(function(t){return t.classList.contains("active")}).map(function(t){return t.dataset.value})}),t&&t.preventDefault()}})},function(t,e,n){n(4).tag2("es-facet-keywords",'<div each="{opts.items}" ref="input" data-value="{value}" class="facet-item {disable: !count} {active: active}" onclick="{this.submit}"> <span class="facet-label">{label || value}</span>&nbsp;<span class="facet-count">{count}</span> </div>','es-facet-keywords .facet-item,[data-is="es-facet-keywords"] .facet-item{ cursor: pointer; } es-facet-keywords .active,[data-is="es-facet-keywords"] .active{ font-weight: bold; } es-facet-keywords .disable,[data-is="es-facet-keywords"] .disable{ color: lightgrey; } es-facet-keywords .facet-count:before,[data-is="es-facet-keywords"] .facet-count:before{ content: \'(\'; } es-facet-keywords .facet-count:after,[data-is="es-facet-keywords"] .facet-count:after{ content: \')\'; }',"",function(t){var e=this;e.on("mount",function(){e.opts.type="keywords",e.opts.field=e.opts.field||"",e.opts.items=e.opts.items||[]}),e.submit=function(t){t.currentTarget.classList.toggle("active"),e.trigger("submit",{type:e.opts.type,field:e.opts.field,values:e.refs.input.filter(function(t){return t.classList.contains("active")}).map(function(t){return t.dataset.value})}),t&&t.preventDefault()}})},function(t,e,n){n(4).tag2("es-facet-numbers",'<div each="{opts.items}" ref="input" data-value="{value}" class="facet-item {disable: !count} {active: active}" onclick="{this.submit}"> <span class="facet-label">{label}</span>&nbsp;<span class="facet-count">{count}</span> </div>','es-facet-numbers .facet-item,[data-is="es-facet-numbers"] .facet-item{ cursor: pointer; } es-facet-numbers .active,[data-is="es-facet-numbers"] .active{ font-weight: bold; } es-facet-numbers .disable,[data-is="es-facet-numbers"] .disable{ color: lightgrey; } es-facet-numbers .facet-count:before,[data-is="es-facet-numbers"] .facet-count:before{ content: \'(\'; } es-facet-numbers .facet-count:after,[data-is="es-facet-numbers"] .facet-count:after{ content: \')\'; }',"",function(t){var e=this,r=n(58);e.on("mount",function(){e.opts.type="numbers",e.opts.field=e.opts.field||"",e.opts.interval=e.opts.interval||"",e.opts.format=e.opts.format||"0,0.00",e.opts.items=e.opts.items||[]}),e.on("update",function(){var t=this;t.opts.items.forEach(function(e,n){t.opts.items[n].label=e.label||r(e.value).format(t.opts.format)})}),e.submit=function(t){t.currentTarget.classList.toggle("active"),e.trigger("submit",{type:e.opts.type,field:e.opts.field,interval:e.opts.interval,values:e.refs.input.filter(function(t){return t.classList.contains("active")}).map(function(t){return t.dataset.value})}),t&&t.preventDefault()}})},function(t,e,n){n(4).tag2("es-list",'<div each="{opts.items}" class="list-item"><yield></yield></div> <div> <span ref="prev" class="list-page" onclick="{this.submit}" data-value="0">{opts.prev}</span> <span each="{page in opts.pages}" class="list-page" data-value="{page}" onclick="{this.submit}">{page+1}</span> <span ref="next" class="list-page" onclick="{this.submit}" data-value="1">{opts.next}</span> </div>','es-list .list-page,[data-is="es-list"] .list-page{ cursor: pointer; } es-list .active,[data-is="es-list"] .active{ font-weight: bold; } es-list .list-page:after,[data-is="es-list"] .list-page:after{ content: \' | \'; } es-list .list-page:last-child:after,[data-is="es-list"] .list-page:last-child:after{ content: \'\'; }',"",function(t){var e=this;e.on("mount",function(){e.opts.size=+e.opts.size||10,e.opts.prev=e.opts.prev||"Previous",e.opts.next=e.opts.next||"Next"}),e.on("update",function(){var t=Math.floor(e.opts.total/e.opts.size)+1;e.opts.pages=Array.apply(null,Array(t)).map(function(t,e){return e})}),e.on("updated",function(){e.root.querySelectorAll(".active").length||e.root.querySelectorAll(".list-page")[1].classList.add("active")}),e.submit=function(t){var n=+t.currentTarget.dataset.value;e.root.querySelectorAll(".active").forEach(function(t){t.classList.remove("active")}),e.root.querySelectorAll(".list-page")[n+1].classList.add("active"),e.refs.prev.dataset.value=Math.max(n-1,0),e.refs.next.dataset.value=Math.min(n+1,Math.floor(e.opts.total/e.opts.size)),e.trigger("submit",{value:n}),t&&t.preventDefault()}})},function(t,e,n){n(4).tag2("es-search",'<form class="search-form" onsubmit="{this.submit}"> <input class="search-input" placeholder="{opts.placeholder || \'\'}" riot-value="{opts.value || \'\'}"> </form>',"","",function(t){var e=this;e.submit=function(t){e.trigger("submit",{value:e.root.querySelector("input").value}),t&&t.preventDefault()}})},function(t,e){t.exports=function(t){"undefined"!=typeof execScript?execScript(t):eval.call(null,t)}},function(t,e,n){n(68)(n(62))},function(t,e){!function(){function e(t,p,c){function m(t,e){var n;if(e){if(n=e.getTime(),h){var r=o(e);if(e=new Date(n+r+V),o(e)!==r){var a=o(e);e=new Date(n+a+V)}}}else{var s=Date.now();s>b?(b=s,$=new Date(b),n=b,h&&($=new Date(b+o($)+V))):n=b,e=$}return f(t,e,y,n)}function f(t,e,o,p){for(var u="",d=null,c=!1,m=t.length,$=!1,y=0;y<m;y++){var b=t.charCodeAt(y);if(!0!==c)37!==b?u+=t[y]:c=!0;else{if(45===b){d="";continue}if(95===b){d=" ";continue}if(48===b){d="0";continue}if(58===b){$&&l("[WARNING] detected use of unsupported %:: or %::: modifiers to strftime"),$=!0;continue}switch(b){case 37:u+="%";break;case 65:u+=o.days[e.getDay()];break;case 66:u+=o.months[e.getMonth()];break;case 67:u+=n(Math.floor(e.getFullYear()/100),d);break;case 68:u+=f(o.formats.D,e,o,p);break;case 70:u+=f(o.formats.F,e,o,p);break;case 72:u+=n(e.getHours(),d);break;case 73:u+=n(a(e.getHours()),d);break;case 76:u+=r(Math.floor(p%1e3));break;case 77:u+=n(e.getMinutes(),d);break;case 80:u+=e.getHours()<12?o.am:o.pm;break;case 82:u+=f(o.formats.R,e,o,p);break;case 83:u+=n(e.getSeconds(),d);break;case 84:u+=f(o.formats.T,e,o,p);break;case 85:u+=n(s(e,"sunday"),d);break;case 87:u+=n(s(e,"monday"),d);break;case 88:u+=f(o.formats.X,e,o,p);break;case 89:u+=e.getFullYear();break;case 90:if(h&&0===V)u+="GMT";else{var g=e.toString().match(/\(([\w\s]+)\)/);u+=g&&g[1]||""}break;case 97:u+=o.shortDays[e.getDay()];break;case 98:u+=o.shortMonths[e.getMonth()];break;case 99:u+=f(o.formats.c,e,o,p);break;case 100:u+=n(e.getDate(),d);break;case 101:u+=n(e.getDate(),null==d?" ":d);break;case 104:u+=o.shortMonths[e.getMonth()];break;case 106:var _=new Date(e.getFullYear(),0,1),v=Math.ceil((e.getTime()-_.getTime())/864e5);u+=r(v);break;case 107:u+=n(e.getHours(),null==d?" ":d);break;case 108:u+=n(a(e.getHours()),null==d?" ":d);break;case 109:u+=n(e.getMonth()+1,d);break;case 110:u+="\n";break;case 111:var v=e.getDate();o.ordinalSuffixes?u+=String(v)+(o.ordinalSuffixes[v-1]||i(v)):u+=String(v)+i(v);break;case 112:u+=e.getHours()<12?o.AM:o.PM;break;case 114:u+=f(o.formats.r,e,o,p);break;case 115:u+=Math.floor(p/1e3);break;case 116:u+="\t";break;case 117:var v=e.getDay();u+=0===v?7:v;break;case 118:u+=f(o.formats.v,e,o,p);break;case 119:u+=e.getDay();break;case 120:u+=f(o.formats.x,e,o,p);break;case 121:u+=(""+e.getFullYear()).slice(2);break;case 122:if(h&&0===V)u+=$?"+00:00":"+0000";else{var x;x=0!==V?V/6e4:-e.getTimezoneOffset();var q=x<0?"-":"+",w=$?":":"",T=Math.floor(Math.abs(x/60)),E=Math.abs(x%60);u+=q+n(T)+w+n(E)}break;default:c&&(u+="%"),u+=t[y]}d=null,c=!1}}return u}var $,y=t||d,V=p||0,h=c||!1,b=0,g=m;return g.localize=function(t){return new e(t||y,V,h)},g.localizeByIdentifier=function(t){var e=u[t];return e?g.localize(e):(l('[WARNING] No locale found with identifier "'+t+'".'),g)},g.timezone=function(t){var n=V,r=h,a=typeof t;if("number"===a||"string"===a)if(r=!0,"string"===a){var s="-"===t[0]?-1:1,i=parseInt(t.slice(1,3),10),o=parseInt(t.slice(3,5),10);n=s*(60*i+o)*60*1e3}else"number"===a&&(n=60*t*1e3);return new e(y,n,r)},g.utc=function(){return new e(y,V,!0)},g}function n(t,e){return""===e||t>9?t:(null==e&&(e="0"),e+t)}function r(t){return t>99?t:t>9?"0"+t:"00"+t}function a(t){return 0===t?12:t>12?t-12:t}function s(t,e){e=e||"sunday";var n=t.getDay();"monday"===e&&(0===n?n=6:n--);var r=Date.UTC(t.getFullYear(),0,1),a=Date.UTC(t.getFullYear(),t.getMonth(),t.getDate()),s=Math.floor((a-r)/864e5),i=(s+7-n)/7;return Math.floor(i)}function i(t){var e=t%10,n=t%100;if(n>=11&&n<=13||0===e||e>=4)return"th";switch(e){case 1:return"st";case 2:return"nd";case 3:return"rd"}}function o(t){return 6e4*(t.getTimezoneOffset()||0)}function l(t){"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(t)}var p,u={de_DE:{days:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],shortDays:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],shortMonths:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X %Z",D:"%d.%m.%Y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%T",x:"%D"}},en_CA:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],ordinalSuffixes:["st","nd","rd","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","st","nd","rd","th","th","th","th","th","th","th","st"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X %Z",D:"%d/%m/%y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%r",x:"%D"}},en_US:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],ordinalSuffixes:["st","nd","rd","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","st","nd","rd","th","th","th","th","th","th","th","st"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X %Z",D:"%m/%d/%y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%r",x:"%D"}},es_MX:{days:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],shortDays:["dom","lun","mar","mié","jue","vie","sáb"],months:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre"," diciembre"],shortMonths:["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X %Z",D:"%d/%m/%Y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%T",x:"%D"}},fr_FR:{days:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],shortDays:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],months:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],shortMonths:["janv.","févr.","mars","avril","mai","juin","juil.","août","sept.","oct.","nov.","déc."],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X %Z",D:"%d/%m/%Y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%T",x:"%D"}},it_IT:{days:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"],shortDays:["dom","lun","mar","mer","gio","ven","sab"],months:["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"],shortMonths:["pr","mag","giu","lug","ago","set","ott","nov","dic"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X %Z",D:"%d/%m/%Y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%T",x:"%D"}},nl_NL:{days:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],shortDays:["zo","ma","di","wo","do","vr","za"],months:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],shortMonths:["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X %Z",D:"%d-%m-%y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%T",x:"%D"}},pt_BR:{days:["domingo","segunda","terça","quarta","quinta","sexta","sábado"],shortDays:["Dom","Seg","Ter","Qua","Qui","Sex","Sáb"],months:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"],shortMonths:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X %Z",D:"%d-%m-%Y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%T",x:"%D"}},ru_RU:{days:["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"],shortDays:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],months:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],shortMonths:["янв","фев","мар","апр","май","июн","июл","авг","сен","окт","ноя","дек"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{c:"%a %d %b %Y %X",D:"%d.%m.%y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%T",x:"%D"}},tr_TR:{days:["Pazar","Pazartesi","Salı","Çarşamba","Perşembe","Cuma","Cumartesi"],shortDays:["Paz","Pzt","Sal","Çrş","Prş","Cum","Cts"],months:["Ocak","Şubat","Mart","Nisan","Mayıs","Haziran","Temmuz","Ağustos","Eylül","Ekim","Kasım","Aralık"],shortMonths:["Oca","Şub","Mar","Nis","May","Haz","Tem","Ağu","Eyl","Eki","Kas","Ara"],AM:"ÖÖ",PM:"ÖS",am:"ÖÖ",pm:"ÖS",formats:{c:"%a %d %b %Y %X %Z",D:"%d-%m-%Y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%T",x:"%D"}},zh_CN:{days:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],shortDays:["日","一","二","三","四","五","六"],months:["一月份","二月份","三月份","四月份","五月份","六月份","七月份","八月份","九月份","十月份","十一月份","十二月份"],shortMonths:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],AM:"上午",PM:"下午",am:"上午",pm:"下午",formats:{c:"%a %d %b %Y %X %Z",D:"%d/%m/%y",F:"%Y-%m-%d",R:"%H:%M",r:"%I:%M:%S %p",T:"%H:%M:%S",v:"%e-%b-%Y",X:"%r",x:"%D"}}},d=u.en_US,c=new e(d,0,!1),m=void 0!==t;m?p=t.exports=c:(p=function(){return this||(0,eval)("this")}(),p.strftime=c),"function"!=typeof Date.now&&(Date.now=function(){return+new Date})}()},function(t,e,n){"use strict";t.exports={isString:function(t){return"string"==typeof t},isObject:function(t){return"object"==typeof t&&null!==t},isNull:function(t){return null===t},isNullOrUndefined:function(t){return null==t}}},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e,n){(function(t,r){function a(t,n){var r={seen:[],stylize:i};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),$(n)?r.showHidden=n:n&&e._extend(r,n),_(r.showHidden)&&(r.showHidden=!1),_(r.depth)&&(r.depth=2),_(r.colors)&&(r.colors=!1),_(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=s),l(r,t,r.depth)}function s(t,e){var n=a.styles[e];return n?"["+a.colors[n][0]+"m"+t+"["+a.colors[n][1]+"m":t}function i(t,e){return t}function o(t){var e={};return t.forEach(function(t,n){e[t]=!0}),e}function l(t,n,r){if(t.customInspect&&n&&T(n.inspect)&&n.inspect!==e.inspect&&(!n.constructor||n.constructor.prototype!==n)){var a=n.inspect(r,t);return b(a)||(a=l(t,a,r)),a}var s=p(t,n);if(s)return s;var i=Object.keys(n),$=o(i);if(t.showHidden&&(i=Object.getOwnPropertyNames(n)),w(n)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return u(n);if(0===i.length){if(T(n)){var y=n.name?": "+n.name:"";return t.stylize("[Function"+y+"]","special")}if(v(n))return t.stylize(RegExp.prototype.toString.call(n),"regexp");if(q(n))return t.stylize(Date.prototype.toString.call(n),"date");if(w(n))return u(n)}var V="",h=!1,g=["{","}"];if(f(n)&&(h=!0,g=["[","]"]),T(n)){V=" [Function"+(n.name?": "+n.name:"")+"]"}if(v(n)&&(V=" "+RegExp.prototype.toString.call(n)),q(n)&&(V=" "+Date.prototype.toUTCString.call(n)),w(n)&&(V=" "+u(n)),0===i.length&&(!h||0==n.length))return g[0]+V+g[1];if(r<0)return v(n)?t.stylize(RegExp.prototype.toString.call(n),"regexp"):t.stylize("[Object]","special");t.seen.push(n);var _;return _=h?d(t,n,r,$,i):i.map(function(e){return c(t,n,r,$,e,h)}),t.seen.pop(),m(_,V,g)}function p(t,e){if(_(e))return t.stylize("undefined","undefined");if(b(e)){var n="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(n,"string")}return h(e)?t.stylize(""+e,"number"):$(e)?t.stylize(""+e,"boolean"):y(e)?t.stylize("null","null"):void 0}function u(t){return"["+Error.prototype.toString.call(t)+"]"}function d(t,e,n,r,a){for(var s=[],i=0,o=e.length;i<o;++i)O(e,String(i))?s.push(c(t,e,n,r,String(i),!0)):s.push("");return a.forEach(function(a){a.match(/^\d+$/)||s.push(c(t,e,n,r,a,!0))}),s}function c(t,e,n,r,a,s){var i,o,p;if(p=Object.getOwnPropertyDescriptor(e,a)||{value:e[a]},p.get?o=p.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):p.set&&(o=t.stylize("[Setter]","special")),O(r,a)||(i="["+a+"]"),o||(t.seen.indexOf(p.value)<0?(o=y(n)?l(t,p.value,null):l(t,p.value,n-1),o.indexOf("\n")>-1&&(o=s?o.split("\n").map(function(t){return"  "+t}).join("\n").substr(2):"\n"+o.split("\n").map(function(t){return"   "+t}).join("\n"))):o=t.stylize("[Circular]","special")),_(i)){if(s&&a.match(/^\d+$/))return o;i=JSON.stringify(""+a),i.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(i=i.substr(1,i.length-2),i=t.stylize(i,"name")):(i=i.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),i=t.stylize(i,"string"))}return i+": "+o}function m(t,e,n){var r=0;return t.reduce(function(t,e){return r++,e.indexOf("\n")>=0&&r++,t+e.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?n[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+n[1]:n[0]+e+" "+t.join(", ")+" "+n[1]}function f(t){return Array.isArray(t)}function $(t){return"boolean"==typeof t}function y(t){return null===t}function V(t){return null==t}function h(t){return"number"==typeof t}function b(t){return"string"==typeof t}function g(t){return"symbol"==typeof t}function _(t){return void 0===t}function v(t){return x(t)&&"[object RegExp]"===S(t)}function x(t){return"object"==typeof t&&null!==t}function q(t){return x(t)&&"[object Date]"===S(t)}function w(t){return x(t)&&("[object Error]"===S(t)||t instanceof Error)}function T(t){return"function"==typeof t}function E(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t}function S(t){return Object.prototype.toString.call(t)}function k(t){return t<10?"0"+t.toString(10):t.toString(10)}function A(){var t=new Date,e=[k(t.getHours()),k(t.getMinutes()),k(t.getSeconds())].join(":");return[t.getDate(),R[t.getMonth()],e].join(" ")}function O(t,e){return Object.prototype.hasOwnProperty.call(t,e)}var I=/%[sdj%]/g;e.format=function(t){if(!b(t)){for(var e=[],n=0;n<arguments.length;n++)e.push(a(arguments[n]));return e.join(" ")}for(var n=1,r=arguments,s=r.length,i=String(t).replace(I,function(t){if("%%"===t)return"%";if(n>=s)return t;switch(t){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(t){return"[Circular]"}default:return t}}),o=r[n];n<s;o=r[++n])y(o)||!x(o)?i+=" "+o:i+=" "+a(o);return i},e.deprecate=function(n,a){function s(){if(!i){if(r.throwDeprecation)throw new Error(a);r.traceDeprecation?console.trace(a):console.error(a),i=!0}return n.apply(this,arguments)}if(_(t.process))return function(){return e.deprecate(n,a).apply(this,arguments)};if(!0===r.noDeprecation)return n;var i=!1;return s};var N,C={};e.debuglog=function(t){if(_(N)&&(N=r.env.NODE_DEBUG||""),t=t.toUpperCase(),!C[t])if(new RegExp("\\b"+t+"\\b","i").test(N)){var n=r.pid;C[t]=function(){var r=e.format.apply(e,arguments);console.error("%s %d: %s",t,n,r)}}else C[t]=function(){};return C[t]},e.inspect=a,a.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},a.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.isArray=f,e.isBoolean=$,e.isNull=y,e.isNullOrUndefined=V,e.isNumber=h,e.isString=b,e.isSymbol=g,e.isUndefined=_,e.isRegExp=v,e.isObject=x,e.isDate=q,e.isError=w,e.isFunction=T,e.isPrimitive=E,e.isBuffer=n(73);var R=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];e.log=function(){console.log("%s - %s",A(),e.format.apply(e,arguments))},e.inherits=n(72),e._extend=function(t,e){if(!e||!x(e))return t;for(var n=Object.keys(e),r=n.length;r--;)t[n[r]]=e[n[r]];return t}}).call(e,n(2),n(5))},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(t,e,n){function r(t,e,n){return s.forOwn(e.response.aggs,function(n,r,a){var i=s.fromPairs(s.map(e.response.aggs[r],function(t){return[t.key,{key:t.key,doc_count:0,active:!1}]})),o=s.fromPairs(s.map(t.response.aggs[r],function(e){return[e.key,{key:e.key,doc_count:e.doc_count,active:s.includes(t.query.terms[r].values,s.toString(e.key))}]}));t.response.aggs[r]=s.orderBy(s.values(s.defaults(o,i)),"key","asc")}),t}var a=n(4),s=n(6),i=n(27),o=i.getFusionStore(),l={es:n(28),table:n(29)},p=l[window.ES_CONFIG.backend],u={query:{match:"",fields:[],terms:{},size:10,from:0},response:{total:0,items:[],aggs:{}}};n(30);var d=s.concat(a.mount("es-facet-keywords"),a.mount("es-facet-datetimes"),a.mount("es-facet-numbers"));s.forEach(d,function(t){u.query.terms[t.opts.field]={type:t.opts.type,field:t.opts.field,interval:t.opts.interval,values:[]},t.on("submit",function(e){var n={};n[t.opts.field]=e,f({terms:n})})}),n(32);var c=a.mount("es-search");u.query.fields=c[0].opts.fields?c[0].opts.fields.split(","):[],c[0].on("submit",function(t){f({match:t.value})}),n(31);var m=a.mount("es-list");u.query.size=+m[0].opts.size||10,m[0].on("submit",function(t){f({from:t.value})}),i.createFusionator({search:function(t,e){var n=e[0]||{};return p(n.match||t.query.match,n.fields||t.query.fields,s.defaults(n.terms||{},t.query.terms),n.size||t.query.size,n.from||t.query.from)}},u);var f=i.getFusionActor("search");o.use(r);o.subscribe(this,function(t){s.forEach(m,function(e){e.update({opts:s.defaults({total:t.response.total,items:t.response.items},e.opts)})}),s.forEach(d,function(e){e.update({opts:s.defaults({items:s.map(t.response.aggs[e.opts.field],function(t){return{value:t.key,count:t.doc_count,active:t.active}})},e.opts)})})});c[0].submit()},function(t,e,n){var r=n(6);t.exports=function(t,e,n,a,s){var i={bool:{must:{bool:{should:[],minimum_should_match:1}},filter:{}}};if(t&&(i.bool.filter={multi_match:{query:t,fields:e}}),!r.isEmpty(n)){var o={};r.forOwn(n,function(t,e,n){switch(t.type){case"keywords":if(o[t.field]={terms:{field:t.field,order:{_term:"asc"}}},!r.isEmpty(t.values)){var a={};a[t.field]=t.values,i.bool.must.bool.should.push({terms:a})}break;case"datetimes":o[t.field]={date_histogram:{field:t.field,interval:t.interval}},r.forEach(t.values,function(e){var n={};n[t.field]={gte:e,lt:e+"||+1"+t.interval[0],format:"epoch_millis"},i.bool.must.bool.should.push({range:n})});break;case"numbers":o[t.field]={histogram:{field:t.field,interval:+t.interval}},r.forEach(t.values,function(e){var n={};n[t.field]={gte:+e,lt:+e+ +t.interval},i.bool.must.bool.should.push({range:n})})}})}var l={size:a||10,from:s||0,query:i,aggs:o};return console.log("query",l),l}}]);